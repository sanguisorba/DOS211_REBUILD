Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 08:29:40

PART3 - COMMAND Transient routines.                         Page     1-1
                                                            

       1                                TITLE   PART3 - COMMAND Transient routi
					nes. 
       2                                 
       3                             C          INCLUDE COMSW.ASM 
       4                             C  ; Use the following booleans to set ass
					embly flags 
       5 = 0000                      C  FALSE   EQU     0 
       6 = FFFF                      C  TRUE    EQU     NOT FALSE 
       7                             C   
       8 =                           C  IBMVER  EQU     false  ; Switch to buil
					d IBM version of Command 
       9 =                           C  IBM     EQU     IBMVER 
      10 =                           C  MSVER   EQU     true   ; Switch to buil
					d MS-DOS version of Command 
      11                             C   
      12 =                           C  HIGHMEM EQU     FALSE   ; Run resident 
					part above transient (high memory) 
      13 =                           C  KANJI   EQU     false   ; Support for d
					ual byte Microsoft KANJI standard 
      14 =                              IBMJAPAN        EQU     FALSE   ;MUST B
					E TRUE (along with IBM and KANJI) 
      15                                 
      16                                .list 
      17                                .cref 
      18                                 
      19                             C          INCLUDE COMEQU.ASM 
      20                             C  ;************************************* 
      21                             C  ; COMMAND EQUs which are not switch dep
					endant 
      22                             C   
      23                             C  IFDEF   IBM 
      24                             C          INCLUDE IFEQU.ASM 
      25                             C  ;************************************* 
      26                             C  ; COMMAND EQUs which are switch dependa
					nt 
      27                             C   
      28                             C  ENDIF 
      29                             C   
      30                             C  ENDIF 
      31                             C   
      32                             C   
      33 = 003E                      C  SYM     EQU     ">" 
      34                             C   
      35 = 0017                      C  LINPERPAG       EQU     23 
      36 = 0001                      C  NORMPERLIN      EQU     1 
      37 = 0005                      C  WIDEPERLIN      EQU     5 
      38 = 0080                      C  COMBUFLEN       EQU     128     ; Lengt
					h of commmand buffer 
      39                             C   
      40 = 003A                      C  DRVCHAR         EQU     ":" 
      41                             C   
      42 = 005C                      C  FCB     EQU     5CH 
      43                             C   
      44                             C  VARSTRUC        STRUC 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 08:29:40

PART3 - COMMAND Transient routines.                         Page     1-2
DEVICE TABLE AND SRH DEFINITION                             

      45 0000  ??                    C  ISDIR   DB      ? 
      46 0001  ??                    C  SIZ     DB      ? 
      47 0002  ????                  C  TTAIL   DW      ? 
      48 0004  ??                    C  INFO    DB      ? 
      49 0005  0054[                 C  BUF     DB      DIRSTRLEN + 20 DUP (?) 
      50            ??               C  
      51                         ]   C  
      52                             C  
      53 0059                        C  VARSTRUC        ENDS 
      54                             C   
      55 = 0001                      C  WSWITCH EQU     1               ; Wide 
					display during DIR 
      56 = 0002                      C  PSWITCH EQU     2               ; Pause
					 (or Page) mode during DIR 
      57 = 0004                      C  ASWITCH EQU     4               ; ASCII
					 mode during COPY 
      58 = 0008                      C  BSWITCH EQU     8               ; Binar
					y mode during COPY 
      59 = 0010                      C  VSWITCH EQU     10H             ; Verif
					y switch 
      60 = 8000                      C  GOTSWITCH EQU   8000H           ; Meta 
					switch set if switch character encounte
					red 
      61                                 
      62                                 
      63                                 
      64 0000                           DATARES SEGMENT PUBLIC 
      65                                        EXTRN   BATCH:WORD,BATLOC:DWORD
					 
      66                                        EXTRN   RETCODE:WORD,ECHOFLAG:B
					YTE 
      67                                        EXTRN   SINGLECOM:WORD,FORFLAG:
					BYTE,UFORDRV:BYTE 
      68                                        EXTRN   FORSET:BYTE,FORCOM:BYTE
					,FORVAR:BYTE,FORPTR:WORD 
      69                                        EXTRN   FORUFCB:BYTE,FORFCB:BYT
					E,RE_INSTR:BYTE,RE_OUT_APP:BYTE 
      70                                        EXTRN   RE_OUTSTR:BYTE,PIPEFLAG
					:BYTE 
      71                                 
      72 0000                           DATARES ENDS 
      73                                 
      74 0000                           TRANDATA        SEGMENT PUBLIC 
      75                                 
      76                                        EXTRN   BADLAB:BYTE,SYNTMES:BYT
					E,FORNESTMES:BYTE 
      77                                        EXTRN   NOTFND:BYTE,FULDIR:BYTE
					,IFTAB:BYTE 
      78 0000                           TRANDATA        ENDS 
      79                                 
      80 0000                           TRANSPACE       SEGMENT PUBLIC 
      81                                 
      82                                        EXTRN   BATHAND:WORD,RESSEG:WOR
					D,DIRBUF:BYTE,COMBUF:BYTE 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 08:29:40

PART3 - COMMAND Transient routines.                         Page     1-3
DEVICE TABLE AND SRH DEFINITION                             

      83                                        EXTRN   GOTOLEN:WORD,IFNOTFLAG:
					BYTE 
      84                                 
      85 0000                           TRANSPACE       ENDS 
      86                                 
      87                                 
      88 0000                           TRANCODE        SEGMENT PUBLIC BYTE 
      89                                ASSUME  CS:TRANGROUP,DS:NOTHING,ES:NOTH
					ING,SS:NOTHING 
      90                                 
      91                                        EXTRN   SCANOFF:NEAR,DOCOM:NEAR
					,DOCOM1:NEAR,CERROR:NEAR 
      92                                        EXTRN   PRINT:NEAR,TCOMMAND:NEA
					R,DELIM:NEAR,GETBATBYT:NEAR 
      93                                        EXTRN   FCB_TO_ASCZ:NEAR 
      94                                 
      95                                        PUBLIC  GOTO,$IF,IFERLEV,SHIFT,
					IFEXISTS 
      96                                        PUBLIC  STRCOMP,MesTran,$FOR,IF
					NOT 
      97                                        PUBLIC  FORPROC,BATOPEN,BATCLOS
					E 
      98                                        PUBLIC  IOSET,TESTDOREIN,TESTDO
					REOUT 
      99                                 
     100                                        ASSUME  DS:RESGROUP 
     101 0000                           FORTERM: 
     102 0000  C6 06 0000 E 00                  MOV     [FORFLAG],0 
     103 0005  81 3E 0000 E FF00                CMP     [SINGLECOM],0FF00H 
     104 000B  75 06                            JNZ     NOFORP2 
     105 000D  C7 06 0000 E FFFF                MOV     [SINGLECOM],-1         
					 ; Cause a terminate 
     106 0013                           NOFORP2: 
     107 0013  E9 0000 E                        JMP     TCOMMAND 
     108                                 
     109 0016                           FORPROC: 
     110                                ASSUME  DS:RESGROUP 
     111 0016  80 3E 0000 E FF                  CMP     [FORUFCB],-1 
     112 001B  74 4F                            JZ      NORMFOR 
     113 001D  BA 0000 E                        MOV     DX,OFFSET TRANGROUP:DIR
					BUF 
     114 0020  1E                               PUSH    DS 
     115 0021  0E                               PUSH    CS 
     116 0022  1F                               POP     DS 
     117                                ASSUME  DS:TRANGROUP 
     118 0023  B4 1A                            MOV     AH,SET_DMA 
     119 0025  CD 21                            INT     int_command 
     120 0027  1F                               POP     DS 
     121                                ASSUME  DS:RESGROUP 
     122 0028  BA 0000 E                        MOV     DX,OFFSET RESGROUP:FORF
					CB 
     123 002B  B4 12                            MOV     AH,DIR_SEARCH_NEXT 
     124 002D  80 3E 0000 E 00                  CMP     [FORUFCB],0 
     125 0032  74 07                            JZ      DOFORSRCH 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 08:29:40

PART3 - COMMAND Transient routines.                         Page     1-4
DEVICE TABLE AND SRH DEFINITION                             

     126 0034  B4 11                            MOV     AH,DIR_SEARCH_FIRST 
     127 0036  C6 06 0000 E 00                  MOV     [FORUFCB],0 
     128 003B                           DOFORSRCH: 
     129 003B  CD 21                            INT     int_command 
     130 003D  0A C0                            OR      AL,AL 
     131 003F  75 BF                            JNZ     FORTERM 
     132 0041  1E                               PUSH    DS 
     133 0042  07                               POP     ES 
     134                                ASSUME  ES:RESGROUP 
     135 0043  0E                               PUSH    CS 
     136 0044  1F                               POP     DS 
     137                                ASSUME  DS:TRANGROUP 
     138 0045  BE 0000 E                        MOV     SI,OFFSET TRANGROUP:DIR
					BUF 
     139 0048  BF 0000 E                        MOV     DI,OFFSET RESGROUP:FORS
					ET 
     140 004B  26: 89 3E 0000 E                 MOV     [FORPTR],DI 
     141 0050  AC                               LODSB                   ;Get dr
					ive spec 
     142 0051  04 40                            ADD     AL,'@' 
     143 0053  3C 40                            CMP     AL,'@' 
     144 0055  74 0B                            JZ      NDRV8 
     145 0057  26: 80 3E 0000 E 00              CMP     [UFORDRV],0 
     146 005D  74 03                            JZ      NDRV8 
     147 005F  B4 3A                            MOV     AH,':' 
     148 0061  AB                               STOSW 
     149 0062                           NDRV8: 
     150 0062  E8 0000 E                        CALL    FCB_TO_ASCZ 
     151 0065  26: C6 45 FF 0D                  MOV     BYTE PTR ES:[DI-1],0DH 
     152 006A  06                               PUSH    ES 
     153 006B  1F                               POP     DS 
     154                                ASSUME  DS:RESGROUP 
     155 006C                           NORMFOR: 
     156 006C  0E                               PUSH    CS 
     157 006D  07                               POP     ES 
     158                                ASSUME  ES:TRANGROUP 
     159 006E  8B 1E 0000 E                     MOV     BX,[FORPTR] 
     160 0072  80 3F 00                         CMP     BYTE PTR [BX],0 
     161 0075  74 89                            JZ      FORTERM 
     162 0077  8B F3                            MOV     SI,BX 
     163 0079                           PARMSUB0: 
     164 0079  AC                               LODSB 
     165 007A  3C 0D                            CMP     AL,0DH 
     166 007C  75 FB                            JNZ     PARMSUB0 
     167 007E  8B D6                            MOV     DX,SI           ; DX po
					ints to next parm 
     168 0080  BE 0000 E                        MOV     SI,OFFSET RESGROUP:FORC
					OM 
     169 0083  BF 0002 E                        MOV     DI,OFFSET TRANGROUP:COM
					BUF+2 
     170 0086  33 C9                            XOR     CX,CX 
     171 0088                           TFORCOM: 
     172 0088  AC                               LODSB 
     173 0089  3C 25                            CMP     AL,'%' 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 08:29:40

PART3 - COMMAND Transient routines.                         Page     1-5
DEVICE TABLE AND SRH DEFINITION                             

     174 008B  75 18                            JNZ     NOFORPARM 
     175 008D  8A 26 0000 E                     MOV     AH,[FORVAR] 
     176 0091  3A 24                            CMP     AH,[SI] 
     177 0093  75 10                            JNZ     NOFORPARM 
     178 0095  46                               INC     SI 
     179 0096  56                               PUSH    SI 
     180 0097  8B F3                            MOV     SI,BX 
     181 0099                           PARMSUB: 
     182 0099  AC                               LODSB 
     183 009A  3C 0D                            CMP     AL,0DH 
     184 009C  74 04                            JZ      PARMSUBDONE 
     185 009E  41                               INC     CX 
     186 009F  AA                               STOSB 
     187 00A0  EB F7                            JMP     SHORT PARMSUB 
     188 00A2                           PARMSUBDONE: 
     189 00A2  5E                               POP     SI              ; Get b
					ack command line pointer 
     190 00A3  EB E3                            JMP     TFORCOM 
     191 00A5                           NOFORPARM: 
     192 00A5  AA                               STOSB 
     193 00A6  41                               INC     CX 
     194 00A7  3C 0D                            CMP     AL,0DH 
     195 00A9  75 DD                            JNZ     TFORCOM 
     196 00AB  49                               DEC     CX 
     197 00AC  26: 88 0E 0001 E                 MOV     [COMBUF+1],CL 
     198 00B1  89 16 0000 E                     MOV     [FORPTR],DX     ; Point
					 to next set element 
     199 00B5  F6 06 0000 E FF                  TEST    [ECHOFLAG],-1 
     200 00BA  0E                               PUSH    CS 
     201 00BB  1F                               POP     DS 
     202                                ASSUME  DS:TRANGROUP 
     203 00BC  74 13                            JZ      NOECHO3 
     204 00BE  26: C6 45 FF 24                  MOV     BYTE PTR ES:[DI-1],'$' 
     205 00C3  BA 0002 E                        MOV     DX,OFFSET TRANGROUP:COM
					BUF+2 
     206 00C6  E8 0000 E                        CALL    PRINT 
     207 00C9  26: C6 45 FF 0D                  MOV     BYTE PTR ES:[DI-1],0DH 
     208 00CE  E9 0000 E                        JMP     DOCOM 
     209 00D1                           NOECHO3: 
     210 00D1  E9 0000 E                        JMP     DOCOM1 
     211                                 
     212                                ASSUME  DS:TRANGROUP,ES:TRANGROUP 
     213                                 
     214 00D4                           FORNESTERR: 
     215 00D4  1E                               PUSH    DS 
     216 00D5  8E 1E 0000 E                     MOV     DS,[RESSEG] 
     217                                ASSUME  DS:RESGROUP 
     218 00D9  BA 0000 E                        MOV     DX,OFFSET TRANGROUP:FOR
					NESTMES 
     219 00DC  81 3E 0000 E FF00                CMP     [SINGLECOM],0FF00H 
     220 00E2  75 06                            JNZ     NOFORP3 
     221 00E4  C7 06 0000 E FFFF                MOV     [SINGLECOM],-1         
					 ; Cause termination 
     222 00EA                           NOFORP3: 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 08:29:40

PART3 - COMMAND Transient routines.                         Page     1-6
DEVICE TABLE AND SRH DEFINITION                             

     223 00EA  1F                               POP     DS 
     224                                ASSUME  DS:TRANGROUP 
     225 00EB  E9 0000 E                        JMP     CERROR 
     226                                 
     227 00EE                           $FOR: 
     228 00EE  BE 0081                          MOV     SI,81H 
     229 00F1  33 C9                            XOR     CX,CX 
     230 00F3  8E 06 0000 E                     MOV     ES,[RESSEG] 
     231                                ASSUME  ES:RESGROUP 
     232 00F7  BF 0000 E                        MOV     DI,OFFSET RESGROUP:FORS
					ET 
     233 00FA  32 C0                            XOR     AL,AL 
     234 00FC  26: A2 0000 E                    MOV     [UFORDRV],AL 
     235 0100  26: 86 06 0000 E                 XCHG    AL,[FORFLAG] 
     236 0105  0A C0                            OR      AL,AL 
     237 0107  75 CB                            JNZ     FORNESTERR 
     238 0109  26: 89 3E 0000 E                 MOV     [FORPTR],DI 
     239 010E  26: C6 06 0000 E FF              MOV     [FORUFCB],-1 
     240 0114  E8 0000 E                        CALL    SCANOFF 
     241 0117  AD                               LODSW 
     242 0118  3C 25                            CMP     AL,'%' 
     243 011A  75 6D                            JNZ     FORERRORJ 
     244 011C  26: 88 26 0000 E                 MOV     [FORVAR],AH 
     245 0121  E8 0000 E                        CALL    SCANOFF 
     246 0124  3C 0D                            CMP     AL,0DH 
     247 0126  74 24                            JZ      FORERRORJ2 
     248 0128  AD                               LODSW 
     249 0129  3D 4E49                          CMP     AX,('N' SHL 8) OR 'I' 
     250 012C  74 05                            JZ      FOROK1 
     251 012E  3D 6E69                          CMP     AX,('n' SHL 8) OR 'i' 
     252 0131  75 56                            JNZ     FORERRORJ 
     253 0133                           FOROK1: 
     254 0133  E8 0000 E                        CALL    SCANOFF 
     255 0136  AC                               LODSB 
     256 0137  3C 28                            CMP     AL,'(' 
     257 0139  75 4E                            JNZ     FORERRORJ 
     258 013B  E8 0000 E                        CALL    SCANOFF 
     259 013E  3C 29                            CMP     AL,')'          ; Speci
					al check for null set 
     260 0140  75 07                            JNZ     FORSETLP 
     261 0142  8E 1E 0000 E                     MOV     DS,[RESSEG] 
     262 0146  E9 0000 R                        JMP     FORTERM 
     263 0149                           FORSETLP: 
     264 0149  AC                               LODSB 
     265 014A  3C 0D                            CMP     AL,0DH 
     266 014C                           FORERRORJ2: 
     267 014C  74 42                            JZ  FORERRORJ3 
     268 014E  3C 29                            CMP     AL,')' 
     269 0150  74 1E                            JZ      FORSETEND 
     270 0152  AA                               STOSB 
     271 0153  3C 2A                            CMP     AL,'*' 
     272 0155  74 04                            JZ      SETFORSCAN 
     273 0157  3C 3F                            CMP     AL,'?' 
     274 0159  75 06                            JNZ     NOFORSCAN 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 08:29:40

PART3 - COMMAND Transient routines.                         Page     1-7
DEVICE TABLE AND SRH DEFINITION                             

     275 015B                           SETFORSCAN: 
     276 015B  26: C6 06 0000 E 01              MOV     [FORUFCB],1 
     277 0161                           NOFORSCAN: 
     278 0161  E8 0000 E                        CALL    DELIM 
     279 0164  75 E3                            JNZ     FORSETLP 
     280 0166  26: C6 45 FF 0D                  MOV     BYTE PTR ES:[DI-1],0DH 
     281 016B  E8 0000 E                        CALL    SCANOFF 
     282 016E  EB D9                            JMP     FORSETLP 
     283                                 
     284 0170                           FORSETEND: 
     285 0170  B8 000D                          MOV     AX,000DH 
     286 0173  26: 80 7D FF 0D                  CMP     BYTE PTR ES:[DI-1],0DH 
     287 0178  75 02                            JNZ     FORSETTERM 
     288 017A  33 C0                            XOR     AX,AX 
     289 017C                           FORSETTERM: 
     290 017C  AB                               STOSW 
     291 017D  E8 0000 E                        CALL    SCANOFF 
     292 0180  AD                               LODSW 
     293 0181  3D 4F44                          CMP     AX,('O' SHL 8) OR 'D' 
     294 0184  74 05                            JZ      FOROK2 
     295 0186  3D 6F64                          CMP     AX,('o' SHL 8) OR 'd' 
     296 0189                           FORERRORJ: 
     297 0189  75 46                            JNZ  FORERROR 
     298 018B                           FOROK2: 
     299 018B  E8 0000 E                        CALL    SCANOFF 
     300 018E  3C 0D                            CMP     AL,0DH 
     301 0190                           FORERRORJ3: 
     302 0190  74 3F                            JZ      FORERROR 
     303 0192  BF 0000 E                        MOV     DI,OFFSET RESGROUP:FORC
					OM 
     304 0195                           FORCOMLP: 
     305 0195  AC                               LODSB 
     306 0196  AA                               STOSB 
     307 0197  3C 0D                            CMP     AL,0DH 
     308 0199  75 FA                            JNZ     FORCOMLP 
     309 019B  26: FE 06 0000 E                 INC     [FORFLAG] 
     310 01A0  26: 83 3E 0000 E FF              CMP     [SINGLECOM],-1 
     311 01A6  75 07                            JNZ     NOFORP 
     312 01A8  26: C7 06 0000 E FF00            MOV     [SINGLECOM],0FF00H     
					 ; Flag single command for 
     313 01AF                           NOFORP: 
     314 01AF  26: 80 3E 0000 E 01              CMP     [FORUFCB],1 
     315                                        retnz 
     316 01B5  74 01                  3  jz ??0002
     317 01B7                         4 ??0003:
     318 01B7  C3                     4  RET
     319 01B8                         3  ??0002:
     320 01B8  06                               PUSH    ES 
     321 01B9  1F                               POP     DS 
     322                                ASSUME  DS:RESGROUP 
     323 01BA  BF 0000 E                        MOV     DI,OFFSET RESGROUP:FORF
					CB 
     324 01BD  BE 0000 E                        MOV     SI,OFFSET RESGROUP:FORS
					ET 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 08:29:40

PART3 - COMMAND Transient routines.                         Page     1-8
DEVICE TABLE AND SRH DEFINITION                             

     325 01C0  80 7C 01 3A                      CMP     BYTE PTR [SI+1],':' 
     326 01C4  75 04                            JNZ     NOSETUDRV 
     327 01C6  FE 06 0000 E                     INC     [UFORDRV] 
     328 01CA                           NOSETUDRV: 
     329 01CA  B8 2900                          MOV     AX,PARSE_FILE_DESCRIPTO
					R SHL 8 
     330 01CD  CD 21                            INT     int_command 
     331                                        return 
     332 01CF                         1 ??0004:
     333 01CF  C3                     1  RET
     334                                 
     335                                 
     336                                ASSUME  DS:TRANGROUP,ES:TRANGROUP 
     337                                 
     338 01D0                           IFERRORP: 
     339 01D0  58                               POP     AX 
     340 01D1                           IFERROR: 
     341 01D1                           FORERROR: 
     342 01D1  BA 0000 E                        MOV     DX,OFFSET TRANGROUP:SYN
					TMES 
     343 01D4  E9 0000 E                        JMP     CERROR 
     344                                 
     345 01D7                           $IF: 
     346 01D7  C6 06 0000 E 00                  MOV     [IFNOTFLAG],0 
     347 01DC  BE 0081                          MOV     SI,81H 
     348 01DF                           IFREENT: 
     349 01DF  E8 0000 E                        CALL    SCANOFF 
     350 01E2  3C 0D                            CMP     AL,0DH 
     351 01E4  74 EB                            JZ      IFERROR 
     352 01E6  8B EE                            MOV     BP,SI 
     353 01E8  BF 0000 E                        MOV     DI,OFFSET TRANGROUP:IFT
					AB     ; Prepare to search if table 
     354 01EB  B5 00                            MOV     CH,0 
     355 01ED                           IFINDCOM: 
     356 01ED  8B F5                            MOV     SI,BP 
     357 01EF  8A 0D                            MOV     CL,[DI] 
     358 01F1  47                               INC     DI 
     359 01F2  E3 33                            JCXZ    IFSTRING 
     360 01F4  EB 02                            JMP     SHORT FIRSTCOMP 
     361 01F6                           IFCOMP: 
     362 01F6  75 10                            JNZ     IFDIF 
     363 01F8                           FIRSTCOMP: 
     364 01F8  AC                               LODSB 
     365 01F9  26: 8A 25                        MOV     AH,ES:[DI] 
     366 01FC  47                               INC     DI 
     367 01FD  3A C4                            CMP     AL,AH 
     368 01FF  74 05                            JZ      IFLP 
     369 0201  80 CC 20                         OR      AH,20H          ; Try l
					ower case 
     370 0204  3A C4                            CMP     AL,AH 
     371 0206                           IFLP: 
     372 0206  E2 EE                            LOOP    IFCOMP 
     373 0208                           IFDIF: 
     374 0208  9F                               LAHF 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 08:29:40

PART3 - COMMAND Transient routines.                         Page     1-9
DEVICE TABLE AND SRH DEFINITION                             

     375 0209  03 F9                            ADD     DI,CX           ; Bump 
					to next position without affecting flag
					s 
     376 020B  8B 1D                            MOV     BX,[DI]         ; Get h
					andler address 
     377 020D  47                               INC     DI 
     378 020E  47                               INC     DI 
     379 020F  9E                               SAHF 
     380 0210  75 DB                            JNZ     IFINDCOM 
     381 0212  AC                               LODSB 
     382 0213  3C 0D                            CMP     AL,0DH 
     383 0215                           IFERRORJ: 
     384 0215  74 BA                            JZ    IFERROR 
     385 0217  E8 0000 E                        CALL    DELIM 
     386 021A  75 D1                            JNZ     IFINDCOM 
     387 021C  E8 0000 E                        CALL    SCANOFF 
     388 021F  FF E3                            JMP     BX 
     389                                 
     390 0221                           IFNOT: 
     391 0221  F6 16 0000 E                     NOT     [IFNOTFLAG] 
     392 0225  EB B8                            JMP     IFREENT 
     393                                 
     394                                 
     395 0227                           IFSTRING: 
     396 0227  56                               PUSH    SI 
     397 0228  33 C9                            XOR     CX,CX 
     398 022A                           FIRST_STRING: 
     399 022A  AC                               LODSB 
     400 022B  3C 0D                            CMP     AL,0DH 
     401 022D  74 A1                            JZ      IFERRORP 
     402 022F  E8 0000 E                        CALL    DELIM 
     403 0232  74 03                            JZ      EQUAL_CHECK 
     404 0234  41                               INC     CX 
     405 0235  EB F3                            JMP     SHORT FIRST_STRING 
     406 0237                           EQUAL_CHECK: 
     407 0237  3C 3D                            CMP     AL,'=' 
     408 0239  74 07                            JZ      EQUAL_CHECK2 
     409 023B  3C 0D                            CMP     AL,0DH 
     410 023D  74 91                            JZ      IFERRORP 
     411 023F  AC                               LODSB 
     412 0240  EB F5                            JMP     SHORT EQUAL_CHECK 
     413 0242                           EQUAL_CHECK2: 
     414 0242  AC                               LODSB 
     415 0243  3C 3D                            CMP     AL,'=' 
     416 0245  75 89                            JNZ     IFERRORP 
     417 0247  E8 0000 E                        CALL    SCANOFF 
     418 024A  3C 0D                            CMP     AL,0DH 
     419 024C  74 82                            JZ      IFERRORP 
     420 024E  5F                               POP     DI 
     421 024F  F3/ A6                           REPE    CMPSB 
     422 0251  74 14                            JZ      MATCH 
     423 0253  80 7C FF 0D                      CMP     BYTE PTR [SI-1],0DH 
     424 0257  74 BC                            JZ      IFERRORJ 
     425 0259                           SKIPSTRINGEND: 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 08:29:40

PART3 - COMMAND Transient routines.                         Page     1-10
DEVICE TABLE AND SRH DEFINITION                             

     426 0259  AC                               LODSB 
     427 025A                           NOTMATCH: 
     428 025A  3C 0D                            CMP     AL,0DH 
     429 025C                           IFERRORJ2: 
     430 025C  74 B7                            JZ   IFERRORJ 
     431 025E  E8 0000 E                        CALL    DELIM 
     432 0261  75 F6                            JNZ     SKIPSTRINGEND 
     433 0263  B0 FF                            MOV     AL,-1 
     434 0265  EB 18                            JMP     SHORT IFRET 
     435 0267                           MATCH: 
     436 0267  AC                               LODSB 
     437 0268  E8 0000 E                        CALL    DELIM 
     438 026B  75 ED                            JNZ     NOTMATCH 
     439 026D  32 C0                            XOR     AL,AL 
     440 026F  EB 0E                            JMP     SHORT IFRET 
     441                                 
     442 0271                           IFEXISTS: 
     443 0271  BF 0000 E                        MOV     DI,OFFSET TRANGROUP:DIR
					BUF 
     444 0274  B8 2901                          MOV     AX,(PARSE_FILE_DESCRIPT
					OR SHL 8) OR 01H 
     445 0277  CD 21                            INT     int_command 
     446 0279  B4 0F                            MOV     AH,FCB_OPEN 
     447 027B  8B D7                            MOV     DX,DI 
     448 027D  CD 21                            INT     int_command 
     449 027F                           IFRET: 
     450 027F  F6 06 0000 E FF                  TEST    [IFNOTFLAG],-1 
     451 0284  74 02                            JZ      REALTEST 
     452 0286  F6 D0                            NOT     AL 
     453 0288                           REALTEST: 
     454 0288  0A C0                            OR      AL,AL 
     455 028A  74 03                            JZ      IFTRUE 
     456 028C  E9 0000 E                        JMP     TCOMMAND 
     457 028F                           IFTRUE: 
     458 028F  E8 0000 E                        CALL    SCANOFF 
     459 0292  8B CE                            MOV     CX,SI 
     460 0294  81 E9 0081                       SUB     CX,81H 
     461 0298  28 0E 0080                       SUB     DS:[80H],CL 
     462 029C  8A 0E 0080                       MOV     CL,DS:[80H] 
     463 02A0  88 0E 0001 E                     MOV     [COMBUF+1],CL 
     464 02A4  BF 0002 E                        MOV     DI,OFFSET TRANGROUP:COM
					BUF+2 
     465 02A7  F3/ A4                           REP     MOVSB 
     466 02A9  B0 0D                            MOV     AL,0DH 
     467 02AB  AA                               STOSB 
     468 02AC  E9 0000 E                        JMP     DOCOM1 
     469                                 
     470 02AF                           IFERLEV: 
     471 02AF  B7 0A                            MOV     BH,10 
     472 02B1  32 DB                            XOR     BL,BL 
     473 02B3                           GETNUMLP: 
     474 02B3  AC                               LODSB 
     475 02B4  3C 0D                            CMP     AL,0DH 
     476 02B6  74 A4                            JZ      IFERRORJ2 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 08:29:40

PART3 - COMMAND Transient routines.                         Page     1-11
DEVICE TABLE AND SRH DEFINITION                             

     477 02B8  E8 0000 E                        CALL    DELIM 
     478 02BB  74 0C                            JZ      GOTNUM 
     479 02BD  2C 30                            SUB     AL,'0' 
     480 02BF  86 C3                            XCHG    AL,BL 
     481 02C1  F6 E7                            MUL     BH 
     482 02C3  02 C3                            ADD     AL,BL 
     483 02C5  86 C3                            XCHG    AL,BL 
     484 02C7  EB EA                            JMP     SHORT GETNUMLP 
     485 02C9                           GOTNUM: 
     486 02C9  1E                               PUSH    DS 
     487 02CA  8E 1E 0000 E                     MOV     DS,[RESSEG] 
     488                                ASSUME  DS:RESGROUP 
     489 02CE  8A 26 0000 E                     MOV     AH,BYTE PTR [RETCODE] 
     490 02D2  1F                               POP     DS 
     491                                ASSUME  DS:TRANGROUP 
     492 02D3  32 C0                            XOR     AL,AL 
     493 02D5  3A E3                            CMP     AH,BL 
     494 02D7  73 A6                            JAE     IFRET 
     495 02D9  FE C8                            DEC     AL 
     496 02DB  EB A2                            JMP     SHORT IFRET 
     497                                 
     498                                ASSUME  DS:TRANGROUP 
     499                                 
     500 02DD                           SHIFT: 
     501 02DD  8E 1E 0000 E                     MOV     DS,[RESSEG] 
     502                                ASSUME  DS:RESGROUP 
     503 02E1  A1 0000 E                        MOV     AX,[BATCH] 
     504 02E4  A9 FFFF                          TEST    AX,-1 
     505                                        retz 
     506 02E7  75 01                  3  jnz ??0007
     507 02E9                         4 ??0008:
     508 02E9  C3                     4  RET
     509 02EA                         3  ??0007:
     510 02EA  8E C0                            MOV     ES,AX 
     511 02EC  8E D8                            MOV     DS,AX 
     512                                ASSUME  DS:NOTHING,ES:NOTHING 
     513 02EE  33 C9                            XOR     CX,CX 
     514 02F0  8B C1                            MOV     AX,CX 
     515 02F2  8B F9                            MOV     DI,CX 
     516 02F4  49                               DEC     CX 
     517 02F5  F2/ AE                           REPNZ   SCASB 
     518 02F7  8B F7                            MOV     SI,DI 
     519 02F9  46                               INC     SI 
     520 02FA  46                               INC     SI 
     521 02FB  B9 0009                          MOV     CX,9 
     522 02FE  F3/ A5                           REP     MOVSW                  
					 ; Perform shift of existing parms 
     523 0300  83 3D FF                         CMP     WORD PTR [DI],-1 
     524                                        retz                           
					 ; No new parm 
     525 0303  74 E4                  2  ??0009: jz ret_l
     526 0305  8B 35                            MOV     SI,[DI] 
     527 0307  C7 05 FFFF                       MOV     WORD PTR [DI],-1       
					 ; Assume no parm 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 08:29:40

PART3 - COMMAND Transient routines.                         Page     1-12
DEVICE TABLE AND SRH DEFINITION                             

     528 030B  2E: 8E 1E 0000 E                 MOV     DS,[RESSEG] 
     529                                ASSUME  DS:RESGROUP 
     530 0310                           SKIPCRLP: 
     531 0310  AC                               LODSB 
     532 0311  3C 0D                            CMP     AL,0DH 
     533 0313  75 FB                            JNZ     SKIPCRLP 
     534 0315  80 3C 00                         CMP     BYTE PTR [SI],0 
     535                                        retz                           
					 ; End of parms 
     536 0318  74 CF                  2  ??000B: jz ret_l
     537 031A  26: 89 35                        MOV     ES:[DI],SI             
					 ; Pointer to next parm as %9 
     538                                        return 
     539 031D                         1 ??000D:
     540 031D  C3                     1  RET
     541                                 
     542                                 
     543                                ASSUME  DS:TRANGROUP,ES:TRANGROUP 
     544 031E                           GOTO: 
     545 031E  8E 1E 0000 E                     MOV     DS,[RESSEG] 
     546                                ASSUME  DS:RESGROUP 
     547 0322  F7 06 0000 E FFFF                TEST    [BATCH],-1 
     548                                        retz                    ; If no
					t in batch mode, a nop 
     549 0328  74 F3                  2  ??000E: jz ret_l
     550 032A  33 D2                            XOR     DX,DX 
     551 032C  89 16 0000 E                     MOV     WORD PTR [BATLOC],DX   
					 ; Back to start 
     552 0330  89 16 0002 E                     MOV     WORD PTR [BATLOC+2],DX 
     553 0334  E8 03B5 R                        CALL    BATOPEN                
					 ; Find the batch file 
     554 0337  BF 005D                          MOV     DI,FCB+1        ; Get t
					he label 
     555 033A  B9 000B                          MOV     CX,11 
     556 033D  B0 20                            MOV     AL,' ' 
     557 033F  F2/ AE                           REPNE   SCASB 
     558 0341  75 01                            JNZ     NOINC 
     559 0343  41                               INC     CX 
     560 0344                           NOINC: 
     561 0344  83 E9 0B                         SUB     CX,11 
     562 0347  F7 D9                            NEG     CX 
     563 0349  26: 89 0E 0000 E                 MOV     [GOTOLEN],CX 
     564 034E  E8 0000 E                        CALL    GETBATBYT 
     565 0351  3C 3A                            CMP     AL,':' 
     566 0353  74 21                            JZ      CHKLABEL 
     567 0355                           LABLKLP:                        ; Look 
					for the label 
     568 0355  E8 0000 E                        CALL    GETBATBYT 
     569 0358  3C 0A                            CMP     AL,0AH 
     570 035A  75 07                            JNZ     LABLKTST 
     571 035C  E8 0000 E                        CALL    GETBATBYT 
     572 035F  3C 3A                            CMP     AL,':' 
     573 0361  74 13                            JZ      CHKLABEL 
     574 0363                           LABLKTST: 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 08:29:40

PART3 - COMMAND Transient routines.                         Page     1-13
DEVICE TABLE AND SRH DEFINITION                             

     575 0363  F7 06 0000 E FFFF                TEST    [BATCH],-1 
     576 0369  75 EA                            JNZ     LABLKLP 
     577 036B  E8 03AB R                        CALL    BATCLOSE 
     578 036E  0E                               PUSH    CS 
     579 036F  1F                               POP     DS 
     580 0370  BA 0000 E                        MOV     DX,OFFSET TRANGROUP:BAD
					LAB 
     581 0373  E9 0000 E                        JMP     CERROR 
     582                                 
     583 0376                           CHKLABEL: 
     584 0376  BF 005D                          MOV     DI,FCB+1 
     585 0379  26: 8B 0E 0000 E                 MOV     CX,[GOTOLEN] 
     586 037E                           NEXTCHRLP: 
     587 037E  51                               PUSH    CX 
     588 037F  E8 0000 E                        CALL    GETBATBYT 
     589 0382  59                               POP     CX 
     590 0383  0C 20                            OR      AL,20H 
     591 0385  26: 3A 05                        CMP     AL,ES:[DI] 
     592 0388  75 02                            JNZ     TRYUPPER 
     593 038A  EB 07                            JMP     SHORT NEXTLABCHR 
     594 038C                           TRYUPPER: 
     595 038C  2C 20                            SUB     AL,20H 
     596 038E  26: 3A 05                        CMP     AL,ES:[DI] 
     597 0391  75 D0                            JNZ     LABLKTST 
     598 0393                           NEXTLABCHR: 
     599 0393  47                               INC     DI 
     600 0394  E2 E8                            LOOP    NEXTCHRLP 
     601 0396  E8 0000 E                        CALL    GETBATBYT 
     602 0399  3C 20                            CMP     AL,' ' 
     603 039B  77 C6                            JA      LABLKTST 
     604 039D  3C 0D                            CMP     AL,0DH 
     605 039F  74 07                            JZ      SKIPLFEED 
     606 03A1                           TONEXTBATLIN: 
     607 03A1  E8 0000 E                        CALL    GETBATBYT 
     608 03A4  3C 0D                            CMP     AL,0DH 
     609 03A6  75 F9                            JNZ     TONEXTBATLIN 
     610 03A8                           SKIPLFEED: 
     611 03A8  E8 0000 E                        CALL    GETBATBYT 
     612 03AB                           BATCLOSE: 
     613 03AB  2E: 8B 1E 0000 E                 MOV     BX,CS:[BATHAND] 
     614 03B0  B4 3E                            MOV     AH,CLOSE 
     615 03B2  CD 21                            INT     int_command 
     616                                        return 
     617 03B4                         1 ??0010:
     618 03B4  C3                     1  RET
     619                                 
     620 03B5                           BATOPEN: 
     621                                ;Open the BATCH file, If open fails, AL
					 is drive of batch file (A=1) 
     622                                ASSUME  DS:RESGROUP,ES:TRANGROUP 
     623 03B5  1E                               PUSH    DS 
     624 03B6  8E 1E 0000 E                     MOV     DS,[BATCH] 
     625                                ASSUME  DS:NOTHING 
     626 03BA  33 D2                            XOR     DX,DX 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 08:29:40

PART3 - COMMAND Transient routines.                         Page     1-14
DEVICE TABLE AND SRH DEFINITION                             

     627 03BC  B8 3D00                          MOV     AX,OPEN SHL 8 
     628 03BF  CD 21                            INT     int_command            
					 ; Open the batch file 
     629 03C1  72 15                            JC      SETERRDL 
     630 03C3  1F                               POP     DS 
     631                                ASSUME  DS:RESGROUP 
     632 03C4  26: A3 0000 E                    MOV     [BATHAND],AX 
     633 03C8  8B D8                            MOV     BX,AX 
     634 03CA  8B 16 0000 E                     MOV     DX,WORD PTR [BATLOC] 
     635 03CE  8B 0E 0002 E                     MOV     CX,WORD PTR [BATLOC+2] 
     636 03D2  B8 4200                          MOV     AX,LSEEK SHL 8         
					 ; Go to the right spot 
     637 03D5  CD 21                            INT     int_command 
     638                                        return 
     639 03D7                         1 ??0011:
     640 03D7  C3                     1  RET
     641                                 
     642 03D8                           SETERRDL: 
     643 03D8  8B DA                            MOV     BX,DX 
     644 03DA  8A 07                            MOV     AL,[BX]                
					 ; Get drive spec 
     645 03DC  2C 40                            SUB     AL,'@'                 
					 ; A = 1 
     646 03DE  1F                               POP     DS 
     647 03DF  F9                               STC                            
					 ; SUB mucked over carry 
     648                                        return 
     649 03E0                         1 ??0012:
     650 03E0  C3                     1  RET
     651                                 
     652 03E1                           MESTRAN: 
     653                                ASSUME  DS:NOTHING,ES:NOTHING 
     654 03E1  AC                               LODSB 
     655 03E2  3C 24                            CMP     AL,"$" 
     656                                        retz 
     657 03E4  74 FA                  2  ??0013: jz ret_l
     658 03E6  AA                               STOSB 
     659 03E7  EB F8                            JMP     MESTRAN 
     660 03E9                           IOSET: 
     661                                ; ALL REGISTERS PRESERVED 
     662                                ASSUME  DS:NOTHING,ES:NOTHING,SS:NOTHIN
					G 
     663 03E9  1E                               PUSH    DS 
     664 03EA  52                               PUSH    DX 
     665 03EB  50                               PUSH    AX 
     666 03EC  53                               PUSH    BX 
     667 03ED  51                               PUSH    CX 
     668 03EE  2E: 8E 1E 0000 E                 MOV     DS,[RESSEG] 
     669                                ASSUME  DS:RESGROUP 
     670 03F3  80 3E 0000 E 00                  CMP     [PIPEFLAG],0 
     671 03F8  75 06                            JNZ     NOREDIR                
					 ; Don't muck up the pipe 
     672 03FA  E8 0406 R                        CALL    TESTDOREIN 
     673 03FD  E8 042A R                        CALL    TESTDOREOUT 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 08:29:40

PART3 - COMMAND Transient routines.                         Page     1-15
DEVICE TABLE AND SRH DEFINITION                             

     674 0400                           NOREDIR: 
     675 0400  59                               POP     CX 
     676 0401  5B                               POP     BX 
     677 0402  58                               POP     AX 
     678 0403  5A                               POP     DX 
     679 0404  1F                               POP     DS 
     680                                ASSUME  DS:NOTHING 
     681                                        return 
     682 0405                         1 ??0015:
     683 0405  C3                     1  RET
     684                                 
     685 0406                           TESTDOREIN: 
     686                                ASSUME  DS:RESGROUP 
     687 0406  80 3E 0000 E 00                  CMP     [RE_INSTR],0 
     688                                        retz 
     689 040B  74 F8                  2  ??0016: jz ret_l
     690 040D  BA 0000 E                        MOV     DX,OFFSET RESGROUP:RE_I
					NSTR 
     691 0410  B8 3D00                          MOV     AX,(OPEN SHL 8) 
     692 0413  CD 21                            INT     int_command 
     693 0415  BA 0000 E                        MOV     DX,OFFSET TRANGROUP:NOT
					FND 
     694 0418  72 0B                            JC      REDIRERR 
     695 041A  8B D8                            MOV     BX,AX 
     696 041C  B0 FF                            MOV     AL,0FFH 
     697 041E  86 47 18                         XCHG    AL,[BX.PDB_JFN_Table] 
     698 0421  A2 0018                          MOV     DS:[PDB_JFN_Table],AL 
     699                                        return 
     700 0424                         1 ??0018:
     701 0424  C3                     1  RET
     702                                 
     703 0425                           REDIRERR: 
     704 0425  0E                               PUSH    CS 
     705 0426  1F                               POP     DS 
     706 0427  E9 0000 E                        JMP     CERROR 
     707                                 
     708 042A                           TESTDOREOUT: 
     709                                ASSUME  DS:RESGROUP 
     710 042A  80 3E 0000 E 00                  CMP     [RE_OUTSTR],0 
     711 042F  74 36                            JZ      NOREOUT 
     712 0431  80 3E 0000 E 00                  CMP     [RE_OUT_APP],0 
     713 0436  74 17                            JZ      REOUTCRT 
     714 0438  BA 0000 E                        MOV     DX,OFFSET RESGROUP:RE_O
					UTSTR 
     715 043B  B8 3D01                          MOV     AX,(OPEN SHL 8) OR 1 
     716 043E  CD 21                            INT     int_command 
     717 0440  72 0D                            JC      REOUTCRT 
     718 0442  33 D2                            XOR     DX,DX 
     719 0444  33 C9                            XOR     CX,CX 
     720 0446  8B D8                            MOV     BX,AX 
     721 0448  B8 4202                          MOV     AX,(LSEEK SHL 8) OR 2 
     722 044B  CD 21                            INT     int_command 
     723 044D  EB 10                            JMP     SHORT SET_REOUT 
     724 044F                           REOUTCRT: 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 08:29:40

PART3 - COMMAND Transient routines.                         Page     1-16
DEVICE TABLE AND SRH DEFINITION                             

     725 044F  BA 0000 E                        MOV     DX,OFFSET RESGROUP:RE_O
					UTSTR 
     726 0452  33 C9                            XOR     CX,CX 
     727 0454  B4 3C                            MOV     AH,CREAT 
     728 0456  CD 21                            INT     int_command 
     729 0458  BA 0000 E                        MOV     DX,OFFSET TRANGROUP:FUL
					DIR 
     730 045B  72 C8                            JC      REDIRERR 
     731 045D  8B D8                            MOV     BX,AX 
     732 045F                           SET_REOUT: 
     733 045F  B0 FF                            MOV     AL,0FFH 
     734 0461  86 47 18                         XCHG    AL,[BX.PDB_JFN_Table] 
     735 0464  A2 0019                          MOV     DS:[PDB_JFN_Table+1],AL
					 
     736 0467                           NOREOUT: 
     737                                        return 
     738 0467                         1 ??0019:
     739 0467  C3                     1  RET
     740                                 
     741 0468                           STRCOMP: 
     742                                ; Compare ASCIZ DS:SI with ES:DI. 
     743                                ; SI,DI destroyed. 
     744 0468  A6                               CMPSB 
     745                                        retnz                          
					 ; Strings not equal 
     746 0469  75 FC                  2  ??001A: jnz ret_l
     747 046B  80 7C FF 00                      cmp     byte ptr [SI-1],0      
					 ; Hit NUL terminator? 
     748                                        retz                           
					 ; Yes, strings equal 
     749 046F  74 F6                  2  ??001C: jz ret_l
     750 0471  EB F5                            jmp     short STRCOMP          
					 ; Equal so far, keep going 
     751                                 
     752                                 
     753                                 
     754 0473                           TRANCODE        ENDS 
     755                                        END 

Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 08:29:40

PART3 - COMMAND Transient routines.                         Symbols-1
                                                             

Macros:

		N a m e			Lines

BREAK  . . . . . . . . . . . . .  	   2
CONDRET  . . . . . . . . . . . .  	  19
CONTEXT  . . . . . . . . . . . .  	   3
DO_EXT . . . . . . . . . . . . .  	   0
ENTRY  . . . . . . . . . . . . .  	   2
ERROR  . . . . . . . . . . . . .  	   4
INVOKE . . . . . . . . . . . . .  	   8
I_AM . . . . . . . . . . . . . .  	  14
I_NEED . . . . . . . . . . . . .  	  11
JUMP . . . . . . . . . . . . . .  	  17
LONG_ADDR  . . . . . . . . . . .  	   7
MAKELAB  . . . . . . . . . . . .  	   4
PROCEDURE  . . . . . . . . . . .  	   2
RETC . . . . . . . . . . . . . .  	   1
RETNC  . . . . . . . . . . . . .  	   1
RETNZ  . . . . . . . . . . . . .  	   1
RETURN . . . . . . . . . . . . .  	   5
RETZ . . . . . . . . . . . . . .  	   1
SHORT_ADDR . . . . . . . . . . .  	  12
TRANSFER . . . . . . . . . . . .  	   8

Structures and Records:

                N a m e                 Width   # fields
                                        Shift   Width   Mask    Initial

ARENA  . . . . . . . . . . . . .  	0005	0003
  ARENA_SIGNATURE  . . . . . . .  	0000
  ARENA_OWNER  . . . . . . . . .  	0001
  ARENA_SIZE . . . . . . . . . .  	0003
BPBLOCK  . . . . . . . . . . . .  	000D	0008
  BPSECSZ  . . . . . . . . . . .  	0000
  BPCLUS . . . . . . . . . . . .  	0002
  BPRES  . . . . . . . . . . . .  	0003
  BPFTCNT  . . . . . . . . . . .  	0005
  BPDRCNT  . . . . . . . . . . .  	0006
  BPSCCNT  . . . . . . . . . . .  	0008
  BPMEDIA  . . . . . . . . . . .  	000A
  BPFTSEC  . . . . . . . . . . .  	000B
BUFFINFO . . . . . . . . . . . .  	0010	0009
  NEXTBUF  . . . . . . . . . . .  	0000
  BUFDRV . . . . . . . . . . . .  	0004
  BUFDIRTY . . . . . . . . . . .  	0005
  BUFPRI . . . . . . . . . . . .  	0006
  VISIT  . . . . . . . . . . . .  	0007
  BUFSECNO . . . . . . . . . . .  	0008
  BUFWRTCNT  . . . . . . . . . .  	000A
  BUFWRTINC  . . . . . . . . . .  	000B
  BUFDRVDP . . . . . . . . . . .  	000C
DIR_ENTRY  . . . . . . . . . . .  	0020	0008
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 08:29:40

PART3 - COMMAND Transient routines.                         Symbols-2
                                                             

  DIR_NAME . . . . . . . . . . .  	0000
  DIR_ATTR . . . . . . . . . . .  	000B
  DIR_PAD  . . . . . . . . . . .  	000C
  DIR_TIME . . . . . . . . . . .  	0016
  DIR_DATE . . . . . . . . . . .  	0018
  DIR_FIRST  . . . . . . . . . .  	001A
  DIR_SIZE_L . . . . . . . . . .  	001C
  DIR_SIZE_H . . . . . . . . . .  	001E
DPB  . . . . . . . . . . . . . .  	005E	0012
  DPB_DRIVE  . . . . . . . . . .  	0000
  DPB_UNIT . . . . . . . . . . .  	0001
  DPB_SECTOR_SIZE  . . . . . . .  	0002
  DPB_CLUSTER_MASK . . . . . . .  	0004
  DPB_CLUSTER_SHIFT  . . . . . .  	0005
  DPB_FIRST_FAT  . . . . . . . .  	0006
  DPB_FAT_COUNT  . . . . . . . .  	0008
  DPB_ROOT_ENTRIES . . . . . . .  	0009
  DPB_FIRST_SECTOR . . . . . . .  	000B
  DPB_MAX_CLUSTER  . . . . . . .  	000D
  DPB_FAT_SIZE . . . . . . . . .  	000F
  DPB_DIR_SECTOR . . . . . . . .  	0010
  DPB_DRIVER_ADDR  . . . . . . .  	0012
  DPB_MEDIA  . . . . . . . . . .  	0016
  DPB_FIRST_ACCESS . . . . . . .  	0017
  DPB_NEXT_DPB . . . . . . . . .  	0018
  DPB_CURRENT_DIR  . . . . . . .  	001C
  DPB_DIR_TEXT . . . . . . . . .  	001E
EXEC0  . . . . . . . . . . . . .  	000E	0004
  EXEC0_ENVIRON  . . . . . . . .  	0000
  EXEC0_COM_LINE . . . . . . . .  	0002
  EXEC0_5C_FCB . . . . . . . . .  	0006
  EXEC0_6C_FCB . . . . . . . . .  	000A
EXEC1  . . . . . . . . . . . . .  	0016	0008
  EXEC1_ENVIRON  . . . . . . . .  	0000
  EXEC1_COM_LINE . . . . . . . .  	0002
  EXEC1_5C_FCB . . . . . . . . .  	0006
  EXEC1_6C_FCB . . . . . . . . .  	000A
  EXEC1_SP . . . . . . . . . . .  	000E
  EXEC1_SS . . . . . . . . . . .  	0010
  EXEC1_IP . . . . . . . . . . .  	0012
  EXEC1_CS . . . . . . . . . . .  	0014
EXEC3  . . . . . . . . . . . . .  	0004	0002
  EXEC3_LOAD_ADDR  . . . . . . .  	0000
  EXEC3_RELOC_FAC  . . . . . . .  	0002
EXE_FILE . . . . . . . . . . . .  	0020	000F
  EXE_SIGNATURE  . . . . . . . .  	0000
  EXE_LEN_MOD_512  . . . . . . .  	0002
  EXE_PAGES  . . . . . . . . . .  	0004
  EXE_RLE_COUNT  . . . . . . . .  	0006
  EXE_PAR_DIR  . . . . . . . . .  	0008
  EXE_MIN_BSS  . . . . . . . . .  	000A
  EXE_MAX_BSS  . . . . . . . . .  	000C
  EXE_SS . . . . . . . . . . . .  	000E
  EXE_SP . . . . . . . . . . . .  	0010
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 08:29:40

PART3 - COMMAND Transient routines.                         Symbols-3
                                                             

  EXE_CHKSUM . . . . . . . . . .  	0012
  EXE_IP . . . . . . . . . . . .  	0014
  EXE_CS . . . . . . . . . . . .  	0016
  EXE_RLE_TABLE  . . . . . . . .  	0018
  EXE_IOV  . . . . . . . . . . .  	001A
  EXE_SYM_TAB  . . . . . . . . .  	001C
FIND_BUF . . . . . . . . . . . .  	002B	000C
  FIND_BUF_SATTR . . . . . . . .  	0000
  FIND_BUF_DRIVE . . . . . . . .  	0001
  FIND_BUF_NAME  . . . . . . . .  	0002
  FIND_BUF_LASTENT . . . . . . .  	000D
  FIND_BUF_THISDPB . . . . . . .  	000F
  FIND_BUF_DIRSTART  . . . . . .  	0013
  FIND_BUF_ATTR  . . . . . . . .  	0015
  FIND_BUF_TIME  . . . . . . . .  	0016
  FIND_BUF_DATE  . . . . . . . .  	0018
  FIND_BUF_SIZE_L  . . . . . . .  	001A
  FIND_BUF_SIZE_H  . . . . . . .  	001C
  FIND_BUF_PNAME . . . . . . . .  	001E
INTERNAT_BLOCK . . . . . . . . .  	0018	0015
  DATE_TIM_FORMAT  . . . . . . .  	0000
  CURRENCY_SYM . . . . . . . . .  	0002
  THOUS_SEP  . . . . . . . . . .  	0007
  DECIMAL_SEP  . . . . . . . . .  	0009
  DATE_SEP . . . . . . . . . . .  	000B
  TIME_SEP . . . . . . . . . . .  	000D
  BIT_FEILD  . . . . . . . . . .  	000F
  CURRENCY_CENTS . . . . . . . .  	0010
  TIME_24  . . . . . . . . . . .  	0011
  MAP_CALL . . . . . . . . . . .  	0012
  DATA_SEP . . . . . . . . . . .  	0016
PROCESS_DATA_BLOCK . . . . . . .  	005B	000E
  PDB_EXIT_CALL  . . . . . . . .  	0000
  PDB_BLOCK_LEN  . . . . . . . .  	0002
  PDB_CPM_CALL . . . . . . . . .  	0005
  PDB_EXIT . . . . . . . . . . .  	000A
  PDB_CTRL_C . . . . . . . . . .  	000E
  PDB_FATAL_ABORT  . . . . . . .  	0012
  PDB_PARENT_PID . . . . . . . .  	0016
  PDB_JFN_TABLE  . . . . . . . .  	0018
  PDB_ENVIRON  . . . . . . . . .  	002C
  PDB_USER_STACK . . . . . . . .  	002E
  PDB_PAD1 . . . . . . . . . . .  	0032
  PDB_CALL_SYSTEM  . . . . . . .  	0050
  PDB_PAD2 . . . . . . . . . . .  	0055
SFT  . . . . . . . . . . . . . .  	0008	0003
  SFT_LINK . . . . . . . . . . .  	0000
  SFT_COUNT  . . . . . . . . . .  	0004
  SFT_TABLE  . . . . . . . . . .  	0006
SF_ENTRY . . . . . . . . . . . .  	0028	0004
  SF_REF_COUNT . . . . . . . . .  	0000
  SF_MODE  . . . . . . . . . . .  	0001
  SF_ATTR  . . . . . . . . . . .  	0002
  SF_FCB . . . . . . . . . . . .  	0003
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 08:29:40

PART3 - COMMAND Transient routines.                         Symbols-4
                                                             

SRHEAD . . . . . . . . . . . . .  	000D	0005
  REQLEN . . . . . . . . . . . .  	0000
  REQUNIT  . . . . . . . . . . .  	0001
  REQFUNC  . . . . . . . . . . .  	0002
  REQSTAT  . . . . . . . . . . .  	0003
SYMBOL_ENTRY . . . . . . . . . .  	0106	0004
  SYM_VALUE  . . . . . . . . . .  	0000
  SYM_TYPE . . . . . . . . . . .  	0004
  SYM_LEN  . . . . . . . . . . .  	0006
  SYM_NAME . . . . . . . . . . .  	0007
SYSDEV . . . . . . . . . . . . .  	0012	0005
  SDEVNEXT . . . . . . . . . . .  	0000
  SDEVATT  . . . . . . . . . . .  	0004
  SDEVSTRAT  . . . . . . . . . .  	0006
  SDEVINT  . . . . . . . . . . .  	0008
  SDEVNAME . . . . . . . . . . .  	000A
SYS_FCB  . . . . . . . . . . . .  	0025	0010
  FCB_DRIVE  . . . . . . . . . .  	0000
  FCB_NAME . . . . . . . . . . .  	0001
  FCB_EXT  . . . . . . . . . . .  	0009
  FCB_EXTENT . . . . . . . . . .  	000C
  FCB_RECSIZ . . . . . . . . . .  	000E
  FCB_FILSIZ . . . . . . . . . .  	0010
  FCB_DRVBP  . . . . . . . . . .  	0012
  FCB_FDATE  . . . . . . . . . .  	0014
  FCB_FTIME  . . . . . . . . . .  	0016
  FCB_DEVID  . . . . . . . . . .  	0018
  FCB_FIRCLUS  . . . . . . . . .  	0019
  FCB_CLUSPOS  . . . . . . . . .  	001B
  FCB_LSTCLUS  . . . . . . . . .  	001D
  FCB_NR . . . . . . . . . . . .  	0020
  FCB_RR . . . . . . . . . . . .  	0021
USER_ENVIRON . . . . . . . . . .  	0018	000C
  USER_AX  . . . . . . . . . . .  	0000
  USER_BX  . . . . . . . . . . .  	0002
  USER_CX  . . . . . . . . . . .  	0004
  USER_DX  . . . . . . . . . . .  	0006
  USER_SI  . . . . . . . . . . .  	0008
  USER_DI  . . . . . . . . . . .  	000A
  USER_BP  . . . . . . . . . . .  	000C
  USER_DS  . . . . . . . . . . .  	000E
  USER_ES  . . . . . . . . . . .  	0010
  USER_IP  . . . . . . . . . . .  	0012
  USER_CS  . . . . . . . . . . .  	0014
  USER_F . . . . . . . . . . . .  	0016
VARSTRUC . . . . . . . . . . . .  	0059	0005
  ISDIR  . . . . . . . . . . . .  	0000
  SIZ  . . . . . . . . . . . . .  	0001
  TTAIL  . . . . . . . . . . . .  	0002
  INFO . . . . . . . . . . . . .  	0004
  BUF  . . . . . . . . . . . . .  	0005
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 08:29:40

PART3 - COMMAND Transient routines.                         Symbols-5
                                                             

Segments and Groups:

                N a m e         	Size	Align	Combine Class

EGROUP . . . . . . . . . . . . .  	GROUP
  ZEXEC_CODE . . . . . . . . . .  	0000	PARA	PUBLIC	
  ZEXEC_DATA . . . . . . . . . .  	0000	PARA	PUBLIC	
RESGROUP . . . . . . . . . . . .  	GROUP
  CODERES  . . . . . . . . . . .  	0000	PARA	PUBLIC	
  DATARES  . . . . . . . . . . .  	0000	PARA	PUBLIC	
  ENVIRONMENT  . . . . . . . . .  	0000	PARA	PUBLIC	
  INIT . . . . . . . . . . . . .  	0000	PARA	PUBLIC	
  TAIL . . . . . . . . . . . . .  	0000	PARA	PUBLIC	
TRANGROUP  . . . . . . . . . . .  	GROUP
  TRANCODE . . . . . . . . . . .  	0473	BYTE	PUBLIC	
  TRANDATA . . . . . . . . . . .  	0000	PARA	PUBLIC	
  TRANSPACE  . . . . . . . . . .  	0000	PARA	PUBLIC	
  TRANTAIL . . . . . . . . . . .  	0000	PARA	PUBLIC	

Symbols:            

                N a m e         	Type	Value	Attr         

ABORT  . . . . . . . . . . . . .  	Number	0000	
ADDR_INT_ABORT . . . . . . . . .  	Number	0080	
ADDR_INT_COMMAND . . . . . . . .  	Number	0084	
ADDR_INT_CTRL_C  . . . . . . . .  	Number	008C	
ADDR_INT_DISK_READ . . . . . . .  	Number	0094	
ADDR_INT_DISK_WRITE  . . . . . .  	Number	0098	
ADDR_INT_FASTCON . . . . . . . .  	Number	00A4	
ADDR_INT_FATAL_ABORT . . . . . .  	Number	0090	
ADDR_INT_KEEP_PROCESS  . . . . .  	Number	009C	
ADDR_INT_SPOOLER . . . . . . . .  	Number	00A0	
ADDR_INT_TERMINATE . . . . . . .  	Number	0088	
ALLOC  . . . . . . . . . . . . .  	Number	0048	
ALLOCOPER  . . . . . . . . . . .  	Number	0058	
ALLOC_ARENA_TRASHED  . . . . . .  	Alias	 ERROR_ARENA_TRASHED		
ALLOC_NOT_ENOUGH_MEMORY  . . . .  	Alias	 ERROR_NOT_ENOUGH_MEMORY		
ALTVECT  . . . . . . . . . . . .  	Number	0000	
ARENA_OWNER_SYSTEM . . . . . . .  	Number	0000	
ARENA_SIGNATURE_END  . . . . . .  	Number	005A	
ARENA_SIGNATURE_NORMAL . . . . .  	Number	004D	
ASSIGNOPER . . . . . . . . . . .  	Number	005F	
ASWITCH  . . . . . . . . . . . .  	Number	0004	
ATTR_ALL . . . . . . . . . . . .  	Number	0016	
ATTR_ARCHIVE . . . . . . . . . .  	Number	0020	
ATTR_CHANGEABLE  . . . . . . . .  	Number	0027	
ATTR_DIRECTORY . . . . . . . . .  	Number	0010	
ATTR_HIDDEN  . . . . . . . . . .  	Number	0002	
ATTR_IGNORE  . . . . . . . . . .  	Number	0021	
ATTR_READ_ONLY . . . . . . . . .  	Number	0001	
ATTR_SYSTEM  . . . . . . . . . .  	Number	0004	
ATTR_VOLUME_ID . . . . . . . . .  	Number	0008	

Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 08:29:40

PART3 - COMMAND Transient routines.                         Symbols-6
                                                             

BADLAB . . . . . . . . . . . . .  	V BYTE 	0000	TRANDATA	External
BATCH  . . . . . . . . . . . . .  	V WORD 	0000	DATARES	External
BATCLOSE . . . . . . . . . . . .  	L NEAR	03AB	TRANCODE	Global
BATHAND  . . . . . . . . . . . .  	V WORD 	0000	TRANSPACE	External
BATLOC . . . . . . . . . . . . .  	V DWORD	0000	DATARES	External
BATOPEN  . . . . . . . . . . . .  	L NEAR	03B5	TRANCODE	Global
BSWITCH  . . . . . . . . . . . .  	Number	0008	
BUFINSIZ . . . . . . . . . . . .  	Number	0010	

CERROR . . . . . . . . . . . . .  	L NEAR	0000	TRANCODE	External
CHAR_OPER  . . . . . . . . . . .  	Number	0037	
CHDIR  . . . . . . . . . . . . .  	Number	003B	
CHDIR_PATH_NOT_FOUND . . . . . .  	Alias	 ERROR_PATH_NOT_FOUND		
CHKLABEL . . . . . . . . . . . .  	L NEAR	0376	TRANCODE
CHMOD  . . . . . . . . . . . . .  	Number	0043	
CHMOD_ACCESS_DENIED  . . . . . .  	Alias	 ERROR_ACCESS_DENIED		
CHMOD_INVALID_FUNCTION . . . . .  	Alias	 ERROR_INVALID_FUNCTION		
CHMOD_PATH_NOT_FOUND . . . . . .  	Alias	 ERROR_PATH_NOT_FOUND		
CLOSE  . . . . . . . . . . . . .  	Number	003E	
CLOSE_INVALID_FUNCTION . . . . .  	Alias	 ERROR_INVALID_FUNCTION		
CLOSE_INVALID_HANDLE . . . . . .  	Alias	 ERROR_INVALID_HANDLE		
COMBUF . . . . . . . . . . . . .  	V BYTE 	0000	TRANSPACE	External
COMBUFLEN  . . . . . . . . . . .  	Number	0080	
COUNTRY_NOT_FOUND  . . . . . . .  	Alias	 ERROR_FILE_NOT_FOUND		
CREAT  . . . . . . . . . . . . .  	Number	003C	
CREATENEWFILE  . . . . . . . . .  	Number	005B	
CREATETEMPFILE . . . . . . . . .  	Number	005A	
CREATE_PROCESS_DATA_BLOCK  . . .  	Number	0026	
CREAT_ACCESS_DENIED  . . . . . .  	Alias	 ERROR_ACCESS_DENIED		
CREAT_PATH_NOT_FOUND . . . . . .  	Alias	 ERROR_PATH_NOT_FOUND		
CREAT_TOO_MANY_OPEN_FILES  . . .  	Alias	 ERROR_TOO_MANY_OPEN_FILES		
CURDIR_INVALID_DRIVE . . . . . .  	Alias	 ERROR_INVALID_DRIVE		
CURRENT_DIR  . . . . . . . . . .  	Number	0047	
C_BS . . . . . . . . . . . . . .  	Number	0008	
C_CR . . . . . . . . . . . . . .  	Number	000D	
C_DEL  . . . . . . . . . . . . .  	Number	007F	
C_ETB  . . . . . . . . . . . . .  	Number	0017	
C_ETX  . . . . . . . . . . . . .  	Number	0003	
C_HT . . . . . . . . . . . . . .  	Number	0009	
C_LF . . . . . . . . . . . . . .  	Number	000A	
C_NAK  . . . . . . . . . . . . .  	Number	0015	

DBPBHL . . . . . . . . . . . . .  	Number	0016	
DEALLOC  . . . . . . . . . . . .  	Number	0049	
DEALLOC_ARENA_TRASHED  . . . . .  	Alias	 ERROR_ARENA_TRASHED		
DEALLOC_INVALID_BLOCK  . . . . .  	Alias	 ERROR_INVALID_BLOCK		
DELIM  . . . . . . . . . . . . .  	L NEAR	0000	TRANCODE	External
DEVBPB . . . . . . . . . . . . .  	Number	0002	
DEVID_BLOCK_DEV  . . . . . . . .  	Number	001F	
DEVID_DEVICE . . . . . . . . . .  	Number	0080	
DEVID_DEVICE_CLOCK . . . . . . .  	Number	0008	
DEVID_DEVICE_CON_IN  . . . . . .  	Number	0001	
DEVID_DEVICE_CON_OUT . . . . . .  	Number	0002	
DEVID_DEVICE_EOF . . . . . . . .  	Number	0040	
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 08:29:40

PART3 - COMMAND Transient routines.                         Symbols-7
                                                             

DEVID_DEVICE_NULL  . . . . . . .  	Number	0004	
DEVID_DEVICE_RAW . . . . . . . .  	Number	0020	
DEVID_DEVICE_SPECIAL . . . . . .  	Number	0010	
DEVID_EOF  . . . . . . . . . . .  	Number	0040	
DEVID_FILE_CLEAN . . . . . . . .  	Number	0040	
DEVID_FILE_MASK_DRIVE  . . . . .  	Number	003F	
DEVID_ISCIN  . . . . . . . . . .  	Number	0001	
DEVID_ISCLK  . . . . . . . . . .  	Number	0008	
DEVID_ISCOT  . . . . . . . . . .  	Number	0002	
DEVID_ISDEV  . . . . . . . . . .  	Number	0080	
DEVID_ISNUL  . . . . . . . . . .  	Number	0004	
DEVID_RAW  . . . . . . . . . . .  	Number	0020	
DEVID_SPECIAL  . . . . . . . . .  	Number	0010	
DEVIFL . . . . . . . . . . . . .  	Number	0007	
DEVINIT  . . . . . . . . . . . .  	Number	0000	
DEVIOCTL . . . . . . . . . . . .  	Number	4000	
DEVIST . . . . . . . . . . . . .  	Number	0006	
DEVMDCH  . . . . . . . . . . . .  	Number	0001	
DEVOFL . . . . . . . . . . . . .  	Number	000B	
DEVOST . . . . . . . . . . . . .  	Number	000A	
DEVRD  . . . . . . . . . . . . .  	Number	0004	
DEVRDIOCTL . . . . . . . . . . .  	Number	0003	
DEVRDND  . . . . . . . . . . . .  	Number	0005	
DEVTYP . . . . . . . . . . . . .  	Number	8000	
DEVWRIOCTL . . . . . . . . . . .  	Number	000C	
DEVWRT . . . . . . . . . . . . .  	Number	0008	
DEVWRTV  . . . . . . . . . . . .  	Number	0009	
DFLSHL . . . . . . . . . . . . .  	Number	000F	
DINITHL  . . . . . . . . . . . .  	Number	001A	
DIRBUF . . . . . . . . . . . . .  	V BYTE 	0000	TRANSPACE	External
DIRPRI . . . . . . . . . . . . .  	Number	000F	
DIRSTRLEN  . . . . . . . . . . .  	Number	0040	
DIR_SEARCH_FIRST . . . . . . . .  	Number	0011	
DIR_SEARCH_NEXT  . . . . . . . .  	Number	0012	
DISK_RESET . . . . . . . . . . .  	Number	000D	
DMEDHL . . . . . . . . . . . . .  	Number	000F	
DOCOM  . . . . . . . . . . . . .  	L NEAR	0000	TRANCODE	External
DOCOM1 . . . . . . . . . . . . .  	L NEAR	0000	TRANCODE	External
DOFORSRCH  . . . . . . . . . . .  	L NEAR	003B	TRANCODE
DOS_MAJOR_VERSION  . . . . . . .  	Number	0002	
DOS_MINOR_VERSION  . . . . . . .  	Number	000B	
DPBSIZ . . . . . . . . . . . . .  	Number	005E	
DRDNDHL  . . . . . . . . . . . .  	Number	000E	
DRDWRHL  . . . . . . . . . . . .  	Number	0016	
DRVCHAR  . . . . . . . . . . . .  	Number	003A	
DSKSIZ . . . . . . . . . . . . .  	Number	000D	
DSTATHL  . . . . . . . . . . . .  	Number	000D	
DUP2_INVALID_HANDLE  . . . . . .  	Alias	 ERROR_INVALID_HANDLE		
DUP_INVALID_HANDLE . . . . . . .  	Alias	 ERROR_INVALID_HANDLE		
DUP_PDB  . . . . . . . . . . . .  	Number	0055	
DUP_TOO_MANY_OPEN_FILES  . . . .  	Alias	 ERROR_TOO_MANY_OPEN_FILES		

ECHOFLAG . . . . . . . . . . . .  	V BYTE 	0000	DATARES	External
ENTRYPOINT . . . . . . . . . . .  	Number	00C0	
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 08:29:40

PART3 - COMMAND Transient routines.                         Symbols-8
                                                             

EQUAL_CHECK  . . . . . . . . . .  	L NEAR	0237	TRANCODE
EQUAL_CHECK2 . . . . . . . . . .  	L NEAR	0242	TRANCODE
ERROR_ACCESS_DENIED  . . . . . .  	Number	0005	
ERROR_ARENA_TRASHED  . . . . . .  	Number	0007	
ERROR_BAD_ENVIRONMENT  . . . . .  	Number	000A	
ERROR_BAD_FORMAT . . . . . . . .  	Number	000B	
ERROR_CURRENT_DIRECTORY  . . . .  	Number	0010	
ERROR_FILE_NOT_FOUND . . . . . .  	Number	0002	
ERROR_INVALID_ACCESS . . . . . .  	Number	000C	
ERROR_INVALID_BLOCK  . . . . . .  	Number	0009	
ERROR_INVALID_DATA . . . . . . .  	Number	000D	
ERROR_INVALID_DRIVE  . . . . . .  	Number	000F	
ERROR_INVALID_FUNCTION . . . . .  	Number	0001	
ERROR_INVALID_HANDLE . . . . . .  	Number	0006	
ERROR_NOT_ENOUGH_MEMORY  . . . .  	Number	0008	
ERROR_NOT_SAME_DEVICE  . . . . .  	Number	0011	
ERROR_NO_MORE_FILES  . . . . . .  	Number	0012	
ERROR_PATH_NOT_FOUND . . . . . .  	Number	0003	
ERROR_TOO_MANY_OPEN_FILES  . . .  	Number	0004	
EXEC . . . . . . . . . . . . . .  	Number	004B	
EXEC_BAD_ENVIRONMENT . . . . . .  	Alias	 ERROR_BAD_ENVIRONMENT		
EXEC_BAD_FORMAT  . . . . . . . .  	Alias	 ERROR_BAD_FORMAT		
EXEC_FILE_NOT_FOUND  . . . . . .  	Alias	 ERROR_FILE_NOT_FOUND		
EXEC_FUNC_NO_EXECUTE . . . . . .  	Number	0001	
EXEC_FUNC_OVERLAY  . . . . . . .  	Number	0002	
EXEC_INVALID_FUNCTION  . . . . .  	Alias	 ERROR_INVALID_FUNCTION		
EXEC_NOT_ENOUGH_MEMORY . . . . .  	Alias	 ERROR_NOT_ENOUGH_MEMORY		
EXE_VALID_OLD_SIGNATURE  . . . .  	Number	4D5A	
EXE_VALID_SIGNATURE  . . . . . .  	Number	5A4D	
EXIT . . . . . . . . . . . . . .  	Number	004C	
EXIT_ABORT . . . . . . . . . . .  	Number	0000	
EXIT_CTRL_C  . . . . . . . . . .  	Number	0001	
EXIT_HARD_ERROR  . . . . . . . .  	Number	0002	
EXIT_KEEP_PROCESS  . . . . . . .  	Number	0003	
EXIT_TERMINATE . . . . . . . . .  	Number	0000	

FALSE  . . . . . . . . . . . . .  	Number	0000	
FATPRI . . . . . . . . . . . . .  	Number	001E	
FCB  . . . . . . . . . . . . . .  	Number	005C	
FCB_CLOSE  . . . . . . . . . . .  	Number	0010	
FCB_CREATE . . . . . . . . . . .  	Number	0016	
FCB_DELETE . . . . . . . . . . .  	Number	0013	
FCB_OPEN . . . . . . . . . . . .  	Number	000F	
FCB_RANDOM_READ  . . . . . . . .  	Number	0021	
FCB_RANDOM_READ_BLOCK  . . . . .  	Number	0027	
FCB_RANDOM_WRITE . . . . . . . .  	Number	0022	
FCB_RANDOM_WRITE_BLOCK . . . . .  	Number	0028	
FCB_RENAME . . . . . . . . . . .  	Number	0017	
FCB_SEQ_READ . . . . . . . . . .  	Number	0014	
FCB_SEQ_WRITE  . . . . . . . . .  	Number	0015	
FCB_TO_ASCZ  . . . . . . . . . .  	L NEAR	0000	TRANCODE	External
FILDIRENT  . . . . . . . . . . .  	Number	0010	
FILETIMES_INVALID_FUNCTION . . .  	Alias	 ERROR_INVALID_FUNCTION		
FILETIMES_INVALID_HANDLE . . . .  	Alias	 ERROR_INVALID_HANDLE		
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 08:29:40

PART3 - COMMAND Transient routines.                         Symbols-9
                                                             

FILE_TIMES . . . . . . . . . . .  	Number	0057	
FILPERPROC . . . . . . . . . . .  	Number	0014	
FINDFIRST_FILE_NOT_FOUND . . . .  	Alias	 ERROR_FILE_NOT_FOUND		
FINDFIRST_NO_MORE_FILES  . . . .  	Alias	 ERROR_NO_MORE_FILES		
FINDNEXT_NO_MORE_FILES . . . . .  	Alias	 ERROR_NO_MORE_FILES		
FIND_FIRST . . . . . . . . . . .  	Number	004E	
FIND_NEXT  . . . . . . . . . . .  	Number	004F	
FIRSTCOMP  . . . . . . . . . . .  	L NEAR	01F8	TRANCODE
FIRST_STRING . . . . . . . . . .  	L NEAR	022A	TRANCODE
FORCOM . . . . . . . . . . . . .  	V BYTE 	0000	DATARES	External
FORCOMLP . . . . . . . . . . . .  	L NEAR	0195	TRANCODE
FORERROR . . . . . . . . . . . .  	L NEAR	01D1	TRANCODE
FORERRORJ  . . . . . . . . . . .  	L NEAR	0189	TRANCODE
FORERRORJ2 . . . . . . . . . . .  	L NEAR	014C	TRANCODE
FORERRORJ3 . . . . . . . . . . .  	L NEAR	0190	TRANCODE
FORFCB . . . . . . . . . . . . .  	V BYTE 	0000	DATARES	External
FORFLAG  . . . . . . . . . . . .  	V BYTE 	0000	DATARES	External
FORNESTERR . . . . . . . . . . .  	L NEAR	00D4	TRANCODE
FORNESTMES . . . . . . . . . . .  	V BYTE 	0000	TRANDATA	External
FOROK1 . . . . . . . . . . . . .  	L NEAR	0133	TRANCODE
FOROK2 . . . . . . . . . . . . .  	L NEAR	018B	TRANCODE
FORPROC  . . . . . . . . . . . .  	L NEAR	0016	TRANCODE	Global
FORPTR . . . . . . . . . . . . .  	V WORD 	0000	DATARES	External
FORSET . . . . . . . . . . . . .  	V BYTE 	0000	DATARES	External
FORSETEND  . . . . . . . . . . .  	L NEAR	0170	TRANCODE
FORSETLP . . . . . . . . . . . .  	L NEAR	0149	TRANCODE
FORSETTERM . . . . . . . . . . .  	L NEAR	017C	TRANCODE
FORTERM  . . . . . . . . . . . .  	L NEAR	0000	TRANCODE
FORUFCB  . . . . . . . . . . . .  	V BYTE 	0000	DATARES	External
FORVAR . . . . . . . . . . . . .  	V BYTE 	0000	DATARES	External
FREEPRI  . . . . . . . . . . . .  	Number	0000	
FULDIR . . . . . . . . . . . . .  	V BYTE 	0000	TRANDATA	External

GETBATBYT  . . . . . . . . . . .  	L NEAR	0000	TRANCODE	External
GETEXTENDEDERROR . . . . . . . .  	Number	0059	
GETNUMLP . . . . . . . . . . . .  	L NEAR	02B3	TRANCODE
GET_CURRENT_PDB  . . . . . . . .  	Number	0051	
GET_DATE . . . . . . . . . . . .  	Number	002A	
GET_DEFAULT_DPB  . . . . . . . .  	Number	001F	
GET_DEFAULT_DRIVE  . . . . . . .  	Number	0019	
GET_DMA  . . . . . . . . . . . .  	Number	002F	
GET_DPB  . . . . . . . . . . . .  	Number	0032	
GET_DRIVE_FREESPACE  . . . . . .  	Number	0036	
GET_FCB_FILE_LENGTH  . . . . . .  	Number	0023	
GET_FCB_POSITION . . . . . . . .  	Number	0024	
GET_INDOS_FLAG . . . . . . . . .  	Number	0034	
GET_INTERRUPT_VECTOR . . . . . .  	Number	0035	
GET_IN_VARS  . . . . . . . . . .  	Number	0052	
GET_TIME . . . . . . . . . . . .  	Number	002C	
GET_VERIFY_ON_WRITE  . . . . . .  	Number	0054	
GET_VERSION  . . . . . . . . . .  	Number	0030	
GOTNUM . . . . . . . . . . . . .  	L NEAR	02C9	TRANCODE
GOTO . . . . . . . . . . . . . .  	L NEAR	031E	TRANCODE	Global
GOTOLEN  . . . . . . . . . . . .  	V WORD 	0000	TRANSPACE	External
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 08:29:40

PART3 - COMMAND Transient routines.                         Symbols-10
                                                             

GOTSWITCH  . . . . . . . . . . .  	Number	8000	

HIGHMEM  . . . . . . . . . . . .  	Alias	 FALSE		

IBM  . . . . . . . . . . . . . .  	Alias	 IBMVER		
IBMJAPAN . . . . . . . . . . . .  	Alias	 FALSE		
IBMVER . . . . . . . . . . . . .  	Alias	 FALSE		
IFCOMP . . . . . . . . . . . . .  	L NEAR	01F6	TRANCODE
IFDIF  . . . . . . . . . . . . .  	L NEAR	0208	TRANCODE
IFERLEV  . . . . . . . . . . . .  	L NEAR	02AF	TRANCODE	Global
IFERROR  . . . . . . . . . . . .  	L NEAR	01D1	TRANCODE
IFERRORJ . . . . . . . . . . . .  	L NEAR	0215	TRANCODE
IFERRORJ2  . . . . . . . . . . .  	L NEAR	025C	TRANCODE
IFERRORP . . . . . . . . . . . .  	L NEAR	01D0	TRANCODE
IFEXISTS . . . . . . . . . . . .  	L NEAR	0271	TRANCODE	Global
IFINDCOM . . . . . . . . . . . .  	L NEAR	01ED	TRANCODE
IFLP . . . . . . . . . . . . . .  	L NEAR	0206	TRANCODE
IFNOT  . . . . . . . . . . . . .  	L NEAR	0221	TRANCODE	Global
IFNOTFLAG  . . . . . . . . . . .  	V BYTE 	0000	TRANSPACE	External
IFREENT  . . . . . . . . . . . .  	L NEAR	01DF	TRANCODE
IFRET  . . . . . . . . . . . . .  	L NEAR	027F	TRANCODE
IFSTRING . . . . . . . . . . . .  	L NEAR	0227	TRANCODE
IFTAB  . . . . . . . . . . . . .  	V BYTE 	0000	TRANDATA	External
IFTRUE . . . . . . . . . . . . .  	L NEAR	028F	TRANCODE
INTBASE  . . . . . . . . . . . .  	Number	0080	
INTERNATIONAL  . . . . . . . . .  	Number	0038	
INTERNATIONAL_INVALID_FUNCTION .  	Alias	 ERROR_INVALID_FUNCTION		
INTERNAT_BLOCK_MAX . . . . . . .  	Number	0020	
INTTAB . . . . . . . . . . . . .  	Number	0020	
INT_ABORT  . . . . . . . . . . .  	Alias	 INTTAB		
INT_COMMAND  . . . . . . . . . .  	Number	0021	
INT_CTRL_C . . . . . . . . . . .  	Number	0023	
INT_DISK_READ  . . . . . . . . .  	Number	0025	
INT_DISK_WRITE . . . . . . . . .  	Number	0026	
INT_FASTCON  . . . . . . . . . .  	Number	0029	
INT_FATAL_ABORT  . . . . . . . .  	Number	0024	
INT_KEEP_PROCESS . . . . . . . .  	Number	0027	
INT_SPOOLER  . . . . . . . . . .  	Number	0028	
INT_TERMINATE  . . . . . . . . .  	Number	0022	
IOCTL  . . . . . . . . . . . . .  	Number	0044	
IOCTL_INVALID_DATA . . . . . . .  	Alias	 ERROR_INVALID_DATA		
IOCTL_INVALID_FUNCTION . . . . .  	Alias	 ERROR_INVALID_FUNCTION		
IOCTL_INVALID_HANDLE . . . . . .  	Alias	 ERROR_INVALID_HANDLE		
IOSET  . . . . . . . . . . . . .  	L NEAR	03E9	TRANCODE	Global
ISCIN  . . . . . . . . . . . . .  	Number	0001	
ISCLOCK  . . . . . . . . . . . .  	Number	0008	
ISCOUT . . . . . . . . . . . . .  	Number	0002	
ISFATBYDEV . . . . . . . . . . .  	Number	2000	
ISIBM  . . . . . . . . . . . . .  	Number	0010	
ISNULL . . . . . . . . . . . . .  	Number	0004	

KANJI  . . . . . . . . . . . . .  	Alias	 FALSE		
KEEP_PROCESS . . . . . . . . . .  	Number	0031	

Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 08:29:40

PART3 - COMMAND Transient routines.                         Symbols-11
                                                             

LABLKLP  . . . . . . . . . . . .  	L NEAR	0355	TRANCODE
LABLKTST . . . . . . . . . . . .  	L NEAR	0363	TRANCODE
LBRPRI . . . . . . . . . . . . .  	Number	0002	
LBWPRI . . . . . . . . . . . . .  	Number	0004	
LINPERPAG  . . . . . . . . . . .  	Number	0017	
LOCKOPER . . . . . . . . . . . .  	Number	005C	
LSEEK  . . . . . . . . . . . . .  	Number	0042	
LSEEK_INVALID_FUNCTION . . . . .  	Alias	 ERROR_INVALID_FUNCTION		
LSEEK_INVALID_HANDLE . . . . . .  	Alias	 ERROR_INVALID_HANDLE		

MATCH  . . . . . . . . . . . . .  	L NEAR	0267	TRANCODE
MESTRAN  . . . . . . . . . . . .  	L NEAR	03E1	TRANCODE	Global
MI_INT . . . . . . . . . . . . .  	Number	00CD	
MI_LONG_CALL . . . . . . . . . .  	Number	009A	
MI_LONG_JMP  . . . . . . . . . .  	Number	00EA	
MI_LONG_RET  . . . . . . . . . .  	Number	00CB	
MKDIR  . . . . . . . . . . . . .  	Number	0039	
MKDIR_ACCESS_DENIED  . . . . . .  	Alias	 ERROR_ACCESS_DENIED		
MKDIR_PATH_NOT_FOUND . . . . . .  	Alias	 ERROR_PATH_NOT_FOUND		
MSVER  . . . . . . . . . . . . .  	Alias	 TRUE		

NDRV8  . . . . . . . . . . . . .  	L NEAR	0062	TRANCODE
NEXTCHRLP  . . . . . . . . . . .  	L NEAR	037E	TRANCODE
NEXTLABCHR . . . . . . . . . . .  	L NEAR	0393	TRANCODE
NOECHO3  . . . . . . . . . . . .  	L NEAR	00D1	TRANCODE
NOFORP . . . . . . . . . . . . .  	L NEAR	01AF	TRANCODE
NOFORP2  . . . . . . . . . . . .  	L NEAR	0013	TRANCODE
NOFORP3  . . . . . . . . . . . .  	L NEAR	00EA	TRANCODE
NOFORPARM  . . . . . . . . . . .  	L NEAR	00A5	TRANCODE
NOFORSCAN  . . . . . . . . . . .  	L NEAR	0161	TRANCODE
NOINC  . . . . . . . . . . . . .  	L NEAR	0344	TRANCODE
NOREDIR  . . . . . . . . . . . .  	L NEAR	0400	TRANCODE
NOREOUT  . . . . . . . . . . . .  	L NEAR	0467	TRANCODE
NORMFOR  . . . . . . . . . . . .  	L NEAR	006C	TRANCODE
NORMPERLIN . . . . . . . . . . .  	Number	0001	
NOSETUDRV  . . . . . . . . . . .  	L NEAR	01CA	TRANCODE
NOTFND . . . . . . . . . . . . .  	V BYTE 	0000	TRANDATA	External
NOTMATCH . . . . . . . . . . . .  	L NEAR	025A	TRANCODE
NO_ERROR_OCCURRED  . . . . . . .  	Text  0                                                              ?		

OEM_C1 . . . . . . . . . . . . .  	Number	00F9	
OEM_C2 . . . . . . . . . . . . .  	Number	00FA	
OEM_C3 . . . . . . . . . . . . .  	Number	00FB	
OEM_C4 . . . . . . . . . . . . .  	Number	00FC	
OEM_C5 . . . . . . . . . . . . .  	Number	00FD	
OEM_C6 . . . . . . . . . . . . .  	Number	00FE	
OEM_C7 . . . . . . . . . . . . .  	Number	00FF	
OPEN . . . . . . . . . . . . . .  	Number	003D	
OPEN_ACCESS_DENIED . . . . . . .  	Alias	 ERROR_ACCESS_DENIED		
OPEN_FILE_NOT_FOUND  . . . . . .  	Alias	 ERROR_FILE_NOT_FOUND		
OPEN_FOR_BOTH  . . . . . . . . .  	Number	0002	
OPEN_FOR_READ  . . . . . . . . .  	Number	0000	
OPEN_FOR_WRITE . . . . . . . . .  	Number	0001	
OPEN_INVALID_ACCESS  . . . . . .  	Alias	 ERROR_INVALID_ACCESS		
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 08:29:40

PART3 - COMMAND Transient routines.                         Symbols-12
                                                             

OPEN_TOO_MANY_OPEN_FILES . . . .  	Alias	 ERROR_TOO_MANY_OPEN_FILES		

PARMSUB  . . . . . . . . . . . .  	L NEAR	0099	TRANCODE
PARMSUB0 . . . . . . . . . . . .  	L NEAR	0079	TRANCODE
PARMSUBDONE  . . . . . . . . . .  	L NEAR	00A2	TRANCODE
PARSE_FILE_DESCRIPTOR  . . . . .  	Number	0029	
PIPEFLAG . . . . . . . . . . . .  	V BYTE 	0000	DATARES	External
PRINT  . . . . . . . . . . . . .  	L NEAR	0000	TRANCODE	External
PSWITCH  . . . . . . . . . . . .  	Number	0002	

RAW_CON_INPUT  . . . . . . . . .  	Number	0007	
RAW_CON_IO . . . . . . . . . . .  	Number	0006	
READ . . . . . . . . . . . . . .  	Number	003F	
READ_ACCESS_DENIED . . . . . . .  	Alias	 ERROR_ACCESS_DENIED		
READ_INVALID_HANDLE  . . . . . .  	Alias	 ERROR_INVALID_HANDLE		
REALTEST . . . . . . . . . . . .  	L NEAR	0288	TRANCODE
REDIRERR . . . . . . . . . . . .  	L NEAR	0425	TRANCODE
RENAME . . . . . . . . . . . . .  	Number	0056	
RENAME_ACCESS_DENIED . . . . . .  	Alias	 ERROR_ACCESS_DENIED		
RENAME_FILE_NOT_FOUND  . . . . .  	Alias	 ERROR_FILE_NOT_FOUND		
RENAME_NOT_SAME_DEVICE . . . . .  	Alias	 ERROR_NOT_SAME_DEVICE		
REOUTCRT . . . . . . . . . . . .  	L NEAR	044F	TRANCODE
RESSEG . . . . . . . . . . . . .  	V WORD 	0000	TRANSPACE	External
RETCODE  . . . . . . . . . . . .  	V WORD 	0000	DATARES	External
RET_L  . . . . . . . . . . . . .  	NEAR 	0467	TRANCODE
RET_NZ . . . . . . . . . . . . .  	NEAR 	0469	TRANCODE
RET_Z  . . . . . . . . . . . . .  	NEAR 	046F	TRANCODE
RE_INSTR . . . . . . . . . . . .  	V BYTE 	0000	DATARES	External
RE_OUTSTR  . . . . . . . . . . .  	V BYTE 	0000	DATARES	External
RE_OUT_APP . . . . . . . . . . .  	V BYTE 	0000	DATARES	External
RMDIR  . . . . . . . . . . . . .  	Number	003A	
RMDIR_ACCESS_DENIED  . . . . . .  	Alias	 ERROR_ACCESS_DENIED		
RMDIR_CURRENT_DIRECTORY  . . . .  	Alias	 ERROR_CURRENT_DIRECTORY		
RMDIR_PATH_NOT_FOUND . . . . . .  	Alias	 ERROR_PATH_NOT_FOUND		
RPRI . . . . . . . . . . . . . .  	Number	0006	

SCANOFF  . . . . . . . . . . . .  	L NEAR	0000	TRANCODE	External
SERVERCALL . . . . . . . . . . .  	Number	005D	
SETBLOCK . . . . . . . . . . . .  	Number	004A	
SETBLOCK_ARENA_TRASHED . . . . .  	Alias	 ERROR_ARENA_TRASHED		
SETBLOCK_INVALID_BLOCK . . . . .  	Alias	 ERROR_INVALID_BLOCK		
SETBLOCK_INVALID_FUNCTION  . . .  	Alias	 ERROR_INVALID_FUNCTION		
SETBLOCK_NOT_ENOUGH_MEMORY . . .  	Alias	 ERROR_NOT_ENOUGH_MEMORY		
SETDPB . . . . . . . . . . . . .  	Number	0053	
SETERRDL . . . . . . . . . . . .  	L NEAR	03D8	TRANCODE
SETFORSCAN . . . . . . . . . . .  	L NEAR	015B	TRANCODE
SET_CTRL_C_TRAPPING  . . . . . .  	Number	0033	
SET_CURRENT_PDB  . . . . . . . .  	Number	0050	
SET_DATE . . . . . . . . . . . .  	Number	002B	
SET_DEFAULT_DRIVE  . . . . . . .  	Number	000E	
SET_DMA  . . . . . . . . . . . .  	Number	001A	
SET_INTERRUPT_VECTOR . . . . . .  	Number	0025	
SET_OEM_HANDLER  . . . . . . . .  	Number	00F8	
SET_REOUT  . . . . . . . . . . .  	L NEAR	045F	TRANCODE
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 08:29:40

PART3 - COMMAND Transient routines.                         Symbols-13
                                                             

SET_TIME . . . . . . . . . . . .  	Number	002D	
SET_VERIFY_ON_WRITE  . . . . . .  	Number	002E	
SF_DEFAULT_NUMBER  . . . . . . .  	Number	0005	
SHIFT  . . . . . . . . . . . . .  	L NEAR	02DD	TRANCODE	Global
SINGLECOM  . . . . . . . . . . .  	V WORD 	0000	DATARES	External
SKIPCRLP . . . . . . . . . . . .  	L NEAR	0310	TRANCODE
SKIPLFEED  . . . . . . . . . . .  	L NEAR	03A8	TRANCODE
SKIPSTRINGEND  . . . . . . . . .  	L NEAR	0259	TRANCODE
STBUI  . . . . . . . . . . . . .  	Number	0200	
STDAUX . . . . . . . . . . . . .  	Number	0003	
STDERR . . . . . . . . . . . . .  	Number	0002	
STDIN  . . . . . . . . . . . . .  	Number	0000	
STDON  . . . . . . . . . . . . .  	Number	0100	
STDOUT . . . . . . . . . . . . .  	Number	0001	
STDPRN . . . . . . . . . . . . .  	Number	0004	
STD_AUX_INPUT  . . . . . . . . .  	Number	0003	
STD_AUX_OUTPUT . . . . . . . . .  	Number	0004	
STD_CON_INPUT  . . . . . . . . .  	Number	0001	
STD_CON_INPUT_FLUSH  . . . . . .  	Number	000C	
STD_CON_INPUT_NO_ECHO  . . . . .  	Number	0008	
STD_CON_INPUT_STATUS . . . . . .  	Number	000B	
STD_CON_OUTPUT . . . . . . . . .  	Number	0002	
STD_CON_STRING_INPUT . . . . . .  	Number	000A	
STD_CON_STRING_OUTPUT  . . . . .  	Number	0009	
STD_PRINTER_OUTPUT . . . . . . .  	Number	0005	
STECODE  . . . . . . . . . . . .  	Number	00FF	
STERR  . . . . . . . . . . . . .  	Number	8000	
STRCOMP  . . . . . . . . . . . .  	L NEAR	0468	TRANCODE	Global
SYM  . . . . . . . . . . . . . .  	Number	003E	
SYNTMES  . . . . . . . . . . . .  	V BYTE 	0000	TRANDATA	External

TCOMMAND . . . . . . . . . . . .  	L NEAR	0000	TRANCODE	External
TESTDOREIN . . . . . . . . . . .  	L NEAR	0406	TRANCODE	Global
TESTDOREOUT  . . . . . . . . . .  	L NEAR	042A	TRANCODE	Global
TFORCOM  . . . . . . . . . . . .  	L NEAR	0088	TRANCODE
TONEXTBATLIN . . . . . . . . . .  	L NEAR	03A1	TRANCODE
TRUE . . . . . . . . . . . . . .  	Number	FFFF	
TRYUPPER . . . . . . . . . . . .  	L NEAR	038C	TRANCODE

UFORDRV  . . . . . . . . . . . .  	V BYTE 	0000	DATARES	External
UNLINK . . . . . . . . . . . . .  	Number	0041	
UNLINK_ACCESS_DENIED . . . . . .  	Alias	 ERROR_ACCESS_DENIED		
UNLINK_FILE_NOT_FOUND  . . . . .  	Alias	 ERROR_FILE_NOT_FOUND		
USERIDOPER . . . . . . . . . . .  	Number	005E	

VSWITCH  . . . . . . . . . . . .  	Number	0010	

WAIT . . . . . . . . . . . . . .  	Number	004D	
WIDEPERLIN . . . . . . . . . . .  	Number	0005	
WPRI . . . . . . . . . . . . . .  	Number	0008	
WRECODE  . . . . . . . . . . . .  	Number	0000	
WRITE  . . . . . . . . . . . . .  	Number	0040	
WRITE_ACCESS_DENIED  . . . . . .  	Alias	 ERROR_ACCESS_DENIED		
WRITE_INVALID_HANDLE . . . . . .  	Alias	 ERROR_INVALID_HANDLE		
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 08:29:40

PART3 - COMMAND Transient routines.                         Symbols-14
                                                             

WSWITCH  . . . . . . . . . . . .  	Number	0001	

XDUP . . . . . . . . . . . . . .  	Number	0045	
XDUP2  . . . . . . . . . . . . .  	Number	0046	

$FOR . . . . . . . . . . . . . .  	L NEAR	00EE	TRANCODE	Global
$IF  . . . . . . . . . . . . . .  	L NEAR	01D7	TRANCODE	Global
??0002 . . . . . . . . . . . . .  	L NEAR	01B8	TRANCODE
??0003 . . . . . . . . . . . . .  	L NEAR	01B7	TRANCODE
??0004 . . . . . . . . . . . . .  	L NEAR	01CF	TRANCODE
??0007 . . . . . . . . . . . . .  	L NEAR	02EA	TRANCODE
??0008 . . . . . . . . . . . . .  	L NEAR	02E9	TRANCODE
??0009 . . . . . . . . . . . . .  	L NEAR	0303	TRANCODE
??000B . . . . . . . . . . . . .  	L NEAR	0318	TRANCODE
??000D . . . . . . . . . . . . .  	L NEAR	031D	TRANCODE
??000E . . . . . . . . . . . . .  	L NEAR	0328	TRANCODE
??0010 . . . . . . . . . . . . .  	L NEAR	03B4	TRANCODE
??0011 . . . . . . . . . . . . .  	L NEAR	03D7	TRANCODE
??0012 . . . . . . . . . . . . .  	L NEAR	03E0	TRANCODE
??0013 . . . . . . . . . . . . .  	L NEAR	03E4	TRANCODE
??0015 . . . . . . . . . . . . .  	L NEAR	0405	TRANCODE
??0016 . . . . . . . . . . . . .  	L NEAR	040B	TRANCODE
??0018 . . . . . . . . . . . . .  	L NEAR	0424	TRANCODE
??0019 . . . . . . . . . . . . .  	L NEAR	0467	TRANCODE
??001A . . . . . . . . . . . . .  	L NEAR	0469	TRANCODE
??001C . . . . . . . . . . . . .  	L NEAR	046F	TRANCODE


   2070 Source  Lines
   2375 Total   Lines
    705 Symbols

  15020 Bytes symbol space free

      0 Warning Errors
      0 Severe  Errors
