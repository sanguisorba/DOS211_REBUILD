Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 08:29:59

COMMAND COPY routines.                                      Page     1-1
                                                            

       1                                TITLE   COMMAND COPY routines. 
       2                                 
       3                             C          INCLUDE COMSW.ASM 
       4                             C  ; Use the following booleans to set ass
					embly flags 
       5 = 0000                      C  FALSE   EQU     0 
       6 = FFFF                      C  TRUE    EQU     NOT FALSE 
       7                             C   
       8 =                           C  IBMVER  EQU     false  ; Switch to buil
					d IBM version of Command 
       9 =                           C  IBM     EQU     IBMVER 
      10 =                           C  MSVER   EQU     true   ; Switch to buil
					d MS-DOS version of Command 
      11                             C   
      12 =                           C  HIGHMEM EQU     FALSE   ; Run resident 
					part above transient (high memory) 
      13 =                           C  KANJI   EQU     false   ; Support for d
					ual byte Microsoft KANJI standard 
      14 =                              IBMJAPAN        EQU     FALSE   ;MUST B
					E TRUE (along with IBM and KANJI) 
      15                                 
      16                                .list 
      17                                .cref 
      18                                 
      19                             C          INCLUDE COMEQU.ASM 
      20                             C  ;************************************* 
      21                             C  ; COMMAND EQUs which are not switch dep
					endant 
      22                             C   
      23                             C  IFDEF   IBM 
      24                             C          INCLUDE IFEQU.ASM 
      25                             C  ;************************************* 
      26                             C  ; COMMAND EQUs which are switch dependa
					nt 
      27                             C   
      28                             C  ENDIF 
      29                             C   
      30                             C  ENDIF 
      31                             C   
      32                             C   
      33 = 003E                      C  SYM     EQU     ">" 
      34                             C   
      35 = 0017                      C  LINPERPAG       EQU     23 
      36 = 0001                      C  NORMPERLIN      EQU     1 
      37 = 0005                      C  WIDEPERLIN      EQU     5 
      38 = 0080                      C  COMBUFLEN       EQU     128     ; Lengt
					h of commmand buffer 
      39                             C   
      40 = 003A                      C  DRVCHAR         EQU     ":" 
      41                             C   
      42 = 005C                      C  FCB     EQU     5CH 
      43                             C   
      44                             C  VARSTRUC        STRUC 
      45 0000  ??                    C  ISDIR   DB      ? 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 08:29:59

COMMAND COPY routines.                                      Page     1-2
DEVICE TABLE AND SRH DEFINITION                             

      46 0001  ??                    C  SIZ     DB      ? 
      47 0002  ????                  C  TTAIL   DW      ? 
      48 0004  ??                    C  INFO    DB      ? 
      49 0005  0054[                 C  BUF     DB      DIRSTRLEN + 20 DUP (?) 
      50            ??               C  
      51                         ]   C  
      52                             C  
      53 0059                        C  VARSTRUC        ENDS 
      54                             C   
      55 = 0001                      C  WSWITCH EQU     1               ; Wide 
					display during DIR 
      56 = 0002                      C  PSWITCH EQU     2               ; Pause
					 (or Page) mode during DIR 
      57 = 0004                      C  ASWITCH EQU     4               ; ASCII
					 mode during COPY 
      58 = 0008                      C  BSWITCH EQU     8               ; Binar
					y mode during COPY 
      59 = 0010                      C  VSWITCH EQU     10H             ; Verif
					y switch 
      60 = 8000                      C  GOTSWITCH EQU   8000H           ; Meta 
					switch set if switch character encounte
					red 
      61                                 
      62                                 
      63 0000                           DATARES SEGMENT PUBLIC 
      64                                        EXTRN   VERVAL:WORD 
      65 0000                           DATARES ENDS 
      66                                 
      67 0000                           TRANDATA        SEGMENT PUBLIC 
      68                                        EXTRN   BADARGS:BYTE,BADCD:BYTE
					,BADSWT:BYTE,COPIED_PRE:BYTE 
      69                                        EXTRN   COPIED_POST:BYTE 
      70                                        EXTRN   INBDEV:BYTE,OVERWR:BYTE
					,FULDIR:BYTE,LOSTERR:BYTE 
      71                                        EXTRN   NOSPACE:BYTE,DEVWMES:BY
					TE,NOTFND:BYTE 
      72 0000                           TRANDATA        ENDS 
      73                                 
      74 0000                           TRANSPACE       SEGMENT PUBLIC 
      75                                        EXTRN   MELCOPY:BYTE,SRCPT:WORD
					,MELSTART:WORD,SCANBUF:BYTE 
      76                                        EXTRN   DESTFCB2:BYTE,SDIRBUF:B
					YTE,SRCTAIL:WORD,CFLAG:BYTE 
      77                                        EXTRN   NXTADD:WORD,DESTCLOSED:
					BYTE,ALLSWITCH:WORD,ARGC:BYTE 
      78                                        EXTRN   PLUS:BYTE,BINARY:BYTE,A
					SCII:BYTE,FILECNT:WORD 
      79                                        EXTRN   WRITTEN:BYTE,CONCAT:BYT
					E,DESTBUF:BYTE,SRCBUF:BYTE 
      80                                        EXTRN   SDIRBUF:BYTE,DIRBUF:BYT
					E,DESTFCB:BYTE,FRSTSRCH:BYTE 
      81                                        EXTRN   FIRSTDEST:BYTE,DESTISDI
					R:BYTE,DESTSWITCH:WORD,STARTEL:WORD 
      82                                        EXTRN   DESTTAIL:WORD,DESTSIZ:B
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 08:29:59

COMMAND COPY routines.                                      Page     1-3
DEVICE TABLE AND SRH DEFINITION                             

					YTE,DESTINFO:BYTE,INEXACT:BYTE 
      83                                        EXTRN   CURDRV:BYTE,DESTVARS:BY
					TE,RESSEG:WORD,SRCSIZ:BYTE 
      84                                        EXTRN   SRCINFO:BYTE,SRCVARS:BY
					TE,USERDIR1:BYTE,NOWRITE:BYTE 
      85                                        EXTRN   RDEOF:BYTE,SRCHAND:WORD
					,CPDATE:WORD,CPTIME:WORD 
      86                                        EXTRN   SRCISDEV:BYTE,BYTCNT:WO
					RD,TPA:WORD,TERMREAD:BYTE 
      87                                        EXTRN   DESTHAND:WORD,DESTISDEV
					:BYTE,DIRCHAR:BYTE 
      88 0000                           TRANSPACE       ENDS 
      89                                 
      90                                 
      91                                ; *************************************
					************* 
      92                                ; COPY CODE 
      93                                ; 
      94                                 
      95 0000                           TRANCODE        SEGMENT PUBLIC BYTE 
      96                                 
      97                                        EXTRN   RESTUDIR:NEAR,CERROR:NE
					AR,SWITCH:NEAR,DISP32BITS:NEAR 
      98                                        EXTRN   PRINT:NEAR,TCOMMAND:NEA
					R,ZPRINT:NEAR,ONESPC:NEAR 
      99                                        EXTRN   RESTUDIR1:NEAR,FCB_TO_A
					SCZ:NEAR,CRLF2:NEAR,SAVUDIR1:NEAR 
     100                                        EXTRN   SETREST1:NEAR,BADCDERR:
					NEAR,STRCOMP:NEAR,DELIM:NEAR 
     101                                        EXTRN   UPCONV:NEAR,PATHCHRCMP:
					NEAR,SCANOFF:NEAR 
     102                                 
     103                                        EXTRN   CPARSE:NEAR 
     104                                 
     105                                        EXTRN   SEARCH:NEAR,SEARCHNEXT:
					NEAR,DOCOPY:NEAR,CLOSEDEST:NEAR 
     106                                        EXTRN   FLSHFIL:NEAR,SETASC:NEA
					R,BUILDNAME:NEAR,COPERR:NEAR 
     107                                 
     108                                        PUBLIC  COPY,BUILDPATH,COMPNAME
					,ENDCOPY 
     109                                 
     110                                 
     111                                ASSUME  CS:TRANGROUP,DS:TRANGROUP,ES:TR
					ANGROUP,SS:NOTHING 
     112                                 
     113 0000                           DOMELCOPY: 
     114 0000  80 3E 0000 E FF                  cmp     [MELCOPY],0FFH 
     115 0005  74 0D                            jz      CONTMEL 
     116 0007  8B 36 0000 E                     mov     SI,[SRCPT] 
     117 000B  89 36 0000 E                     mov     [MELSTART],si 
     118 000F  C6 06 0000 E FF                  mov     [MELCOPY],0FFH 
     119 0014                           CONTMEL: 
     120 0014  33 ED                            xor     BP,BP 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 08:29:59

COMMAND COPY routines.                                      Page     1-4
DEVICE TABLE AND SRH DEFINITION                             

     121 0016  8B 36 0000 E                     mov     si,[SRCPT] 
     122 001A  B3 2B                            mov     bl,'+' 
     123 001C                           SCANSRC2: 
     124 001C  BF 0000 E                        mov     di,OFFSET TRANGROUP:SCA
					NBUF 
     125 001F  E8 0000 E                        call    CPARSE 
     126 0022  F6 C7 80                         test    bh,80H 
     127 0025  74 23                            jz      NEXTMEL                
					 ; Go back to start 
     128 0027  F6 C7 01                         test    bh,1                   
					 ; Switch ? 
     129 002A  75 F0                            jnz     SCANSRC2               
					 ; Yes 
     130 002C  E8 0223 R                        call    SOURCEPROC 
     131 002F  E8 0000 E                        call    RESTUDIR1 
     132 0032  BF 0000 E                        mov     di,OFFSET TRANGROUP:DES
					TFCB2 
     133 0035  B8 2900                          mov     ax,PARSE_FILE_DESCRIPTO
					R SHL 8 
     134 0038  CD 21                            INT     int_command 
     135 003A  BB 0001 E                        mov     bx,OFFSET TRANGROUP:SDI
					RBUF + 1 
     136 003D  BE 0001 E                        mov     si,OFFSET TRANGROUP:DES
					TFCB2 + 1 
     137 0040  8B 3E 0000 E                     mov     di,[SRCTAIL] 
     138 0044  E8 0000 E                        call    BUILDNAME 
     139 0047  E9 02E0 R                        jmp     MELDO 
     140                                 
     141                                 
     142 004A                           NEXTMEL: 
     143 004A  E8 0000 E                        call    CLOSEDEST 
     144 004D  33 C0                            xor     ax,ax 
     145 004F  A2 0000 E                        mov     [CFLAG],al 
     146 0052  A3 0000 E                        mov     [NXTADD],ax 
     147 0055  A2 0000 E                        mov     [DESTCLOSED],al 
     148 0058  8B 36 0000 E                     mov     si,[MELSTART] 
     149 005C  89 36 0000 E                     mov     [SRCPT],si 
     150 0060  E8 0000 E                        call    SEARCHNEXT 
     151 0063  74 03                            jz      SETNMELJ 
     152 0065  E9 01F5 R                        jmp     ENDCOPY2 
     153 0068                           SETNMELJ: 
     154 0068  E9 02C6 R                        jmp     SETNMEL 
     155                                 
     156 006B                           COPY: 
     157                                ; First order of buisness is to find ou
					t about the destination 
     158                                ASSUME  DS:TRANGROUP,ES:TRANGROUP 
     159 006B  33 C0                            xor     ax,ax 
     160 006D  A3 0000 E                        mov     [ALLSWITCH],AX         
					 ; no switches 
     161 0070  A2 0000 E                        mov     [ARGC],al              
					 ; no arguments 
     162 0073  A2 0000 E                        mov     [PLUS],al              
					 ; no concatination 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 08:29:59

COMMAND COPY routines.                                      Page     1-5
DEVICE TABLE AND SRH DEFINITION                             

     163 0076  A2 0000 E                        mov     [BINARY],al            
					 ; Binary not specifically specified 
     164 0079  A2 0000 E                        mov     [ASCII],al             
					 ; ASCII not specifically specified 
     165 007C  A3 0000 E                        mov     [FILECNT],ax           
					 ; No files yet 
     166 007F  A2 0000 E                        mov     [WRITTEN],al           
					 ; Nothing written yet 
     167 0082  A2 0000 E                        mov     [CONCAT],al            
					 ; No concatination 
     168 0085  A2 0000 E                        mov     [MELCOPY],al           
					 ; Not a Mel Hallerman copy 
     169 0088  A3 0000 E                        mov     word ptr [SCANBUF],ax  
					 ; Init buffer 
     170 008B  A3 0000 E                        mov     word ptr [DESTBUF],ax  
					 ; Init buffer 
     171 008E  A3 0000 E                        mov     word ptr [SRCBUF],ax   
					 ; Init buffer 
     172 0091  A3 0000 E                        mov     word ptr [SDIRBUF],ax  
					 ; Init buffer 
     173 0094  A3 0000 E                        mov     word ptr [DIRBUF],ax   
					 ; Init buffer 
     174 0097  A3 0000 E                        mov     word ptr [DESTFCB],ax  
					 ; Init buffer 
     175 009A  48                               dec     ax 
     176 009B  A2 0000 E                        mov     [FRSTSRCH],al          
					 ; First search call 
     177 009E  A2 0000 E                        mov     [FIRSTDEST],al         
					 ; First time 
     178 00A1  A2 0000 E                        mov     [DESTISDIR],al         
					 ; Don't know about dest 
     179 00A4  BE 0081                          mov     si,81H 
     180 00A7  B3 2B                            mov     bl,'+'                 
					 ; include '+' as a delimiter 
     181 00A9                           DESTSCAN: 
     182 00A9  33 ED                            xor     bp,bp                  
					 ; no switches 
     183 00AB  BF 0000 E                        mov     di,offset trangroup:SCA
					NBUF 
     184 00AE  E8 0000 E                        call    CPARSE 
     185 00B1  9C                               PUSHF                          
					 ; save flags 
     186 00B2  F6 C7 80                         test    bh,80H                 
					 ; A '+' argument? 
     187 00B5  74 05                            jz      NOPLUS                 
					 ; no 
     188 00B7  C6 06 0000 E 01                  mov     [PLUS],1               
					 ; yes 
     189 00BC                           NOPLUS: 
     190 00BC  9D                               POPF                           
					 ; get flags back 
     191 00BD  72 3D                            jc      CHECKDONE              
					 ; Hit CR? 
     192 00BF  F6 C7 01                         test    bh,1                   
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 08:29:59

COMMAND COPY routines.                                      Page     1-6
DEVICE TABLE AND SRH DEFINITION                             

					 ; Switch? 
     193 00C2  74 0A                            jz      TESTP2                 
					 ; no 
     194 00C4  09 2E 0000 E                     or      [DESTSWITCH],BP        
					 ; Yes, assume destination 
     195 00C8  09 2E 0000 E                     or      [ALLSWITCH],BP         
					 ; keep tabs on all switches 
     196 00CC  EB DB                            jmp     short DESTSCAN 
     197                                 
     198 00CE                           TESTP2: 
     199 00CE  F6 C7 80                         test    bh,80H                 
					 ; Plus? 
     200 00D1  75 04                            jnz     GOTPLUS                
					 ; Yes, not a separate arg 
     201 00D3  FE 06 0000 E                     inc     [ARGC]                 
					 ; found a real arg 
     202 00D7                           GOTPLUS: 
     203 00D7  56                               push    SI 
     204 00D8  A1 0000 E                        mov     ax,[STARTEL] 
     205 00DB  BE 0000 E                        mov     SI,offset trangroup:SCA
					NBUF ; Adjust to copy 
     206 00DE  2B C6                            sub     ax,SI 
     207 00E0  BF 0000 E                        mov     DI,offset trangroup:DES
					TBUF 
     208 00E3  03 C7                            add     ax,DI 
     209 00E5  A3 0000 E                        mov     [DESTTAIL],AX 
     210 00E8  88 0E 0000 E                     mov     [DESTSIZ],cl           
					 ; Save its size 
     211 00EC  41                               inc     cx                     
					 ; Include the NUL 
     212 00ED  F3/ A4                           rep     movsb                  
					 ; Save potential destination 
     213 00EF  88 3E 0000 E                     mov     [DESTINFO],bh          
					 ; Save info about it 
     214 00F3  C7 06 0000 E 0000                mov     [DESTSWITCH],0         
					 ; reset switches 
     215 00F9  5E                               pop     SI 
     216 00FA  EB AD                            jmp     short DESTSCAN         
					 ; keep going 
     217                                 
     218 00FC                           CHECKDONE: 
     219 00FC  A0 0000 E                        mov     al,[PLUS] 
     220 00FF  A2 0000 E                        mov     [CONCAT],al            
					 ; PLUS -> Concatination 
     221 0102  D0 E0                            shl     al,1 
     222 0104  D0 E0                            shl     al,1 
     223 0106  A2 0000 E                        mov     [INEXACT],al           
					 ; CONCAT -> inexact copy 
     224 0109  BA 0000 E                        mov     dx,offset trangroup:BAD
					ARGS 
     225 010C  A0 0000 E                        mov     al,[ARGC] 
     226 010F  0A C0                            or      al,al                  
					 ; Good number of args? 
     227 0111  74 04                            jz      CERROR4J               
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 08:29:59

COMMAND COPY routines.                                      Page     1-7
DEVICE TABLE AND SRH DEFINITION                             

					 ; no, not enough 
     228 0113  3C 02                            cmp     al,2 
     229 0115  76 03                            jbe     ACOUNTOK 
     230 0117                           CERROR4J: 
     231 0117  E9 0000 E                        jmp    CERROR                  
					 ; no, too many 
     232 011A                           ACOUNTOK: 
     233 011A  BD 0000 E                        mov     bp,offset trangroup:DES
					TVARS 
     234 011D  3C 01                            cmp     al,1 
     235 011F  75 20                            jnz     GOT2ARGS 
     236 0121  A0 0000 E                        mov     al,[CURDRV]            
					 ; Dest is default drive:*.* 
     237 0124  04 41                            add     al,'A' 
     238 0126  B4 3A                            mov     ah,':' 
     239 0128  C6 46 01 02                      mov     [bp.SIZ],2 
     240 012C  BF 0000 E                        mov     di,offset trangroup:DES
					TBUF 
     241 012F  AB                               stosw 
     242 0130  C7 06 0000 E 0000                mov     [DESTSWITCH],0         
					 ; no switches on dest 
     243 0136  C6 46 04 02                      mov     [bp.INFO],2            
					 ; Flag dest is ambig 
     244 013A  C6 46 00 00                      mov     [bp.ISDIR],0           
					 ; Know destination specs file 
     245 013E  E8 03FC R                        call    SETSTARS 
     246 0141                           GOT2ARGS: 
     247 0141  80 7E 01 02                      cmp     [bp.SIZ],2 
     248 0145  75 15                            jnz     NOTSHORTDEST 
     249 0147  80 3E 0001 E 3A                  cmp     [DESTBUF+1],':' 
     250 014C  75 0E                            jnz     NOTSHORTDEST           
					 ; Two char file name 
     251 014E  80 4E 04 02                      or      [bp.INFO],2            
					 ; Know dest is d: 
     252 0152  BF 0002 E                        mov     di,offset trangroup:DES
					TBUF + 2 
     253 0155  C6 46 00 00                      mov     [bp.ISDIR],0           
					 ; Know destination specs file 
     254 0159  E8 03FC R                        call    SETSTARS 
     255 015C                           NOTSHORTDEST: 
     256 015C  8B 7E 02                         mov     di,[bp.TTAIL] 
     257 015F  80 3D 00                         cmp     byte ptr [DI],0 
     258 0162  75 14                            jnz     CHKSWTCHES 
     259 0164  BA 0000 E                        mov     dx,offset trangroup:BAD
					CD 
     260 0167  80 7D FE 3A                      cmp     byte ptr [DI-2],':' 
     261 016B  75 AA                            jnz     CERROR4J               
					; Trailing '/' error 
     262 016D  C6 46 00 02                      mov     [bp.ISDIR],2           
					; Know destination is d:/ 
     263 0171  80 4E 04 06                      or      [bp.INFO],6 
     264 0175  E8 03FC R                        call    SETSTARS 
     265 0178                           CHKSWTCHES: 
     266 0178  BA 0000 E                        mov     dx,offset trangroup:BAD
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 08:29:59

COMMAND COPY routines.                                      Page     1-8
DEVICE TABLE AND SRH DEFINITION                             

					SWT 
     267 017B  A1 0000 E                        mov     ax,[ALLSWITCH] 
     268 017E  3D 8000                          cmp     ax,GOTSWITCH 
     269 0181  74 94                            jz      CERROR4J               
					 ; Switch specified which is not known 
     270                                 
     271                                ; Now know most of the information need
					ed about the destination 
     272                                 
     273 0183  A9 0010                          TEST    AX,VSWITCH             
					 ; Verify requested? 
     274 0186  74 14                            JZ      NOVERIF                
					 ; No 
     275 0188  B4 54                            MOV     AH,GET_VERIFY_ON_WRITE 
     276 018A  CD 21                            INT     int_command            
					 ; Get current setting 
     277 018C  1E                               PUSH    DS 
     278 018D  8E 1E 0000 E                     MOV     DS,[RESSEG] 
     279                                ASSUME  DS:RESGROUP 
     280 0191  32 E4                            XOR     AH,AH 
     281 0193  A3 0000 E                        MOV     [VERVAL],AX            
					 ; Save current setting 
     282 0196  1F                               POP     DS 
     283                                ASSUME  DS:TRANGROUP 
     284 0197  B8 2E01                          MOV     AX,(SET_VERIFY_ON_WRITE
					 SHL 8) OR 1 ; Set verify 
     285 019A  CD 21                            INT     int_command 
     286 019C                           NOVERIF: 
     287 019C  33 ED                            xor     bp,bp                  
					 ; no switches 
     288 019E  BE 0081                          mov     si,81H 
     289 01A1  B3 2B                            mov     bl,'+'                 
					 ; include '+' as a delimiter 
     290 01A3                           SCANFSRC: 
     291 01A3  BF 0000 E                        mov     di,offset trangroup:SCA
					NBUF 
     292 01A6  E8 0000 E                        call    CPARSE                 
					 ; Parse first source name 
     293 01A9  F6 C7 01                         test    bh,1                   
					 ; Switch? 
     294 01AC  75 F5                            jnz     SCANFSRC               
					 ; Yes, try again 
     295 01AE  09 2E 0000 E                     or      [DESTSWITCH],bp        
					 ; Include copy wide switches on DEST 
     296 01B2  F7 C5 0008                       test    bp,BSWITCH 
     297 01B6  75 0C                            jnz     NOSETCASC              
					 ; Binary explicit 
     298 01B8  80 3E 0000 E 00                  cmp     [CONCAT],0 
     299 01BD  74 05                            JZ      NOSETCASC              
					 ; Not Concat 
     300 01BF  C6 06 0000 E 04                  mov     [ASCII],ASWITCH        
					 ; Concat -> ASCII copy if no B switch 
     301 01C4                           NOSETCASC: 
     302 01C4  56                               push    SI 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 08:29:59

COMMAND COPY routines.                                      Page     1-9
DEVICE TABLE AND SRH DEFINITION                             

     303 01C5  A1 0000 E                        mov     ax,[STARTEL] 
     304 01C8  BE 0000 E                        mov     SI,offset trangroup:SCA
					NBUF ; Adjust to copy 
     305 01CB  2B C6                            sub     ax,SI 
     306 01CD  BF 0000 E                        mov     DI,offset trangroup:SRC
					BUF 
     307 01D0  03 C7                            add     ax,DI 
     308 01D2  A3 0000 E                        mov     [SRCTAIL],AX 
     309 01D5  88 0E 0000 E                     mov     [SRCSIZ],cl            
					 ; Save its size 
     310 01D9  41                               inc     cx                     
					 ; Include the NUL 
     311 01DA  F3/ A4                           rep     movsb                  
					 ; Save this source 
     312 01DC  88 3E 0000 E                     mov     [SRCINFO],bh           
					 ; Save info about it 
     313 01E0  5E                               pop     SI 
     314 01E1  8B C5                            mov     ax,bp                  
					 ; Switches so far 
     315 01E3  E8 0000 E                        call    SETASC                 
					 ; Set A,B switches accordingly 
     316 01E6  E8 0000 E                        call    SWITCH                 
					 ; Get any more switches on this arg 
     317 01E9  E8 0000 E                        call    SETASC                 
					 ; Set 
     318 01EC  E8 0252 R                        call    FRSTSRC 
     319 01EF  E9 0296 R                        jmp     FIRSTENT 
     320                                 
     321 01F2                           ENDCOPY: 
     322 01F2  E8 0000 E                        CALL    CLOSEDEST 
     323 01F5                           ENDCOPY2: 
     324 01F5  BA 0000 E                        MOV     DX,OFFSET TRANGROUP:COP
					IED_PRE 
     325 01F8  E8 0000 E                        CALL    PRINT 
     326 01FB  8B 36 0000 E                     MOV     SI,[FILECNT] 
     327 01FF  33 FF                            XOR     DI,DI 
     328 0201  E8 0000 E                        CALL    DISP32BITS 
     329 0204  BA 0000 E                        MOV     DX,OFFSET TRANGROUP:COP
					IED_POST 
     330 0207  E8 0000 E                        CALL    PRINT 
     331 020A  E9 0000 E                        JMP     TCOMMAND               
					 ; Stack could be messed up 
     332                                 
     333 020D                           SRCNONEXIST: 
     334 020D  80 3E 0000 E 00                  cmp     [CONCAT],0 
     335 0212  75 5B                            jnz     NEXTSRC                
					 ; If in concat mode, ignore error 
     336 0214  BA 0000 E                        mov     dx,offset trangroup:SRC
					BUF 
     337 0217  E8 0000 E                        call    zprint 
     338 021A  E8 0000 E                        CALL    ONESPC 
     339 021D  BA 0000 E                        mov     dx,offset trangroup:NOT
					FND 
     340 0220  E9 0000 E                        jmp     COPERR 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 08:29:59

COMMAND COPY routines.                                      Page     1-10
DEVICE TABLE AND SRH DEFINITION                             

     341                                 
     342 0223                           SOURCEPROC: 
     343 0223  56                               push    SI 
     344 0224  A1 0000 E                        mov     ax,[STARTEL] 
     345 0227  BE 0000 E                        mov     SI,offset trangroup:SCA
					NBUF ; Adjust to copy 
     346 022A  2B C6                            sub     ax,SI 
     347 022C  BF 0000 E                        mov     DI,offset trangroup:SRC
					BUF 
     348 022F  03 C7                            add     ax,DI 
     349 0231  A3 0000 E                        mov     [SRCTAIL],AX 
     350 0234  88 0E 0000 E                     mov     [SRCSIZ],cl            
					 ; Save its size 
     351 0238  41                               inc     cx                     
					 ; Include the NUL 
     352 0239  F3/ A4                           rep     movsb                  
					 ; Save this sorce 
     353 023B  88 3E 0000 E                     mov     [SRCINFO],bh           
					 ; Save info about it 
     354 023F  5E                               pop     SI 
     355 0240  8B C5                            mov     ax,bp                  
					 ; Switches so far 
     356 0242  E8 0000 E                        call    SETASC                 
					 ; Set A,B switches accordingly 
     357 0245  E8 0000 E                        call    SWITCH                 
					 ; Get any more switches on this arg 
     358 0248  E8 0000 E                        call    SETASC                 
					 ; Set 
     359 024B  80 3E 0000 E 00                  cmp     [CONCAT],0 
     360 0250  75 0B                            jnz     LEAVECFLAG             
					 ; Leave CFLAG if concatination 
     361 0252                           FRSTSRC: 
     362 0252  33 C0                            xor     ax,ax 
     363 0254  A2 0000 E                        mov     [CFLAG],al             
					 ; Flag destination not created 
     364 0257  A3 0000 E                        mov     [NXTADD],ax            
					 ; Zero out buffer 
     365 025A  A2 0000 E                        mov     [DESTCLOSED],al        
					 ; Not created -> not closed 
     366 025D                           LEAVECFLAG: 
     367 025D  89 36 0000 E                     mov     [SRCPT],SI             
					 ; remember where we are 
     368 0261  BF 0000 E                        mov     di,offset trangroup:USE
					RDIR1 
     369 0264  BD 0000 E                        mov     bp,offset trangroup:SRC
					VARS 
     370 0267  E8 032E R                        call    BUILDPATH              
					 ; Figure out everything about the sour
					ce 
     371 026A  8B 36 0000 E                     mov     si,[SRCTAIL]           
					 ; Create the search FCB 
     372                                        return 
     373 026E                         1 ??0000:
     374 026E  C3                     1  RET
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 08:29:59

COMMAND COPY routines.                                      Page     1-11
DEVICE TABLE AND SRH DEFINITION                             

     375                                 
     376 026F                           NEXTSRC: 
     377 026F  80 3E 0000 E 00                  cmp     [PLUS],0 
     378 0274  75 03                            jnz     MORECP 
     379 0276                           ENDCOPYJ2: 
     380 0276  E9 01F2 R                        jmp     ENDCOPY                
					 ; Done 
     381 0279                           MORECP: 
     382 0279  33 ED                            xor     bp,bp                  
					 ; no switches 
     383 027B  8B 36 0000 E                     mov     si,[SRCPT] 
     384 027F  B3 2B                            mov     bl,'+'                 
					 ; include '+' as a delimiter 
     385 0281                           SCANSRC: 
     386 0281  BF 0000 E                        mov     di,offset trangroup:SCA
					NBUF 
     387 0284  E8 0000 E                        call    CPARSE                 
					 ; Parse first source name 
     388 0287  72 ED                            JC      EndCopyJ2              
					 ; if error, then end (trailing + case)
					 
     389 0289  F6 C7 80                         test    bh,80H 
     390 028C  74 E8                            jz      ENDCOPYJ2              
					 ; If no '+' we're done 
     391 028E  F6 C7 01                         test    bh,1                   
					 ; Switch? 
     392 0291  75 EE                            jnz     SCANSRC                
					 ; Yes, try again 
     393 0293  E8 0223 R                        call    SOURCEPROC 
     394 0296                           FIRSTENT: 
     395 0296  BF 005C                          mov     di,FCB 
     396 0299  B8 2900                          mov     ax,PARSE_FILE_DESCRIPTO
					R SHL 8 
     397 029C  CD 21                            INT     int_command 
     398 029E  A1 0000 E                        mov     ax,word ptr [SRCBUF]   
					 ; Get drive 
     399 02A1  80 FC 3A                         cmp     ah,':' 
     400 02A4  74 02                            jz      DRVSPEC1 
     401 02A6  B0 40                            mov     al,'@' 
     402 02A8                           DRVSPEC1: 
     403 02A8  2C 40                            sub     al,'@' 
     404 02AA  A2 005C                          mov     ds:[FCB],al 
     405 02AD  B4 11                            mov     ah,DIR_SEARCH_FIRST 
     406 02AF  E8 0000 E                        call    SEARCH 
     407 02B2  9C                               pushf                          
					 ; Save result of search 
     408 02B3  E8 0000 E                        call    RESTUDIR1              
					 ; Restore users dir 
     409 02B6  9D                               popf 
     410 02B7  74 03                            jz      NEXTAMBIG0 
     411 02B9  E9 020D R                        jmp     SRCNONEXIST            
					 ; Failed 
     412 02BC                           NEXTAMBIG0: 
     413 02BC  32 C0                            xor     al,al 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 08:29:59

COMMAND COPY routines.                                      Page     1-12
DEVICE TABLE AND SRH DEFINITION                             

     414 02BE  86 06 0000 E                     xchg    al,[FRSTSRCH] 
     415 02C2  0A C0                            or      al,al 
     416 02C4  74 0B                            jz      NEXTAMBIG 
     417 02C6                           SETNMEL: 
     418 02C6  B9 000C                          mov     cx,12 
     419 02C9  BF 0000 E                        mov     di,OFFSET TRANGROUP:SDI
					RBUF 
     420 02CC  BE 0000 E                        mov     si,OFFSET TRANGROUP:DIR
					BUF 
     421 02CF  F3/ A4                           rep     movsb                  
					 ; Save very first source name 
     422 02D1                           NEXTAMBIG: 
     423 02D1  32 C0                            xor     al,al 
     424 02D3  A2 0000 E                        mov     [NOWRITE],al           
					 ; Turn off NOWRITE 
     425 02D6  8B 3E 0000 E                     mov     di,[SRCTAIL] 
     426 02DA  BE 0001 E                        mov     si,offset trangroup:DIR
					BUF + 1 
     427 02DD  E8 0000 E                        call    FCB_TO_ASCZ            
					 ; SRCBUF has complete name 
     428 02E0                           MELDO: 
     429 02E0  80 3E 0000 E 00                  cmp     [CONCAT],0 
     430 02E5  75 07                            jnz     SHOWCPNAM              
					 ; Show name if concat 
     431 02E7  F6 06 0000 E 02                  test    [SRCINFO],2            
					 ; Show name if multi 
     432 02EC  74 09                            jz      DOREAD 
     433 02EE                           SHOWCPNAM: 
     434 02EE  BA 0000 E                        mov     dx,offset trangroup:SRC
					BUF 
     435 02F1  E8 0000 E                        call    ZPRINT 
     436 02F4  E8 0000 E                        call    CRLF2 
     437 02F7                           DOREAD: 
     438 02F7  E8 0000 E                        call    DOCOPY 
     439 02FA  80 3E 0000 E 00                  cmp     [CONCAT],0 
     440 02FF  75 0A                            jnz     NODCLOSE               
					 ; If concat, do not close 
     441 0301  E8 0000 E                        call    CLOSEDEST              
					 ; else close current destination 
     442 0304  72 05                            jc      NODCLOSE               
					 ; Concat flag got set, close didn't re
					ally happen 
     443 0306  C6 06 0000 E 00                  mov     [CFLAG],0              
					 ; Flag destination not created 
     444 030B                           NODCLOSE: 
     445 030B  80 3E 0000 E 00                  cmp     [CONCAT],0             
					 ; Check CONCAT again 
     446 0310  74 0D                            jz      NOFLUSH 
     447 0312  E8 0000 E                        CALL    FLSHFIL                
					 ; Flush output between source files on
					 CONCAT 
     448                                                                       
					 ;  so LOSTERR stuff works correctly 
     449 0315  F6 06 0000 E FF                  TEST    [MELCOPY],0FFH 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 08:29:59

COMMAND COPY routines.                                      Page     1-13
DEVICE TABLE AND SRH DEFINITION                             

     450 031A  74 03                            jz      NOFLUSH 
     451 031C  E9 0000 R                        jmp     DOMELCOPY 
     452                                 
     453 031F                           NOFLUSH: 
     454 031F  E8 0000 E                        call    SEARCHNEXT             
					 ; Try next match 
     455 0322  75 07                            jnz     NEXTSRCJ               
					 ; Finished with this source spec 
     456 0324  C6 06 0000 E 00                  mov     [DESTCLOSED],0         
					 ; Not created or concat -> not closed 
     457 0329  EB A6                            jmp     NEXTAMBIG              
					 ; Do next ambig 
     458                                 
     459 032B                           NEXTSRCJ: 
     460 032B  E9 026F R                        jmp   NEXTSRC 
     461                                 
     462                                 
     463                                 
     464 032E                           BUILDPATH: 
     465 032E  F6 46 04 02                      test    [BP.INFO],2 
     466 0332  75 22                            jnz     NOTPFILE               
					 ; If ambig don't bother with open 
     467 0334  8B D5                            mov     dx,bp 
     468 0336  83 C2 05                         add     dx,BUF                 
					 ; Set DX to spec 
     469 0339  B8 3D00                          mov     ax,OPEN SHL 8 
     470 033C  CD 21                            INT     int_command 
     471 033E  72 16                            jc      NOTPFILE 
     472 0340  8B D8                            mov     bx,ax                  
					 ; Is pure file 
     473 0342  B8 4400                          mov     ax,IOCTL SHL 8 
     474 0345  CD 21                            INT     int_command 
     475 0347  B4 3E                            mov     ah,CLOSE 
     476 0349  CD 21                            INT     int_command 
     477 034B  F6 C2 80                         test    dl,devid_ISDEV 
     478 034E  75 41                            jnz     ISADEV                 
					 ; If device, done 
     479 0350  F6 46 04 04                      test    [BP.INFO],4 
     480 0354  74 3B                            jz      ISSIMPFILE             
					 ; If no path seps, done 
     481 0356                           NOTPFILE: 
     482 0356  8B 56 05                         mov     dx,word ptr [BP.BUF] 
     483 0359  80 FE 3A                         cmp     dh,':' 
     484 035C  74 02                            jz      DRVSPEC5 
     485 035E  B2 40                            mov     dl,'@' 
     486 0360                           DRVSPEC5: 
     487 0360  80 EA 40                         sub     dl,'@'                 
					 ; A = 1 
     488 0363  E8 0000 E                        call    SAVUDIR1 
     489 0366  8B D5                            mov     dx,bp 
     490 0368  83 C2 05                         add     dx,BUF                 
					 ; Set DX for upcomming CHDIRs 
     491 036B  8A 7E 04                         mov     bh,[BP.INFO] 
     492 036E  80 E7 06                         and     bh,6 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 08:29:59

COMMAND COPY routines.                                      Page     1-14
DEVICE TABLE AND SRH DEFINITION                             

     493 0371  80 FF 06                         cmp     bh,6                   
					 ; Ambig and path ? 
     494 0374  75 16                            jnz     CHECKAMB               
					 ; jmp if no 
     495 0376  8B 76 02                         mov     si,[BP.TTAIL] 
     496 0379  80 7C FE 3A                      cmp     byte ptr [si-2],':' 
     497 037D  75 06                            jnz     KNOWNOTSPEC 
     498 037F  C6 46 00 02                      mov     [BP.ISDIR],2           
					 ; Know is d:/file 
     499 0383  EB 05                            jmp     short DOPCDJ 
     500                                 
     501 0385                           KNOWNOTSPEC: 
     502 0385  C6 46 00 01                      mov     [BP.ISDIR],1           
					 ; Know is path/file 
     503 0389  4E                               dec     si                     
					 ; Point to the / 
     504 038A                           DOPCDJ: 
     505 038A  EB 5E                            jmp     short DOPCD 
     506                                 
     507 038C                           CHECKAMB: 
     508 038C  80 FF 02                         cmp     bh,2 
     509 038F  75 05                            jnz     CHECKCD 
     510 0391                           ISSIMPFILE: 
     511 0391                           ISADEV: 
     512 0391  C6 46 00 00                      mov     [BP.ISDIR],0           
					 ; Know is file since ambig but no path
					 
     513                                        return 
     514 0395                         1 ??0001:
     515 0395  C3                     1  RET
     516                                 
     517 0396                           CHECKCD: 
     518 0396  E8 0000 E                        call    SETREST1 
     519 0399  B4 3B                            mov     ah,CHDIR 
     520 039B  CD 21                            INT     int_command 
     521 039D  72 23                            jc      NOTPDIR 
     522 039F  8B FA                            mov     di,dx 
     523 03A1  33 C0                            xor     ax,ax 
     524 03A3  8B C8                            mov     cx,ax 
     525 03A5  49                               dec     cx 
     526 03A6  F2/ AE                           repne   scasb 
     527 03A8  4F                               dec     di 
     528 03A9  A0 0000 E                        mov     al,[DIRCHAR] 
     529 03AC  C6 46 00 02                      mov     [bp.ISDIR],2           
					 ; assume d:/file 
     530 03B0  3A 45 FF                         cmp     al,[di-1] 
     531 03B3  74 05                            jz      GOTSRCSLSH 
     532 03B5  AA                               stosb 
     533 03B6  C6 46 00 01                      mov     [bp.ISDIR],1           
					 ; know path/file 
     534 03BA                           GOTSRCSLSH: 
     535 03BA  80 4E 04 06                      or      [bp.INFO],6 
     536 03BE  E8 03FC R                        call    SETSTARS 
     537                                        return 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 08:29:59

COMMAND COPY routines.                                      Page     1-15
DEVICE TABLE AND SRH DEFINITION                             

     538 03C1                         1 ??0002:
     539 03C1  C3                     1  RET
     540                                 
     541                                 
     542 03C2                           NOTPDIR: 
     543 03C2  C6 46 00 00                      mov     [bp.ISDIR],0           
					 ; assume pure file 
     544 03C6  8A 7E 04                         mov     bh,[bp.INFO] 
     545 03C9  F6 C7 04                         test    bh,4 
     546                                        retz                           
					 ; Know pure file, no path seps 
     547 03CC  74 F3                  2  ??0003: jz ret_l
     548 03CE  C6 46 00 02                      mov     [bp.ISDIR],2           
					 ; assume d:/file 
     549 03D2  8B 76 02                         mov     si,[bp.TTAIL] 
     550 03D5  80 3C 00                         cmp     byte ptr [si],0 
     551 03D8  74 1F                            jz      BADCDERRJ2             
					 ; Trailing '/' 
     552 03DA  80 3C 2E                         cmp     byte ptr [si],'.' 
     553 03DD  74 1A                            jz      BADCDERRJ2             
					 ; If . or .. pure cd should have worke
					d 
     554 03DF  80 7C FE 3A                      cmp     byte ptr [si-2],':' 
     555 03E3  74 05                            jz      DOPCD                  
					 ; Know d:/file 
     556 03E5  C6 46 00 01                      mov     [bp.ISDIR],1           
					 ; Know path/file 
     557 03E9  4E                               dec     si                     
					 ; Point at last '/' 
     558 03EA                           DOPCD: 
     559 03EA  32 DB                            xor     bl,bl 
     560 03EC  86 1C                            xchg    bl,[SI]                
					 ; Stick in a NUL 
     561 03EE  E8 0000 E                        call    SETREST1 
     562 03F1  B4 3B                            mov     ah,CHDIR 
     563 03F3  CD 21                            INT     int_command 
     564 03F5  86 1C                            xchg    bl,[SI] 
     565                                        retnc 
     566 03F7  73 C8                  2  ??0005: jnc ret_l
     567 03F9                           BADCDERRJ2: 
     568 03F9  E9 0000 E                        JMP     BADCDERR 
     569                                 
     570 03FC                           SETSTARS: 
     571 03FC  89 7E 02                         mov     [bp.TTAIL],DI 
     572 03FF  80 46 01 0C                      add     [bp.SIZ],12 
     573 0403  B8 2E3F                          mov     ax,('.' SHL 8) OR '?' 
     574 0406  B9 0008                          mov     cx,8 
     575 0409  F3/ AA                           rep     stosb 
     576 040B  86 C4                            xchg    al,ah 
     577 040D  AA                               stosb 
     578 040E  86 C4                            xchg    al,ah 
     579 0410  B1 03                            mov     cl,3 
     580 0412  F3/ AA                           rep     stosb 
     581 0414  32 C0                            xor     al,al 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 08:29:59

COMMAND COPY routines.                                      Page     1-16
DEVICE TABLE AND SRH DEFINITION                             

     582 0416  AA                               stosb 
     583                                        return 
     584 0417                         1 ??0007:
     585 0417  C3                     1  RET
     586                                 
     587                                 
     588 0418                           COMPNAME: 
     589 0418  51                               PUSH    CX 
     590 0419  50                               PUSH    AX 
     591 041A  BE 0000 E                        MOV     si,offset trangroup:SRC
					BUF 
     592 041D  BF 0000 E                        MOV     di,offset trangroup:DES
					TBUF 
     593 0420  8A 0E 0000 E                     MOV     CL,[CURDRV] 
     594 0424  8A E9                            MOV     CH,CL 
     595 0426  80 7C 01 3A                      CMP     BYTE PTR [SI+1],':' 
     596 042A  75 05                            JNZ     NOSRCDRV 
     597 042C  AD                               LODSW 
     598 042D  2C 41                            SUB     AL,'A' 
     599 042F  8A C8                            MOV     CL,AL 
     600 0431                           NOSRCDRV: 
     601 0431  80 7D 01 3A                      CMP     BYTE PTR [DI+1],':' 
     602 0435  75 08                            JNZ     NODSTDRV 
     603 0437  8A 05                            MOV     AL,[DI] 
     604 0439  47                               INC     DI 
     605 043A  47                               INC     DI 
     606 043B  2C 41                            SUB     AL,'A' 
     607 043D  8A E8                            MOV     CH,AL 
     608 043F                           NODSTDRV: 
     609 043F  3A E9                            CMP     CH,CL 
     610 0441  75 20                            jnz     RET81P 
     611 0443  E8 0000 E                        call    STRCOMP 
     612 0446  74 1B                            jz      RET81P 
     613 0448  8B 44 FF                         mov     ax,[si-1] 
     614 044B  8B 4D FF                         mov     cx,[di-1] 
     615 044E  50                               push    ax 
     616 044F  22 C1                            and     al,cl 
     617 0451  58                               pop     ax 
     618 0452  75 0F                            jnz     RET81P                 
					 ; Niether of the mismatch chars was a 
					NUL 
     619                                ; Know one of the mismatch chars is a N
					UL 
     620                                ; Check for ".NUL" compared with NUL 
     621 0454  3C 2E                            cmp     al,'.' 
     622 0456  75 04                            jnz     CHECKCL 
     623 0458  0A E4                            or      ah,ah 
     624 045A  EB 07                            jmp     short RET81P           
					 ; If NUL return match, else no match 
     625 045C                           CHECKCL: 
     626 045C  80 F9 2E                         cmp     cl,'.' 
     627 045F  75 02                            jnz     RET81P                 
					 ; Mismatch 
     628 0461  0A ED                            or      ch,ch                  
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 08:29:59

COMMAND COPY routines.                                      Page     1-17
DEVICE TABLE AND SRH DEFINITION                             

					 ; If NUL return match, else no match 
     629 0463                           RET81P: 
     630 0463  58                               POP     AX 
     631 0464  59                               POP     CX 
     632                                        return 
     633 0465                         1 ??0008:
     634 0465  C3                     1  RET
     635                                 
     636 0466                           TRANCODE        ENDS 
     637                                 
     638                                        END 

Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 08:29:59

COMMAND COPY routines.                                      Symbols-1
                                                             

Macros:

		N a m e			Lines

BREAK  . . . . . . . . . . . . .  	   2
CONDRET  . . . . . . . . . . . .  	  19
CONTEXT  . . . . . . . . . . . .  	   3
DO_EXT . . . . . . . . . . . . .  	   0
ENTRY  . . . . . . . . . . . . .  	   2
ERROR  . . . . . . . . . . . . .  	   4
INVOKE . . . . . . . . . . . . .  	   8
I_AM . . . . . . . . . . . . . .  	  14
I_NEED . . . . . . . . . . . . .  	  11
JUMP . . . . . . . . . . . . . .  	  17
LONG_ADDR  . . . . . . . . . . .  	   7
MAKELAB  . . . . . . . . . . . .  	   4
PROCEDURE  . . . . . . . . . . .  	   2
RETC . . . . . . . . . . . . . .  	   1
RETNC  . . . . . . . . . . . . .  	   1
RETNZ  . . . . . . . . . . . . .  	   1
RETURN . . . . . . . . . . . . .  	   5
RETZ . . . . . . . . . . . . . .  	   1
SHORT_ADDR . . . . . . . . . . .  	  12
TRANSFER . . . . . . . . . . . .  	   8

Structures and Records:

                N a m e                 Width   # fields
                                        Shift   Width   Mask    Initial

ARENA  . . . . . . . . . . . . .  	0005	0003
  ARENA_SIGNATURE  . . . . . . .  	0000
  ARENA_OWNER  . . . . . . . . .  	0001
  ARENA_SIZE . . . . . . . . . .  	0003
BPBLOCK  . . . . . . . . . . . .  	000D	0008
  BPSECSZ  . . . . . . . . . . .  	0000
  BPCLUS . . . . . . . . . . . .  	0002
  BPRES  . . . . . . . . . . . .  	0003
  BPFTCNT  . . . . . . . . . . .  	0005
  BPDRCNT  . . . . . . . . . . .  	0006
  BPSCCNT  . . . . . . . . . . .  	0008
  BPMEDIA  . . . . . . . . . . .  	000A
  BPFTSEC  . . . . . . . . . . .  	000B
BUFFINFO . . . . . . . . . . . .  	0010	0009
  NEXTBUF  . . . . . . . . . . .  	0000
  BUFDRV . . . . . . . . . . . .  	0004
  BUFDIRTY . . . . . . . . . . .  	0005
  BUFPRI . . . . . . . . . . . .  	0006
  VISIT  . . . . . . . . . . . .  	0007
  BUFSECNO . . . . . . . . . . .  	0008
  BUFWRTCNT  . . . . . . . . . .  	000A
  BUFWRTINC  . . . . . . . . . .  	000B
  BUFDRVDP . . . . . . . . . . .  	000C
DIR_ENTRY  . . . . . . . . . . .  	0020	0008
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 08:29:59

COMMAND COPY routines.                                      Symbols-2
                                                             

  DIR_NAME . . . . . . . . . . .  	0000
  DIR_ATTR . . . . . . . . . . .  	000B
  DIR_PAD  . . . . . . . . . . .  	000C
  DIR_TIME . . . . . . . . . . .  	0016
  DIR_DATE . . . . . . . . . . .  	0018
  DIR_FIRST  . . . . . . . . . .  	001A
  DIR_SIZE_L . . . . . . . . . .  	001C
  DIR_SIZE_H . . . . . . . . . .  	001E
DPB  . . . . . . . . . . . . . .  	005E	0012
  DPB_DRIVE  . . . . . . . . . .  	0000
  DPB_UNIT . . . . . . . . . . .  	0001
  DPB_SECTOR_SIZE  . . . . . . .  	0002
  DPB_CLUSTER_MASK . . . . . . .  	0004
  DPB_CLUSTER_SHIFT  . . . . . .  	0005
  DPB_FIRST_FAT  . . . . . . . .  	0006
  DPB_FAT_COUNT  . . . . . . . .  	0008
  DPB_ROOT_ENTRIES . . . . . . .  	0009
  DPB_FIRST_SECTOR . . . . . . .  	000B
  DPB_MAX_CLUSTER  . . . . . . .  	000D
  DPB_FAT_SIZE . . . . . . . . .  	000F
  DPB_DIR_SECTOR . . . . . . . .  	0010
  DPB_DRIVER_ADDR  . . . . . . .  	0012
  DPB_MEDIA  . . . . . . . . . .  	0016
  DPB_FIRST_ACCESS . . . . . . .  	0017
  DPB_NEXT_DPB . . . . . . . . .  	0018
  DPB_CURRENT_DIR  . . . . . . .  	001C
  DPB_DIR_TEXT . . . . . . . . .  	001E
EXEC0  . . . . . . . . . . . . .  	000E	0004
  EXEC0_ENVIRON  . . . . . . . .  	0000
  EXEC0_COM_LINE . . . . . . . .  	0002
  EXEC0_5C_FCB . . . . . . . . .  	0006
  EXEC0_6C_FCB . . . . . . . . .  	000A
EXEC1  . . . . . . . . . . . . .  	0016	0008
  EXEC1_ENVIRON  . . . . . . . .  	0000
  EXEC1_COM_LINE . . . . . . . .  	0002
  EXEC1_5C_FCB . . . . . . . . .  	0006
  EXEC1_6C_FCB . . . . . . . . .  	000A
  EXEC1_SP . . . . . . . . . . .  	000E
  EXEC1_SS . . . . . . . . . . .  	0010
  EXEC1_IP . . . . . . . . . . .  	0012
  EXEC1_CS . . . . . . . . . . .  	0014
EXEC3  . . . . . . . . . . . . .  	0004	0002
  EXEC3_LOAD_ADDR  . . . . . . .  	0000
  EXEC3_RELOC_FAC  . . . . . . .  	0002
EXE_FILE . . . . . . . . . . . .  	0020	000F
  EXE_SIGNATURE  . . . . . . . .  	0000
  EXE_LEN_MOD_512  . . . . . . .  	0002
  EXE_PAGES  . . . . . . . . . .  	0004
  EXE_RLE_COUNT  . . . . . . . .  	0006
  EXE_PAR_DIR  . . . . . . . . .  	0008
  EXE_MIN_BSS  . . . . . . . . .  	000A
  EXE_MAX_BSS  . . . . . . . . .  	000C
  EXE_SS . . . . . . . . . . . .  	000E
  EXE_SP . . . . . . . . . . . .  	0010
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 08:29:59

COMMAND COPY routines.                                      Symbols-3
                                                             

  EXE_CHKSUM . . . . . . . . . .  	0012
  EXE_IP . . . . . . . . . . . .  	0014
  EXE_CS . . . . . . . . . . . .  	0016
  EXE_RLE_TABLE  . . . . . . . .  	0018
  EXE_IOV  . . . . . . . . . . .  	001A
  EXE_SYM_TAB  . . . . . . . . .  	001C
FIND_BUF . . . . . . . . . . . .  	002B	000C
  FIND_BUF_SATTR . . . . . . . .  	0000
  FIND_BUF_DRIVE . . . . . . . .  	0001
  FIND_BUF_NAME  . . . . . . . .  	0002
  FIND_BUF_LASTENT . . . . . . .  	000D
  FIND_BUF_THISDPB . . . . . . .  	000F
  FIND_BUF_DIRSTART  . . . . . .  	0013
  FIND_BUF_ATTR  . . . . . . . .  	0015
  FIND_BUF_TIME  . . . . . . . .  	0016
  FIND_BUF_DATE  . . . . . . . .  	0018
  FIND_BUF_SIZE_L  . . . . . . .  	001A
  FIND_BUF_SIZE_H  . . . . . . .  	001C
  FIND_BUF_PNAME . . . . . . . .  	001E
INTERNAT_BLOCK . . . . . . . . .  	0018	0015
  DATE_TIM_FORMAT  . . . . . . .  	0000
  CURRENCY_SYM . . . . . . . . .  	0002
  THOUS_SEP  . . . . . . . . . .  	0007
  DECIMAL_SEP  . . . . . . . . .  	0009
  DATE_SEP . . . . . . . . . . .  	000B
  TIME_SEP . . . . . . . . . . .  	000D
  BIT_FEILD  . . . . . . . . . .  	000F
  CURRENCY_CENTS . . . . . . . .  	0010
  TIME_24  . . . . . . . . . . .  	0011
  MAP_CALL . . . . . . . . . . .  	0012
  DATA_SEP . . . . . . . . . . .  	0016
PROCESS_DATA_BLOCK . . . . . . .  	005B	000E
  PDB_EXIT_CALL  . . . . . . . .  	0000
  PDB_BLOCK_LEN  . . . . . . . .  	0002
  PDB_CPM_CALL . . . . . . . . .  	0005
  PDB_EXIT . . . . . . . . . . .  	000A
  PDB_CTRL_C . . . . . . . . . .  	000E
  PDB_FATAL_ABORT  . . . . . . .  	0012
  PDB_PARENT_PID . . . . . . . .  	0016
  PDB_JFN_TABLE  . . . . . . . .  	0018
  PDB_ENVIRON  . . . . . . . . .  	002C
  PDB_USER_STACK . . . . . . . .  	002E
  PDB_PAD1 . . . . . . . . . . .  	0032
  PDB_CALL_SYSTEM  . . . . . . .  	0050
  PDB_PAD2 . . . . . . . . . . .  	0055
SFT  . . . . . . . . . . . . . .  	0008	0003
  SFT_LINK . . . . . . . . . . .  	0000
  SFT_COUNT  . . . . . . . . . .  	0004
  SFT_TABLE  . . . . . . . . . .  	0006
SF_ENTRY . . . . . . . . . . . .  	0028	0004
  SF_REF_COUNT . . . . . . . . .  	0000
  SF_MODE  . . . . . . . . . . .  	0001
  SF_ATTR  . . . . . . . . . . .  	0002
  SF_FCB . . . . . . . . . . . .  	0003
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 08:29:59

COMMAND COPY routines.                                      Symbols-4
                                                             

SRHEAD . . . . . . . . . . . . .  	000D	0005
  REQLEN . . . . . . . . . . . .  	0000
  REQUNIT  . . . . . . . . . . .  	0001
  REQFUNC  . . . . . . . . . . .  	0002
  REQSTAT  . . . . . . . . . . .  	0003
SYMBOL_ENTRY . . . . . . . . . .  	0106	0004
  SYM_VALUE  . . . . . . . . . .  	0000
  SYM_TYPE . . . . . . . . . . .  	0004
  SYM_LEN  . . . . . . . . . . .  	0006
  SYM_NAME . . . . . . . . . . .  	0007
SYSDEV . . . . . . . . . . . . .  	0012	0005
  SDEVNEXT . . . . . . . . . . .  	0000
  SDEVATT  . . . . . . . . . . .  	0004
  SDEVSTRAT  . . . . . . . . . .  	0006
  SDEVINT  . . . . . . . . . . .  	0008
  SDEVNAME . . . . . . . . . . .  	000A
SYS_FCB  . . . . . . . . . . . .  	0025	0010
  FCB_DRIVE  . . . . . . . . . .  	0000
  FCB_NAME . . . . . . . . . . .  	0001
  FCB_EXT  . . . . . . . . . . .  	0009
  FCB_EXTENT . . . . . . . . . .  	000C
  FCB_RECSIZ . . . . . . . . . .  	000E
  FCB_FILSIZ . . . . . . . . . .  	0010
  FCB_DRVBP  . . . . . . . . . .  	0012
  FCB_FDATE  . . . . . . . . . .  	0014
  FCB_FTIME  . . . . . . . . . .  	0016
  FCB_DEVID  . . . . . . . . . .  	0018
  FCB_FIRCLUS  . . . . . . . . .  	0019
  FCB_CLUSPOS  . . . . . . . . .  	001B
  FCB_LSTCLUS  . . . . . . . . .  	001D
  FCB_NR . . . . . . . . . . . .  	0020
  FCB_RR . . . . . . . . . . . .  	0021
USER_ENVIRON . . . . . . . . . .  	0018	000C
  USER_AX  . . . . . . . . . . .  	0000
  USER_BX  . . . . . . . . . . .  	0002
  USER_CX  . . . . . . . . . . .  	0004
  USER_DX  . . . . . . . . . . .  	0006
  USER_SI  . . . . . . . . . . .  	0008
  USER_DI  . . . . . . . . . . .  	000A
  USER_BP  . . . . . . . . . . .  	000C
  USER_DS  . . . . . . . . . . .  	000E
  USER_ES  . . . . . . . . . . .  	0010
  USER_IP  . . . . . . . . . . .  	0012
  USER_CS  . . . . . . . . . . .  	0014
  USER_F . . . . . . . . . . . .  	0016
VARSTRUC . . . . . . . . . . . .  	0059	0005
  ISDIR  . . . . . . . . . . . .  	0000
  SIZ  . . . . . . . . . . . . .  	0001
  TTAIL  . . . . . . . . . . . .  	0002
  INFO . . . . . . . . . . . . .  	0004
  BUF  . . . . . . . . . . . . .  	0005
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 08:29:59

COMMAND COPY routines.                                      Symbols-5
                                                             

Segments and Groups:

                N a m e         	Size	Align	Combine Class

EGROUP . . . . . . . . . . . . .  	GROUP
  ZEXEC_CODE . . . . . . . . . .  	0000	PARA	PUBLIC	
  ZEXEC_DATA . . . . . . . . . .  	0000	PARA	PUBLIC	
RESGROUP . . . . . . . . . . . .  	GROUP
  CODERES  . . . . . . . . . . .  	0000	PARA	PUBLIC	
  DATARES  . . . . . . . . . . .  	0000	PARA	PUBLIC	
  ENVIRONMENT  . . . . . . . . .  	0000	PARA	PUBLIC	
  INIT . . . . . . . . . . . . .  	0000	PARA	PUBLIC	
  TAIL . . . . . . . . . . . . .  	0000	PARA	PUBLIC	
TRANGROUP  . . . . . . . . . . .  	GROUP
  TRANCODE . . . . . . . . . . .  	0466	BYTE	PUBLIC	
  TRANDATA . . . . . . . . . . .  	0000	PARA	PUBLIC	
  TRANSPACE  . . . . . . . . . .  	0000	PARA	PUBLIC	
  TRANTAIL . . . . . . . . . . .  	0000	PARA	PUBLIC	

Symbols:            

                N a m e         	Type	Value	Attr         

ABORT  . . . . . . . . . . . . .  	Number	0000	
ACOUNTOK . . . . . . . . . . . .  	L NEAR	011A	TRANCODE
ADDR_INT_ABORT . . . . . . . . .  	Number	0080	
ADDR_INT_COMMAND . . . . . . . .  	Number	0084	
ADDR_INT_CTRL_C  . . . . . . . .  	Number	008C	
ADDR_INT_DISK_READ . . . . . . .  	Number	0094	
ADDR_INT_DISK_WRITE  . . . . . .  	Number	0098	
ADDR_INT_FASTCON . . . . . . . .  	Number	00A4	
ADDR_INT_FATAL_ABORT . . . . . .  	Number	0090	
ADDR_INT_KEEP_PROCESS  . . . . .  	Number	009C	
ADDR_INT_SPOOLER . . . . . . . .  	Number	00A0	
ADDR_INT_TERMINATE . . . . . . .  	Number	0088	
ALLOC  . . . . . . . . . . . . .  	Number	0048	
ALLOCOPER  . . . . . . . . . . .  	Number	0058	
ALLOC_ARENA_TRASHED  . . . . . .  	Alias	 ERROR_ARENA_TRASHED		
ALLOC_NOT_ENOUGH_MEMORY  . . . .  	Alias	 ERROR_NOT_ENOUGH_MEMORY		
ALLSWITCH  . . . . . . . . . . .  	V WORD 	0000	TRANSPACE	External
ALTVECT  . . . . . . . . . . . .  	Number	0000	
ARENA_OWNER_SYSTEM . . . . . . .  	Number	0000	
ARENA_SIGNATURE_END  . . . . . .  	Number	005A	
ARENA_SIGNATURE_NORMAL . . . . .  	Number	004D	
ARGC . . . . . . . . . . . . . .  	V BYTE 	0000	TRANSPACE	External
ASCII  . . . . . . . . . . . . .  	V BYTE 	0000	TRANSPACE	External
ASSIGNOPER . . . . . . . . . . .  	Number	005F	
ASWITCH  . . . . . . . . . . . .  	Number	0004	
ATTR_ALL . . . . . . . . . . . .  	Number	0016	
ATTR_ARCHIVE . . . . . . . . . .  	Number	0020	
ATTR_CHANGEABLE  . . . . . . . .  	Number	0027	
ATTR_DIRECTORY . . . . . . . . .  	Number	0010	
ATTR_HIDDEN  . . . . . . . . . .  	Number	0002	
ATTR_IGNORE  . . . . . . . . . .  	Number	0021	
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 08:29:59

COMMAND COPY routines.                                      Symbols-6
                                                             

ATTR_READ_ONLY . . . . . . . . .  	Number	0001	
ATTR_SYSTEM  . . . . . . . . . .  	Number	0004	
ATTR_VOLUME_ID . . . . . . . . .  	Number	0008	

BADARGS  . . . . . . . . . . . .  	V BYTE 	0000	TRANDATA	External
BADCD  . . . . . . . . . . . . .  	V BYTE 	0000	TRANDATA	External
BADCDERR . . . . . . . . . . . .  	L NEAR	0000	TRANCODE	External
BADCDERRJ2 . . . . . . . . . . .  	L NEAR	03F9	TRANCODE
BADSWT . . . . . . . . . . . . .  	V BYTE 	0000	TRANDATA	External
BINARY . . . . . . . . . . . . .  	V BYTE 	0000	TRANSPACE	External
BSWITCH  . . . . . . . . . . . .  	Number	0008	
BUFINSIZ . . . . . . . . . . . .  	Number	0010	
BUILDNAME  . . . . . . . . . . .  	L NEAR	0000	TRANCODE	External
BUILDPATH  . . . . . . . . . . .  	L NEAR	032E	TRANCODE	Global
BYTCNT . . . . . . . . . . . . .  	V WORD 	0000	TRANSPACE	External

CERROR . . . . . . . . . . . . .  	L NEAR	0000	TRANCODE	External
CERROR4J . . . . . . . . . . . .  	L NEAR	0117	TRANCODE
CFLAG  . . . . . . . . . . . . .  	V BYTE 	0000	TRANSPACE	External
CHAR_OPER  . . . . . . . . . . .  	Number	0037	
CHDIR  . . . . . . . . . . . . .  	Number	003B	
CHDIR_PATH_NOT_FOUND . . . . . .  	Alias	 ERROR_PATH_NOT_FOUND		
CHECKAMB . . . . . . . . . . . .  	L NEAR	038C	TRANCODE
CHECKCD  . . . . . . . . . . . .  	L NEAR	0396	TRANCODE
CHECKCL  . . . . . . . . . . . .  	L NEAR	045C	TRANCODE
CHECKDONE  . . . . . . . . . . .  	L NEAR	00FC	TRANCODE
CHKSWTCHES . . . . . . . . . . .  	L NEAR	0178	TRANCODE
CHMOD  . . . . . . . . . . . . .  	Number	0043	
CHMOD_ACCESS_DENIED  . . . . . .  	Alias	 ERROR_ACCESS_DENIED		
CHMOD_INVALID_FUNCTION . . . . .  	Alias	 ERROR_INVALID_FUNCTION		
CHMOD_PATH_NOT_FOUND . . . . . .  	Alias	 ERROR_PATH_NOT_FOUND		
CLOSE  . . . . . . . . . . . . .  	Number	003E	
CLOSEDEST  . . . . . . . . . . .  	L NEAR	0000	TRANCODE	External
CLOSE_INVALID_FUNCTION . . . . .  	Alias	 ERROR_INVALID_FUNCTION		
CLOSE_INVALID_HANDLE . . . . . .  	Alias	 ERROR_INVALID_HANDLE		
COMBUFLEN  . . . . . . . . . . .  	Number	0080	
COMPNAME . . . . . . . . . . . .  	L NEAR	0418	TRANCODE	Global
CONCAT . . . . . . . . . . . . .  	V BYTE 	0000	TRANSPACE	External
CONTMEL  . . . . . . . . . . . .  	L NEAR	0014	TRANCODE
COPERR . . . . . . . . . . . . .  	L NEAR	0000	TRANCODE	External
COPIED_POST  . . . . . . . . . .  	V BYTE 	0000	TRANDATA	External
COPIED_PRE . . . . . . . . . . .  	V BYTE 	0000	TRANDATA	External
COPY . . . . . . . . . . . . . .  	L NEAR	006B	TRANCODE	Global
COUNTRY_NOT_FOUND  . . . . . . .  	Alias	 ERROR_FILE_NOT_FOUND		
CPARSE . . . . . . . . . . . . .  	L NEAR	0000	TRANCODE	External
CPDATE . . . . . . . . . . . . .  	V WORD 	0000	TRANSPACE	External
CPTIME . . . . . . . . . . . . .  	V WORD 	0000	TRANSPACE	External
CREAT  . . . . . . . . . . . . .  	Number	003C	
CREATENEWFILE  . . . . . . . . .  	Number	005B	
CREATETEMPFILE . . . . . . . . .  	Number	005A	
CREATE_PROCESS_DATA_BLOCK  . . .  	Number	0026	
CREAT_ACCESS_DENIED  . . . . . .  	Alias	 ERROR_ACCESS_DENIED		
CREAT_PATH_NOT_FOUND . . . . . .  	Alias	 ERROR_PATH_NOT_FOUND		
CREAT_TOO_MANY_OPEN_FILES  . . .  	Alias	 ERROR_TOO_MANY_OPEN_FILES		
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 08:29:59

COMMAND COPY routines.                                      Symbols-7
                                                             

CRLF2  . . . . . . . . . . . . .  	L NEAR	0000	TRANCODE	External
CURDIR_INVALID_DRIVE . . . . . .  	Alias	 ERROR_INVALID_DRIVE		
CURDRV . . . . . . . . . . . . .  	V BYTE 	0000	TRANSPACE	External
CURRENT_DIR  . . . . . . . . . .  	Number	0047	
C_BS . . . . . . . . . . . . . .  	Number	0008	
C_CR . . . . . . . . . . . . . .  	Number	000D	
C_DEL  . . . . . . . . . . . . .  	Number	007F	
C_ETB  . . . . . . . . . . . . .  	Number	0017	
C_ETX  . . . . . . . . . . . . .  	Number	0003	
C_HT . . . . . . . . . . . . . .  	Number	0009	
C_LF . . . . . . . . . . . . . .  	Number	000A	
C_NAK  . . . . . . . . . . . . .  	Number	0015	

DBPBHL . . . . . . . . . . . . .  	Number	0016	
DEALLOC  . . . . . . . . . . . .  	Number	0049	
DEALLOC_ARENA_TRASHED  . . . . .  	Alias	 ERROR_ARENA_TRASHED		
DEALLOC_INVALID_BLOCK  . . . . .  	Alias	 ERROR_INVALID_BLOCK		
DELIM  . . . . . . . . . . . . .  	L NEAR	0000	TRANCODE	External
DESTBUF  . . . . . . . . . . . .  	V BYTE 	0000	TRANSPACE	External
DESTCLOSED . . . . . . . . . . .  	V BYTE 	0000	TRANSPACE	External
DESTFCB  . . . . . . . . . . . .  	V BYTE 	0000	TRANSPACE	External
DESTFCB2 . . . . . . . . . . . .  	V BYTE 	0000	TRANSPACE	External
DESTHAND . . . . . . . . . . . .  	V WORD 	0000	TRANSPACE	External
DESTINFO . . . . . . . . . . . .  	V BYTE 	0000	TRANSPACE	External
DESTISDEV  . . . . . . . . . . .  	V BYTE 	0000	TRANSPACE	External
DESTISDIR  . . . . . . . . . . .  	V BYTE 	0000	TRANSPACE	External
DESTSCAN . . . . . . . . . . . .  	L NEAR	00A9	TRANCODE
DESTSIZ  . . . . . . . . . . . .  	V BYTE 	0000	TRANSPACE	External
DESTSWITCH . . . . . . . . . . .  	V WORD 	0000	TRANSPACE	External
DESTTAIL . . . . . . . . . . . .  	V WORD 	0000	TRANSPACE	External
DESTVARS . . . . . . . . . . . .  	V BYTE 	0000	TRANSPACE	External
DEVBPB . . . . . . . . . . . . .  	Number	0002	
DEVID_BLOCK_DEV  . . . . . . . .  	Number	001F	
DEVID_DEVICE . . . . . . . . . .  	Number	0080	
DEVID_DEVICE_CLOCK . . . . . . .  	Number	0008	
DEVID_DEVICE_CON_IN  . . . . . .  	Number	0001	
DEVID_DEVICE_CON_OUT . . . . . .  	Number	0002	
DEVID_DEVICE_EOF . . . . . . . .  	Number	0040	
DEVID_DEVICE_NULL  . . . . . . .  	Number	0004	
DEVID_DEVICE_RAW . . . . . . . .  	Number	0020	
DEVID_DEVICE_SPECIAL . . . . . .  	Number	0010	
DEVID_EOF  . . . . . . . . . . .  	Number	0040	
DEVID_FILE_CLEAN . . . . . . . .  	Number	0040	
DEVID_FILE_MASK_DRIVE  . . . . .  	Number	003F	
DEVID_ISCIN  . . . . . . . . . .  	Number	0001	
DEVID_ISCLK  . . . . . . . . . .  	Number	0008	
DEVID_ISCOT  . . . . . . . . . .  	Number	0002	
DEVID_ISDEV  . . . . . . . . . .  	Number	0080	
DEVID_ISNUL  . . . . . . . . . .  	Number	0004	
DEVID_RAW  . . . . . . . . . . .  	Number	0020	
DEVID_SPECIAL  . . . . . . . . .  	Number	0010	
DEVIFL . . . . . . . . . . . . .  	Number	0007	
DEVINIT  . . . . . . . . . . . .  	Number	0000	
DEVIOCTL . . . . . . . . . . . .  	Number	4000	
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 08:29:59

COMMAND COPY routines.                                      Symbols-8
                                                             

DEVIST . . . . . . . . . . . . .  	Number	0006	
DEVMDCH  . . . . . . . . . . . .  	Number	0001	
DEVOFL . . . . . . . . . . . . .  	Number	000B	
DEVOST . . . . . . . . . . . . .  	Number	000A	
DEVRD  . . . . . . . . . . . . .  	Number	0004	
DEVRDIOCTL . . . . . . . . . . .  	Number	0003	
DEVRDND  . . . . . . . . . . . .  	Number	0005	
DEVTYP . . . . . . . . . . . . .  	Number	8000	
DEVWMES  . . . . . . . . . . . .  	V BYTE 	0000	TRANDATA	External
DEVWRIOCTL . . . . . . . . . . .  	Number	000C	
DEVWRT . . . . . . . . . . . . .  	Number	0008	
DEVWRTV  . . . . . . . . . . . .  	Number	0009	
DFLSHL . . . . . . . . . . . . .  	Number	000F	
DINITHL  . . . . . . . . . . . .  	Number	001A	
DIRBUF . . . . . . . . . . . . .  	V BYTE 	0000	TRANSPACE	External
DIRCHAR  . . . . . . . . . . . .  	V BYTE 	0000	TRANSPACE	External
DIRPRI . . . . . . . . . . . . .  	Number	000F	
DIRSTRLEN  . . . . . . . . . . .  	Number	0040	
DIR_SEARCH_FIRST . . . . . . . .  	Number	0011	
DIR_SEARCH_NEXT  . . . . . . . .  	Number	0012	
DISK_RESET . . . . . . . . . . .  	Number	000D	
DISP32BITS . . . . . . . . . . .  	L NEAR	0000	TRANCODE	External
DMEDHL . . . . . . . . . . . . .  	Number	000F	
DOCOPY . . . . . . . . . . . . .  	L NEAR	0000	TRANCODE	External
DOMELCOPY  . . . . . . . . . . .  	L NEAR	0000	TRANCODE
DOPCD  . . . . . . . . . . . . .  	L NEAR	03EA	TRANCODE
DOPCDJ . . . . . . . . . . . . .  	L NEAR	038A	TRANCODE
DOREAD . . . . . . . . . . . . .  	L NEAR	02F7	TRANCODE
DOS_MAJOR_VERSION  . . . . . . .  	Number	0002	
DOS_MINOR_VERSION  . . . . . . .  	Number	000B	
DPBSIZ . . . . . . . . . . . . .  	Number	005E	
DRDNDHL  . . . . . . . . . . . .  	Number	000E	
DRDWRHL  . . . . . . . . . . . .  	Number	0016	
DRVCHAR  . . . . . . . . . . . .  	Number	003A	
DRVSPEC1 . . . . . . . . . . . .  	L NEAR	02A8	TRANCODE
DRVSPEC5 . . . . . . . . . . . .  	L NEAR	0360	TRANCODE
DSKSIZ . . . . . . . . . . . . .  	Number	000D	
DSTATHL  . . . . . . . . . . . .  	Number	000D	
DUP2_INVALID_HANDLE  . . . . . .  	Alias	 ERROR_INVALID_HANDLE		
DUP_INVALID_HANDLE . . . . . . .  	Alias	 ERROR_INVALID_HANDLE		
DUP_PDB  . . . . . . . . . . . .  	Number	0055	
DUP_TOO_MANY_OPEN_FILES  . . . .  	Alias	 ERROR_TOO_MANY_OPEN_FILES		

ENDCOPY  . . . . . . . . . . . .  	L NEAR	01F2	TRANCODE	Global
ENDCOPY2 . . . . . . . . . . . .  	L NEAR	01F5	TRANCODE
ENDCOPYJ2  . . . . . . . . . . .  	L NEAR	0276	TRANCODE
ENTRYPOINT . . . . . . . . . . .  	Number	00C0	
ERROR_ACCESS_DENIED  . . . . . .  	Number	0005	
ERROR_ARENA_TRASHED  . . . . . .  	Number	0007	
ERROR_BAD_ENVIRONMENT  . . . . .  	Number	000A	
ERROR_BAD_FORMAT . . . . . . . .  	Number	000B	
ERROR_CURRENT_DIRECTORY  . . . .  	Number	0010	
ERROR_FILE_NOT_FOUND . . . . . .  	Number	0002	
ERROR_INVALID_ACCESS . . . . . .  	Number	000C	
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 08:29:59

COMMAND COPY routines.                                      Symbols-9
                                                             

ERROR_INVALID_BLOCK  . . . . . .  	Number	0009	
ERROR_INVALID_DATA . . . . . . .  	Number	000D	
ERROR_INVALID_DRIVE  . . . . . .  	Number	000F	
ERROR_INVALID_FUNCTION . . . . .  	Number	0001	
ERROR_INVALID_HANDLE . . . . . .  	Number	0006	
ERROR_NOT_ENOUGH_MEMORY  . . . .  	Number	0008	
ERROR_NOT_SAME_DEVICE  . . . . .  	Number	0011	
ERROR_NO_MORE_FILES  . . . . . .  	Number	0012	
ERROR_PATH_NOT_FOUND . . . . . .  	Number	0003	
ERROR_TOO_MANY_OPEN_FILES  . . .  	Number	0004	
EXEC . . . . . . . . . . . . . .  	Number	004B	
EXEC_BAD_ENVIRONMENT . . . . . .  	Alias	 ERROR_BAD_ENVIRONMENT		
EXEC_BAD_FORMAT  . . . . . . . .  	Alias	 ERROR_BAD_FORMAT		
EXEC_FILE_NOT_FOUND  . . . . . .  	Alias	 ERROR_FILE_NOT_FOUND		
EXEC_FUNC_NO_EXECUTE . . . . . .  	Number	0001	
EXEC_FUNC_OVERLAY  . . . . . . .  	Number	0002	
EXEC_INVALID_FUNCTION  . . . . .  	Alias	 ERROR_INVALID_FUNCTION		
EXEC_NOT_ENOUGH_MEMORY . . . . .  	Alias	 ERROR_NOT_ENOUGH_MEMORY		
EXE_VALID_OLD_SIGNATURE  . . . .  	Number	4D5A	
EXE_VALID_SIGNATURE  . . . . . .  	Number	5A4D	
EXIT . . . . . . . . . . . . . .  	Number	004C	
EXIT_ABORT . . . . . . . . . . .  	Number	0000	
EXIT_CTRL_C  . . . . . . . . . .  	Number	0001	
EXIT_HARD_ERROR  . . . . . . . .  	Number	0002	
EXIT_KEEP_PROCESS  . . . . . . .  	Number	0003	
EXIT_TERMINATE . . . . . . . . .  	Number	0000	

FALSE  . . . . . . . . . . . . .  	Number	0000	
FATPRI . . . . . . . . . . . . .  	Number	001E	
FCB  . . . . . . . . . . . . . .  	Number	005C	
FCB_CLOSE  . . . . . . . . . . .  	Number	0010	
FCB_CREATE . . . . . . . . . . .  	Number	0016	
FCB_DELETE . . . . . . . . . . .  	Number	0013	
FCB_OPEN . . . . . . . . . . . .  	Number	000F	
FCB_RANDOM_READ  . . . . . . . .  	Number	0021	
FCB_RANDOM_READ_BLOCK  . . . . .  	Number	0027	
FCB_RANDOM_WRITE . . . . . . . .  	Number	0022	
FCB_RANDOM_WRITE_BLOCK . . . . .  	Number	0028	
FCB_RENAME . . . . . . . . . . .  	Number	0017	
FCB_SEQ_READ . . . . . . . . . .  	Number	0014	
FCB_SEQ_WRITE  . . . . . . . . .  	Number	0015	
FCB_TO_ASCZ  . . . . . . . . . .  	L NEAR	0000	TRANCODE	External
FILDIRENT  . . . . . . . . . . .  	Number	0010	
FILECNT  . . . . . . . . . . . .  	V WORD 	0000	TRANSPACE	External
FILETIMES_INVALID_FUNCTION . . .  	Alias	 ERROR_INVALID_FUNCTION		
FILETIMES_INVALID_HANDLE . . . .  	Alias	 ERROR_INVALID_HANDLE		
FILE_TIMES . . . . . . . . . . .  	Number	0057	
FILPERPROC . . . . . . . . . . .  	Number	0014	
FINDFIRST_FILE_NOT_FOUND . . . .  	Alias	 ERROR_FILE_NOT_FOUND		
FINDFIRST_NO_MORE_FILES  . . . .  	Alias	 ERROR_NO_MORE_FILES		
FINDNEXT_NO_MORE_FILES . . . . .  	Alias	 ERROR_NO_MORE_FILES		
FIND_FIRST . . . . . . . . . . .  	Number	004E	
FIND_NEXT  . . . . . . . . . . .  	Number	004F	
FIRSTDEST  . . . . . . . . . . .  	V BYTE 	0000	TRANSPACE	External
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 08:29:59

COMMAND COPY routines.                                      Symbols-10
                                                             

FIRSTENT . . . . . . . . . . . .  	L NEAR	0296	TRANCODE
FLSHFIL  . . . . . . . . . . . .  	L NEAR	0000	TRANCODE	External
FREEPRI  . . . . . . . . . . . .  	Number	0000	
FRSTSRC  . . . . . . . . . . . .  	L NEAR	0252	TRANCODE
FRSTSRCH . . . . . . . . . . . .  	V BYTE 	0000	TRANSPACE	External
FULDIR . . . . . . . . . . . . .  	V BYTE 	0000	TRANDATA	External

GETEXTENDEDERROR . . . . . . . .  	Number	0059	
GET_CURRENT_PDB  . . . . . . . .  	Number	0051	
GET_DATE . . . . . . . . . . . .  	Number	002A	
GET_DEFAULT_DPB  . . . . . . . .  	Number	001F	
GET_DEFAULT_DRIVE  . . . . . . .  	Number	0019	
GET_DMA  . . . . . . . . . . . .  	Number	002F	
GET_DPB  . . . . . . . . . . . .  	Number	0032	
GET_DRIVE_FREESPACE  . . . . . .  	Number	0036	
GET_FCB_FILE_LENGTH  . . . . . .  	Number	0023	
GET_FCB_POSITION . . . . . . . .  	Number	0024	
GET_INDOS_FLAG . . . . . . . . .  	Number	0034	
GET_INTERRUPT_VECTOR . . . . . .  	Number	0035	
GET_IN_VARS  . . . . . . . . . .  	Number	0052	
GET_TIME . . . . . . . . . . . .  	Number	002C	
GET_VERIFY_ON_WRITE  . . . . . .  	Number	0054	
GET_VERSION  . . . . . . . . . .  	Number	0030	
GOT2ARGS . . . . . . . . . . . .  	L NEAR	0141	TRANCODE
GOTPLUS  . . . . . . . . . . . .  	L NEAR	00D7	TRANCODE
GOTSRCSLSH . . . . . . . . . . .  	L NEAR	03BA	TRANCODE
GOTSWITCH  . . . . . . . . . . .  	Number	8000	

HIGHMEM  . . . . . . . . . . . .  	Alias	 FALSE		

IBM  . . . . . . . . . . . . . .  	Alias	 IBMVER		
IBMJAPAN . . . . . . . . . . . .  	Alias	 FALSE		
IBMVER . . . . . . . . . . . . .  	Alias	 FALSE		
INBDEV . . . . . . . . . . . . .  	V BYTE 	0000	TRANDATA	External
INEXACT  . . . . . . . . . . . .  	V BYTE 	0000	TRANSPACE	External
INTBASE  . . . . . . . . . . . .  	Number	0080	
INTERNATIONAL  . . . . . . . . .  	Number	0038	
INTERNATIONAL_INVALID_FUNCTION .  	Alias	 ERROR_INVALID_FUNCTION		
INTERNAT_BLOCK_MAX . . . . . . .  	Number	0020	
INTTAB . . . . . . . . . . . . .  	Number	0020	
INT_ABORT  . . . . . . . . . . .  	Alias	 INTTAB		
INT_COMMAND  . . . . . . . . . .  	Number	0021	
INT_CTRL_C . . . . . . . . . . .  	Number	0023	
INT_DISK_READ  . . . . . . . . .  	Number	0025	
INT_DISK_WRITE . . . . . . . . .  	Number	0026	
INT_FASTCON  . . . . . . . . . .  	Number	0029	
INT_FATAL_ABORT  . . . . . . . .  	Number	0024	
INT_KEEP_PROCESS . . . . . . . .  	Number	0027	
INT_SPOOLER  . . . . . . . . . .  	Number	0028	
INT_TERMINATE  . . . . . . . . .  	Number	0022	
IOCTL  . . . . . . . . . . . . .  	Number	0044	
IOCTL_INVALID_DATA . . . . . . .  	Alias	 ERROR_INVALID_DATA		
IOCTL_INVALID_FUNCTION . . . . .  	Alias	 ERROR_INVALID_FUNCTION		
IOCTL_INVALID_HANDLE . . . . . .  	Alias	 ERROR_INVALID_HANDLE		
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 08:29:59

COMMAND COPY routines.                                      Symbols-11
                                                             

ISADEV . . . . . . . . . . . . .  	L NEAR	0391	TRANCODE
ISCIN  . . . . . . . . . . . . .  	Number	0001	
ISCLOCK  . . . . . . . . . . . .  	Number	0008	
ISCOUT . . . . . . . . . . . . .  	Number	0002	
ISFATBYDEV . . . . . . . . . . .  	Number	2000	
ISIBM  . . . . . . . . . . . . .  	Number	0010	
ISNULL . . . . . . . . . . . . .  	Number	0004	
ISSIMPFILE . . . . . . . . . . .  	L NEAR	0391	TRANCODE

KANJI  . . . . . . . . . . . . .  	Alias	 FALSE		
KEEP_PROCESS . . . . . . . . . .  	Number	0031	
KNOWNOTSPEC  . . . . . . . . . .  	L NEAR	0385	TRANCODE

LBRPRI . . . . . . . . . . . . .  	Number	0002	
LBWPRI . . . . . . . . . . . . .  	Number	0004	
LEAVECFLAG . . . . . . . . . . .  	L NEAR	025D	TRANCODE
LINPERPAG  . . . . . . . . . . .  	Number	0017	
LOCKOPER . . . . . . . . . . . .  	Number	005C	
LOSTERR  . . . . . . . . . . . .  	V BYTE 	0000	TRANDATA	External
LSEEK  . . . . . . . . . . . . .  	Number	0042	
LSEEK_INVALID_FUNCTION . . . . .  	Alias	 ERROR_INVALID_FUNCTION		
LSEEK_INVALID_HANDLE . . . . . .  	Alias	 ERROR_INVALID_HANDLE		

MELCOPY  . . . . . . . . . . . .  	V BYTE 	0000	TRANSPACE	External
MELDO  . . . . . . . . . . . . .  	L NEAR	02E0	TRANCODE
MELSTART . . . . . . . . . . . .  	V WORD 	0000	TRANSPACE	External
MI_INT . . . . . . . . . . . . .  	Number	00CD	
MI_LONG_CALL . . . . . . . . . .  	Number	009A	
MI_LONG_JMP  . . . . . . . . . .  	Number	00EA	
MI_LONG_RET  . . . . . . . . . .  	Number	00CB	
MKDIR  . . . . . . . . . . . . .  	Number	0039	
MKDIR_ACCESS_DENIED  . . . . . .  	Alias	 ERROR_ACCESS_DENIED		
MKDIR_PATH_NOT_FOUND . . . . . .  	Alias	 ERROR_PATH_NOT_FOUND		
MORECP . . . . . . . . . . . . .  	L NEAR	0279	TRANCODE
MSVER  . . . . . . . . . . . . .  	Alias	 TRUE		

NEXTAMBIG  . . . . . . . . . . .  	L NEAR	02D1	TRANCODE
NEXTAMBIG0 . . . . . . . . . . .  	L NEAR	02BC	TRANCODE
NEXTMEL  . . . . . . . . . . . .  	L NEAR	004A	TRANCODE
NEXTSRC  . . . . . . . . . . . .  	L NEAR	026F	TRANCODE
NEXTSRCJ . . . . . . . . . . . .  	L NEAR	032B	TRANCODE
NODCLOSE . . . . . . . . . . . .  	L NEAR	030B	TRANCODE
NODSTDRV . . . . . . . . . . . .  	L NEAR	043F	TRANCODE
NOFLUSH  . . . . . . . . . . . .  	L NEAR	031F	TRANCODE
NOPLUS . . . . . . . . . . . . .  	L NEAR	00BC	TRANCODE
NORMPERLIN . . . . . . . . . . .  	Number	0001	
NOSETCASC  . . . . . . . . . . .  	L NEAR	01C4	TRANCODE
NOSPACE  . . . . . . . . . . . .  	V BYTE 	0000	TRANDATA	External
NOSRCDRV . . . . . . . . . . . .  	L NEAR	0431	TRANCODE
NOTFND . . . . . . . . . . . . .  	V BYTE 	0000	TRANDATA	External
NOTPDIR  . . . . . . . . . . . .  	L NEAR	03C2	TRANCODE
NOTPFILE . . . . . . . . . . . .  	L NEAR	0356	TRANCODE
NOTSHORTDEST . . . . . . . . . .  	L NEAR	015C	TRANCODE
NOVERIF  . . . . . . . . . . . .  	L NEAR	019C	TRANCODE
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 08:29:59

COMMAND COPY routines.                                      Symbols-12
                                                             

NOWRITE  . . . . . . . . . . . .  	V BYTE 	0000	TRANSPACE	External
NO_ERROR_OCCURRED  . . . . . . .  	Text  0                                                              ?		
NXTADD . . . . . . . . . . . . .  	V WORD 	0000	TRANSPACE	External

OEM_C1 . . . . . . . . . . . . .  	Number	00F9	
OEM_C2 . . . . . . . . . . . . .  	Number	00FA	
OEM_C3 . . . . . . . . . . . . .  	Number	00FB	
OEM_C4 . . . . . . . . . . . . .  	Number	00FC	
OEM_C5 . . . . . . . . . . . . .  	Number	00FD	
OEM_C6 . . . . . . . . . . . . .  	Number	00FE	
OEM_C7 . . . . . . . . . . . . .  	Number	00FF	
ONESPC . . . . . . . . . . . . .  	L NEAR	0000	TRANCODE	External
OPEN . . . . . . . . . . . . . .  	Number	003D	
OPEN_ACCESS_DENIED . . . . . . .  	Alias	 ERROR_ACCESS_DENIED		
OPEN_FILE_NOT_FOUND  . . . . . .  	Alias	 ERROR_FILE_NOT_FOUND		
OPEN_FOR_BOTH  . . . . . . . . .  	Number	0002	
OPEN_FOR_READ  . . . . . . . . .  	Number	0000	
OPEN_FOR_WRITE . . . . . . . . .  	Number	0001	
OPEN_INVALID_ACCESS  . . . . . .  	Alias	 ERROR_INVALID_ACCESS		
OPEN_TOO_MANY_OPEN_FILES . . . .  	Alias	 ERROR_TOO_MANY_OPEN_FILES		
OVERWR . . . . . . . . . . . . .  	V BYTE 	0000	TRANDATA	External

PARSE_FILE_DESCRIPTOR  . . . . .  	Number	0029	
PATHCHRCMP . . . . . . . . . . .  	L NEAR	0000	TRANCODE	External
PLUS . . . . . . . . . . . . . .  	V BYTE 	0000	TRANSPACE	External
PRINT  . . . . . . . . . . . . .  	L NEAR	0000	TRANCODE	External
PSWITCH  . . . . . . . . . . . .  	Number	0002	

RAW_CON_INPUT  . . . . . . . . .  	Number	0007	
RAW_CON_IO . . . . . . . . . . .  	Number	0006	
RDEOF  . . . . . . . . . . . . .  	V BYTE 	0000	TRANSPACE	External
READ . . . . . . . . . . . . . .  	Number	003F	
READ_ACCESS_DENIED . . . . . . .  	Alias	 ERROR_ACCESS_DENIED		
READ_INVALID_HANDLE  . . . . . .  	Alias	 ERROR_INVALID_HANDLE		
RENAME . . . . . . . . . . . . .  	Number	0056	
RENAME_ACCESS_DENIED . . . . . .  	Alias	 ERROR_ACCESS_DENIED		
RENAME_FILE_NOT_FOUND  . . . . .  	Alias	 ERROR_FILE_NOT_FOUND		
RENAME_NOT_SAME_DEVICE . . . . .  	Alias	 ERROR_NOT_SAME_DEVICE		
RESSEG . . . . . . . . . . . . .  	V WORD 	0000	TRANSPACE	External
RESTUDIR . . . . . . . . . . . .  	L NEAR	0000	TRANCODE	External
RESTUDIR1  . . . . . . . . . . .  	L NEAR	0000	TRANCODE	External
RET81P . . . . . . . . . . . . .  	L NEAR	0463	TRANCODE
RET_L  . . . . . . . . . . . . .  	NEAR 	0465	TRANCODE
RET_NC . . . . . . . . . . . . .  	NEAR 	03F7	TRANCODE
RET_Z  . . . . . . . . . . . . .  	NEAR 	03CC	TRANCODE
RMDIR  . . . . . . . . . . . . .  	Number	003A	
RMDIR_ACCESS_DENIED  . . . . . .  	Alias	 ERROR_ACCESS_DENIED		
RMDIR_CURRENT_DIRECTORY  . . . .  	Alias	 ERROR_CURRENT_DIRECTORY		
RMDIR_PATH_NOT_FOUND . . . . . .  	Alias	 ERROR_PATH_NOT_FOUND		
RPRI . . . . . . . . . . . . . .  	Number	0006	

SAVUDIR1 . . . . . . . . . . . .  	L NEAR	0000	TRANCODE	External
SCANBUF  . . . . . . . . . . . .  	V BYTE 	0000	TRANSPACE	External
SCANFSRC . . . . . . . . . . . .  	L NEAR	01A3	TRANCODE
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 08:29:59

COMMAND COPY routines.                                      Symbols-13
                                                             

SCANOFF  . . . . . . . . . . . .  	L NEAR	0000	TRANCODE	External
SCANSRC  . . . . . . . . . . . .  	L NEAR	0281	TRANCODE
SCANSRC2 . . . . . . . . . . . .  	L NEAR	001C	TRANCODE
SDIRBUF  . . . . . . . . . . . .  	V BYTE 	0000	TRANSPACE	External
SEARCH . . . . . . . . . . . . .  	L NEAR	0000	TRANCODE	External
SEARCHNEXT . . . . . . . . . . .  	L NEAR	0000	TRANCODE	External
SERVERCALL . . . . . . . . . . .  	Number	005D	
SETASC . . . . . . . . . . . . .  	L NEAR	0000	TRANCODE	External
SETBLOCK . . . . . . . . . . . .  	Number	004A	
SETBLOCK_ARENA_TRASHED . . . . .  	Alias	 ERROR_ARENA_TRASHED		
SETBLOCK_INVALID_BLOCK . . . . .  	Alias	 ERROR_INVALID_BLOCK		
SETBLOCK_INVALID_FUNCTION  . . .  	Alias	 ERROR_INVALID_FUNCTION		
SETBLOCK_NOT_ENOUGH_MEMORY . . .  	Alias	 ERROR_NOT_ENOUGH_MEMORY		
SETDPB . . . . . . . . . . . . .  	Number	0053	
SETNMEL  . . . . . . . . . . . .  	L NEAR	02C6	TRANCODE
SETNMELJ . . . . . . . . . . . .  	L NEAR	0068	TRANCODE
SETREST1 . . . . . . . . . . . .  	L NEAR	0000	TRANCODE	External
SETSTARS . . . . . . . . . . . .  	L NEAR	03FC	TRANCODE
SET_CTRL_C_TRAPPING  . . . . . .  	Number	0033	
SET_CURRENT_PDB  . . . . . . . .  	Number	0050	
SET_DATE . . . . . . . . . . . .  	Number	002B	
SET_DEFAULT_DRIVE  . . . . . . .  	Number	000E	
SET_DMA  . . . . . . . . . . . .  	Number	001A	
SET_INTERRUPT_VECTOR . . . . . .  	Number	0025	
SET_OEM_HANDLER  . . . . . . . .  	Number	00F8	
SET_TIME . . . . . . . . . . . .  	Number	002D	
SET_VERIFY_ON_WRITE  . . . . . .  	Number	002E	
SF_DEFAULT_NUMBER  . . . . . . .  	Number	0005	
SHOWCPNAM  . . . . . . . . . . .  	L NEAR	02EE	TRANCODE
SOURCEPROC . . . . . . . . . . .  	L NEAR	0223	TRANCODE
SRCBUF . . . . . . . . . . . . .  	V BYTE 	0000	TRANSPACE	External
SRCHAND  . . . . . . . . . . . .  	V WORD 	0000	TRANSPACE	External
SRCINFO  . . . . . . . . . . . .  	V BYTE 	0000	TRANSPACE	External
SRCISDEV . . . . . . . . . . . .  	V BYTE 	0000	TRANSPACE	External
SRCNONEXIST  . . . . . . . . . .  	L NEAR	020D	TRANCODE
SRCPT  . . . . . . . . . . . . .  	V WORD 	0000	TRANSPACE	External
SRCSIZ . . . . . . . . . . . . .  	V BYTE 	0000	TRANSPACE	External
SRCTAIL  . . . . . . . . . . . .  	V WORD 	0000	TRANSPACE	External
SRCVARS  . . . . . . . . . . . .  	V BYTE 	0000	TRANSPACE	External
STARTEL  . . . . . . . . . . . .  	V WORD 	0000	TRANSPACE	External
STBUI  . . . . . . . . . . . . .  	Number	0200	
STDAUX . . . . . . . . . . . . .  	Number	0003	
STDERR . . . . . . . . . . . . .  	Number	0002	
STDIN  . . . . . . . . . . . . .  	Number	0000	
STDON  . . . . . . . . . . . . .  	Number	0100	
STDOUT . . . . . . . . . . . . .  	Number	0001	
STDPRN . . . . . . . . . . . . .  	Number	0004	
STD_AUX_INPUT  . . . . . . . . .  	Number	0003	
STD_AUX_OUTPUT . . . . . . . . .  	Number	0004	
STD_CON_INPUT  . . . . . . . . .  	Number	0001	
STD_CON_INPUT_FLUSH  . . . . . .  	Number	000C	
STD_CON_INPUT_NO_ECHO  . . . . .  	Number	0008	
STD_CON_INPUT_STATUS . . . . . .  	Number	000B	
STD_CON_OUTPUT . . . . . . . . .  	Number	0002	
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 08:29:59

COMMAND COPY routines.                                      Symbols-14
                                                             

STD_CON_STRING_INPUT . . . . . .  	Number	000A	
STD_CON_STRING_OUTPUT  . . . . .  	Number	0009	
STD_PRINTER_OUTPUT . . . . . . .  	Number	0005	
STECODE  . . . . . . . . . . . .  	Number	00FF	
STERR  . . . . . . . . . . . . .  	Number	8000	
STRCOMP  . . . . . . . . . . . .  	L NEAR	0000	TRANCODE	External
SWITCH . . . . . . . . . . . . .  	L NEAR	0000	TRANCODE	External
SYM  . . . . . . . . . . . . . .  	Number	003E	

TCOMMAND . . . . . . . . . . . .  	L NEAR	0000	TRANCODE	External
TERMREAD . . . . . . . . . . . .  	V BYTE 	0000	TRANSPACE	External
TESTP2 . . . . . . . . . . . . .  	L NEAR	00CE	TRANCODE
TPA  . . . . . . . . . . . . . .  	V WORD 	0000	TRANSPACE	External
TRUE . . . . . . . . . . . . . .  	Number	FFFF	

UNLINK . . . . . . . . . . . . .  	Number	0041	
UNLINK_ACCESS_DENIED . . . . . .  	Alias	 ERROR_ACCESS_DENIED		
UNLINK_FILE_NOT_FOUND  . . . . .  	Alias	 ERROR_FILE_NOT_FOUND		
UPCONV . . . . . . . . . . . . .  	L NEAR	0000	TRANCODE	External
USERDIR1 . . . . . . . . . . . .  	V BYTE 	0000	TRANSPACE	External
USERIDOPER . . . . . . . . . . .  	Number	005E	

VERVAL . . . . . . . . . . . . .  	V WORD 	0000	DATARES	External
VSWITCH  . . . . . . . . . . . .  	Number	0010	

WAIT . . . . . . . . . . . . . .  	Number	004D	
WIDEPERLIN . . . . . . . . . . .  	Number	0005	
WPRI . . . . . . . . . . . . . .  	Number	0008	
WRECODE  . . . . . . . . . . . .  	Number	0000	
WRITE  . . . . . . . . . . . . .  	Number	0040	
WRITE_ACCESS_DENIED  . . . . . .  	Alias	 ERROR_ACCESS_DENIED		
WRITE_INVALID_HANDLE . . . . . .  	Alias	 ERROR_INVALID_HANDLE		
WRITTEN  . . . . . . . . . . . .  	V BYTE 	0000	TRANSPACE	External
WSWITCH  . . . . . . . . . . . .  	Number	0001	

XDUP . . . . . . . . . . . . . .  	Number	0045	
XDUP2  . . . . . . . . . . . . .  	Number	0046	

ZPRINT . . . . . . . . . . . . .  	L NEAR	0000	TRANCODE	External

??0000 . . . . . . . . . . . . .  	L NEAR	026E	TRANCODE
??0001 . . . . . . . . . . . . .  	L NEAR	0395	TRANCODE
??0002 . . . . . . . . . . . . .  	L NEAR	03C1	TRANCODE
??0003 . . . . . . . . . . . . .  	L NEAR	03CC	TRANCODE
??0005 . . . . . . . . . . . . .  	L NEAR	03F7	TRANCODE
??0007 . . . . . . . . . . . . .  	L NEAR	0417	TRANCODE
??0008 . . . . . . . . . . . . .  	L NEAR	0465	TRANCODE


   1972 Source  Lines
   2104 Total   Lines
    725 Symbols

  15070 Bytes symbol space free

      0 Warning Errors
      0 Severe  Errors
