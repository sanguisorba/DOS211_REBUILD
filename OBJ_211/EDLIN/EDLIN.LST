 The Microsoft MACRO Assembler             12-27-<1    	PAGE	1-1
EDLIN for MSDOS 2.0


 	 	 	 	        title   EDLIN for MSDOS 2.0
 	 	 	 	
 	 	 	 	;----------------------------------------------
	 	 	 	-------------------------;
 	 	 	 	;               REVISION HISTORY:              
	 	 	 	                         ;
 	 	 	 	;                                              
	 	 	 	                         ;
 	 	 	 	;       V1.02                                  
	 	 	 	                         ;
 	 	 	 	;                                              
	 	 	 	                         ;
 	 	 	 	;       V2.00   9/13/82  M.A. Ulloa            
	 	 	 	                         ;
 	 	 	 	;                  Modified to use Pathnames in
	 	 	 	 command line file       ;
 	 	 	 	;               specification, modified REPLACE
	 	 	 	 to use an empty         ;
 	 	 	 	;               string intead of the old replac
	 	 	 	e string when this       ;
 	 	 	 	;               is missing, and search and repl
	 	 	 	ace now start from       ;
 	 	 	 	;               first line of buffer (like old 
	 	 	 	version of EDLIN)        ;
 	 	 	 	;               instead than current+1 line. Al
	 	 	 	so added the U and       ;
 	 	 	 	;               V commands that search (replace
	 	 	 	) starting from the      ;
 	 	 	 	;               current+1 line.                
	 	 	 	                         ;
 	 	 	 	;                                              
	 	 	 	                         ;
 	 	 	 	;               9/15/82  M.A. Ulloa            
	 	 	 	                         ;
 	 	 	 	;                  Added the quote character (^
	 	 	 	V).                      ;
 	 	 	 	;                                              
	 	 	 	                         ;
 	 	 	 	;               9/16/82  M.A. Ulloa            
	 	 	 	                         ;
 	 	 	 	;                  Corrected bug about use of q
	 	 	 	uote char when going     ;
 	 	 	 	;               into default insert mode. Also 
	 	 	 	corrected the problem    ;
 	 	 	 	;               with ^Z being the end of file m
	 	 	 	arker. End of file is    ;
 	 	 	 	;               reached when an attempt to read
	 	 	 	 returns less chars      ;
 	 	 	 	;               than requested.                
	 	 	 	                         ;
 	 	 	 	;                                              
	 	 	 	                         ;
 	 	 	 	;               9/17/82  M.A. Ulloa            
 The Microsoft MACRO Assembler             12-27-<1    	PAGE	1-2
EDLIN for MSDOS 2.0


	 	 	 	                         ;
 	 	 	 	;                  Corrected bug about boundari
	 	 	 	es for Copy              ;
 	 	 	 	;                                              
	 	 	 	                         ;
 	 	 	 	;               10/4/82  Rev. 1         M.A. Ul
	 	 	 	loa                      ;
 	 	 	 	;                  The IBM version now does NOT
	 	 	 	 have the U and V        ;
 	 	 	 	;               commands. The MSDOS version HAS
	 	 	 	 the U and V commands.   ;
 	 	 	 	;                  Added the B switch, and modi
	 	 	 	fied the effect of       ;
 	 	 	 	;               the quote char.                
	 	 	 	                         ;
 	 	 	 	;                                              
	 	 	 	                         ;
 	 	 	 	;               10/7/82  Rev. 2         M.A. Ul
	 	 	 	loa                      ;
 	 	 	 	;                  Changed the S and R commands
	 	 	 	 to start from the       ;
 	 	 	 	;               current line+1 (as U and V did)
	 	 	 	. Took away U and V in   ;
 	 	 	 	;               all versions.                  
	 	 	 	                         ;
 	 	 	 	;                                              
	 	 	 	                         ;
 	 	 	 	;               10/13/82 Rev. 3         M.A. Ul
	 	 	 	loa                      ;
 	 	 	 	;                  Now if parameter1 < 1 then p
	 	 	 	arameter1 = 1            ;
 	 	 	 	;                                              
	 	 	 	                         ;
 	 	 	 	;               10/15/82 Rev. 4         M.A. Ul
	 	 	 	loa                      ;
 	 	 	 	;                  Param4 if specified must be 
	 	 	 	an absolute number that  ;
 	 	 	 	;               reprecents the count.          
	 	 	 	                         ;
 	 	 	 	;                                              
	 	 	 	                         ;
 	 	 	 	;               10/18/82 Rev. 5         M.A. Ul
	 	 	 	loa                      ;
 	 	 	 	;                  Fixed problem with trying to
	 	 	 	 edit files with the     ;
 	 	 	 	;               same name as directories. Also,
	 	 	 	 if the end of file is   ;
 	 	 	 	;               reached it checks that a LF is 
	 	 	 	the last character,      ;
 	 	 	 	;               otherwise it inserts a CRLF pai
	 	 	 	r at the end.            ;
 	 	 	 	;                                              
	 	 	 	                         ;
 The Microsoft MACRO Assembler             12-27-<1    	PAGE	1-3
EDLIN for MSDOS 2.0


 	 	 	 	;               10/20/82 Rev. 6         M.A.Ull
	 	 	 	oa                       ;
 	 	 	 	;                  Changed the text of some err
	 	 	 	or messages for IBM and  ;
 	 	 	 	;               rewrite PAGE.                  
	 	 	 	                         ;
 	 	 	 	;                                              
	 	 	 	                         ;
 	 	 	 	;               10/25/82 Rev. 7         M.A.Ull
	 	 	 	oa                       ;
 	 	 	 	;                  Made all messages as in the 
	 	 	 	IBM vers.                ;
 	 	 	 	;                                              
	 	 	 	                         ;
 	 	 	 	;               10/28/82 Rev. 8         M.A.Ull
	 	 	 	oa                       ;
 	 	 	 	;                  Corrected problem with parsi
	 	 	 	ng for options.          ;
 	 	 	 	;                                              
	 	 	 	                         ;
 	 	 	 	;                        Rev. 9         Aaron R
	 	 	 	eynolds                  ;
 	 	 	 	;                  Made error messages external
	 	 	 	.                        ;
 	 	 	 	;                                              
	 	 	 	                         ;
 	 	 	 	;               12/08/82 Rev. 10        M.A. Ul
	 	 	 	loa                      ;
 	 	 	 	;                  Corrected problem arising wi
	 	 	 	th having to restore     ;
 	 	 	 	;               the old directory in case of a 
	 	 	 	file name error.         ;
 	 	 	 	;                                              
	 	 	 	                         ;
 	 	 	 	;               12/17/82 Rev. 11        M.A. Ul
	 	 	 	loa                      ;
 	 	 	 	;                  Added the ROPROT equate for 
	 	 	 	R/O file protection.     ;
 	 	 	 	;               It causes only certain operatio
	 	 	 	ns (L,P,S,W,A, and Q)    ;
 	 	 	 	;               to be allowed on read only file
	 	 	 	s.                       ;
 	 	 	 	;                                              
	 	 	 	                         ;
 	 	 	 	;               12/29/82 Rev. 12        M.A. Ul
	 	 	 	loa                      :
 	 	 	 	;                  Added the creation error mes
	 	 	 	sage.                    ;
 	 	 	 	;                                              
	 	 	 	                         ;
 	 	 	 	;               4/14/83  Rev. 13        N.Panne
	 	 	 	rs                       ;
 	 	 	 	;                  Fixed bug in Merge which los
 The Microsoft MACRO Assembler             12-27-<1    	PAGE	1-4
EDLIN for MSDOS 2.0


	 	 	 	t char if not ^Z.        ;
 	 	 	 	;                  Fixed bug in Copy to correct
	 	 	 	ly check                 ;
 	 	 	 	;                  for full buffers.           
	 	 	 	                         ;
 	 	 	 	;                                              
	 	 	 	                         ;
 	 	 	 	;                                              
	 	 	 	                         ;
 	 	 	 	;               7/23/83 Rev. 14         N.Panne
	 	 	 	rs                       ;
 	 	 	 	;                   Split EDLIN into two sepera
	 	 	 	te modules to            ;
 	 	 	 	;                   allow assembly of sources o
	 	 	 	n an IBM PC              ;
 	 	 	 	;                   EDLIN and EDLPROC          
	 	 	 	                         ;
 	 	 	 	;                                              
	 	 	 	                         ;
 	 	 	 	;----------------------------------------------
	 	 	 	-------------------------;
 	 	 	 	
 	 	 	 	
 = 0000	 	 	 	FALSE   EQU     0
 =-0001	 	 	 	TRUE    EQU     NOT FALSE
 	 	 	 	
 =	 	 	 	KANJI   EQU     FALSE
 	 	 	 	
 =	 	 	 	roprot  equ     false            ;set to TRUE i
	 	 	 	f protection to r/o files
 	 	 	 	                                ; desired.
 = 005C	 	 	 	FCB     EQU     5CH
 	 	 	 	
 = 0080	 	 	 	Comand_Line_Length equ 128
 = 0016	 	 	 	quote_char equ  16h             ;quote characte
	 	 	 	r = ^V
 	 	 	 	
 	 	 	 	
 The Microsoft MACRO Assembler             12-27-<1    	PAGE	1-5
EDLIN for MSDOS 2.0


 	 	 	 	PAGE
 	 	 	 	
 	 	 	 	        .list
 	 	 	 	
 	 	 	 	
 	 	 	 	SUBTTL  Contants and Data areas
 The Microsoft MACRO Assembler             12-27-<1    	PAGE	1-6
EDLIN for MSDOS 2.0
	 	 	 	Contants and Data areas

 	 	 	 	PAGE
 	 	 	 	
 = 002A	 	 	 	PROMPT  EQU     "*"
 = 0080	 	 	 	STKSIZ  EQU     80H
 	 	 	 	
 0000	 	 	 	CODE    SEGMENT PUBLIC
 0000	 	 	 	CODE    ENDS
 	 	 	 	
 0000	 	 	 	CONST   SEGMENT PUBLIC WORD
 0000	 	 	 	CONST   ENDS
 	 	 	 	
 0000	 	 	 	DATA    SEGMENT PUBLIC WORD
 0000	 	 	 	DATA    ENDS
 	 	 	 	
 	 	 	 	DG      GROUP   CODE,CONST,DATA
 	 	 	 	
 0000	 	 	 	CONST   SEGMENT PUBLIC WORD
 	 	 	 	
 	 	 	 	        EXTRN   BADDRV:BYTE,NDNAME:BYTE,bad_ver
	 	 	 	s_err:BYTE,opt_err:BYTE
 	 	 	 	        EXTRN   NOBAK:BYTE,BADCOM:BYTE,NEWFIL:B
	 	 	 	YTE,DEST:BYTE,MRGERR:BYTE
 	 	 	 	        EXTRN   NODIR:BYTE,DSKFUL:BYTE,MEMFUL:B
	 	 	 	YTE,FILENM:BYTE
 	 	 	 	        EXTRN   NOSUCH:BYTE,TOOLNG:BYTE,EOF:BYT
	 	 	 	E,ro_err:byte,bcreat:byte
 	 	 	 	
 	 	 	 	        PUBLIC  TXT1,TXT2,FUDGE,USERDIR,HARDCH
 	 	 	 	
 0000  42 41 4B	 	 	BAK     DB      "BAK"
 	 	 	 	
 0003  2A 2A 2A 4D 41 55	make    db      "***MAUlloa/Microsoft/V20***"
       6C 6C 6F 61 2F 4D	
       69 63 72 6F 73 6F	
       66 74 2F 56 32 30	
       2A 2A 2A	 	 	
 001E  31 34	 	 	rev     db      "14"
 	 	 	 	
 	 	 	 	        endif
 	 	 	 	
 0020  00	 	 	fourth  db      0                       ;fourth
	 	 	 	 parameter flag
 	 	 	 	
 0021  00	 	 	loadmod db      0                       ;Load m
	 	 	 	ode flag, 0 = ^Z marks the
 	 	 	 	                                        ; end o
	 	 	 	f a file, 1 = viceversa.
 0022  ????????	 	 	hardch  dd      ?
 	 	 	 	
 0026  00	 	 	the_root db     0                       ;root d
	 	 	 	irectory flag
 	 	 	 	
 0027  00	 	 	fudge   db      0                       ;direct
 The Microsoft MACRO Assembler             12-27-<1    	PAGE	1-7
EDLIN for MSDOS 2.0
	 	 	 	Contants and Data areas

	 	 	 	ory changed flag
 0028  00	 	 	user_drive db   0
 	 	 	 	
 	 	 	 	
 0029  2D	 	 	optchar db      "-"
 	 	 	 	
 002A  2F 00	 	 	dirchar db      "/",0
 	 	 	 	
 002C  2F 00	 	 	userdir db      "/",0
 002E     40 [	 	 	        db      (dirstrlen) dup(0)
                00	 	
                    ]	 	
 	 	 	 	
 	 	 	 	
 006E     80 [	 	 	fname_buffer db Comand_Line_Length dup(0)
                00	 	
                    ]	 	
 	 	 	 	
 	 	 	 	;----------------------------------------------
	 	 	 	-------------------------;
 	 	 	 	
 00EE  00 80 [	 	 	TXT1    DB      0,80H DUP (?)
                ??	 	
                    ]	 	
 	 	 	 	
 016F  00 80 [	 	 	TXT2    DB      0,80H DUP (?)
                ??	 	
                    ]	 	
 	 	 	 	
 01F0  00	 	 	DELFLG  DB      0
 	 	 	 	
 01F1	 	 	 	CONST   ENDS
 	 	 	 	
 0000	 	 	 	DATA    SEGMENT PUBLIC WORD
 	 	 	 	
 	 	 	 	        PUBLIC  QFLG,FCB2,OLDLEN,PARAM1,PARAM2,
	 	 	 	OLDDAT,SRCHFLG
 	 	 	 	        PUBLIC  COMLINE,NEWLEN,SRCHMOD,CURRENT,
	 	 	 	LSTFND,NUMPOS
 	 	 	 	        PUBLIC  LSTNUM,SRCHCNT,POINTER,START,EN
	 	 	 	DTXT,USER_DRIVE
 	 	 	 	
 	 	 	 	;----------------------------------------------
	 	 	 	-------------------------;
 	 	 	 	;    Be carefull when adding parameters, they h
	 	 	 	ave to follow the
 	 	 	 	; order in which they apperar here. (this is a 
	 	 	 	table, ergo it
 	 	 	 	; is indexed thru a pointer, and random additio
	 	 	 	ns will cause the
 	 	 	 	; wrong item to be accessed). Also param4 is kn
	 	 	 	own to be the
 	 	 	 	; count parameter, and known to be the fourth e
 The Microsoft MACRO Assembler             12-27-<1    	PAGE	1-8
EDLIN for MSDOS 2.0
	 	 	 	Contants and Data areas

	 	 	 	ntry in the table
 	 	 	 	; so it receives special treatment. (See GETNUM
	 	 	 	)
 	 	 	 	
 0000     01 [	 	 	PARAM1  DW      1 DUP (?)
                ????	 	
                      ]	 	
 	 	 	 	
 0002     01 [	 	 	PARAM2  DW      1 DUP (?)
                ????	 	
                      ]	 	
 	 	 	 	
 0004     01 [	 	 	PARAM3  DW      1 DUP (?)
                ????	 	
                      ]	 	
 	 	 	 	
 0006     01 [	 	 	PARAM4  DW      1 DUP (?)
                ????	 	
                      ]	 	
 	 	 	 	
 	 	 	 	
 	 	 	 	;----------------------------------------------
	 	 	 	-------------------------;
 	 	 	 	
 0008     01 [	 	 	PTR_1   DW      1 DUP (?)
                ????	 	
                      ]	 	
 	 	 	 	
 000A     01 [	 	 	PTR_2   DW      1 DUP (?)
                ????	 	
                      ]	 	
 	 	 	 	
 000C     01 [	 	 	PTR_3   DW      1 DUP (?)
                ????	 	
                      ]	 	
 	 	 	 	
 000E     01 [	 	 	COPYSIZ DW      1 DUP (?)
                ????	 	
                      ]	 	
 	 	 	 	
 0010     01 [	 	 	OLDLEN  DW      1 DUP (?)
                ????	 	
                      ]	 	
 	 	 	 	
 0012     01 [	 	 	NEWLEN  DW      1 DUP (?)
                ????	 	
                      ]	 	
 	 	 	 	
 0014     01 [	 	 	LSTFND  DW      1 DUP (?)
                ????	 	
                      ]	 	
 	 	 	 	
 0016     01 [	 	 	LSTNUM  DW      1 DUP (?)
 The Microsoft MACRO Assembler             12-27-<1    	PAGE	1-9
EDLIN for MSDOS 2.0
	 	 	 	Contants and Data areas

                ????	 	
                      ]	 	
 	 	 	 	
 0018     01 [	 	 	NUMPOS  DW      1 DUP (?)
                ????	 	
                      ]	 	
 	 	 	 	
 001A     01 [	 	 	SRCHCNT DW      1 DUP (?)
                ????	 	
                      ]	 	
 	 	 	 	
 001C     01 [	 	 	CURRENT DW      1 DUP (?)
                ????	 	
                      ]	 	
 	 	 	 	
 001E     01 [	 	 	POINTER DW      1 DUP (?)
                ????	 	
                      ]	 	
 	 	 	 	
 0020     01 [	 	 	ONE4TH  DW      1 DUP (?)
                ????	 	
                      ]	 	
 	 	 	 	
 0022     01 [	 	 	THREE4TH DW     1 DUP (?)
                ????	 	
                      ]	 	
 	 	 	 	
 0024     01 [	 	 	LAST    DW      1 DUP (?)
                ????	 	
                      ]	 	
 	 	 	 	
 0026     01 [	 	 	ENDTXT  DW      1 DUP (?)
                ????	 	
                      ]	 	
 	 	 	 	
 0028     01 [	 	 	COMLINE DW      1 DUP (?)
                ????	 	
                      ]	 	
 	 	 	 	
 002A     01 [	 	 	LASTLIN DW      1 DUP (?)
                ????	 	
                      ]	 	
 	 	 	 	
 002C     82 [	 	 	COMBUF  DB      82H DUP (?)
                ??	 	
                    ]	 	
 	 	 	 	
 00AE  0102 [	 	 	EDITBUF DB      258 DUP (?)
                ??	 	
                    ]	 	
 	 	 	 	
 01B0     01 [	 	 	EOL     DB      1 DUP (?)
                ??	 	
 The Microsoft MACRO Assembler             12-27-<1    	PAGE	1-10
EDLIN for MSDOS 2.0
	 	 	 	Contants and Data areas

                    ]	 	
 	 	 	 	
 01B1     25 [	 	 	FCB2    DB      37 DUP (?)
                ??	 	
                    ]	 	
 	 	 	 	
 01D6     25 [	 	 	FCB3    DB      37 DUP (?)
                ??	 	
                    ]	 	
 	 	 	 	
 01FB     25 [	 	 	fake_fcb db     37 dup (?)              ;fake f
	 	 	 	or size figuring
                ??	 	
                    ]	 	
 	 	 	 	
 0220     01 [	 	 	QFLG    DB      1 DUP (?)
                ??	 	
                    ]	 	
 	 	 	 	
 0221     01 [	 	 	HAVEOF  DB      1 DUP (?)
                ??	 	
                    ]	 	
 	 	 	 	
 0222     01 [	 	 	ENDING  DB      1 DUP (?)
                ??	 	
                    ]	 	
 	 	 	 	
 0223     01 [	 	 	SRCHFLG DB      1 DUP (?)
                ??	 	
                    ]	 	
 	 	 	 	
 0224     01 [	 	 	amnt_req dw     1 dup (?)               ;ammoun
	 	 	 	t of bytes requested to read
                ????	 	
                      ]	 	
 	 	 	 	
 0226     01 [	 	 	olddat  db      1 dup (?)               ;Used i
	 	 	 	n replace and search,
                ??	 	
                    ]	 	
 	 	 	 	
 	 	 	 	                                        ; repla
	 	 	 	ce by old data flag (1=yes)
 0227     01 [	 	 	srchmod db      1 dup (?)               ;Search
	 	 	 	 mode: 1=from current+1 to
                ??	 	
                    ]	 	
 	 	 	 	
 	 	 	 	                                        ; end o
	 	 	 	f buffer, 0=from beg. of
 	 	 	 	                                        ; buffe
	 	 	 	r to the end (old way).
 0228     01 [	 	 	MOVFLG  DB      1 DUP (?)
 The Microsoft MACRO Assembler             12-27-<1    	PAGE	1-11
EDLIN for MSDOS 2.0
	 	 	 	Contants and Data areas

                ??	 	
                    ]	 	
 	 	 	 	
 0229     80 [	 	 	        DB      STKSIZ DUP (?)
                ??	 	
                    ]	 	
 	 	 	 	
 	 	 	 	
 02A9	 	 	 	STACK   LABEL   BYTE
 02A9	 	 	 	START   LABEL   WORD
 	 	 	 	
 02A9	 	 	 	DATA    ENDS
 	 	 	 	
 	 	 	 	SUBTTL  Main Body
 The Microsoft MACRO Assembler             12-27-<1    	PAGE	1-12
EDLIN for MSDOS 2.0
	 	 	 	Main Body

 	 	 	 	PAGE
 	 	 	 	
 0000	 	 	 	CODE SEGMENT PUBLIC
 	 	 	 	
 	 	 	 	ASSUME  CS:DG,DS:DG,SS:DG,ES:DG
 	 	 	 	
 	 	 	 	        EXTRN   QUIT:NEAR,QUERY:NEAR,FNDFIRST:N
	 	 	 	EAR,FNDNEXT:NEAR
 	 	 	 	        EXTRN   UNQUOTE:NEAR,LF:NEAR,CRLF:NEAR,
	 	 	 	OUT:NEAR
 	 	 	 	        EXTRN   REST_DIR:NEAR,KILL_BL:NEAR,INT_
	 	 	 	24:NEAR
 	 	 	 	        EXTRN   FINDLIN:NEAR,SHOWNUM:NEAR,SCANL
	 	 	 	N:NEAR
 	 	 	 	
 	 	 	 	        endif
 	 	 	 	
 	 	 	 	        PUBLIC  CHKRANGE
 	 	 	 	
 0100	 	 	 	        ORG     100H
 	 	 	 	
 0100	 	 	 	EDLIN:
 0100  E9 0F12 R	 	        JMP     SIMPED
 	 	 	 	
 0103  0E00 [	 	 	edl_pad db      0e00h dup (?)
                ??	 	
                    ]	 	
 	 	 	 	
 	 	 	 	
 0F03  56 65 72 73 20 32	HEADER  DB      "Vers 2.14"
       2E 31 34	 	 	
 	 	 	 	
 0F0C	 	 	 	NONAME:
 0F0C  BA 0000 E	 	        MOV     DX,OFFSET DG:NDNAME
 0F0F  E9 1447 R	 	ERRJ:   JMP     xERROR
 	 	 	 	
 0F12	 	 	 	SIMPED:
 0F12  C6 06 0222 R 00	 	        MOV     BYTE PTR [ENDING],0
 0F17  BC 02A9 R	 	        MOV     SP,OFFSET DG:STACK
 	 	 	 	
 	 	 	 	;Code to print header
 	 	 	 	;       PUSH    AX
 	 	 	 	;       MOV     DX,OFFSET DG:HEADER
 	 	 	 	;       MOV     AH,STD_CON_STRING_OUTPUT
 	 	 	 	;       INT     21H
 	 	 	 	;       POP     AX
 	 	 	 	
 	 	 	 	;----- Check Version Number -------------------
	 	 	 	-------------------------;
 0F1A  50	 	 	        push    ax
 0F1B  B4 30	 	 	        mov     ah,Get_Version
 0F1D  CD 21	 	 	        int     21h
 0F1F  3C 02	 	 	        cmp     al,2
 The Microsoft MACRO Assembler             12-27-<1    	PAGE	1-13
EDLIN for MSDOS 2.0
	 	 	 	Main Body

 0F21  73 05	 	 	        jae     vers_ok                        
	 	 	 	 ; version >= 2, enter editor
 0F23  BA 0000 E	 	        mov     dx,offset dg:bad_vers_err
 0F26  EB E7	 	 	        jmp     short errj
 	 	 	 	;----------------------------------------------
	 	 	 	-------------------------;
 	 	 	 	
 0F28	 	 	 	vers_ok:
 	 	 	 	
 	 	 	 	;----- Process Pathnames ----------------------
	 	 	 	-------------------------;
 	 	 	 	
 0F28  B8 3700	 	 	        mov     ax,(char_oper shl 8)    ;get sw
	 	 	 	itch character
 0F2B  CD 21	 	 	        int     21h
 0F2D  80 FA 2F	 	 	        cmp     dl,"/"
 0F30  75 0F	 	 	        jnz     slashok                 ;if not
	 	 	 	 / , then not PC
 0F32  C6 06 002A R 5C	 	        mov     [dirchar],"\"           ;in PC,
	 	 	 	 dir separator = \
 0F37  C6 06 002C R 5C	 	        mov     [userdir],"\"
 0F3C  C6 06 0029 R 2F	 	        mov     [optchar],"/"           ;in PC,
	 	 	 	 option char = /
 	 	 	 	
 0F41	 	 	 	slashok:
 0F41  BE 0081	 	 	        mov     si,81h                  ;point 
	 	 	 	to cammand line
 	 	 	 	
 0F44  E8 0000 E	 	        call    kill_bl
 0F47  3C 0D	 	 	        cmp     al,13                   ;A carr
	 	 	 	iage return?
 0F49  74 C1	 	 	        je      noname                  ;yes, f
	 	 	 	ile name missing
 	 	 	 	
 0F4B  BF 006E R	 	        mov     di,offset dg:fname_buffer
 0F4E  33 C9	 	 	        xor     cx,cx                   ;zero p
	 	 	 	athname length
 	 	 	 	
 0F50	 	 	 	next_char:
 0F50  AA	 	 	        stosb                           ;put pa
	 	 	 	tname in buffer
 0F51  41	 	 	        inc     cx
 0F52  AC	 	 	        lodsb
 0F53  3C 20	 	 	        cmp     al,' '
 0F55  74 0C	 	 	        je      xx1
 0F57  3C 0D	 	 	        cmp     al,13                   ; a CR 
	 	 	 	?
 0F59  74 26	 	 	        je      name_copied
 0F5B  3A 06 0029 R	 	        cmp     al,[optchar]            ; an op
	 	 	 	tion character?
 0F5F  74 0C	 	 	        je      an_option
 0F61  EB ED	 	 	        jmp     short next_char
 	 	 	 	
 The Microsoft MACRO Assembler             12-27-<1    	PAGE	1-14
EDLIN for MSDOS 2.0
	 	 	 	Main Body

 0F63	 	 	 	xx1:
 0F63  4E	 	 	        dec     si
 0F64  E8 0000 E	 	        call    kill_bl
 0F67  3A 06 0029 R	 	        cmp     al,[optchar]
 0F6B  75 14	 	 	        jne     name_copied
 	 	 	 	
 0F6D	 	 	 	an_option:
 0F6D  AC	 	 	        lodsb                           ;get th
	 	 	 	e option
 0F6E  3C 42	 	 	        cmp     al,'B'
 0F70  74 0A	 	 	        je      b_opt
 0F72  3C 62	 	 	        cmp     al,'b'
 0F74  74 06	 	 	        je      b_opt
 0F76  BA 0000 E	 	        mov     dx,offset dg:opt_err    ;bad op
	 	 	 	tion specified
 0F79  E9 1447 R	 	        jmp     xerror
 	 	 	 	
 0F7C	 	 	 	b_opt:
 0F7C  C6 06 0021 R 01	 	        mov     [loadmod],1
 	 	 	 	
 0F81	 	 	 	name_copied:
 0F81  C6 05 00	 	 	        mov     byte ptr dg:[di],0      ;nul te
	 	 	 	rminate the pathname
 	 	 	 	
 	 	 	 	        endif
 	 	 	 	
 	 	 	 	;----- Scan for directory ---------------------
	 	 	 	-------------------------;
 0F84  4F	 	 	        dec     di                      ;adjust
	 	 	 	 to the end of the pathname
 	 	 	 	
 	 	 	 	        ELSE
 0F85  A0 002A R	 	        mov     al,dg:[dirchar]         ;get di
	 	 	 	rectory separator character
 0F88  FD	 	 	        std                             ;scan b
	 	 	 	ackwards
 0F89  F2/ AE	 	 	        repnz   scasb                   ;(cx ha
	 	 	 	s the pathname length)
 0F8B  FC	 	 	        cld                             ;reset 
	 	 	 	direction, just in case
 0F8C  74 03	 	 	        jz      sj1
 	 	 	 	        ENDIF
 	 	 	 	
 0F8E  E9 1025 R	 	        jmp     same_dir                ;no dir
	 	 	 	 separator char. found, the
 	 	 	 	                                        ; file 
	 	 	 	is in the current directory
 	 	 	 	                                        ; of th
	 	 	 	e corresponding drive. Ergo,
 	 	 	 	                                        ; the F
	 	 	 	CB contains the data already.
 	 	 	 	
 0F91	 	 	 	sj1:
 The Microsoft MACRO Assembler             12-27-<1    	PAGE	1-15
EDLIN for MSDOS 2.0
	 	 	 	Main Body

 0F91  E3 05	 	 	        jcxz    sj2                     ;no mor
	 	 	 	e chars left, it refers to root
 0F93  80 3D 3A	 	 	        cmp     byte ptr [di],':'       ;is the
	 	 	 	 prvious character a disk def?
 0F96  75 05	 	 	        jne     not_root
 0F98	 	 	 	sj2:
 0F98  C6 06 0026 R 01	 	        mov     dg:[the_root],01h       ;file i
	 	 	 	s in the root
 0F9D	 	 	 	not_root:
 0F9D  47	 	 	        inc     di                      ;point 
	 	 	 	to dir separator char.
 0F9E  B0 00	 	 	        mov     al,0
 0FA0  AA	 	 	        stosb                           ;nul te
	 	 	 	rminate directory name
 0FA1  58	 	 	        pop     ax
 0FA2  57	 	 	        push    di                      ;save p
	 	 	 	ointer to file name
 0FA3  C6 06 0027 R 01	 	        mov     dg:[fudge],01h          ;rememb
	 	 	 	er that the current directory
 	 	 	 	                                        ; has b
	 	 	 	een changed.
 	 	 	 	
 	 	 	 	;----- Save current directory for exit --------
	 	 	 	-------------------------;
 0FA8  B4 19	 	 	        mov     ah,get_default_drive    ;save c
	 	 	 	urrent drive
 0FAA  CD 21	 	 	        int     21h
 0FAC  A2 0028 R	 	        mov     dg:[user_drive],al
 	 	 	 	
 0FAF  8A 16 005C	 	        mov     dl,byte ptr ds:[fcb]    ;get sp
	 	 	 	ecified drive if any
 0FB3  0A D2	 	 	        or      dl,dl                   ;defaul
	 	 	 	t disk?
 0FB5  74 10	 	 	        jz      same_drive
 0FB7  FE CA	 	 	        dec     dl                      ;adjust
	 	 	 	 to real drive (a=0,b=1,...)
 0FB9  B4 0E	 	 	        mov     ah,set_default_drive    ;change
	 	 	 	 disks
 0FBB  CD 21	 	 	        int     21h
 0FBD  3C FF	 	 	        cmp     al,-1                   ;error?
 0FBF  75 06	 	 	        jne     same_drive
 0FC1  BA 0000 E	 	        mov     dx,offset dg:baddrv
 0FC4  E9 1447 R	 	        jmp     xerror
 	 	 	 	
 0FC7	 	 	 	same_drive:
 0FC7  B4 1F	 	 	        mov     ah,get_default_dpb
 0FC9  CD 21	 	 	        int     21h
 	 	 	 	
 	 	 	 	assume  ds:nothing
 	 	 	 	
 0FCB  3C FF	 	 	        cmp     al,-1                   ;bad dr
	 	 	 	ive? (should always be ok)
 0FCD  75 06	 	 	        jne     drvisok
 The Microsoft MACRO Assembler             12-27-<1    	PAGE	1-16
EDLIN for MSDOS 2.0
	 	 	 	Main Body

 0FCF  BA 0000 E	 	        mov     dx,offset dg:baddrv
 0FD2  E9 1447 R	 	        jmp     xerror
 	 	 	 	
 0FD5	 	 	 	drvisok:
 0FD5  83 7F 1C 00	 	        cmp     [bx.dpb_current_dir],0
 0FD9  74 0E	 	 	        je      curr_is_root
 0FDB  8B F3	 	 	        mov     si,bx
 0FDD  83 C6 1E	 	 	        add     si,dpb_dir_text
 0FE0  BF 002D R	 	        mov     di,offset dg:userdir + 1
 	 	 	 	
 0FE3	 	 	 	dir_save_loop:
 0FE3  AC	 	 	        lodsb
 0FE4  AA	 	 	        stosb
 0FE5  0A C0	 	 	        or      al,al
 0FE7  75 FA	 	 	        jnz     dir_save_loop
 	 	 	 	
 0FE9	 	 	 	curr_is_root:
 0FE9  0E	 	 	        push    cs
 0FEA  1F	 	 	        pop     ds
 	 	 	 	
 	 	 	 	assume  ds:dg
 	 	 	 	
 	 	 	 	
 	 	 	 	;----- Change directories ---------------------
	 	 	 	-------------------------;
 0FEB  80 3E 0026 R 01	 	        cmp     [the_root],01h
 0FF0  BA 002A R	 	        mov     dx,offset dg:[dirchar]         
	 	 	 	;assume the root
 0FF3  74 03	 	 	        je      sj3
 0FF5  BA 006E R	 	        mov     dx,offset dg:[fname_buffer]
 0FF8	 	 	 	sj3:
 0FF8  B4 3B	 	 	        mov     ah,chdir                       
	 	 	 	 ;change directory
 0FFA  CD 21	 	 	        int     21h
 0FFC  BA 0000 E	 	        mov     dx,offset dg:baddrv
 0FFF  73 03	 	 	        jnc     no_errors
 1001  E9 1447 R	 	        jmp     xerror
 1004	 	 	 	no_errors:
 	 	 	 	
 	 	 	 	;----- Set Up int 24 intercept ----------------
	 	 	 	-------------------------;
 	 	 	 	
 1004  B8 3524	 	 	        mov     ax,(get_interrupt_vector shl 8)
	 	 	 	 or 24h
 1007  CD 21	 	 	        int     21h
 1009  89 1E 0022 R	 	        mov     word ptr [hardch],bx
 100D  8C 06 0024 R	 	        mov     word ptr [hardch+2],es
 1011  B8 2524	 	 	        mov     ax,(set_interrupt_vector shl 8)
	 	 	 	 or 24h
 1014  BA 0000 E	 	        mov     dx,offset dg:int_24
 1017  CD 21	 	 	        int     21h
 1019  0E	 	 	        push    cs
 101A  07	 	 	        pop     es
 The Microsoft MACRO Assembler             12-27-<1    	PAGE	1-17
EDLIN for MSDOS 2.0
	 	 	 	Main Body

 	 	 	 	
 	 	 	 	;----- Parse filename to FCB ------------------
	 	 	 	-------------------------;
 101B  5E	 	 	        pop     si
 101C  BF 005C	 	 	        mov     di,fcb
 101F  B8 2901	 	 	        mov     ax,(parse_file_descriptor shl 8
	 	 	 	) or 1
 1022  CD 21	 	 	        int     21h
 1024  50	 	 	        push    ax
 	 	 	 	
 	 	 	 	;----------------------------------------------
	 	 	 	-------------------------;
 	 	 	 	
 1025	 	 	 	same_dir:
 1025  58	 	 	        pop     ax
 1026  0A C0	 	 	        OR      AL,AL
 1028  BA 0000 E	 	        MOV     DX,OFFSET DG:BADDRV
 102B  74 03	 	 	        jz      sj4
 102D  E9 1447 R	 	        jmp     xerror
 1030	 	 	 	sj4:
 1030  80 3E 005D 20	 	        CMP     BYTE PTR DS:[FCB+1]," "
 1035  75 03	 	 	        jnz     sj5
 1037  E9 0F0C R	 	        jmp     noname
 103A	 	 	 	sj5:
 103A  BE 0000 R	 	        MOV     SI,OFFSET DG:BAK
 103D  BF 0065	 	 	        MOV     DI,FCB+9
 1040  B9 0003	 	 	        MOV     CX,3
 	 	 	 	        ;File must not have .BAK extension
 1043  F3/ A6	 	 	        REPE    CMPSB
 1045  74 61	 	 	        JZ      NOTBAK
 	 	 	 	        ;Open input file
 1047  B4 0F	 	 	        MOV     AH,FCB_OPEN
 1049  BA 005C	 	 	        MOV     DX,FCB
 104C  CD 21	 	 	        INT     21H
 104E  A2 0221 R	 	        MOV     [HAVEOF],AL
 1051  0A C0	 	 	        OR      AL,AL
 1053  74 26	 	 	        JZ      HAVFIL
 	 	 	 	
 	 	 	 	;----- Check that file is not a directory -----
	 	 	 	-------
 1055  B4 16	 	 	        mov     ah,fcb_create
 1057  BA 005C	 	 	        mov     dx,fcb
 105A  CD 21	 	 	        int     21h
 105C  0A C0	 	 	        or      al,al
 105E  74 06	 	 	        jz      sj50                    ;no err
	 	 	 	or found
 1060  BA 0000 E	 	        mov     dx,offset dg:bcreat     ;creati
	 	 	 	on error
 1063  E9 1447 R	 	        jmp     xerror
 1066	 	 	 	sj50:
 1066  B4 10	 	 	        mov     ah,fcb_close            ;no err
	 	 	 	or, close the file
 1068  BA 005C	 	 	        mov     dx,fcb
 The Microsoft MACRO Assembler             12-27-<1    	PAGE	1-18
EDLIN for MSDOS 2.0
	 	 	 	Main Body

 106B  CD 21	 	 	        int     21h
 106D  B4 13	 	 	        mov     ah,fcb_delete           ;delete
	 	 	 	 the file
 106F  BA 005C	 	 	        mov     dx,fcb
 1072  CD 21	 	 	        int     21h
 	 	 	 	
 	 	 	 	;----------------------------------------------
	 	 	 	-------
 	 	 	 	
 1074  BA 0000 E	 	        MOV     DX,OFFSET DG:NEWFIL
 1077  B4 09	 	 	        MOV     AH,STD_CON_STRING_OUTPUT
 1079  CD 21	 	 	        INT     21H
 107B	 	 	 	HAVFIL:
 107B  BE 005C	 	 	        MOV     SI,FCB
 107E  BF 01B1 R	 	        MOV     DI,OFFSET DG:FCB2
 1081  B9 0009	 	 	        MOV     CX,9
 1084  F3/ A4	 	 	        REP     MOVSB
 1086  B0 24	 	 	        MOV     AL,"$"
 1088  AA	 	 	        STOSB
 1089  AA	 	 	        STOSB
 108A  AA	 	 	        STOSB
 108B	 	 	 	MAKFIL:
 	 	 	 	        ;Create .$$$ file to make sure director
	 	 	 	y has room
 108B  BA 01B1 R	 	        MOV     DX,OFFSET DG:FCB2
 108E  B4 16	 	 	        MOV     AH,FCB_CREATE
 1090  CD 21	 	 	        INT     21H
 1092  0A C0	 	 	        OR      AL,AL
 1094  74 18	 	 	        JZ      SETUP
 1096  80 3E 01F0 R 00	 	        CMP     BYTE PTR [DELFLG],0
 109B  75 05	 	 	        JNZ     NOROOM
 109D  E8 1A21 R	 	        CALL    DELBAK
 10A0  EB E9	 	 	        JMP     MAKFIL
 10A2	 	 	 	NOROOM:
 10A2  BA 0000 E	 	        MOV     DX,OFFSET DG:NODIR
 10A5  E9 1447 R	 	        JMP     xERROR
 10A8	 	 	 	NOTBAK:
 10A8  BA 0000 E	 	        MOV     DX,OFFSET DG:NOBAK
 10AB  E9 1447 R	 	        JMP     xERROR
 10AE	 	 	 	SETUP:
 10AE  33 C0	 	 	        XOR     AX,AX
 10B0  A3 007D	 	 	        MOV     WORD PTR DS:[FCB+fcb_RR],AX    
	 	 	 	     ;Set RR field to zero
 10B3  A3 007F	 	 	        MOV     WORD PTR DS:[FCB+fcb_RR+2],AX
 10B6  A3 01D2 R	 	        MOV     WORD PTR [FCB2+fcb_RR],AX
 10B9  A3 01D4 R	 	        MOV     WORD PTR [FCB2+fcb_RR+2],AX
 10BC  40	 	 	        INC     AX
 10BD  A3 006A	 	 	        MOV     WORD PTR DS:[FCB+fcb_RECSIZ],AX
	 	 	 	         ;Set record length to 1
 10C0  A3 01BF R	 	        MOV     WORD PTR [FCB2+fcb_RECSIZ],AX
 10C3  BA 02A9 R	 	        MOV     DX,OFFSET DG:START
 10C6  8B FA	 	 	        MOV     DI,DX
 10C8  B4 1A	 	 	        MOV     AH,SET_DMA
 The Microsoft MACRO Assembler             12-27-<1    	PAGE	1-19
EDLIN for MSDOS 2.0
	 	 	 	Main Body

 10CA  CD 21	 	 	        INT     21H
 10CC  8B 0E 0006	 	        MOV     CX,DS:[6]
 10D0  49	 	 	        DEC     CX
 10D1  89 0E 0024 R	 	        MOV     [LAST],CX
 10D5  F6 06 0221 R FF	 	        TEST    BYTE PTR [HAVEOF],-1
 10DA  75 2A	 	 	        JNZ     SAVEND
 10DC  81 E9 02A9 R	 	        SUB     CX,OFFSET DG:START      ;Availa
	 	 	 	ble memory
 10E0  D1 E9	 	 	        SHR     CX,1            ;1/2 of availab
	 	 	 	le memory
 10E2  8B C1	 	 	        MOV     AX,CX
 10E4  D1 E9	 	 	        SHR     CX,1            ;1/4 of availab
	 	 	 	le memory
 10E6  89 0E 0020 R	 	        MOV     [ONE4TH],CX     ;Save amount of
	 	 	 	 1/4 full
 10EA  03 C8	 	 	        ADD     CX,AX           ;3/4 of availab
	 	 	 	le memory
 10EC  8B D1	 	 	        MOV     DX,CX
 10EE  81 C2 02A9 R	 	        ADD     DX,OFFSET DG:START
 10F2  89 16 0022 R	 	        MOV     [THREE4TH],DX   ;Save pointer t
	 	 	 	o 3/4 full
 	 	 	 	        ;Read in input file
 10F6  BA 005C	 	 	        MOV     DX,FCB
 10F9  B4 27	 	 	        MOV     AH,FCB_RANDOM_READ_BLOCK
 10FB  89 0E 0224 R	 	        mov     [amnt_req],cx   ;save ammount o
	 	 	 	f chars requested
 10FF  CD 21	 	 	        INT     21H
 1101  E8 12C6 R	 	        CALL    SCANEOF
 1104  03 F9	 	 	        ADD     DI,CX           ;Point to last 
	 	 	 	byte
 1106	 	 	 	SAVEND:
 1106  FC	 	 	        CLD
 1107  C6 05 1A	 	 	        MOV     BYTE PTR [DI],1AH
 110A  89 3E 0026 R	 	        MOV     [ENDTXT],DI
 110E  C6 06 002C R 80	 	        MOV     BYTE PTR [COMBUF],128
 1113  C6 06 00AE R FF	 	        MOV     BYTE PTR [EDITBUF],255
 1118  C6 06 01B0 R 0A	 	        MOV     BYTE PTR [EOL],10
 111D  C7 06 001E R 02A9 R	        MOV     [POINTER],OFFSET DG:START
 1123  C7 06 001C R 0001	        MOV     [CURRENT],1
 1129  C7 06 0000 R 0001	        MOV     [PARAM1],1
 112F  F6 06 0221 R FF	 	        TEST    BYTE PTR [HAVEOF],-1
 1134  75 03	 	 	        JNZ     COMMAND
 1136  E8 1328 R	 	        CALL    APPEND
 	 	 	 	
 1139	 	 	 	COMMAND:
 1139  BC 02A9 R	 	        MOV     SP, OFFSET DG:STACK
 113C  B8 2523	 	 	        MOV     AX,(SET_INTERRUPT_VECTOR SHL 8)
	 	 	 	 OR 23H
 113F  BA 1A0F R	 	        MOV     DX,OFFSET DG:ABORTCOM
 1142  CD 21	 	 	        INT     21H
 1144  B0 2A	 	 	        MOV     AL,PROMPT
 1146  E8 0000 E	 	        CALL    OUT
 1149  BA 002C R	 	        MOV     DX,OFFSET DG:COMBUF
 The Microsoft MACRO Assembler             12-27-<1    	PAGE	1-20
EDLIN for MSDOS 2.0
	 	 	 	Main Body

 114C  B4 0A	 	 	        MOV     AH,STD_CON_STRING_INPUT
 114E  CD 21	 	 	        INT     21H
 1150  C7 06 0028 R 002E R	        MOV     [COMLINE],OFFSET DG:COMBUF + 2
 1156  B0 0A	 	 	        MOV     AL,10
 1158  E8 0000 E	 	        CALL    OUT
 115B	 	 	 	PARSE:
 115B  C7 06 0002 R 0000	        MOV     [PARAM2],0
 1161  C7 06 0004 R 0000	        MOV     [PARAM3],0
 1167  C7 06 0006 R 0000	        MOV     [PARAM4],0
 116D  C6 06 0020 R 00	 	        mov     [fourth],0              ;reset 
	 	 	 	the fourth parameter flag
 1172  C6 06 0220 R 00	 	        MOV     BYTE PTR [QFLG],0
 1177  8B 36 0028 R	 	        MOV     SI,[COMLINE]
 117B  BD 0000 R	 	        MOV     BP,OFFSET DG:PARAM1
 117E  33 FF	 	 	        XOR     DI,DI
 1180	 	 	 	CHKLP:
 1180  E8 1208 R	 	        CALL    GETNUM
 1183  89 13	 	 	        MOV     [BP+DI],DX
 1185  47	 	 	        INC     DI
 1186  47	 	 	        INC     DI
 1187  E8 11EC R	 	        CALL    SKIP1
 118A  3C 2C	 	 	        CMP     AL,","
 118C  75 01	 	 	        JNZ     CHKNXT
 118E  46	 	 	        INC     SI
 118F	 	 	 	CHKNXT:
 118F  4E	 	 	        DEC     SI
 1190  83 FF 08	 	 	        CMP     DI,8
 1193  72 EB	 	 	        JB      CHKLP
 1195  E8 11EB R	 	        CALL    SKIP
 1198  3C 3F	 	 	        CMP     AL,"?"
 119A  75 06	 	 	        JNZ     DISPATCH
 119C  A2 0220 R	 	        MOV     [QFLG],AL
 119F  E8 11EB R	 	        CALL    SKIP
 11A2	 	 	 	DISPATCH:
 11A2  3C 5F	 	 	        CMP     AL,5FH
 11A4  76 02	 	 	        JBE     UPCASE
 11A6  24 5F	 	 	        AND     AL,5FH
 11A8	 	 	 	UPCASE:
 11A8  BF 1299 R	 	        MOV     DI,OFFSET DG:COMTAB
 11AB  B9 000F 90	 	        MOV     CX,NUMCOM
 11AF  F2/ AE	 	 	        REPNE   SCASB
 11B1  75 4B	 	 	        JNZ     COMERR
 11B3  8B D9	 	 	        MOV     BX,CX
 11B5  A1 0002 R	 	        MOV     AX,[PARAM2]
 11B8  0B C0	 	 	        OR      AX,AX
 11BA  74 06	 	 	        JZ      PARMOK
 11BC  3B 06 0000 R	 	        CMP     AX,[PARAM1]
 11C0  72 3C	 	 	        JB      COMERR          ;Param. 2 must 
	 	 	 	be >= param 1
 11C2	 	 	 	PARMOK:
 11C2  89 36 0028 R	 	        MOV     [COMLINE],SI
 	 	 	 	
 	 	 	 	        endif
 The Microsoft MACRO Assembler             12-27-<1    	PAGE	1-21
EDLIN for MSDOS 2.0
	 	 	 	Main Body

 	 	 	 	
 11C6  D1 E3	 	 	        SHL     BX,1
 11C8  FF 97 12A8 R	 	        CALL    [BX+TABLE]
 11CC	 	 	 	COMOVER:
 11CC  8B 36 0028 R	 	        MOV     SI,[COMLINE]
 11D0  E8 11EB R	 	        CALL    SKIP
 11D3  3C 0D	 	 	        CMP     AL,0DH
 11D5  74 11	 	 	        JZ      COMMANDJ
 11D7  3C 1A	 	 	        CMP     AL,1AH
 11D9  74 04	 	 	        JZ      DELIM
 11DB  3C 3B	 	 	        CMP     AL,";"
 11DD  75 01	 	 	        JNZ     NODELIM
 11DF	 	 	 	DELIM:
 11DF  46	 	 	        INC     SI
 11E0	 	 	 	NODELIM:
 11E0  4E	 	 	        DEC     SI
 11E1  89 36 0028 R	 	        MOV     [COMLINE],SI
 11E5  E9 115B R	 	        JMP     PARSE
 	 	 	 	
 11E8	 	 	 	COMMANDJ:
 11E8  E9 1139 R	 	        JMP     COMMAND
 	 	 	 	
 11EB	 	 	 	SKIP:
 11EB  AC	 	 	        LODSB
 11EC	 	 	 	SKIP1:
 11EC  3C 20	 	 	        CMP     AL," "
 11EE  74 FB	 	 	        JZ      SKIP
 11F0  C3	 	 	RET1:   RET
 	 	 	 	
 11F1	 	 	 	CHKRANGE:
 11F1  83 3E 0002 R 00	 	        CMP     [PARAM2],0
 11F6  74 F8	 	 	        JZ      RET1
 11F8  3B 1E 0002 R	 	        CMP     BX,[PARAM2]
 11FC  76 F2	 	 	        JBE     RET1
 11FE	 	 	 	COMERR:
 11FE  BA 0000 E	 	        MOV     DX,OFFSET DG:BADCOM
 1201	 	 	 	COMERR1:
 1201  B4 09	 	 	        MOV     AH,STD_CON_STRING_OUTPUT
 1203  CD 21	 	 	        INT     21H
 1205  E9 1139 R	 	        JMP     COMMAND
 	 	 	 	
 	 	 	 	
 1208	 	 	 	GETNUM:
 1208  E8 11EB R	 	        CALL    SKIP
 120B  83 FF 06	 	 	        cmp     di,6            ;Is this the fo
	 	 	 	urth parameter?
 120E  75 05	 	 	        jne     sk1
 1210  C6 06 0020 R 01	 	        mov     [fourth],1      ;yes, set the f
	 	 	 	lag
 1215	 	 	 	sk1:
 1215  3C 2E	 	 	        CMP     AL,"."
 1217  74 3D	 	 	        JZ      CURLIN
 1219  3C 23	 	 	        CMP     AL,"#"
 The Microsoft MACRO Assembler             12-27-<1    	PAGE	1-22
EDLIN for MSDOS 2.0
	 	 	 	Main Body

 121B  74 46	 	 	        JZ      MAXLIN
 121D  3C 2B	 	 	        CMP     AL,"+"
 121F  74 4E	 	 	        JZ      FORLIN
 1221  3C 2D	 	 	        CMP     AL,"-"
 1223  74 59	 	 	        JZ      BACKLIN
 1225  BA 0000	 	 	        MOV     DX,0
 1228  B1 00	 	 	        MOV     CL,0            ;Flag no parame
	 	 	 	ter seen yet
 122A	 	 	 	NUMLP:
 122A  3C 30	 	 	        CMP     AL,"0"
 122C  72 1E	 	 	        JB      NUMCHK
 122E  3C 39	 	 	        CMP     AL,"9"
 1230  77 1A	 	 	        JA      NUMCHK
 1232  81 FA 1999	 	        CMP     DX,6553         ;Max line/10
 1236  73 C6	 	 	        JAE     COMERR          ;Ten times this
	 	 	 	 is too big
 1238  B1 01	 	 	        MOV     CL,1            ;Parameter digi
	 	 	 	t has been found
 123A  2C 30	 	 	        SUB     AL,"0"
 123C  8B DA	 	 	        MOV     BX,DX
 123E  D1 E2	 	 	        SHL     DX,1
 1240  D1 E2	 	 	        SHL     DX,1
 1242  03 D3	 	 	        ADD     DX,BX
 1244  D1 E2	 	 	        SHL     DX,1
 1246  98	 	 	        CBW
 1247  03 D0	 	 	        ADD     DX,AX
 1249  AC	 	 	        LODSB
 124A  EB DE	 	 	        JMP     SHORT NUMLP
 124C	 	 	 	NUMCHK:
 124C  80 F9 00	 	 	        CMP     CL,0
 124F  74 9F	 	 	        JZ      RET1
 1251  0B D2	 	 	        OR      DX,DX
 1253  74 A9	 	 	        JZ      COMERR          ;Don't allow ze
	 	 	 	ro as a parameter
 1255  C3	 	 	        RET
 	 	 	 	
 1256	 	 	 	CURLIN:
 1256  80 3E 0020 R 01	 	        cmp     [fourth],1      ;the fourth par
	 	 	 	ameter?
 125B  74 39	 	 	        je      comerra         ;yes, an error
 125D  8B 16 001C R	 	        MOV     DX,[CURRENT]
 1261  AC	 	 	        LODSB
 1262  C3	 	 	        RET
 1263	 	 	 	MAXLIN:
 1263  80 3E 0020 R 01	 	        cmp     [fourth],1      ;the fourth par
	 	 	 	ameter?
 1268  74 2C	 	 	        je      comerra         ;yes, an error
 126A  BA FFFE	 	 	        MOV     DX,-2
 126D  AC	 	 	        LODSB
 126E  C3	 	 	        RET
 126F	 	 	 	FORLIN:
 126F  80 3E 0020 R 01	 	        cmp     [fourth],1      ;the fourth par
	 	 	 	ameter?
 The Microsoft MACRO Assembler             12-27-<1    	PAGE	1-23
EDLIN for MSDOS 2.0
	 	 	 	Main Body

 1274  74 20	 	 	        je      comerra         ;yes, an error
 1276  E8 1208 R	 	        CALL    GETNUM
 1279  03 16 001C R	 	        ADD     DX,[CURRENT]
 127D  C3	 	 	        RET
 127E	 	 	 	BACKLIN:
 127E  80 3E 0020 R 01	 	        cmp     [fourth],1      ;the fourth par
	 	 	 	ameter?
 1283  74 11	 	 	        je      comerra         ;yes, an error
 1285  E8 1208 R	 	        CALL    GETNUM
 1288  8B 1E 001C R	 	        MOV     BX,[CURRENT]
 128C  2B DA	 	 	        SUB     BX,DX
 128E  79 03	 	 	        jns     sk2     ;if below beg of buffer
	 	 	 	 then default to the
 1290  BB 0001	 	 	        mov     bx,1    ; beg of buffer (line1)
 1293	 	 	 	sk2:
 1293  8B D3	 	 	        MOV     DX,BX
 1295  C3	 	 	        RET
 	 	 	 	
 1296	 	 	 	comerra:
 1296  E9 11FE R	 	        jmp     comerr
 	 	 	 	
 	 	 	 	
 1299  51 54 43 4D 57 41	COMTAB  DB      "QTCMWASRDLPIE;",13
       53 52 44 4C 50 49	
       45 3B 0D	 	 	
 	 	 	 	
 = 000F	 	 	 	NUMCOM  EQU     $-COMTAB
 	 	 	 	
 	 	 	 	;----------------------------------------------
	 	 	 	-------------------------;
 	 	 	 	;       Carefull changing the order of the next
	 	 	 	 two tables. They are
 	 	 	 	;      linked and chnges should be be to both.
 	 	 	 	
 12A8  166E R	 	 	TABLE   DW      NOCOM   ;No command--edit line
 12AA  166E R	 	 	        DW      NOCOM
 12AC  19BC R	 	 	        DW      ENDED
 12AE  1914 R	 	 	        DW      INSERT
 12B0  1451 R	 	 	        DW      PAGE
 12B2  14A9 R	 	 	        DW      LIST
 12B4  1634 R	 	 	        DW      DELETE
 12B6  1531 R	 	 	        dw      replac_from_curr        ;replac
	 	 	 	e from current+1 line
 12B8  15D2 R	 	 	        dw      search_from_curr        ;search
	 	 	 	 from current+1 line
 12BA  1328 R	 	 	        DW      APPEND
 12BC  13D6 R	 	 	        DW      EWRITE
 12BE  1710 R	 	 	        DW      MOVE
 12C0  1717 R	 	 	        DW      COPY
 12C2  186A R	 	 	        DW      MERGE
 	 	 	 	
 	 	 	 	        else
 12C4  0000 E	 	 	        DW      QUIT
 The Microsoft MACRO Assembler             12-27-<1    	PAGE	1-24
EDLIN for MSDOS 2.0
	 	 	 	Main Body

 	 	 	 	        endif
 	 	 	 	
 	 	 	 	        endif
 	 	 	 	
 	 	 	 	        endif
 	 	 	 	
 12C6	 	 	 	SCANEOF:
 12C6  80 3E 0021 R 00	 	        cmp     [loadmod],0
 12CB  74 1E	 	 	        je      sj52
 	 	 	 	
 	 	 	 	;----- Load till physical end of file
 12CD  3B 0E 0224 R	 	        cmp     cx,word ptr[amnt_req]
 12D1  72 05	 	 	        jb      sj51
 12D3  32 C0	 	 	        xor     al,al
 12D5  FE C0	 	 	        inc     al              ;reset zero fla
	 	 	 	g
 12D7  C3	 	 	        ret
 12D8	 	 	 	sj51:
 12D8  E3 0B	 	 	        jcxz    sj51b
 12DA  57	 	 	        push    di              ;get rid of any
	 	 	 	 ^Z at the end of the file
 12DB  03 F9	 	 	        add     di,cx
 12DD  4F	 	 	        dec     di              ;points to last
	 	 	 	 char
 12DE  80 3D 1A	 	 	        cmp     byte ptr [di],1ah
 12E1  5F	 	 	        pop     di
 12E2  75 01	 	 	        jne     sj51b
 12E4  49	 	 	        dec     cx
 12E5	 	 	 	sj51b:
 12E5  32 C0	 	 	        xor     al,al           ;set zero flag
 12E7  E8 1306 R	 	        call    check_end       ;check that we 
	 	 	 	have a CRLF pair at the end
 12EA  C3	 	 	        ret
 	 	 	 	
 	 	 	 	;----- Load till first ^Z is found
 12EB	 	 	 	sj52:
 12EB  57	 	 	        PUSH    DI
 12EC  51	 	 	        PUSH    CX
 12ED  B0 1A	 	 	        MOV     AL,1AH
 12EF  0B C9	 	 	        or      cx,cx
 12F1  74 07	 	 	        jz      not_found       ;skip with zero
	 	 	 	 flag set
 12F3  F2/ AE	 	 	        REPNE   SCASB           ;Scan for end o
	 	 	 	f file mark
 12F5  75 03	 	 	        jnz     not_found
 12F7  9F	 	 	        LAHF                    ;Save flags mom
	 	 	 	entarily
 12F8  41	 	 	        inc     cx              ;include the ^Z
 12F9  9E	 	 	        SAHF                    ;Restore flags
 12FA	 	 	 	not_found:
 12FA  8B F9	 	 	        mov     di,cx           ;not found at t
	 	 	 	he end
 12FC  59	 	 	        POP     CX
 The Microsoft MACRO Assembler             12-27-<1    	PAGE	1-25
EDLIN for MSDOS 2.0
	 	 	 	Main Body

 12FD  9F	 	 	        LAHF                    ;Save flags mom
	 	 	 	entarily
 12FE  2B CF	 	 	        SUB     CX,DI           ;Reduce byte co
	 	 	 	unt if EOF found
 1300  9E	 	 	        SAHF                    ;Restore flags
 1301  5F	 	 	        POP     DI
 1302  E8 1306 R	 	        call    check_end       ;check that we 
	 	 	 	have a CRLF pair at the end
 	 	 	 	
 1305  C3	 	 	RET2:   RET
 	 	 	 	
 	 	 	 	
 	 	 	 	;----------------------------------------------
	 	 	 	-------------------------
 	 	 	 	;       If the end of file was found, then chec
	 	 	 	k that the last character
 	 	 	 	; in the file is a LF. If not put a CRLF pair i
	 	 	 	n.
 	 	 	 	
 1306	 	 	 	check_end:
 1306  75 1C	 	 	        jnz     not_end                 ;end wa
	 	 	 	s not reached
 1308  9C	 	 	        pushf                           ;save r
	 	 	 	eturn flag
 1309  57	 	 	        push    di                      ;save p
	 	 	 	ointer to buffer
 130A  03 F9	 	 	        add     di,cx                   ;points
	 	 	 	 to one past end on text
 130C  4F	 	 	        dec     di                      ;points
	 	 	 	 to last character
 130D  81 FF 02A9 R	 	        cmp     di,offset dg:start
 1311  74 05	 	 	        je      check_no
 1313  80 3D 0A	 	 	        cmp     byte ptr[di],0ah        ;is a L
	 	 	 	F the last character?
 1316  74 0A	 	 	        je      check_done              ;yes, e
	 	 	 	xit
 1318	 	 	 	check_no:
 1318  C6 45 01 0D	 	        mov     byte ptr[di+1],0dh      ;no, pu
	 	 	 	t a CR
 131C  41	 	 	        inc     cx                      ;one mo
	 	 	 	re char in text
 131D  C6 45 02 0A	 	        mov     byte ptr[di+2],0ah      ;put a 
	 	 	 	LF
 1321  41	 	 	        inc     cx                      ;anothe
	 	 	 	r character at the end
 1322	 	 	 	check_done:
 1322  5F	 	 	        pop     di
 1323  9D	 	 	        popf
 1324	 	 	 	not_end:
 1324  C3	 	 	        ret
 	 	 	 	
 	 	 	 	
 	 	 	 	
 The Microsoft MACRO Assembler             12-27-<1    	PAGE	1-26
EDLIN for MSDOS 2.0
	 	 	 	Main Body

 1325  E9 13BD R	 	NOMOREJ:JMP     NOMORE
 	 	 	 	
 1328	 	 	 	APPEND:
 1328  F6 06 0221 R FF	 	        TEST    BYTE PTR [HAVEOF],-1
 132D  75 F6	 	 	        JNZ     NOMOREJ
 132F  8B 16 0026 R	 	        MOV     DX,[ENDTXT]
 1333  83 3E 0000 R 00	 	        CMP     [PARAM1],0      ;See if paramet
	 	 	 	er is missing
 1338  75 06	 	 	        JNZ     PARMAPP
 133A  3B 16 0022 R	 	        CMP     DX,[THREE4TH]   ;See if already
	 	 	 	 3/4ths full
 133E  73 C5	 	 	        JAE     RET2            ;If so, then do
	 	 	 	ne already
 1340	 	 	 	PARMAPP:
 1340  8B FA	 	 	        MOV     DI,DX
 1342  B4 1A	 	 	        MOV     AH,SET_DMA
 1344  CD 21	 	 	        INT     21H
 1346  8B 0E 0024 R	 	        MOV     CX,[LAST]
 134A  2B CA	 	 	        SUB     CX,DX           ;Amount of memo
	 	 	 	ry available
 134C  75 03	 	 	        jnz     sj53
 134E  E9 1700 R	 	        jmp     memerr
 1351	 	 	 	sj53:
 1351  BA 005C	 	 	        MOV     DX,FCB
 1354  89 0E 0224 R	 	        mov     [amnt_req],cx   ;save ammount o
	 	 	 	f chars requested
 1358  B4 27	 	 	        MOV     AH,FCB_RANDOM_READ_BLOCK
 135A  CD 21	 	 	        INT     21H              ;Fill memory w
	 	 	 	ith file data
 135C  A2 0221 R	 	        MOV     [HAVEOF],AL
 135F  51	 	 	        PUSH    CX              ;Save actual by
	 	 	 	te count
 1360  E8 12C6 R	 	        CALL    SCANEOF
 1363  75 05	 	 	        JNZ     NOTEND
 1365  C6 06 0221 R 01	 	        MOV     BYTE PTR [HAVEOF],1     ;Set fl
	 	 	 	ag if 1AH found in file
 136A	 	 	 	NOTEND:
 136A  33 D2	 	 	        XOR     DX,DX
 136C  8B 1E 0000 R	 	        MOV     BX,[PARAM1]
 1370  0B DB	 	 	        OR      BX,BX
 1372  75 15	 	 	        JNZ     COUNTLN
 1374  8B C7	 	 	        MOV     AX,DI
 1376  03 C1	 	 	        ADD     AX,CX           ;First byte aft
	 	 	 	er loaded text
 1378  3B 06 0022 R	 	        CMP     AX,[THREE4TH]   ;See if we made
	 	 	 	 3/4 full
 137C  76 0B	 	 	        JBE     COUNTLN
 137E  8B 3E 0022 R	 	        MOV     DI,[THREE4TH]
 1382  8B C8	 	 	        MOV     CX,AX
 1384  2B CF	 	 	        SUB     CX,DI           ;Length remaini
	 	 	 	ng over 3/4
 1386  BB 0001	 	 	        MOV     BX,1            ;Look for one m
	 	 	 	ore line
 The Microsoft MACRO Assembler             12-27-<1    	PAGE	1-27
EDLIN for MSDOS 2.0
	 	 	 	Main Body

 1389	 	 	 	COUNTLN:
 1389  E8 0000 E	 	        CALL    SCANLN          ;Look for BX li
	 	 	 	nes
 138C  38 45 FF	 	 	        CMP     [DI-1],AL       ;Check for full
	 	 	 	 line
 138F  74 0C	 	 	        JZ      FULLN
 1391  FD	 	 	        STD
 1392  4F	 	 	        DEC     DI
 1393  8B 0E 0024 R	 	        MOV     CX,[LAST]
 1397  F2/ AE	 	 	        REPNE   SCASB                   ;Scan b
	 	 	 	ackwards for last line
 1399  47	 	 	        INC     DI
 139A  47	 	 	        INC     DI
 139B  4A	 	 	        DEC     DX
 139C  FC	 	 	        CLD
 139D	 	 	 	FULLN:
 139D  59	 	 	        POP     CX                             
	 	 	 	 ;Actual amount read
 139E  C7 05 001A	 	        MOV     WORD PTR [DI],1AH              
	 	 	 	 ;Place EOF after last line
 13A2  2B CF	 	 	        SUB     CX,DI
 13A4  87 3E 0026 R	 	        XCHG    DI,[ENDTXT]
 13A8  03 F9	 	 	        ADD     DI,CX                          
	 	 	 	 ;Amount of file read but not used
 13AA  29 3E 007D	 	        SUB     WORD PTR DS:[FCB+fcb_RR],DI    
	 	 	 	     ;Adjust RR field in case end of file
 13AE  83 1E 007F 00	 	        SBB     WORD PTR DS:[FCB+fcb_RR+2],0   
	 	 	 	        ;   was not reached
 13B3  3B DA	 	 	        CMP     BX,DX
 13B5  75 0E	 	 	        JNZ     EOFCHK
 13B7  C6 06 0221 R 00	 	        MOV     BYTE PTR [HAVEOF],0
 13BC  C3	 	 	        RET
 13BD	 	 	 	NOMORE:
 13BD  BA 0000 E	 	        MOV     DX,OFFSET DG:EOF
 13C0  B4 09	 	 	        MOV     AH,STD_CON_STRING_OUTPUT
 13C2  CD 21	 	 	        INT     21H
 13C4  C3	 	 	RET3:   RET
 13C5	 	 	 	EOFCHK:
 13C5  F6 06 0221 R FF	 	        TEST    BYTE PTR [HAVEOF],-1
 13CA  75 F1	 	 	        JNZ     NOMORE
 13CC  F6 06 0222 R FF	 	        TEST    BYTE PTR [ENDING],-1
 13D1  75 F1	 	 	        JNZ     RET3            ;Suppress memor
	 	 	 	y error during End
 13D3  E9 1700 R	 	        JMP     MEMERR
 	 	 	 	
 13D6	 	 	 	EWRITE:
 13D6  8B 1E 0000 R	 	        MOV     BX,[PARAM1]
 13DA  0B DB	 	 	        OR      BX,BX
 13DC  75 1C	 	 	        JNZ     WRT
 13DE  8B 0E 0020 R	 	        MOV     CX,[ONE4TH]
 13E2  8B 3E 0026 R	 	        MOV     DI,[ENDTXT]
 13E6  2B F9	 	 	        SUB     DI,CX           ;Write everythi
	 	 	 	ng in front of here
 The Microsoft MACRO Assembler             12-27-<1    	PAGE	1-28
EDLIN for MSDOS 2.0
	 	 	 	Main Body

 13E8  76 DA	 	 	        JBE     RET3
 13EA  81 FF 02A9 R	 	        CMP     DI,OFFSET DG:START      ;See if
	 	 	 	 there's anything to write
 13EE  76 D4	 	 	        JBE     RET3
 13F0  33 D2	 	 	        XOR     DX,DX
 13F2  BB 0001	 	 	        MOV     BX,1            ;Look for one m
	 	 	 	ore line
 13F5  E8 0000 E	 	        CALL    SCANLN
 13F8  EB 04	 	 	        JMP     SHORT WRTADD
 13FA	 	 	 	WRT:
 13FA  43	 	 	        INC     BX
 13FB  E8 0000 E	 	        CALL    FINDLIN
 13FE	 	 	 	WRTADD:
 13FE  80 3E 01F0 R 00	 	        CMP     BYTE PTR [DELFLG],0
 1403  75 05	 	 	        JNZ     WRTADD1
 1405  57	 	 	        PUSH    DI
 1406  E8 1A21 R	 	        CALL    DELBAK                  ;Want t
	 	 	 	o delete the .BAK file
 	 	 	 	                                        ;as soo
	 	 	 	n as the first write occurs
 1409  5F	 	 	        POP     DI
 140A	 	 	 	WRTADD1:
 140A  8B CF	 	 	        MOV     CX,DI
 140C  BA 02A9 R	 	        MOV     DX,OFFSET DG:START
 140F  2B CA	 	 	        SUB     CX,DX                   ;Amount
	 	 	 	 to write
 1411  74 B1	 	 	        JZ      RET3
 1413  B4 1A	 	 	        MOV     AH,SET_DMA
 1415  CD 21	 	 	        INT     21H
 1417  BA 01B1 R	 	        MOV     DX,OFFSET DG:FCB2
 141A  B4 28	 	 	        MOV     AH,FCB_RANDOM_WRITE_BLOCK
 141C  CD 21	 	 	        INT     21H
 141E  0A C0	 	 	        OR      AL,AL
 1420  75 1E	 	 	        JNZ     WRTERR
 1422  8B F7	 	 	        MOV     SI,DI
 1424  BF 02A9 R	 	        MOV     DI,OFFSET DG:START
 1427  89 3E 001E R	 	        MOV     [POINTER],DI
 142B  8B 0E 0026 R	 	        MOV     CX,[ENDTXT]
 142F  2B CE	 	 	        SUB     CX,SI
 1431  41	 	 	        INC     CX              ;Amount of text
	 	 	 	 remaining
 1432  F3/ A4	 	 	        REP     MOVSB
 1434  4F	 	 	        DEC     DI              ;Point to EOF
 1435  89 3E 0026 R	 	        MOV     [ENDTXT],DI
 1439  C7 06 001C R 0001	        MOV     [CURRENT],1
 143F  C3	 	 	        RET
 	 	 	 	
 1440	 	 	 	WRTERR:
 1440  B4 10	 	 	        MOV     AH,FCB_CLOSE
 1442  CD 21	 	 	        INT     21H
 1444  BA 0000 E	 	        MOV     DX,OFFSET DG:DSKFUL
 1447	 	 	 	xERROR:
 1447  B4 09	 	 	        MOV     AH,STD_CON_STRING_OUTPUT
 The Microsoft MACRO Assembler             12-27-<1    	PAGE	1-29
EDLIN for MSDOS 2.0
	 	 	 	Main Body

 1449  CD 21	 	 	        INT     21H
 	 	 	 	;----------------------------------------------
	 	 	 	-------------------------
 144B  E8 0000 E	 	        call    rest_dir                ;restor
	 	 	 	e to the proper directory
 	 	 	 	;----------------------------------------------
	 	 	 	-------------------------
 144E  CD 20	 	 	        INT     32
 	 	 	 	
 1450  C3	 	 	RET$5:  RET
 	 	 	 	
 1451	 	 	 	PAGE:
 1451  33 DB	 	 	        xor     bx,bx           ;get last line 
	 	 	 	in the buffer
 1453  E8 0000 E	 	        call    findlin
 1456  89 16 002A R	 	        mov     [lastlin],dx
 	 	 	 	
 145A  8B 1E 0000 R	 	        mov     bx,[param1]
 145E  0B DB	 	 	        or      bx,bx           ;was it specifi
	 	 	 	ed?
 1460  75 0A	 	 	        jnz     frstok          ;yes, use it
 1462  8B 1E 001C R	 	        mov     bx,[current]
 1466  83 FB 01	 	 	        cmp     bx,1            ;if current lin
	 	 	 	e =1 start from there
 1469  74 01	 	 	        je      frstok
 146B  43	 	 	        inc     bx              ;start from cur
	 	 	 	rent+1 line
 146C	 	 	 	frstok:
 146C  3B 1E 002A R	 	        cmp     bx,[lastlin]    ;check that we 
	 	 	 	are in the buffer
 1470  77 DE	 	 	        ja      ret$5           ;if not just qu
	 	 	 	it
 1472	 	 	 	infile:
 1472  8B 16 0002 R	 	        mov     dx,[param2]
 1476  0B D2	 	 	        or      dx,dx           ;was param2 spe
	 	 	 	cified?
 1478  75 05	 	 	        jnz     scndok          ;yes,....
 147A  8B D3	 	 	        mov     dx,bx           ;no, take the e
	 	 	 	nd line to be the
 147C  83 C2 16	 	 	        add     dx,22           ;  start line +
	 	 	 	 23
 147F	 	 	 	scndok:
 147F  42	 	 	        inc     dx
 1480  3B 16 002A R	 	        cmp     dx,[lastlin]    ;check that we 
	 	 	 	are in the buffer
 1484  76 04	 	 	        jbe     infile2
 1486  8B 16 002A R	 	        mov     dx,[lastlin]    ;we are not, ta
	 	 	 	ke the last line as end
 148A	 	 	 	infile2:
 148A  3B D3	 	 	        cmp     dx,bx           ;is param1 < pa
	 	 	 	ram2 ?
 148C  76 C2	 	 	        jbe     ret$5           ;yes, no backwa
	 	 	 	rds listing, quit
 The Microsoft MACRO Assembler             12-27-<1    	PAGE	1-30
EDLIN for MSDOS 2.0
	 	 	 	Main Body

 148E  52	 	 	        push    dx              ;save the end l
	 	 	 	ine
 148F  53	 	 	        push    bx              ;save start lin
	 	 	 	e
 1490  8B DA	 	 	        mov     bx,dx           ;set the curren
	 	 	 	t line
 1492  4B	 	 	        dec     bx
 1493  E8 0000 E	 	        call    findlin
 1496  89 3E 001E R	 	        mov     [pointer],di
 149A  89 16 001C R	 	        mov     [current],dx
 149E  5B	 	 	        pop     bx              ;restore start 
	 	 	 	line
 149F  E8 0000 E	 	        call    findlin         ;get pointer to
	 	 	 	 start line
 14A2  8B F7	 	 	        mov     si,di           ;save pointer
 14A4  5F	 	 	        pop     di              ;get end line
 14A5  2B FB	 	 	        sub     di,bx           ;number of line
	 	 	 	s
 14A7  EB 2C	 	 	        jmp     short display
 	 	 	 	
 	 	 	 	
 14A9	 	 	 	LIST:
 14A9  8B 1E 0000 R	 	        MOV     BX,[PARAM1]
 14AD  0B DB	 	 	        OR      BX,BX
 14AF  75 0C	 	 	        JNZ     CHKP2
 14B1  8B 1E 001C R	 	        MOV     BX,[CURRENT]
 14B5  83 EB 0B	 	 	        SUB     BX,11
 14B8  77 03	 	 	        JA      CHKP2
 14BA  BB 0001	 	 	        MOV     BX,1
 14BD	 	 	 	CHKP2:
 14BD  E8 0000 E	 	        CALL    FINDLIN
 14C0  75 4C	 	 	        JNZ     RET7
 14C2  8B F7	 	 	        MOV     SI,DI
 14C4  8B 3E 0002 R	 	        MOV     DI,[PARAM2]
 14C8  47	 	 	        INC     DI
 14C9  2B FB	 	 	        SUB     DI,BX
 14CB  77 08	 	 	        JA      DISPLAY
 14CD  BF 0017	 	 	        MOV     DI,23
 14D0  EB 03	 	 	        JMP     SHORT DISPLAY
 	 	 	 	
 	 	 	 	
 14D2	 	 	 	DISPONE:
 14D2  BF 0001	 	 	        MOV     DI,1
 	 	 	 	
 14D5	 	 	 	DISPLAY:
 	 	 	 	
 	 	 	 	; Inputs:
 	 	 	 	;       BX = Line number
 	 	 	 	;       SI = Pointer to text buffer
 	 	 	 	;       DI = No. of lines
 	 	 	 	; Function:
 	 	 	 	;       Ouputs specified no. of line to termina
	 	 	 	l, each
 The Microsoft MACRO Assembler             12-27-<1    	PAGE	1-31
EDLIN for MSDOS 2.0
	 	 	 	Main Body

 	 	 	 	;       with leading line number.
 	 	 	 	; Outputs:
 	 	 	 	;       BX = Last line output.
 	 	 	 	; All registers destroyed.
 	 	 	 	
 14D5  8B 0E 0026 R	 	        MOV     CX,[ENDTXT]
 14D9  2B CE	 	 	        SUB     CX,SI
 14DB  74 31	 	 	        JZ      RET7
 14DD  8B 2E 001C R	 	        MOV     BP,[CURRENT]
 14E1	 	 	 	DISPLN:
 14E1  51	 	 	        PUSH    CX
 14E2  E8 0000 E	 	        CALL    SHOWNUM
 14E5  59	 	 	        POP     CX
 14E6	 	 	 	OUTLN:
 14E6  AC	 	 	        LODSB
 14E7  3C 20	 	 	        CMP     AL," "
 14E9  73 15	 	 	        JAE     SEND
 14EB  3C 0A	 	 	        CMP     AL,10
 14ED  74 11	 	 	        JZ      SEND
 14EF  3C 0D	 	 	        CMP     AL,13
 14F1  74 0D	 	 	        JZ      SEND
 14F3  3C 09	 	 	        CMP     AL,9
 14F5  74 09	 	 	        JZ      SEND
 14F7  50	 	 	        PUSH    AX
 14F8  B0 5E	 	 	        MOV     AL,"^"
 14FA  E8 0000 E	 	        CALL    OUT
 14FD  58	 	 	        POP     AX
 14FE  0C 40	 	 	        OR      AL,40H
 1500	 	 	 	SEND:
 1500  E8 0000 E	 	        CALL    OUT
 1503  3C 0A	 	 	        CMP     AL,10
 1505  E0 DF	 	 	        LOOPNZ  OUTLN
 1507  E3 05	 	 	        JCXZ    RET7
 1509  43	 	 	        INC     BX
 150A  4F	 	 	        DEC     DI
 150B  75 D4	 	 	        JNZ     DISPLN
 150D  4B	 	 	        DEC     BX
 150E  C3	 	 	RET7:   RET
 	 	 	 	
 150F	 	 	 	LOADBUF:
 150F  BF 00B0 R	 	        MOV     DI,2 + OFFSET DG:EDITBUF
 1512  B9 00FF	 	 	        MOV     CX,255
 1515  BA FFFF	 	 	        MOV     DX,-1
 1518	 	 	 	LOADLP:
 1518  AC	 	 	        LODSB
 1519  AA	 	 	        STOSB
 151A  42	 	 	        INC     DX
 151B  3C 0D	 	 	        CMP     AL,13
 151D  E0 F9	 	 	        LOOPNZ  LOADLP
 151F  88 16 00AF R	 	        MOV     [EDITBUF+1],DL
 1523  74 E9	 	 	        JZ      RET7
 1525	 	 	 	TRUNCLP:
 1525  AC	 	 	        LODSB
 The Microsoft MACRO Assembler             12-27-<1    	PAGE	1-32
EDLIN for MSDOS 2.0
	 	 	 	Main Body

 1526  42	 	 	        INC     DX
 1527  3C 0D	 	 	        CMP     AL,13
 1529  75 FA	 	 	        JNZ     TRUNCLP
 152B  4F	 	 	        DEC     DI
 152C  AA	 	 	        STOSB
 152D  C3	 	 	        RET
 	 	 	 	
 152E  E9 161B R	 	NOTFNDJ:JMP     NOTFND
 	 	 	 	
 1531	 	 	 	replac_from_curr:
 1531  C6 06 0227 R 01	 	        mov     byte ptr [srchmod],1   ;search 
	 	 	 	from curr+1 line
 1536  EB 05	 	 	        jmp     short sj6
 	 	 	 	
 1538	 	 	 	REPLAC:
 1538  C6 06 0227 R 00	 	        mov     byte ptr [srchmod],0   ;search 
	 	 	 	from beg of buffer
 153D	 	 	 	sj6:
 153D  C6 06 0223 R 00	 	        MOV     BYTE PTR [SRCHFLG],0
 1542  E8 0000 E	 	        CALL    FNDFIRST
 1545  75 E7	 	 	        JNZ     NOTFNDJ
 1547	 	 	 	REPLP:
 1547  8B 36 0018 R	 	        MOV     SI,[NUMPOS]
 154B  E8 150F R	 	        CALL    LOADBUF         ;Count length o
	 	 	 	f line
 154E  2B 16 0010 R	 	        SUB     DX,[OLDLEN]
 1552  8B 0E 0012 R	 	        MOV     CX,[NEWLEN]
 1556  03 D1	 	 	        ADD     DX,CX           ;Length of new 
	 	 	 	line
 1558  81 FA 00FE	 	        CMP     DX,254
 155C  77 6F	 	 	        JA      TOOLONG
 155E  8B 1E 0016 R	 	        MOV     BX,[LSTNUM]
 1562  52	 	 	        PUSH    DX
 1563  E8 0000 E	 	        CALL    SHOWNUM
 1566  5A	 	 	        POP     DX
 1567  8B 0E 0014 R	 	        MOV     CX,[LSTFND]
 156B  8B 36 0018 R	 	        MOV     SI,[NUMPOS]
 156F  2B CE	 	 	        SUB     CX,SI           ;Get no. of cha
	 	 	 	r on line before change
 1571  49	 	 	        DEC     CX
 1572  E8 15C3 R	 	        CALL    OUTCNT          ;Output first p
	 	 	 	art of line
 1575  56	 	 	        PUSH    SI
 1576  BE 0170 R	 	        MOV     SI,1+ OFFSET DG:TXT2
 1579  8B 0E 0012 R	 	        MOV     CX,[NEWLEN]
 157D  E8 15C3 R	 	        CALL    OUTCNT          ;Output change
 1580  5E	 	 	        POP     SI
 1581  03 36 0010 R	 	        ADD     SI,[OLDLEN]     ;Skip over old 
	 	 	 	stuff in line
 1585  8B CA	 	 	        MOV     CX,DX           ;DX=no. of char
	 	 	 	 left in line
 1587  83 C1 02	 	 	        ADD     CX,2            ;Include CR/LF
 158A  E8 15C3 R	 	        CALL    OUTCNT          ;Output last pa
 The Microsoft MACRO Assembler             12-27-<1    	PAGE	1-33
EDLIN for MSDOS 2.0
	 	 	 	Main Body

	 	 	 	rt of line
 158D  E8 0000 E	 	        CALL    QUERY           ;Check if chang
	 	 	 	e OK
 1590  75 2A	 	 	        JNZ     REPNXT
 1592  E8 1623 R	 	        CALL    PUTCURS
 1595  8B 3E 0014 R	 	        MOV     DI,[LSTFND]
 1599  4F	 	 	        DEC     DI
 159A  BE 0170 R	 	        MOV     SI,1+ OFFSET DG:TXT2
 159D  8B 16 0010 R	 	        MOV     DX,[OLDLEN]
 15A1  8B 0E 0012 R	 	        MOV     CX,[NEWLEN]
 15A5  49	 	 	        DEC     CX
 15A6  01 0E 0014 R	 	        ADD     [LSTFND],CX     ;Bump pointer b
	 	 	 	eyond new text
 15AA  41	 	 	        INC     CX
 15AB  4A	 	 	        DEC     DX
 15AC  29 16 001A R	 	        SUB     [SRCHCNT],DX    ;Old text will 
	 	 	 	not be searched
 15B0  73 06	 	 	        JAE     SOMELEFT
 15B2  C7 06 001A R 0000	        MOV     [SRCHCNT],0
 15B8	 	 	 	SOMELEFT:
 15B8  42	 	 	        INC     DX
 15B9  E8 16CB R	 	        CALL    REPLACE
 15BC	 	 	 	REPNXT:
 15BC  E8 0000 E	 	        CALL    FNDNEXT
 15BF  75 0B	 	 	        JNZ     RET8
 15C1  EB 84	 	 	        JMP     REPLP
 	 	 	 	
 15C3	 	 	 	OUTCNT:
 15C3  E3 07	 	 	        JCXZ    RET8
 15C5	 	 	 	OUTLP:
 15C5  AC	 	 	        LODSB
 15C6  E8 0000 E	 	        CALL    OUT
 15C9  4A	 	 	        DEC     DX
 15CA  E2 F9	 	 	        LOOP    OUTLP
 15CC  C3	 	 	RET8:   RET
 	 	 	 	
 15CD	 	 	 	TOOLONG:
 15CD  BA 0000 E	 	        MOV     DX,OFFSET DG:TOOLNG
 15D0  EB 4C	 	 	        JMP     SHORT PERR
 	 	 	 	
 15D2	 	 	 	search_from_curr:
 15D2  C6 06 0227 R 01	 	        mov     byte ptr [srchmod],1   ;search 
	 	 	 	from curr+1 line
 15D7  EB 05	 	 	        jmp     short sj7
 	 	 	 	
 15D9	 	 	 	SEARCH:
 15D9  C6 06 0227 R 00	 	        mov     byte ptr [srchmod],0   ;search 
	 	 	 	from beg of buffer
 15DE	 	 	 	sj7:
 15DE  C6 06 0223 R 01	 	        MOV     BYTE PTR [SRCHFLG],1
 15E3  E8 0000 E	 	        CALL    FNDFIRST
 15E6  75 33	 	 	        JNZ     NOTFND
 15E8	 	 	 	SRCH:
 The Microsoft MACRO Assembler             12-27-<1    	PAGE	1-34
EDLIN for MSDOS 2.0
	 	 	 	Main Body

 15E8  8B 1E 0016 R	 	        MOV     BX,[LSTNUM]
 15EC  8B 36 0018 R	 	        MOV     SI,[NUMPOS]
 15F0  E8 14D2 R	 	        CALL    DISPONE
 15F3  8B 3E 0014 R	 	        MOV     DI,[LSTFND]
 15F7  8B 0E 001A R	 	        MOV     CX,[SRCHCNT]
 15FB  B0 0A	 	 	        MOV     AL,10
 15FD  F2/ AE	 	 	        REPNE   SCASB
 15FF  75 1A	 	 	        JNZ     NOTFND
 1601  89 3E 0014 R	 	        MOV     [LSTFND],DI
 1605  89 3E 0018 R	 	        MOV     [NUMPOS],DI
 1609  89 0E 001A R	 	        MOV     [SRCHCNT],CX
 160D  FF 06 0016 R	 	        INC     [LSTNUM]
 1611  E8 0000 E	 	        CALL    QUERY
 1614  74 0D	 	 	        JZ      PUTCURS
 1616  E8 0000 E	 	        CALL    FNDNEXT
 1619  74 CD	 	 	        JZ      SRCH
 161B	 	 	 	NOTFND:
 161B  BA 0000 E	 	        MOV     DX,OFFSET DG:NOSUCH
 161E	 	 	 	PERR:
 161E  B4 09	 	 	        MOV     AH,STD_CON_STRING_OUTPUT
 1620  CD 21	 	 	        INT     21H
 1622  C3	 	 	        RET
 	 	 	 	
 1623	 	 	 	PUTCURS:
 1623  8B 1E 0016 R	 	        MOV     BX,[LSTNUM]
 1627  4B	 	 	        DEC     BX                      ;Curren
	 	 	 	t <= Last matched line
 1628  E8 0000 E	 	        CALL    FINDLIN
 162B  89 16 001C R	 	        MOV     [CURRENT],DX
 162F  89 3E 001E R	 	        MOV     [POINTER],DI
 1633  C3	 	 	RET9:   RET
 	 	 	 	
 1634	 	 	 	DELETE:
 1634  8B 1E 0000 R	 	        MOV     BX,[PARAM1]
 1638  0B DB	 	 	        OR      BX,BX
 163A  75 07	 	 	        JNZ     DELFIN1
 163C  8B 1E 001C R	 	        MOV     BX,[CURRENT]
 1640  E8 11F1 R	 	        CALL    CHKRANGE
 1643	 	 	 	DELFIN1:
 1643  E8 0000 E	 	        CALL    FINDLIN
 1646  75 EB	 	 	        JNZ     RET9
 1648  53	 	 	        PUSH    BX
 1649  57	 	 	        PUSH    DI
 164A  8B 1E 0002 R	 	        MOV     BX,[PARAM2]
 164E  0B DB	 	 	        OR      BX,BX
 1650  75 02	 	 	        JNZ     DELFIN2
 1652  8B DA	 	 	        MOV     BX,DX
 1654	 	 	 	DELFIN2:
 1654  43	 	 	        INC     BX
 1655  E8 0000 E	 	        CALL    FINDLIN
 1658  8B D7	 	 	        MOV     DX,DI
 165A  5F	 	 	        POP     DI
 165B  2B D7	 	 	        SUB     DX,DI
 The Microsoft MACRO Assembler             12-27-<1    	PAGE	1-35
EDLIN for MSDOS 2.0
	 	 	 	Main Body

 165D  76 0C	 	 	        JBE     COMERRJ
 165F  8F 06 001C R	 	        POP     [CURRENT]
 1663  89 3E 001E R	 	        MOV     [POINTER],DI
 1667  33 C9	 	 	        XOR     CX,CX
 1669  EB 60	 	 	        JMP     SHORT REPLACE
 	 	 	 	
 166B  E9 11FE R	 	COMERRJ:JMP     COMERR
 	 	 	 	
 	 	 	 	
 166E	 	 	 	NOCOM:
 166E  FF 0E 0028 R	 	        DEC     [COMLINE]
 1672  8B 1E 0000 R	 	        MOV     BX,[PARAM1]
 1676  0B DB	 	 	        OR      BX,BX
 1678  75 08	 	 	        JNZ     HAVLIN
 167A  8B 1E 001C R	 	        MOV     BX,[CURRENT]
 167E  43	 	 	        INC     BX      ;Default is current lin
	 	 	 	e plus one
 167F  E8 11F1 R	 	        CALL    CHKRANGE
 1682	 	 	 	HAVLIN:
 1682  E8 0000 E	 	        CALL    FINDLIN
 1685  8B F7	 	 	        MOV     SI,DI
 1687  89 16 001C R	 	        MOV     [CURRENT],DX
 168B  89 36 001E R	 	        MOV     [POINTER],SI
 168F  74 01	 	 	        jz      sj12
 1691  C3	 	 	        ret
 1692	 	 	 	sj12:
 1692  3B 36 0026 R	 	        CMP     SI,[ENDTXT]
 1696  74 67	 	 	        JZ      RET12
 1698  E8 150F R	 	        CALL    LOADBUF
 169B  89 16 0010 R	 	        MOV     [OLDLEN],DX
 169F  8B 36 001E R	 	        MOV     SI,[POINTER]
 16A3  E8 14D2 R	 	        CALL    DISPONE
 16A6  E8 0000 E	 	        CALL    SHOWNUM
 16A9  B4 0A	 	 	        MOV     AH,STD_CON_STRING_INPUT        
	 	 	 	   ;Get input buffer
 16AB  BA 00AE R	 	        MOV     DX,OFFSET DG:EDITBUF
 16AE  CD 21	 	 	        INT     21H
 16B0  B0 0A	 	 	        MOV     AL,10
 16B2  E8 0000 E	 	        CALL    OUT
 16B5  8A 0E 00AF R	 	        MOV     CL,[EDITBUF+1]
 16B9  B5 00	 	 	        MOV     CH,0
 16BB  E3 42	 	 	        JCXZ    RET12
 16BD  8B 16 0010 R	 	        MOV     DX,[OLDLEN]
 16C1  BE 00B0 R	 	        MOV     SI,2 + OFFSET DG:EDITBUF
 	 	 	 	;----------------------------------------------
	 	 	 	-------------------------
 16C4  E8 0000 E	 	        call    unquote                 ;scan f
	 	 	 	or quote chars if any
 	 	 	 	;----------------------------------------------
	 	 	 	-------------------------
 16C7  8B 3E 001E R	 	        MOV     DI,[POINTER]
 	 	 	 	
 16CB	 	 	 	REPLACE:
 The Microsoft MACRO Assembler             12-27-<1    	PAGE	1-36
EDLIN for MSDOS 2.0
	 	 	 	Main Body

 	 	 	 	
 	 	 	 	; Inputs:
 	 	 	 	;       CX = Length of new text
 	 	 	 	;       DX = Length of original text
 	 	 	 	;       SI = Pointer to new text
 	 	 	 	;       DI = Pointer to old text in buffer
 	 	 	 	; Function:
 	 	 	 	;       New text replaces old text in buffer an
	 	 	 	d buffer
 	 	 	 	;       size is adjusted. CX or DX may be zero.
 	 	 	 	; CX, SI, DI all destroyed. No other registers 
	 	 	 	affected.
 	 	 	 	
 16CB  3B CA	 	 	        CMP     CX,DX
 16CD  74 2E	 	 	        JZ      COPYIN
 16CF  56	 	 	        PUSH    SI
 16D0  57	 	 	        PUSH    DI
 16D1  51	 	 	        PUSH    CX
 16D2  8B F7	 	 	        MOV     SI,DI
 16D4  03 F2	 	 	        ADD     SI,DX
 16D6  03 F9	 	 	        ADD     DI,CX
 16D8  A1 0026 R	 	        MOV     AX,[ENDTXT]
 16DB  2B C2	 	 	        SUB     AX,DX
 16DD  03 C1	 	 	        ADD     AX,CX
 16DF  3B 06 0024 R	 	        CMP     AX,[LAST]
 16E3  73 1B	 	 	        JAE     MEMERR
 16E5  87 06 0026 R	 	        XCHG    AX,[ENDTXT]
 16E9  8B C8	 	 	        MOV     CX,AX
 16EB  2B CE	 	 	        SUB     CX,SI
 16ED  3B F7	 	 	        CMP     SI,DI
 16EF  77 05	 	 	        JA      DOMOV
 16F1  03 F1	 	 	        ADD     SI,CX
 16F3  03 F9	 	 	        ADD     DI,CX
 16F5  FD	 	 	        STD
 16F6	 	 	 	DOMOV:
 16F6  41	 	 	        INC     CX
 	 	 	 	
 16F7  F3/ A4	 	 	        REP     MOVSB
 16F9  FC	 	 	        CLD
 16FA  59	 	 	        POP     CX
 16FB  5F	 	 	        POP     DI
 16FC  5E	 	 	        POP     SI
 16FD	 	 	 	COPYIN:
 16FD  F3/ A4	 	 	        REP     MOVSB
 16FF  C3	 	 	RET12:  RET
 	 	 	 	
 1700	 	 	 	MEMERR:
 1700  BA 0000 E	 	        MOV     DX,OFFSET DG:MEMFUL
 1703  B4 09	 	 	        MOV     AH,STD_CON_STRING_OUTPUT
 1705  CD 21	 	 	        INT     21H
 1707  E9 1139 R	 	        JMP     COMMAND
 	 	 	 	
 170A	 	 	 	MOVERR:
 The Microsoft MACRO Assembler             12-27-<1    	PAGE	1-37
EDLIN for MSDOS 2.0
	 	 	 	Main Body

 170A  BA 0000 E	 	        MOV     DX,OFFSET DG:BADCOM
 170D	 	 	 	ERRORJ:
 170D  E9 11FE R	 	        JMP     COMERR
 	 	 	 	
 1710	 	 	 	MOVE:
 1710  C6 06 0228 R 01	 	        MOV     BYTE PTR [MOVFLG],1
 1715  EB 05	 	 	        JMP     SHORT BLKMOVE
 1717	 	 	 	COPY:
 1717  C6 06 0228 R 00	 	        MOV     BYTE PTR [MOVFLG],0
 	 	 	 	
 171C	 	 	 	BLKMOVE:
 171C  8B 1E 0004 R	 	        MOV     BX,[PARAM3]             ;Third 
	 	 	 	parameter must be specified
 1720  0B DB	 	 	        OR      BX,BX
 1722  BA 0000 E	 	        MOV     DX,OFFSET DG:DEST
 1725  74 E6	 	 	        JZ      ERRORJ
 1727  8B 1E 0000 R	 	        MOV     BX,[PARAM1]             ;Get th
	 	 	 	e first parameter
 172B  0B DB	 	 	        OR      BX,BX                   ;Not sp
	 	 	 	ecified?
 172D  75 0B	 	 	        JNZ     NXTARG
 172F  8B 1E 001C R	 	        MOV     BX,[CURRENT]            ;Defaul
	 	 	 	ts to the current line
 1733  E8 11F1 R	 	        CALL    CHKRANGE
 1736  89 1E 0000 R	 	        MOV     [PARAM1],BX             ;Save i
	 	 	 	t since current line may change
 173A	 	 	 	 NXTARG:
 173A  E8 0000 E	 	        CALL    FINDLIN                 ;Get a 
	 	 	 	pointer to the line
 173D  89 3E 0008 R	 	        MOV     [PTR_1],DI              ;Save i
	 	 	 	t
 1741  8B 1E 0002 R	 	        MOV     BX,[PARAM2]             ;Get th
	 	 	 	e second parameter
 1745  0B DB	 	 	        OR      BX,BX                   ;Not sp
	 	 	 	ecified?
 1747  75 08	 	 	        JNZ     HAVARGS
 1749  8B 1E 001C R	 	        MOV     BX,[CURRENT]            ;Defaul
	 	 	 	ts to the current line
 174D  89 1E 0002 R	 	        MOV     [PARAM2],BX             ;Save i
	 	 	 	t since current line may change
 1751	 	 	 	HAVARGS:
 	 	 	 	        ;Parameters must not overlap
 1751  8B 16 0004 R	 	        MOV     DX,[PARAM3]
 1755  3B 16 0000 R	 	        CMP     DX,[PARAM1]
 1759  76 06	 	 	        JBE     NOERROR
 175B  3B 16 0002 R	 	        CMP     DX,[PARAM2]
 175F  76 A9	 	 	        JBE     MOVERR
 1761	 	 	 	NOERROR:
 1761  43	 	 	        INC     BX                      ;Get po
	 	 	 	inter to line Param2+1
 1762  E8 0000 E	 	        CALL    FINDLIN
 1765  8B F7	 	 	        MOV     SI,DI
 1767  89 36 000A R	 	        MOV     [PTR_2],SI              ;Save i
 The Microsoft MACRO Assembler             12-27-<1    	PAGE	1-38
EDLIN for MSDOS 2.0
	 	 	 	Main Body

	 	 	 	t
 176B  8B CF	 	 	        MOV     CX,DI
 176D  8B 3E 0008 R	 	        MOV     DI,[PTR_1]              ;Restor
	 	 	 	e pointer to line Param1
 1771  2B CF	 	 	        SUB     CX,DI                   ;Calcul
	 	 	 	ate number of bytes to copy
 1773  89 0E 000E R	 	        MOV     [COPYSIZ],CX            ;Save i
	 	 	 	n COPYSIZ
 1777  51	 	 	        PUSH    CX                      ;And on
	 	 	 	 the stack
 1778  A1 0006 R	 	        MOV     AX,[PARAM4]             ;Is cou
	 	 	 	nt specified?
 177B  0B C0	 	 	        OR      AX,AX
 177D  74 11	 	 	        JZ      MEM_CHECK
 177F  F7 26 000E R	 	        MUL     [COPYSIZ]
 1783  0B D2	 	 	        OR      DX,DX
 1785  74 03	 	 	        JZ      COPYSIZ_OK
 1787  E9 1700 R	 	        JMP     MEMERR
 178A	 	 	 	COPYSIZ_OK:
 178A  8B C8	 	 	        MOV     CX,AX
 178C  89 0E 000E R	 	        MOV     [COPYSIZ],CX
 1790	 	 	 	MEM_CHECK:
 1790  A1 0026 R	 	        MOV     AX,[ENDTXT]
 1793  8B 3E 0024 R	 	        MOV     DI,[LAST]
 1797  2B F8	 	 	        SUB     DI,AX
 1799  3B F9	 	 	        CMP     DI,CX
 179B  73 03	 	 	        JAE     HAV_ROOM
 179D  E9 1700 R	 	        JMP     MEMERR
 17A0	 	 	 	HAV_ROOM:
 17A0  8B 1E 0004 R	 	        MOV     BX,[PARAM3]
 17A4  53	 	 	        PUSH    BX
 17A5  E8 0000 E	 	        CALL    FINDLIN
 17A8  89 3E 000C R	 	        MOV     [PTR_3],DI
 17AC  8B 0E 0026 R	 	        MOV     CX,[ENDTXT]
 17B0  2B CF	 	 	        SUB     CX,DI
 17B2  41	 	 	        INC     CX
 17B3  8B 36 0026 R	 	        MOV     SI,[ENDTXT]
 17B7  8B FE	 	 	        MOV     DI,SI
 17B9  03 3E 000E R	 	        ADD     DI,[COPYSIZ]
 17BD  89 3E 0026 R	 	        MOV     [ENDTXT],DI
 17C1  FD	 	 	        STD
 17C2  F3/ A4	 	 	        REP     MOVSB
 17C4  FC	 	 	        CLD
 17C5  5B	 	 	        POP     BX
 17C6  3B 1E 0000 R	 	        CMP     BX,[PARAM1]
 17CA  72 06	 	 	        JB      GET_PTR_2
 17CC  8B 36 0008 R	 	        MOV     SI,[PTR_1]
 17D0  EB 04	 	 	        JMP     SHORT COPY_TEXT
 17D2	 	 	 	GET_PTR_2:
 17D2  8B 36 000A R	 	        MOV     SI,[PTR_2]
 17D6	 	 	 	COPY_TEXT:
 17D6  8B 1E 0006 R	 	        MOV     BX,[PARAM4]
 17DA  8B 3E 000C R	 	        MOV     DI,[PTR_3]
 The Microsoft MACRO Assembler             12-27-<1    	PAGE	1-39
EDLIN for MSDOS 2.0
	 	 	 	Main Body

 17DE  59	 	 	        POP     CX
 17DF  89 0E 000E R	 	        MOV     [COPYSIZ],CX
 17E3	 	 	 	COPY_TEXT_1:
 17E3  F3/ A4	 	 	        REP     MOVSB
 17E5  4B	 	 	        DEC     BX
 17E6  83 FB 00	 	 	        CMP     BX,0
 17E9  7E 0E	 	 	        JLE     MOV_CHK
 17EB  89 1E 0006 R	 	        MOV     [PARAM4],BX
 17EF  2B 36 000E R	 	        SUB     SI,[COPYSIZ]
 17F3  8B 0E 000E R	 	        MOV     CX,[COPYSIZ]
 17F7  EB EA	 	 	        JMP     SHORT COPY_TEXT_1
 17F9	 	 	 	MOV_CHK:
 17F9  80 3E 0228 R 00	 	        CMP     BYTE PTR[MOVFLG],0
 17FE  74 36	 	 	        JZ      COPY_DONE
 1800  8B 3E 0008 R	 	        MOV     DI,[PTR_1]
 1804  8B 36 000A R	 	        MOV     SI,[PTR_2]
 1808  8B 1E 0004 R	 	        MOV     BX,[PARAM3]
 180C  3B 1E 0000 R	 	        CMP     BX,[PARAM1]
 1810  73 08	 	 	        JAE     DEL_TEXT
 1812  03 3E 000E R	 	        ADD     DI,[COPYSIZ]
 1816  03 36 000E R	 	        ADD     SI,[COPYSIZ]
 181A	 	 	 	DEL_TEXT:
 181A  8B 0E 0026 R	 	        MOV     CX,[ENDTXT]
 181E  2B CE	 	 	        SUB     CX,SI
 1820  F3/ A4	 	 	        REP     MOVSB
 1822  89 3E 0026 R	 	        MOV     [ENDTXT],DI
 1826  8B 0E 0002 R	 	        MOV     CX,[PARAM2]
 182A  2B 0E 0000 R	 	        SUB     CX,[PARAM1]
 182E  8B 1E 0004 R	 	        MOV     BX,[PARAM3]
 1832  2B D9	 	 	        SUB     BX,CX
 1834  73 04	 	 	        JNC     MOVE_DONE
 1836	 	 	 	COPY_DONE:
 1836  8B 1E 0004 R	 	        MOV     BX,[PARAM3]
 183A	 	 	 	MOVE_DONE:
 183A  E8 0000 E	 	        CALL    FINDLIN
 183D  89 3E 001E R	 	        MOV     [POINTER],DI
 1841  89 1E 001C R	 	        MOV     [CURRENT],BX
 1845  C3	 	 	        RET
 	 	 	 	
 	 	 	 	
 1846	 	 	 	MOVEFILE:
 1846  8B 0E 0026 R	 	        MOV     CX,[ENDTXT]             ;Get En
	 	 	 	d-of-text marker
 184A  8B F1	 	 	        MOV     SI,CX
 184C  2B CF	 	 	        SUB     CX,DI                   ;Calcul
	 	 	 	ate number of bytes to copy
 184E  41	 	 	        INC     CX
 184F  8B FA	 	 	        MOV     DI,DX
 1851  FD	 	 	        STD
 1852  F3/ A4	 	 	        REP     MOVSB                   ;Copy C
	 	 	 	X bytes
 1854  87 F7	 	 	        XCHG    SI,DI
 1856  FC	 	 	        CLD
 The Microsoft MACRO Assembler             12-27-<1    	PAGE	1-40
EDLIN for MSDOS 2.0
	 	 	 	Main Body

 1857  47	 	 	        INC     DI
 1858  8B EE	 	 	        MOV     BP,SI
 185A	 	 	 	SETPTS:
 185A  89 3E 001E R	 	        MOV     [POINTER],DI            ;Curren
	 	 	 	t line is first free loc
 185E  89 1E 001C R	 	        MOV     [CURRENT],BX            ;   in 
	 	 	 	the file
 1862  89 2E 0026 R	 	        MOV     [ENDTXT],BP             ;End-of
	 	 	 	-text is last free loc before
 1866  C3	 	 	        RET
 	 	 	 	
 1867	 	 	 	NAMERR:
 1867  E9 1201 R	 	        JMP     COMERR1
 	 	 	 	
 	 	 	 	
 186A	 	 	 	MERGE:
 186A  B8 2901	 	 	        MOV     AX,(PARSE_FILE_DESCRIPTOR SHL 8
	 	 	 	) OR 1
 186D  BF 01D6 R	 	        MOV     DI,OFFSET DG:FCB3
 1870  CD 21	 	 	        INT     21H
 1872  0A C0	 	 	        OR      AL,AL
 1874  BA 0000 E	 	        MOV     DX,OFFSET DG:BADDRV
 1877  75 EE	 	 	        JNZ     NAMERR
 1879  89 36 0028 R	 	        MOV     [COMLINE],SI
 187D  BA 01D6 R	 	        MOV     DX,OFFSET DG:FCB3
 1880  B4 0F	 	 	        MOV     AH,FCB_OPEN
 1882  CD 21	 	 	        INT     21H
 1884  0A C0	 	 	        OR      AL,AL
 1886  BA 0000 E	 	        MOV     DX,OFFSET DG:FILENM
 1889  75 DC	 	 	        JNZ     NAMERR
 188B  B8 2523	 	 	        MOV     AX,(SET_INTERRUPT_VECTOR SHL 8)
	 	 	 	 OR 23H
 188E  BA 1972 R	 	        MOV     DX,OFFSET DG:ABORTMERGE
 1891  CD 21	 	 	        INT     21H
 1893  8B 1E 0000 R	 	        MOV     BX,[PARAM1]
 1897  0B DB	 	 	        OR      BX,BX
 1899  75 07	 	 	        JNZ     MRG
 189B  8B 1E 001C R	 	        MOV     BX,[CURRENT]
 189F  E8 11F1 R	 	        CALL    CHKRANGE
 18A2	 	 	 	MRG:
 18A2  E8 0000 E	 	        CALL    FINDLIN
 18A5  8B DA	 	 	        MOV     BX,DX
 18A7  8B 16 0024 R	 	        MOV     DX,[LAST]
 18AB  E8 1846 R	 	        CALL    MOVEFILE
 	 	 	 	        ;Set DMA address for reading in new fil
	 	 	 	e
 18AE  8B 16 001E R	 	        MOV     DX,[POINTER]
 18B2  B4 1A	 	 	        MOV     AH,SET_DMA
 18B4  CD 21	 	 	        INT     21H
 18B6  33 C0	 	 	        XOR     AX,AX
 18B8  A3 01F7 R	 	        MOV     WORD PTR DS:[FCB3+fcb_RR],AX
 18BB  A3 01F9 R	 	        MOV     WORD PTR DS:[FCB3+fcb_RR+2],AX
 18BE  40	 	 	        INC     AX
 The Microsoft MACRO Assembler             12-27-<1    	PAGE	1-41
EDLIN for MSDOS 2.0
	 	 	 	Main Body

 18BF  A3 01E4 R	 	        MOV     WORD PTR DS:[FCB3+fcb_RECSIZ],A
	 	 	 	X
 18C2  BA 01D6 R	 	        MOV     DX,OFFSET DG:FCB3
 18C5  8B 0E 0026 R	 	        MOV     CX,[ENDTXT]
 18C9  2B 0E 001E R	 	        SUB     CX,[POINTER]
 18CD  B4 27	 	 	        MOV     AH,FCB_RANDOM_READ_BLOCK
 18CF  CD 21	 	 	        INT     21H
 18D1  3C 01	 	 	        CMP     AL,1
 18D3  74 0D	 	 	        JZ      FILEMRG
 18D5  BA 0000 E	 	        MOV     DX,OFFSET DG:MRGERR
 18D8  B4 09	 	 	        MOV     AH,STD_CON_STRING_OUTPUT
 18DA  CD 21	 	 	        INT     21H
 18DC  8B 0E 001E R	 	        MOV     CX,[POINTER]
 18E0  EB 0D	 	 	        JMP     SHORT RESTORE
 18E2	 	 	 	FILEMRG:
 18E2  03 0E 001E R	 	        ADD     CX,[POINTER]
 18E6  8B F1	 	 	        MOV     SI,CX
 18E8  4E	 	 	        DEC     SI
 18E9  AC	 	 	        LODSB
 18EA  3C 1A	 	 	        CMP     AL,1AH
 18EC  75 01	 	 	        JNZ     RESTORE
 18EE  49	 	 	        DEC     CX
 18EF	 	 	 	RESTORE:
 18EF  8B F9	 	 	        MOV     DI,CX
 18F1  8B 36 0026 R	 	        MOV     SI,[ENDTXT]
 18F5  46	 	 	        INC     SI
 18F6  8B 0E 0024 R	 	        MOV     CX,[LAST]
 18FA  2B CE	 	 	        SUB     CX,SI
 18FC  F3/ A4	 	 	        REP     MOVSB
 18FE  89 3E 0026 R	 	        MOV     [ENDTXT],DI
 1902  C6 05 1A	 	 	        MOV     BYTE PTR [DI],1AH
 1905  BA 01D6 R	 	        MOV     DX,OFFSET DG:FCB3
 1908  B4 10	 	 	        MOV     AH,FCB_CLOSE
 190A  CD 21	 	 	        INT     21H
 190C  BA 02A9 R	 	        MOV     DX,OFFSET DG:START
 190F  B4 1A	 	 	        MOV     AH,SET_DMA
 1911  CD 21	 	 	        INT     21H
 1913  C3	 	 	        RET
 	 	 	 	
 	 	 	 	
 1914	 	 	 	INSERT:
 1914  B8 2523	 	 	        MOV     AX,(SET_INTERRUPT_VECTOR SHL 8)
	 	 	 	 OR 23H        ;Set vector 23H
 1917  BA 1979 R	 	        MOV     DX,OFFSET DG:ABORTINS
 191A  CD 21	 	 	        INT     21H
 191C  8B 1E 0000 R	 	        MOV     BX,[PARAM1]
 1920  0B DB	 	 	        OR      BX,BX
 1922  75 07	 	 	        JNZ     INS
 1924  8B 1E 001C R	 	        MOV     BX,[CURRENT]
 1928  E8 11F1 R	 	        CALL    CHKRANGE
 192B	 	 	 	INS:
 192B  E8 0000 E	 	        CALL    FINDLIN
 192E  8B DA	 	 	        MOV     BX,DX
 The Microsoft MACRO Assembler             12-27-<1    	PAGE	1-42
EDLIN for MSDOS 2.0
	 	 	 	Main Body

 1930  8B 16 0024 R	 	        MOV     DX,[LAST]
 1934  E8 1846 R	 	        CALL    MOVEFILE
 1937	 	 	 	INLP:
 1937  E8 185A R	 	        CALL    SETPTS                  ;Update
	 	 	 	 the pointers into file
 193A  E8 0000 E	 	        CALL    SHOWNUM
 193D  BA 00AE R	 	        MOV     DX,OFFSET DG:EDITBUF
 1940  B4 0A	 	 	        MOV     AH,STD_CON_STRING_INPUT
 1942  CD 21	 	 	        INT     21H
 1944  E8 0000 E	 	        CALL    LF
 1947  BE 00B0 R	 	        MOV     SI,2 + OFFSET DG:EDITBUF
 194A  80 3C 1A	 	 	        CMP     BYTE PTR [SI],1AH
 194D  74 3F	 	 	        JZ      ENDINS
 	 	 	 	;----------------------------------------------
	 	 	 	-------------------------
 194F  E8 0000 E	 	        call    unquote                 ;scan f
	 	 	 	or quote chars if any
 	 	 	 	;----------------------------------------------
	 	 	 	-------------------------
 1952  8A 4C FF	 	 	        MOV     CL,[SI-1]
 1955  B5 00	 	 	        MOV     CH,0
 1957  8B D7	 	 	        MOV     DX,DI
 1959  41	 	 	        INC     CX
 195A  03 D1	 	 	        ADD     DX,CX
 195C  72 06	 	 	        JC      MEMERRJ1
 195E  74 04	 	 	        JZ      MEMERRJ1
 1960  3B D5	 	 	        CMP     DX,BP
 1962  72 06	 	 	        JB      MEMOK
 1964	 	 	 	MEMERRJ1:
 1964  E8 1992 R	 	        CALL    END_INS
 1967  E9 1700 R	 	        JMP     MEMERR
 196A	 	 	 	MEMOK:
 196A  F3/ A4	 	 	        REP     MOVSB
 196C  B0 0A	 	 	        MOV     AL,10
 196E  AA	 	 	        STOSB
 196F  43	 	 	        INC     BX
 1970  EB C5	 	 	        JMP     SHORT INLP
 	 	 	 	
 1972	 	 	 	ABORTMERGE:
 1972  BA 02A9 R	 	        MOV     DX,OFFSET DG:START
 1975  B4 1A	 	 	        MOV     AH,SET_DMA
 1977  CD 21	 	 	        INT     21H
 	 	 	 	
 1979	 	 	 	ABORTINS:
 1979  8C C8	 	 	        MOV     AX,CS           ;Restore segmen
	 	 	 	t registers
 197B  8E D8	 	 	        MOV     DS,AX
 197D  8E C0	 	 	        MOV     ES,AX
 197F  8E D0	 	 	        MOV     SS,AX
 1981  BC 02A9 R	 	        MOV     SP,OFFSET DG:STACK
 1984  FB	 	 	        STI
 1985  E8 0000 E	 	        CALL    CRLF
 1988  E8 198E R	 	        CALL    ENDINS
 The Microsoft MACRO Assembler             12-27-<1    	PAGE	1-43
EDLIN for MSDOS 2.0
	 	 	 	Main Body

 198B  E9 11CC R	 	        JMP     COMOVER
 	 	 	 	
 198E	 	 	 	ENDINS:
 198E  E8 1992 R	 	        CALL    END_INS
 1991  C3	 	 	        RET
 	 	 	 	
 1992	 	 	 	END_INS:
 1992  8B 2E 0026 R	 	        MOV     BP,[ENDTXT]
 1996  8B 3E 001E R	 	        MOV     DI,[POINTER]
 199A  8B F5	 	 	        MOV     SI,BP
 199C  46	 	 	        INC     SI
 199D  8B 0E 0024 R	 	        MOV     CX,[LAST]
 19A1  2B CD	 	 	        SUB     CX,BP
 19A3  F3/ A4	 	 	        REP     MOVSB
 19A5  4F	 	 	        DEC     DI
 19A6  89 3E 0026 R	 	        MOV     [ENDTXT],DI
 19AA  B8 2523	 	 	        MOV     AX,(SET_INTERRUPT_VECTOR SHL 8)
	 	 	 	 OR 23H
 19AD  BA 1A0F R	 	        MOV     DX,OFFSET DG:ABORTCOM
 19B0  CD 21	 	 	        INT     21H
 19B2  C3	 	 	        RET
 	 	 	 	
 19B3	 	 	 	FILLBUF:
 19B3  C7 06 0000 R FFFF	        MOV     [PARAM1],-1     ;Read in max. n
	 	 	 	o of lines
 19B9  E8 1328 R	 	        CALL    APPEND
 19BC	 	 	 	ENDED:
 	 	 	 	;Write text out to .$$$ file
 19BC  C6 06 0222 R 01	 	        MOV     BYTE PTR [ENDING],1     ;Suppre
	 	 	 	ss memory errors
 19C1  BB FFFF	 	 	        MOV     BX,-1           ;Write max. no 
	 	 	 	of lines
 19C4  E8 13FA R	 	        CALL    WRT
 19C7  F6 06 0221 R FF	 	        TEST    BYTE PTR [HAVEOF],-1
 19CC  74 E5	 	 	        JZ      FILLBUF
 19CE  8B 16 0026 R	 	        MOV     DX,[ENDTXT]
 19D2  B4 1A	 	 	        MOV     AH,SET_DMA
 19D4  CD 21	 	 	        INT     21H
 19D6  B9 0001	 	 	        MOV     CX,1
 19D9  BA 01B1 R	 	        MOV     DX,OFFSET DG:FCB2
 19DC  B4 28	 	 	        MOV     AH,FCB_RANDOM_WRITE_BLOCK
 19DE  CD 21	 	 	        INT     21H              ;Write end-of-
	 	 	 	file byte
 	 	 	 	;Close .$$$ file
 19E0  B4 10	 	 	        MOV     AH,FCB_CLOSE
 19E2  CD 21	 	 	        INT     21H
 19E4  BE 005C	 	 	        MOV     SI,FCB
 19E7  8D 7C 10	 	 	        LEA     DI,[SI+fcb_FILSIZ]
 19EA  8B D6	 	 	        MOV     DX,SI
 19EC  B9 0009	 	 	        MOV     CX,9
 19EF  F3/ A4	 	 	        REP     MOVSB
 19F1  BE 0000 R	 	        MOV     SI,OFFSET DG:BAK
 19F4  A5	 	 	        MOVSW
 The Microsoft MACRO Assembler             12-27-<1    	PAGE	1-44
EDLIN for MSDOS 2.0
	 	 	 	Main Body

 19F5  A4	 	 	        MOVSB
 	 	 	 	;Rename original file .BAK
 19F6  B4 17	 	 	        MOV     AH,FCB_RENAME
 19F8  CD 21	 	 	        INT     21H
 19FA  BE 005C	 	 	        MOV     SI,FCB
 19FD  BF 01C1 R	 	        MOV     DI,OFFSET DG:FCB2 + fcb_FILSIZ
 1A00  B9 0006	 	 	        MOV     CX,6
 1A03  F3/ A5	 	 	        REP     MOVSW
 	 	 	 	;Rename .$$$ file to original name
 1A05  BA 01B1 R	 	        MOV     DX,OFFSET DG:FCB2
 1A08  CD 21	 	 	        INT     21H
 1A0A  E8 0000 E	 	        call    rest_dir                ;restor
	 	 	 	e directory if needed
 1A0D  CD 20	 	 	        INT     20H
 	 	 	 	
 1A0F	 	 	 	ABORTCOM:
 1A0F  8C C8	 	 	        MOV     AX,CS
 1A11  8E D8	 	 	        MOV     DS,AX
 1A13  8E C0	 	 	        MOV     ES,AX
 1A15  8E D0	 	 	        MOV     SS,AX
 1A17  BC 02A9 R	 	        MOV     SP,OFFSET DG:STACK
 1A1A  FB	 	 	        STI
 1A1B  E8 0000 E	 	        CALL    CRLF
 1A1E  E9 1139 R	 	        JMP     COMMAND
 	 	 	 	
 1A21	 	 	 	DELBAK:
 1A21  C6 06 01F0 R 01	 	        MOV     BYTE PTR [DELFLG],1
 1A26  BF 01BA R	 	        MOV     DI,9+OFFSET DG:FCB2
 1A29  BE 0000 R	 	        MOV     SI,OFFSET DG:BAK
 1A2C  A5	 	 	        MOVSW
 1A2D  A4	 	 	        MOVSB
 	 	 	 	        ;Delete old backup file (.BAK)
 1A2E  B4 13	 	 	        MOV     AH,FCB_DELETE
 1A30  BA 01B1 R	 	        MOV     DX,OFFSET DG:FCB2
 1A33  CD 21	 	 	        INT     21H
 1A35  BF 01BA R	 	        MOV     DI,9+OFFSET DG:FCB2
 1A38  B0 24	 	 	        MOV     AL,"$"
 1A3A  AA	 	 	        STOSB
 1A3B  AA	 	 	        STOSB
 1A3C  AA	 	 	        STOSB
 1A3D  C3	 	 	        RET
 	 	 	 	
 1A3E	 	 	 	CODE    ENDS
 	 	 	 	        END     EDLIN

 The Microsoft MACRO Assembler             12-27-<1    	PAGE	Symbols
	 	 	 	-1
EDLIN for MSDOS 2.0


Macros:

	 	N a m e  	 	Length

BREAK. . . . . . . . . . . . . .	0001	
CONDRET. . . . . . . . . . . . .	0009	
CONTEXT. . . . . . . . . . . . .	0002	
DO_EXT . . . . . . . . . . . . .	0001	
ENTRY. . . . . . . . . . . . . .	0001	
ERROR. . . . . . . . . . . . . .	0002	
INVOKE . . . . . . . . . . . . .	0003	
I_AM . . . . . . . . . . . . . .	0005	
I_NEED . . . . . . . . . . . . .	0005	
JUMP . . . . . . . . . . . . . .	0005	
LONG_ADDR. . . . . . . . . . . .	0002	
MAKELAB. . . . . . . . . . . . .	0002	
PROCEDURE. . . . . . . . . . . .	0001	
RETC . . . . . . . . . . . . . .	0001	
RETNC. . . . . . . . . . . . . .	0001	
RETNZ. . . . . . . . . . . . . .	0001	
RETURN . . . . . . . . . . . . .	0002	
RETZ . . . . . . . . . . . . . .	0001	
SHORT_ADDR . . . . . . . . . . .	0004	
TRANSFER . . . . . . . . . . . .	0003	

Structures and records:

	 	N a m e	 	 	Width	# fields
	 	 	 	 	Shift	Width	Mask	Initial

ARENA. . . . . . . . . . . . . .	0005	0003
  ARENA_SIGNATURE. . . . . . . . .	0000
  ARENA_OWNER. . . . . . . . . . .	0001
  ARENA_SIZE . . . . . . . . . . .	0003
BPBLOCK. . . . . . . . . . . . .	000D	0008
  BPSECSZ. . . . . . . . . . . . .	0000
  BPCLUS . . . . . . . . . . . . .	0002
  BPRES. . . . . . . . . . . . . .	0003
  BPFTCNT. . . . . . . . . . . . .	0005
  BPDRCNT. . . . . . . . . . . . .	0006
  BPSCCNT. . . . . . . . . . . . .	0008
  BPMEDIA. . . . . . . . . . . . .	000A
  BPFTSEC. . . . . . . . . . . . .	000B
BUFFINFO . . . . . . . . . . . .	0010	0009
  NEXTBUF. . . . . . . . . . . . .	0000
  BUFDRV . . . . . . . . . . . . .	0004
  BUFDIRTY . . . . . . . . . . . .	0005
  BUFPRI . . . . . . . . . . . . .	0006
  VISIT. . . . . . . . . . . . . .	0007
  BUFSECNO . . . . . . . . . . . .	0008
  BUFWRTCNT. . . . . . . . . . . .	000A
  BUFWRTINC. . . . . . . . . . . .	000B
  BUFDRVDP . . . . . . . . . . . .	000C
 The Microsoft MACRO Assembler             12-27-<1    	PAGE	Symbols
	 	 	 	-2
EDLIN for MSDOS 2.0


DIR_ENTRY. . . . . . . . . . . .	0020	0008
  DIR_NAME . . . . . . . . . . . .	0000
  DIR_ATTR . . . . . . . . . . . .	000B
  DIR_PAD. . . . . . . . . . . . .	000C
  DIR_TIME . . . . . . . . . . . .	0016
  DIR_DATE . . . . . . . . . . . .	0018
  DIR_FIRST. . . . . . . . . . . .	001A
  DIR_SIZE_L . . . . . . . . . . .	001C
  DIR_SIZE_H . . . . . . . . . . .	001E
DPB. . . . . . . . . . . . . . .	005E	0012
  DPB_DRIVE. . . . . . . . . . . .	0000
  DPB_UNIT . . . . . . . . . . . .	0001
  DPB_SECTOR_SIZE. . . . . . . . .	0002
  DPB_CLUSTER_MASK . . . . . . . .	0004
  DPB_CLUSTER_SHIFT. . . . . . . .	0005
  DPB_FIRST_FAT. . . . . . . . . .	0006
  DPB_FAT_COUNT. . . . . . . . . .	0008
  DPB_ROOT_ENTRIES . . . . . . . .	0009
  DPB_FIRST_SECTOR . . . . . . . .	000B
  DPB_MAX_CLUSTER. . . . . . . . .	000D
  DPB_FAT_SIZE . . . . . . . . . .	000F
  DPB_DIR_SECTOR . . . . . . . . .	0010
  DPB_DRIVER_ADDR. . . . . . . . .	0012
  DPB_MEDIA. . . . . . . . . . . .	0016
  DPB_FIRST_ACCESS . . . . . . . .	0017
  DPB_NEXT_DPB . . . . . . . . . .	0018
  DPB_CURRENT_DIR. . . . . . . . .	001C
  DPB_DIR_TEXT . . . . . . . . . .	001E
EXEC0. . . . . . . . . . . . . .	000E	0004
  EXEC0_ENVIRON. . . . . . . . . .	0000
  EXEC0_COM_LINE . . . . . . . . .	0002
  EXEC0_5C_FCB . . . . . . . . . .	0006
  EXEC0_6C_FCB . . . . . . . . . .	000A
EXEC1. . . . . . . . . . . . . .	0016	0008
  EXEC1_ENVIRON. . . . . . . . . .	0000
  EXEC1_COM_LINE . . . . . . . . .	0002
  EXEC1_5C_FCB . . . . . . . . . .	0006
  EXEC1_6C_FCB . . . . . . . . . .	000A
  EXEC1_SP . . . . . . . . . . . .	000E
  EXEC1_SS . . . . . . . . . . . .	0010
  EXEC1_IP . . . . . . . . . . . .	0012
  EXEC1_CS . . . . . . . . . . . .	0014
EXEC3. . . . . . . . . . . . . .	0004	0002
  EXEC3_LOAD_ADDR. . . . . . . . .	0000
  EXEC3_RELOC_FAC. . . . . . . . .	0002
EXE_FILE . . . . . . . . . . . .	0020	000F
  EXE_SIGNATURE. . . . . . . . . .	0000
  EXE_LEN_MOD_512. . . . . . . . .	0002
  EXE_PAGES. . . . . . . . . . . .	0004
  EXE_RLE_COUNT. . . . . . . . . .	0006
  EXE_PAR_DIR. . . . . . . . . . .	0008
  EXE_MIN_BSS. . . . . . . . . . .	000A
 The Microsoft MACRO Assembler             12-27-<1    	PAGE	Symbols
	 	 	 	-3
EDLIN for MSDOS 2.0


  EXE_MAX_BSS. . . . . . . . . . .	000C
  EXE_SS . . . . . . . . . . . . .	000E
  EXE_SP . . . . . . . . . . . . .	0010
  EXE_CHKSUM . . . . . . . . . . .	0012
  EXE_IP . . . . . . . . . . . . .	0014
  EXE_CS . . . . . . . . . . . . .	0016
  EXE_RLE_TABLE. . . . . . . . . .	0018
  EXE_IOV. . . . . . . . . . . . .	001A
  EXE_SYM_TAB. . . . . . . . . . .	001C
FIND_BUF . . . . . . . . . . . .	002B	000C
  FIND_BUF_SATTR . . . . . . . . .	0000
  FIND_BUF_DRIVE . . . . . . . . .	0001
  FIND_BUF_NAME. . . . . . . . . .	0002
  FIND_BUF_LASTENT . . . . . . . .	000D
  FIND_BUF_THISDPB . . . . . . . .	000F
  FIND_BUF_DIRSTART. . . . . . . .	0013
  FIND_BUF_ATTR. . . . . . . . . .	0015
  FIND_BUF_TIME. . . . . . . . . .	0016
  FIND_BUF_DATE. . . . . . . . . .	0018
  FIND_BUF_SIZE_L. . . . . . . . .	001A
  FIND_BUF_SIZE_H. . . . . . . . .	001C
  FIND_BUF_PNAME . . . . . . . . .	001E
INTERNAT_BLOCK . . . . . . . . .	0018	0015
  DATE_TIM_FORMAT. . . . . . . . .	0000
  CURRENCY_SYM . . . . . . . . . .	0002
  THOUS_SEP. . . . . . . . . . . .	0007
  DECIMAL_SEP. . . . . . . . . . .	0009
  DATE_SEP . . . . . . . . . . . .	000B
  TIME_SEP . . . . . . . . . . . .	000D
  BIT_FEILD. . . . . . . . . . . .	000F
  CURRENCY_CENTS . . . . . . . . .	0010
  TIME_24. . . . . . . . . . . . .	0011
  MAP_CALL . . . . . . . . . . . .	0012
  DATA_SEP . . . . . . . . . . . .	0016
PROCESS_DATA_BLOCK . . . . . . .	005B	000E
  PDB_EXIT_CALL. . . . . . . . . .	0000
  PDB_BLOCK_LEN. . . . . . . . . .	0002
  PDB_CPM_CALL . . . . . . . . . .	0005
  PDB_EXIT . . . . . . . . . . . .	000A
  PDB_CTRL_C . . . . . . . . . . .	000E
  PDB_FATAL_ABORT. . . . . . . . .	0012
  PDB_PARENT_PID . . . . . . . . .	0016
  PDB_JFN_TABLE. . . . . . . . . .	0018
  PDB_ENVIRON. . . . . . . . . . .	002C
  PDB_USER_STACK . . . . . . . . .	002E
  PDB_PAD1 . . . . . . . . . . . .	0032
  PDB_CALL_SYSTEM. . . . . . . . .	0050
  PDB_PAD2 . . . . . . . . . . . .	0055
SFT. . . . . . . . . . . . . . .	0008	0003
  SFT_LINK . . . . . . . . . . . .	0000
  SFT_COUNT. . . . . . . . . . . .	0004
  SFT_TABLE. . . . . . . . . . . .	0006
 The Microsoft MACRO Assembler             12-27-<1    	PAGE	Symbols
	 	 	 	-4
EDLIN for MSDOS 2.0


SF_ENTRY . . . . . . . . . . . .	0028	0004
  SF_REF_COUNT . . . . . . . . . .	0000
  SF_MODE. . . . . . . . . . . . .	0001
  SF_ATTR. . . . . . . . . . . . .	0002
  SF_FCB . . . . . . . . . . . . .	0003
SYMBOL_ENTRY . . . . . . . . . .	0106	0004
  SYM_VALUE. . . . . . . . . . . .	0000
  SYM_TYPE . . . . . . . . . . . .	0004
  SYM_LEN. . . . . . . . . . . . .	0006
  SYM_NAME . . . . . . . . . . . .	0007
SYS_FCB. . . . . . . . . . . . .	0025	0010
  FCB_DRIVE. . . . . . . . . . . .	0000
  FCB_NAME . . . . . . . . . . . .	0001
  FCB_EXT. . . . . . . . . . . . .	0009
  FCB_EXTENT . . . . . . . . . . .	000C
  FCB_RECSIZ . . . . . . . . . . .	000E
  FCB_FILSIZ . . . . . . . . . . .	0010
  FCB_DRVBP. . . . . . . . . . . .	0012
  FCB_FDATE. . . . . . . . . . . .	0014
  FCB_FTIME. . . . . . . . . . . .	0016
  FCB_DEVID. . . . . . . . . . . .	0018
  FCB_FIRCLUS. . . . . . . . . . .	0019
  FCB_CLUSPOS. . . . . . . . . . .	001B
  FCB_LSTCLUS. . . . . . . . . . .	001D
  FCB_NR . . . . . . . . . . . . .	0020
  FCB_RR . . . . . . . . . . . . .	0021
USER_ENVIRON . . . . . . . . . .	0018	000C
  USER_AX. . . . . . . . . . . . .	0000
  USER_BX. . . . . . . . . . . . .	0002
  USER_CX. . . . . . . . . . . . .	0004
  USER_DX. . . . . . . . . . . . .	0006
  USER_SI. . . . . . . . . . . . .	0008
  USER_DI. . . . . . . . . . . . .	000A
  USER_BP. . . . . . . . . . . . .	000C
  USER_DS. . . . . . . . . . . . .	000E
  USER_ES. . . . . . . . . . . . .	0010
  USER_IP. . . . . . . . . . . . .	0012
  USER_CS. . . . . . . . . . . . .	0014
  USER_F . . . . . . . . . . . . .	0016

Segments and groups:

	 	N a m e	 	 	Size	align	combine	class

DG . . . . . . . . . . . . . . .	GROUP
  CODE . . . . . . . . . . . . . .	1A3E	PARA  	PUBLIC	
  CONST. . . . . . . . . . . . . .	01F1	WORD  	PUBLIC	
  DATA . . . . . . . . . . . . . .	02A9	WORD  	PUBLIC	

Symbols:            

	 	N a m e	 	 	Type	Value	Attr         
 The Microsoft MACRO Assembler             12-27-<1    	PAGE	Symbols
	 	 	 	-5
EDLIN for MSDOS 2.0



ABORT. . . . . . . . . . . . . .	Number	0000	
ABORTCOM . . . . . . . . . . . .	L NEAR 	1A0F	CODE
ABORTINS . . . . . . . . . . . .	L NEAR 	1979	CODE
ABORTMERGE . . . . . . . . . . .	L NEAR 	1972	CODE
ADDR_INT_ABORT . . . . . . . . .	Number	0080	
ADDR_INT_COMMAND . . . . . . . .	Number	0084	
ADDR_INT_CTRL_C. . . . . . . . .	Number	008C	
ADDR_INT_DISK_READ . . . . . . .	Number	0094	
ADDR_INT_DISK_WRITE. . . . . . .	Number	0098	
ADDR_INT_FASTCON . . . . . . . .	Number	00A4	
ADDR_INT_FATAL_ABORT . . . . . .	Number	0090	
ADDR_INT_KEEP_PROCESS. . . . . .	Number	009C	
ADDR_INT_SPOOLER . . . . . . . .	Number	00A0	
ADDR_INT_TERMINATE . . . . . . .	Number	0088	
ALLOC. . . . . . . . . . . . . .	Number	0048	
ALLOCOPER. . . . . . . . . . . .	Number	0058	
ALLOC_ARENA_TRASHED. . . . . . .	Alias	ERROR_ARENA_TRASHED	
 	 	 	 	 	
ALLOC_NOT_ENOUGH_MEMORY. . . . .	Alias	ERROR_NOT_ENOUGH_MEMORY	
 	 	 	 	 	
ALTVECT. . . . . . . . . . . . .	Number	0000	
AMNT_REQ . . . . . . . . . . . .	L WORD 	0224	DATA
AN_OPTION. . . . . . . . . . . .	L NEAR 	0F6D	CODE
APPEND . . . . . . . . . . . . .	L NEAR 	1328	CODE
ARENA_OWNER_SYSTEM . . . . . . .	Number	0000	
ARENA_SIGNATURE_END. . . . . . .	Number	005A	
ARENA_SIGNATURE_NORMAL . . . . .	Number	004D	
ASSIGNOPER . . . . . . . . . . .	Number	005F	
ATTR_ALL . . . . . . . . . . . .	Number	0016	
ATTR_ARCHIVE . . . . . . . . . .	Number	0020	
ATTR_CHANGEABLE. . . . . . . . .	Number	0027	
ATTR_DIRECTORY . . . . . . . . .	Number	0010	
ATTR_HIDDEN. . . . . . . . . . .	Number	0002	
ATTR_IGNORE. . . . . . . . . . .	Number	0021	
ATTR_READ_ONLY . . . . . . . . .	Number	0001	
ATTR_SYSTEM. . . . . . . . . . .	Number	0004	
ATTR_VOLUME_ID . . . . . . . . .	Number	0008	
BACKLIN. . . . . . . . . . . . .	L NEAR 	127E	CODE
BADCOM . . . . . . . . . . . . .	V BYTE 	0000	CONST	External
BADDRV . . . . . . . . . . . . .	V BYTE 	0000	CONST	External
BAD_VERS_ERR . . . . . . . . . .	V BYTE 	0000	CONST	External
BAK. . . . . . . . . . . . . . .	L BYTE 	0000	CONST
BCREAT . . . . . . . . . . . . .	V BYTE 	0000	CONST	External
BLKMOVE. . . . . . . . . . . . .	L NEAR 	171C	CODE
BUFINSIZ . . . . . . . . . . . .	Number	0010	
B_OPT. . . . . . . . . . . . . .	L NEAR 	0F7C	CODE
CHAR_OPER. . . . . . . . . . . .	Number	0037	
CHDIR. . . . . . . . . . . . . .	Number	003B	
CHDIR_PATH_NOT_FOUND . . . . . .	Alias	ERROR_PATH_NOT_FOUND	
 	 	 	 	 	
CHECK_DONE . . . . . . . . . . .	L NEAR 	1322	CODE
 The Microsoft MACRO Assembler             12-27-<1    	PAGE	Symbols
	 	 	 	-6
EDLIN for MSDOS 2.0


CHECK_END. . . . . . . . . . . .	L NEAR 	1306	CODE
CHECK_NO . . . . . . . . . . . .	L NEAR 	1318	CODE
CHKLP. . . . . . . . . . . . . .	L NEAR 	1180	CODE
CHKNXT . . . . . . . . . . . . .	L NEAR 	118F	CODE
CHKP2. . . . . . . . . . . . . .	L NEAR 	14BD	CODE
CHKRANGE . . . . . . . . . . . .	L NEAR 	11F1	CODE	Global
CHMOD. . . . . . . . . . . . . .	Number	0043	
CHMOD_ACCESS_DENIED. . . . . . .	Alias	ERROR_ACCESS_DENIED	
 	 	 	 	 	
CHMOD_INVALID_FUNCTION . . . . .	Alias	ERROR_INVALID_FUNCTION	
 	 	 	 	 	
CHMOD_PATH_NOT_FOUND . . . . . .	Alias	ERROR_PATH_NOT_FOUND	
 	 	 	 	 	
CLOSE. . . . . . . . . . . . . .	Number	003E	
CLOSE_INVALID_FUNCTION . . . . .	Alias	ERROR_INVALID_FUNCTION	
 	 	 	 	 	
CLOSE_INVALID_HANDLE . . . . . .	Alias	ERROR_INVALID_HANDLE	
 	 	 	 	 	
COMAND_LINE_LENGTH . . . . . . .	Number	0080	
COMBUF . . . . . . . . . . . . .	L BYTE 	002C	DATA	Length =0082
COMERR . . . . . . . . . . . . .	L NEAR 	11FE	CODE
COMERR1. . . . . . . . . . . . .	L NEAR 	1201	CODE
COMERRA. . . . . . . . . . . . .	L NEAR 	1296	CODE
COMERRJ. . . . . . . . . . . . .	L NEAR 	166B	CODE
COMLINE. . . . . . . . . . . . .	L WORD 	0028	DATA	Global
COMMAND. . . . . . . . . . . . .	L NEAR 	1139	CODE
COMMANDJ . . . . . . . . . . . .	L NEAR 	11E8	CODE
COMOVER. . . . . . . . . . . . .	L NEAR 	11CC	CODE
COMTAB . . . . . . . . . . . . .	L BYTE 	1299	CODE
COPY . . . . . . . . . . . . . .	L NEAR 	1717	CODE
COPYIN . . . . . . . . . . . . .	L NEAR 	16FD	CODE
COPYSIZ. . . . . . . . . . . . .	L WORD 	000E	DATA
COPYSIZ_OK . . . . . . . . . . .	L NEAR 	178A	CODE
COPY_DONE. . . . . . . . . . . .	L NEAR 	1836	CODE
COPY_TEXT. . . . . . . . . . . .	L NEAR 	17D6	CODE
COPY_TEXT_1. . . . . . . . . . .	L NEAR 	17E3	CODE
COUNTLN. . . . . . . . . . . . .	L NEAR 	1389	CODE
COUNTRY_NOT_FOUND. . . . . . . .	Alias	ERROR_FILE_NOT_FOUND	
 	 	 	 	 	
CREAT. . . . . . . . . . . . . .	Number	003C	
CREATENEWFILE. . . . . . . . . .	Number	005B	
CREATETEMPFILE . . . . . . . . .	Number	005A	
CREATE_PROCESS_DATA_BLOCK. . . .	Number	0026	
CREAT_ACCESS_DENIED. . . . . . .	Alias	ERROR_ACCESS_DENIED	
 	 	 	 	 	
CREAT_PATH_NOT_FOUND . . . . . .	Alias	ERROR_PATH_NOT_FOUND	
 	 	 	 	 	
CREAT_TOO_MANY_OPEN_FILES. . . .	Alias	ERROR_TOO_MANY_OPEN_FILES
	 	 	 	 	 	
CRLF . . . . . . . . . . . . . .	L NEAR 	0000	CODE	External
CURDIR_INVALID_DRIVE . . . . . .	Alias	ERROR_INVALID_DRIVE	
 	 	 	 	 	
 The Microsoft MACRO Assembler             12-27-<1    	PAGE	Symbols
	 	 	 	-7
EDLIN for MSDOS 2.0


CURLIN . . . . . . . . . . . . .	L NEAR 	1256	CODE
CURRENT. . . . . . . . . . . . .	L WORD 	001C	DATA	Global
CURRENT_DIR. . . . . . . . . . .	Number	0047	
CURR_IS_ROOT . . . . . . . . . .	L NEAR 	0FE9	CODE
C_BS . . . . . . . . . . . . . .	Number	0008	
C_CR . . . . . . . . . . . . . .	Number	000D	
C_DEL. . . . . . . . . . . . . .	Number	007F	
C_ETB. . . . . . . . . . . . . .	Number	0017	
C_ETX. . . . . . . . . . . . . .	Number	0003	
C_HT . . . . . . . . . . . . . .	Number	0009	
C_LF . . . . . . . . . . . . . .	Number	000A	
C_NAK. . . . . . . . . . . . . .	Number	0015	
DEALLOC. . . . . . . . . . . . .	Number	0049	
DEALLOC_ARENA_TRASHED. . . . . .	Alias	ERROR_ARENA_TRASHED	
 	 	 	 	 	
DEALLOC_INVALID_BLOCK. . . . . .	Alias	ERROR_INVALID_BLOCK	
 	 	 	 	 	
DELBAK . . . . . . . . . . . . .	L NEAR 	1A21	CODE
DELETE . . . . . . . . . . . . .	L NEAR 	1634	CODE
DELFIN1. . . . . . . . . . . . .	L NEAR 	1643	CODE
DELFIN2. . . . . . . . . . . . .	L NEAR 	1654	CODE
DELFLG . . . . . . . . . . . . .	L BYTE 	01F0	CONST
DELIM. . . . . . . . . . . . . .	L NEAR 	11DF	CODE
DEL_TEXT . . . . . . . . . . . .	L NEAR 	181A	CODE
DEST . . . . . . . . . . . . . .	V BYTE 	0000	CONST	External
DEVID_BLOCK_DEV. . . . . . . . .	Number	001F	
DEVID_DEVICE . . . . . . . . . .	Number	0080	
DEVID_DEVICE_CLOCK . . . . . . .	Number	0008	
DEVID_DEVICE_CON_IN. . . . . . .	Number	0001	
DEVID_DEVICE_CON_OUT . . . . . .	Number	0002	
DEVID_DEVICE_EOF . . . . . . . .	Number	0040	
DEVID_DEVICE_NULL. . . . . . . .	Number	0004	
DEVID_DEVICE_RAW . . . . . . . .	Number	0020	
DEVID_DEVICE_SPECIAL . . . . . .	Number	0010	
DEVID_EOF. . . . . . . . . . . .	Number	0040	
DEVID_FILE_CLEAN . . . . . . . .	Number	0040	
DEVID_FILE_MASK_DRIVE. . . . . .	Number	003F	
DEVID_ISCIN. . . . . . . . . . .	Number	0001	
DEVID_ISCLK. . . . . . . . . . .	Number	0008	
DEVID_ISCOT. . . . . . . . . . .	Number	0002	
DEVID_ISDEV. . . . . . . . . . .	Number	0080	
DEVID_ISNUL. . . . . . . . . . .	Number	0004	
DEVID_RAW. . . . . . . . . . . .	Number	0020	
DEVID_SPECIAL. . . . . . . . . .	Number	0010	
DIRCHAR. . . . . . . . . . . . .	L BYTE 	002A	CONST
DIRPRI . . . . . . . . . . . . .	Number	000F	
DIRSTRLEN. . . . . . . . . . . .	Number	0040	
DIR_SAVE_LOOP. . . . . . . . . .	L NEAR 	0FE3	CODE
DIR_SEARCH_FIRST . . . . . . . .	Number	0011	
DIR_SEARCH_NEXT. . . . . . . . .	Number	0012	
DISK_RESET . . . . . . . . . . .	Number	000D	
DISPATCH . . . . . . . . . . . .	L NEAR 	11A2	CODE
 The Microsoft MACRO Assembler             12-27-<1    	PAGE	Symbols
	 	 	 	-8
EDLIN for MSDOS 2.0


DISPLAY. . . . . . . . . . . . .	L NEAR 	14D5	CODE
DISPLN . . . . . . . . . . . . .	L NEAR 	14E1	CODE
DISPONE. . . . . . . . . . . . .	L NEAR 	14D2	CODE
DOMOV. . . . . . . . . . . . . .	L NEAR 	16F6	CODE
DOS_MAJOR_VERSION. . . . . . . .	Number	0002	
DOS_MINOR_VERSION. . . . . . . .	Number	000B	
DPBSIZ . . . . . . . . . . . . .	Number	005E	
DRVISOK. . . . . . . . . . . . .	L NEAR 	0FD5	CODE
DSKFUL . . . . . . . . . . . . .	V BYTE 	0000	CONST	External
DSKSIZ . . . . . . . . . . . . .	Number	000D	
DUP2_INVALID_HANDLE. . . . . . .	Alias	ERROR_INVALID_HANDLE	
 	 	 	 	 	
DUP_INVALID_HANDLE . . . . . . .	Alias	ERROR_INVALID_HANDLE	
 	 	 	 	 	
DUP_PDB. . . . . . . . . . . . .	Number	0055	
DUP_TOO_MANY_OPEN_FILES. . . . .	Alias	ERROR_TOO_MANY_OPEN_FILES
	 	 	 	 	 	
EDITBUF. . . . . . . . . . . . .	L BYTE 	00AE	DATA	Length =0102
EDLIN. . . . . . . . . . . . . .	L NEAR 	0100	CODE
EDL_PAD. . . . . . . . . . . . .	L BYTE 	0103	CODE	Length =0E00
ENDED. . . . . . . . . . . . . .	L NEAR 	19BC	CODE
ENDING . . . . . . . . . . . . .	L BYTE 	0222	DATA
ENDINS . . . . . . . . . . . . .	L NEAR 	198E	CODE
ENDTXT . . . . . . . . . . . . .	L WORD 	0026	DATA	Global
END_INS. . . . . . . . . . . . .	L NEAR 	1992	CODE
ENTRYPOINT . . . . . . . . . . .	Number	00C0	
EOF. . . . . . . . . . . . . . .	V BYTE 	0000	CONST	External
EOFCHK . . . . . . . . . . . . .	L NEAR 	13C5	CODE
EOL. . . . . . . . . . . . . . .	L BYTE 	01B0	DATA
ERRJ . . . . . . . . . . . . . .	L NEAR 	0F0F	CODE
ERRORJ . . . . . . . . . . . . .	L NEAR 	170D	CODE
ERROR_ACCESS_DENIED. . . . . . .	Number	0005	
ERROR_ARENA_TRASHED. . . . . . .	Number	0007	
ERROR_BAD_ENVIRONMENT. . . . . .	Number	000A	
ERROR_BAD_FORMAT . . . . . . . .	Number	000B	
ERROR_CURRENT_DIRECTORY. . . . .	Number	0010	
ERROR_FILE_NOT_FOUND . . . . . .	Number	0002	
ERROR_INVALID_ACCESS . . . . . .	Number	000C	
ERROR_INVALID_BLOCK. . . . . . .	Number	0009	
ERROR_INVALID_DATA . . . . . . .	Number	000D	
ERROR_INVALID_DRIVE. . . . . . .	Number	000F	
ERROR_INVALID_FUNCTION . . . . .	Number	0001	
ERROR_INVALID_HANDLE . . . . . .	Number	0006	
ERROR_NOT_ENOUGH_MEMORY. . . . .	Number	0008	
ERROR_NOT_SAME_DEVICE. . . . . .	Number	0011	
ERROR_NO_MORE_FILES. . . . . . .	Number	0012	
ERROR_PATH_NOT_FOUND . . . . . .	Number	0003	
ERROR_TOO_MANY_OPEN_FILES. . . .	Number	0004	
EWRITE . . . . . . . . . . . . .	L NEAR 	13D6	CODE
EXEC . . . . . . . . . . . . . .	Number	004B	
EXEC_BAD_ENVIRONMENT . . . . . .	Alias	ERROR_BAD_ENVIRONMENT	
 	 	 	 	 	
 The Microsoft MACRO Assembler             12-27-<1    	PAGE	Symbols
	 	 	 	-9
EDLIN for MSDOS 2.0


EXEC_BAD_FORMAT. . . . . . . . .	Alias	ERROR_BAD_FORMAT	
 	 	 	 	 	
EXEC_FILE_NOT_FOUND. . . . . . .	Alias	ERROR_FILE_NOT_FOUND	
 	 	 	 	 	
EXEC_FUNC_NO_EXECUTE . . . . . .	Number	0001	
EXEC_FUNC_OVERLAY. . . . . . . .	Number	0002	
EXEC_INVALID_FUNCTION. . . . . .	Alias	ERROR_INVALID_FUNCTION	
 	 	 	 	 	
EXEC_NOT_ENOUGH_MEMORY . . . . .	Alias	ERROR_NOT_ENOUGH_MEMORY	
 	 	 	 	 	
EXE_VALID_OLD_SIGNATURE. . . . .	Number	4D5A	
EXE_VALID_SIGNATURE. . . . . . .	Number	5A4D	
EXIT . . . . . . . . . . . . . .	Number	004C	
EXIT_ABORT . . . . . . . . . . .	Number	0000	
EXIT_CTRL_C. . . . . . . . . . .	Number	0001	
EXIT_HARD_ERROR. . . . . . . . .	Number	0002	
EXIT_KEEP_PROCESS. . . . . . . .	Number	0003	
EXIT_TERMINATE . . . . . . . . .	Number	0000	
FAKE_FCB . . . . . . . . . . . .	L BYTE 	01FB	DATA	Length =0025
FALSE. . . . . . . . . . . . . .	Number	0000	
FATPRI . . . . . . . . . . . . .	Number	001E	
FCB. . . . . . . . . . . . . . .	Number	005C	
FCB2 . . . . . . . . . . . . . .	L BYTE 	01B1	DATA	Global	Length 
	 	 	 	=0025
FCB3 . . . . . . . . . . . . . .	L BYTE 	01D6	DATA	Length =0025
FCB_CLOSE. . . . . . . . . . . .	Number	0010	
FCB_CREATE . . . . . . . . . . .	Number	0016	
FCB_DELETE . . . . . . . . . . .	Number	0013	
FCB_OPEN . . . . . . . . . . . .	Number	000F	
FCB_RANDOM_READ. . . . . . . . .	Number	0021	
FCB_RANDOM_READ_BLOCK. . . . . .	Number	0027	
FCB_RANDOM_WRITE . . . . . . . .	Number	0022	
FCB_RANDOM_WRITE_BLOCK . . . . .	Number	0028	
FCB_RENAME . . . . . . . . . . .	Number	0017	
FCB_SEQ_READ . . . . . . . . . .	Number	0014	
FCB_SEQ_WRITE. . . . . . . . . .	Number	0015	
FILDIRENT. . . . . . . . . . . .	Number	0010	
FILEMRG. . . . . . . . . . . . .	L NEAR 	18E2	CODE
FILENM . . . . . . . . . . . . .	V BYTE 	0000	CONST	External
FILETIMES_INVALID_FUNCTION . . .	Alias	ERROR_INVALID_FUNCTION	
 	 	 	 	 	
FILETIMES_INVALID_HANDLE . . . .	Alias	ERROR_INVALID_HANDLE	
 	 	 	 	 	
FILE_TIMES . . . . . . . . . . .	Number	0057	
FILLBUF. . . . . . . . . . . . .	L NEAR 	19B3	CODE
FILPERPROC . . . . . . . . . . .	Number	0014	
FINDFIRST_FILE_NOT_FOUND . . . .	Alias	ERROR_FILE_NOT_FOUND	
 	 	 	 	 	
FINDFIRST_NO_MORE_FILES. . . . .	Alias	ERROR_NO_MORE_FILES	
 	 	 	 	 	
FINDLIN. . . . . . . . . . . . .	L NEAR 	0000	CODE	External
FINDNEXT_NO_MORE_FILES . . . . .	Alias	ERROR_NO_MORE_FILES	
 The Microsoft MACRO Assembler             12-27-<1    	PAGE	Symbols
	 	 	 	-10
EDLIN for MSDOS 2.0


	 	 	 	 	
FIND_FIRST . . . . . . . . . . .	Number	004E	
FIND_NEXT. . . . . . . . . . . .	Number	004F	
FNAME_BUFFER . . . . . . . . . .	L BYTE 	006E	CONST	Length =0080
FNDFIRST . . . . . . . . . . . .	L NEAR 	0000	CODE	External
FNDNEXT. . . . . . . . . . . . .	L NEAR 	0000	CODE	External
FORLIN . . . . . . . . . . . . .	L NEAR 	126F	CODE
FOURTH . . . . . . . . . . . . .	L BYTE 	0020	CONST
FREEPRI. . . . . . . . . . . . .	Number	0000	
FRSTOK . . . . . . . . . . . . .	L NEAR 	146C	CODE
FUDGE. . . . . . . . . . . . . .	L BYTE 	0027	CONST	Global
FULLN. . . . . . . . . . . . . .	L NEAR 	139D	CODE
GETEXTENDEDERROR . . . . . . . .	Number	0059	
GETNUM . . . . . . . . . . . . .	L NEAR 	1208	CODE
GET_CURRENT_PDB. . . . . . . . .	Number	0051	
GET_DATE . . . . . . . . . . . .	Number	002A	
GET_DEFAULT_DPB. . . . . . . . .	Number	001F	
GET_DEFAULT_DRIVE. . . . . . . .	Number	0019	
GET_DMA. . . . . . . . . . . . .	Number	002F	
GET_DPB. . . . . . . . . . . . .	Number	0032	
GET_DRIVE_FREESPACE. . . . . . .	Number	0036	
GET_FCB_FILE_LENGTH. . . . . . .	Number	0023	
GET_FCB_POSITION . . . . . . . .	Number	0024	
GET_INDOS_FLAG . . . . . . . . .	Number	0034	
GET_INTERRUPT_VECTOR . . . . . .	Number	0035	
GET_IN_VARS. . . . . . . . . . .	Number	0052	
GET_PTR_2. . . . . . . . . . . .	L NEAR 	17D2	CODE
GET_TIME . . . . . . . . . . . .	Number	002C	
GET_VERIFY_ON_WRITE. . . . . . .	Number	0054	
GET_VERSION. . . . . . . . . . .	Number	0030	
HARDCH . . . . . . . . . . . . .	L DWORD	0022	CONST	Global
HAVARGS. . . . . . . . . . . . .	L NEAR 	1751	CODE
HAVEOF . . . . . . . . . . . . .	L BYTE 	0221	DATA
HAVFIL . . . . . . . . . . . . .	L NEAR 	107B	CODE
HAVLIN . . . . . . . . . . . . .	L NEAR 	1682	CODE
HAV_ROOM . . . . . . . . . . . .	L NEAR 	17A0	CODE
HEADER . . . . . . . . . . . . .	L BYTE 	0F03	CODE
INFILE . . . . . . . . . . . . .	L NEAR 	1472	CODE
INFILE2. . . . . . . . . . . . .	L NEAR 	148A	CODE
INLP . . . . . . . . . . . . . .	L NEAR 	1937	CODE
INS. . . . . . . . . . . . . . .	L NEAR 	192B	CODE
INSERT . . . . . . . . . . . . .	L NEAR 	1914	CODE
INTBASE. . . . . . . . . . . . .	Number	0080	
INTERNATIONAL. . . . . . . . . .	Number	0038	
INTERNATIONAL_INVALID_FUNCTION .	Alias	ERROR_INVALID_FUNCTION	
 	 	 	 	 	
INTERNAT_BLOCK_MAX . . . . . . .	Number	0020	
INTTAB . . . . . . . . . . . . .	Number	0020	
INT_24 . . . . . . . . . . . . .	L NEAR 	0000	CODE	External
INT_ABORT. . . . . . . . . . . .	Alias	INTTAB	 	
INT_COMMAND. . . . . . . . . . .	Number	0021	
INT_CTRL_C . . . . . . . . . . .	Number	0023	
 The Microsoft MACRO Assembler             12-27-<1    	PAGE	Symbols
	 	 	 	-11
EDLIN for MSDOS 2.0


INT_DISK_READ. . . . . . . . . .	Number	0025	
INT_DISK_WRITE . . . . . . . . .	Number	0026	
INT_FASTCON. . . . . . . . . . .	Number	0029	
INT_FATAL_ABORT. . . . . . . . .	Number	0024	
INT_KEEP_PROCESS . . . . . . . .	Number	0027	
INT_SPOOLER. . . . . . . . . . .	Number	0028	
INT_TERMINATE. . . . . . . . . .	Number	0022	
IOCTL. . . . . . . . . . . . . .	Number	0044	
IOCTL_INVALID_DATA . . . . . . .	Alias	ERROR_INVALID_DATA	
 	 	 	 	 	
IOCTL_INVALID_FUNCTION . . . . .	Alias	ERROR_INVALID_FUNCTION	
 	 	 	 	 	
IOCTL_INVALID_HANDLE . . . . . .	Alias	ERROR_INVALID_HANDLE	
 	 	 	 	 	
KANJI. . . . . . . . . . . . . .	Alias	FALSE	 	
KEEP_PROCESS . . . . . . . . . .	Number	0031	
KILL_BL. . . . . . . . . . . . .	L NEAR 	0000	CODE	External
LAST . . . . . . . . . . . . . .	L WORD 	0024	DATA
LASTLIN. . . . . . . . . . . . .	L WORD 	002A	DATA
LBRPRI . . . . . . . . . . . . .	Number	0002	
LBWPRI . . . . . . . . . . . . .	Number	0004	
LF . . . . . . . . . . . . . . .	L NEAR 	0000	CODE	External
LIST . . . . . . . . . . . . . .	L NEAR 	14A9	CODE
LOADBUF. . . . . . . . . . . . .	L NEAR 	150F	CODE
LOADLP . . . . . . . . . . . . .	L NEAR 	1518	CODE
LOADMOD. . . . . . . . . . . . .	L BYTE 	0021	CONST
LOCKOPER . . . . . . . . . . . .	Number	005C	
LSEEK. . . . . . . . . . . . . .	Number	0042	
LSEEK_INVALID_FUNCTION . . . . .	Alias	ERROR_INVALID_FUNCTION	
 	 	 	 	 	
LSEEK_INVALID_HANDLE . . . . . .	Alias	ERROR_INVALID_HANDLE	
 	 	 	 	 	
LSTFND . . . . . . . . . . . . .	L WORD 	0014	DATA	Global
LSTNUM . . . . . . . . . . . . .	L WORD 	0016	DATA	Global
MAKE . . . . . . . . . . . . . .	L BYTE 	0003	CONST
MAKFIL . . . . . . . . . . . . .	L NEAR 	108B	CODE
MAXLIN . . . . . . . . . . . . .	L NEAR 	1263	CODE
MEMERR . . . . . . . . . . . . .	L NEAR 	1700	CODE
MEMERRJ1 . . . . . . . . . . . .	L NEAR 	1964	CODE
MEMFUL . . . . . . . . . . . . .	V BYTE 	0000	CONST	External
MEMOK. . . . . . . . . . . . . .	L NEAR 	196A	CODE
MEM_CHECK. . . . . . . . . . . .	L NEAR 	1790	CODE
MERGE. . . . . . . . . . . . . .	L NEAR 	186A	CODE
MI_INT . . . . . . . . . . . . .	Number	00CD	
MI_LONG_CALL . . . . . . . . . .	Number	009A	
MI_LONG_JMP. . . . . . . . . . .	Number	00EA	
MI_LONG_RET. . . . . . . . . . .	Number	00CB	
MKDIR. . . . . . . . . . . . . .	Number	0039	
MKDIR_ACCESS_DENIED. . . . . . .	Alias	ERROR_ACCESS_DENIED	
 	 	 	 	 	
MKDIR_PATH_NOT_FOUND . . . . . .	Alias	ERROR_PATH_NOT_FOUND	
 	 	 	 	 	
 The Microsoft MACRO Assembler             12-27-<1    	PAGE	Symbols
	 	 	 	-12
EDLIN for MSDOS 2.0


MOVE . . . . . . . . . . . . . .	L NEAR 	1710	CODE
MOVEFILE . . . . . . . . . . . .	L NEAR 	1846	CODE
MOVERR . . . . . . . . . . . . .	L NEAR 	170A	CODE
MOVE_DONE. . . . . . . . . . . .	L NEAR 	183A	CODE
MOVFLG . . . . . . . . . . . . .	L BYTE 	0228	DATA
MOV_CHK. . . . . . . . . . . . .	L NEAR 	17F9	CODE
MRG. . . . . . . . . . . . . . .	L NEAR 	18A2	CODE
MRGERR . . . . . . . . . . . . .	V BYTE 	0000	CONST	External
NAMERR . . . . . . . . . . . . .	L NEAR 	1867	CODE
NAME_COPIED. . . . . . . . . . .	L NEAR 	0F81	CODE
NDNAME . . . . . . . . . . . . .	V BYTE 	0000	CONST	External
NEWFIL . . . . . . . . . . . . .	V BYTE 	0000	CONST	External
NEWLEN . . . . . . . . . . . . .	L WORD 	0012	DATA	Global
NEXT_CHAR. . . . . . . . . . . .	L NEAR 	0F50	CODE
NOBAK. . . . . . . . . . . . . .	V BYTE 	0000	CONST	External
NOCOM. . . . . . . . . . . . . .	L NEAR 	166E	CODE
NODELIM. . . . . . . . . . . . .	L NEAR 	11E0	CODE
NODIR. . . . . . . . . . . . . .	V BYTE 	0000	CONST	External
NOERROR. . . . . . . . . . . . .	L NEAR 	1761	CODE
NOMORE . . . . . . . . . . . . .	L NEAR 	13BD	CODE
NOMOREJ. . . . . . . . . . . . .	L NEAR 	1325	CODE
NONAME . . . . . . . . . . . . .	L NEAR 	0F0C	CODE
NOROOM . . . . . . . . . . . . .	L NEAR 	10A2	CODE
NOSUCH . . . . . . . . . . . . .	V BYTE 	0000	CONST	External
NOTBAK . . . . . . . . . . . . .	L NEAR 	10A8	CODE
NOTEND . . . . . . . . . . . . .	L NEAR 	136A	CODE
NOTFND . . . . . . . . . . . . .	L NEAR 	161B	CODE
NOTFNDJ. . . . . . . . . . . . .	L NEAR 	152E	CODE
NOT_END. . . . . . . . . . . . .	L NEAR 	1324	CODE
NOT_FOUND. . . . . . . . . . . .	L NEAR 	12FA	CODE
NOT_ROOT . . . . . . . . . . . .	L NEAR 	0F9D	CODE
NO_ERRORS. . . . . . . . . . . .	L NEAR 	1004	CODE
NO_ERROR_OCCURRED. . . . . . . .	Text	0                              
	 	 	 	                                ?	
 	 	 	 	 	
NUMCHK . . . . . . . . . . . . .	L NEAR 	124C	CODE
NUMCOM . . . . . . . . . . . . .	Number	000F	
NUMLP. . . . . . . . . . . . . .	L NEAR 	122A	CODE
NUMPOS . . . . . . . . . . . . .	L WORD 	0018	DATA	Global
NXTARG . . . . . . . . . . . . .	L NEAR 	173A	CODE
OEM_C1 . . . . . . . . . . . . .	Number	00F9	
OEM_C2 . . . . . . . . . . . . .	Number	00FA	
OEM_C3 . . . . . . . . . . . . .	Number	00FB	
OEM_C4 . . . . . . . . . . . . .	Number	00FC	
OEM_C5 . . . . . . . . . . . . .	Number	00FD	
OEM_C6 . . . . . . . . . . . . .	Number	00FE	
OEM_C7 . . . . . . . . . . . . .	Number	00FF	
OLDDAT . . . . . . . . . . . . .	L BYTE 	0226	DATA	Global
OLDLEN . . . . . . . . . . . . .	L WORD 	0010	DATA	Global
ONE4TH . . . . . . . . . . . . .	L WORD 	0020	DATA
OPEN . . . . . . . . . . . . . .	Number	003D	
OPEN_ACCESS_DENIED . . . . . . .	Alias	ERROR_ACCESS_DENIED	
 The Microsoft MACRO Assembler             12-27-<1    	PAGE	Symbols
	 	 	 	-13
EDLIN for MSDOS 2.0


	 	 	 	 	
OPEN_FILE_NOT_FOUND. . . . . . .	Alias	ERROR_FILE_NOT_FOUND	
 	 	 	 	 	
OPEN_FOR_BOTH. . . . . . . . . .	Number	0002	
OPEN_FOR_READ. . . . . . . . . .	Number	0000	
OPEN_FOR_WRITE . . . . . . . . .	Number	0001	
OPEN_INVALID_ACCESS. . . . . . .	Alias	ERROR_INVALID_ACCESS	
 	 	 	 	 	
OPEN_TOO_MANY_OPEN_FILES . . . .	Alias	ERROR_TOO_MANY_OPEN_FILES
	 	 	 	 	 	
OPTCHAR. . . . . . . . . . . . .	L BYTE 	0029	CONST
OPT_ERR. . . . . . . . . . . . .	V BYTE 	0000	CONST	External
OUT. . . . . . . . . . . . . . .	L NEAR 	0000	CODE	External
OUTCNT . . . . . . . . . . . . .	L NEAR 	15C3	CODE
OUTLN. . . . . . . . . . . . . .	L NEAR 	14E6	CODE
OUTLP. . . . . . . . . . . . . .	L NEAR 	15C5	CODE
PAGE . . . . . . . . . . . . . .	L NEAR 	1451	CODE
PARAM1 . . . . . . . . . . . . .	L WORD 	0000	DATA	Global
PARAM2 . . . . . . . . . . . . .	L WORD 	0002	DATA	Global
PARAM3 . . . . . . . . . . . . .	L WORD 	0004	DATA
PARAM4 . . . . . . . . . . . . .	L WORD 	0006	DATA
PARMAPP. . . . . . . . . . . . .	L NEAR 	1340	CODE
PARMOK . . . . . . . . . . . . .	L NEAR 	11C2	CODE
PARSE. . . . . . . . . . . . . .	L NEAR 	115B	CODE
PARSE_FILE_DESCRIPTOR. . . . . .	Number	0029	
PERR . . . . . . . . . . . . . .	L NEAR 	161E	CODE
POINTER. . . . . . . . . . . . .	L WORD 	001E	DATA	Global
PROMPT . . . . . . . . . . . . .	Number	002A	
PTR_1. . . . . . . . . . . . . .	L WORD 	0008	DATA
PTR_2. . . . . . . . . . . . . .	L WORD 	000A	DATA
PTR_3. . . . . . . . . . . . . .	L WORD 	000C	DATA
PUTCURS. . . . . . . . . . . . .	L NEAR 	1623	CODE
QFLG . . . . . . . . . . . . . .	L BYTE 	0220	DATA	Global
QUERY. . . . . . . . . . . . . .	L NEAR 	0000	CODE	External
QUIT . . . . . . . . . . . . . .	L NEAR 	0000	CODE	External
QUOTE_CHAR . . . . . . . . . . .	Number	0016	
RAW_CON_INPUT. . . . . . . . . .	Number	0007	
RAW_CON_IO . . . . . . . . . . .	Number	0006	
READ . . . . . . . . . . . . . .	Number	003F	
READ_ACCESS_DENIED . . . . . . .	Alias	ERROR_ACCESS_DENIED	
 	 	 	 	 	
READ_INVALID_HANDLE. . . . . . .	Alias	ERROR_INVALID_HANDLE	
 	 	 	 	 	
RENAME . . . . . . . . . . . . .	Number	0056	
RENAME_ACCESS_DENIED . . . . . .	Alias	ERROR_ACCESS_DENIED	
 	 	 	 	 	
RENAME_FILE_NOT_FOUND. . . . . .	Alias	ERROR_FILE_NOT_FOUND	
 	 	 	 	 	
RENAME_NOT_SAME_DEVICE . . . . .	Alias	ERROR_NOT_SAME_DEVICE	
 	 	 	 	 	
REPLAC . . . . . . . . . . . . .	L NEAR 	1538	CODE
REPLACE. . . . . . . . . . . . .	L NEAR 	16CB	CODE
 The Microsoft MACRO Assembler             12-27-<1    	PAGE	Symbols
	 	 	 	-14
EDLIN for MSDOS 2.0


REPLAC_FROM_CURR . . . . . . . .	L NEAR 	1531	CODE
REPLP. . . . . . . . . . . . . .	L NEAR 	1547	CODE
REPNXT . . . . . . . . . . . . .	L NEAR 	15BC	CODE
RESTORE. . . . . . . . . . . . .	L NEAR 	18EF	CODE
REST_DIR . . . . . . . . . . . .	L NEAR 	0000	CODE	External
RET$5. . . . . . . . . . . . . .	L NEAR 	1450	CODE
RET1 . . . . . . . . . . . . . .	L NEAR 	11F0	CODE
RET12. . . . . . . . . . . . . .	L NEAR 	16FF	CODE
RET2 . . . . . . . . . . . . . .	L NEAR 	1305	CODE
RET3 . . . . . . . . . . . . . .	L NEAR 	13C4	CODE
RET7 . . . . . . . . . . . . . .	L NEAR 	150E	CODE
RET8 . . . . . . . . . . . . . .	L NEAR 	15CC	CODE
RET9 . . . . . . . . . . . . . .	L NEAR 	1633	CODE
REV. . . . . . . . . . . . . . .	L BYTE 	001E	CONST
RMDIR. . . . . . . . . . . . . .	Number	003A	
RMDIR_ACCESS_DENIED. . . . . . .	Alias	ERROR_ACCESS_DENIED	
 	 	 	 	 	
RMDIR_CURRENT_DIRECTORY. . . . .	Alias	ERROR_CURRENT_DIRECTORY	
 	 	 	 	 	
RMDIR_PATH_NOT_FOUND . . . . . .	Alias	ERROR_PATH_NOT_FOUND	
 	 	 	 	 	
ROPROT . . . . . . . . . . . . .	Alias	FALSE	 	
RO_ERR . . . . . . . . . . . . .	V BYTE 	0000	CONST	External
RPRI . . . . . . . . . . . . . .	Number	0006	
SAME_DIR . . . . . . . . . . . .	L NEAR 	1025	CODE
SAME_DRIVE . . . . . . . . . . .	L NEAR 	0FC7	CODE
SAVEND . . . . . . . . . . . . .	L NEAR 	1106	CODE
SCANEOF. . . . . . . . . . . . .	L NEAR 	12C6	CODE
SCANLN . . . . . . . . . . . . .	L NEAR 	0000	CODE	External
SCNDOK . . . . . . . . . . . . .	L NEAR 	147F	CODE
SEARCH . . . . . . . . . . . . .	L NEAR 	15D9	CODE
SEARCH_FROM_CURR . . . . . . . .	L NEAR 	15D2	CODE
SEND . . . . . . . . . . . . . .	L NEAR 	1500	CODE
SERVERCALL . . . . . . . . . . .	Number	005D	
SETBLOCK . . . . . . . . . . . .	Number	004A	
SETBLOCK_ARENA_TRASHED . . . . .	Alias	ERROR_ARENA_TRASHED	
 	 	 	 	 	
SETBLOCK_INVALID_BLOCK . . . . .	Alias	ERROR_INVALID_BLOCK	
 	 	 	 	 	
SETBLOCK_INVALID_FUNCTION. . . .	Alias	ERROR_INVALID_FUNCTION	
 	 	 	 	 	
SETBLOCK_NOT_ENOUGH_MEMORY . . .	Alias	ERROR_NOT_ENOUGH_MEMORY	
 	 	 	 	 	
SETDPB . . . . . . . . . . . . .	Number	0053	
SETPTS . . . . . . . . . . . . .	L NEAR 	185A	CODE
SETUP. . . . . . . . . . . . . .	L NEAR 	10AE	CODE
SET_CTRL_C_TRAPPING. . . . . . .	Number	0033	
SET_CURRENT_PDB. . . . . . . . .	Number	0050	
SET_DATE . . . . . . . . . . . .	Number	002B	
SET_DEFAULT_DRIVE. . . . . . . .	Number	000E	
SET_DMA. . . . . . . . . . . . .	Number	001A	
SET_INTERRUPT_VECTOR . . . . . .	Number	0025	
 The Microsoft MACRO Assembler             12-27-<1    	PAGE	Symbols
	 	 	 	-15
EDLIN for MSDOS 2.0


SET_OEM_HANDLER. . . . . . . . .	Number	00F8	
SET_TIME . . . . . . . . . . . .	Number	002D	
SET_VERIFY_ON_WRITE. . . . . . .	Number	002E	
SF_DEFAULT_NUMBER. . . . . . . .	Number	0005	
SHOWNUM. . . . . . . . . . . . .	L NEAR 	0000	CODE	External
SIMPED . . . . . . . . . . . . .	L NEAR 	0F12	CODE
SJ1. . . . . . . . . . . . . . .	L NEAR 	0F91	CODE
SJ12 . . . . . . . . . . . . . .	L NEAR 	1692	CODE
SJ2. . . . . . . . . . . . . . .	L NEAR 	0F98	CODE
SJ3. . . . . . . . . . . . . . .	L NEAR 	0FF8	CODE
SJ4. . . . . . . . . . . . . . .	L NEAR 	1030	CODE
SJ5. . . . . . . . . . . . . . .	L NEAR 	103A	CODE
SJ50 . . . . . . . . . . . . . .	L NEAR 	1066	CODE
SJ51 . . . . . . . . . . . . . .	L NEAR 	12D8	CODE
SJ51B. . . . . . . . . . . . . .	L NEAR 	12E5	CODE
SJ52 . . . . . . . . . . . . . .	L NEAR 	12EB	CODE
SJ53 . . . . . . . . . . . . . .	L NEAR 	1351	CODE
SJ6. . . . . . . . . . . . . . .	L NEAR 	153D	CODE
SJ7. . . . . . . . . . . . . . .	L NEAR 	15DE	CODE
SK1. . . . . . . . . . . . . . .	L NEAR 	1215	CODE
SK2. . . . . . . . . . . . . . .	L NEAR 	1293	CODE
SKIP . . . . . . . . . . . . . .	L NEAR 	11EB	CODE
SKIP1. . . . . . . . . . . . . .	L NEAR 	11EC	CODE
SLASHOK. . . . . . . . . . . . .	L NEAR 	0F41	CODE
SOMELEFT . . . . . . . . . . . .	L NEAR 	15B8	CODE
SRCH . . . . . . . . . . . . . .	L NEAR 	15E8	CODE
SRCHCNT. . . . . . . . . . . . .	L WORD 	001A	DATA	Global
SRCHFLG. . . . . . . . . . . . .	L BYTE 	0223	DATA	Global
SRCHMOD. . . . . . . . . . . . .	L BYTE 	0227	DATA	Global
STACK. . . . . . . . . . . . . .	L BYTE 	02A9	DATA
START. . . . . . . . . . . . . .	L WORD 	02A9	DATA	Global
STDAUX . . . . . . . . . . . . .	Number	0003	
STDERR . . . . . . . . . . . . .	Number	0002	
STDIN. . . . . . . . . . . . . .	Number	0000	
STDOUT . . . . . . . . . . . . .	Number	0001	
STDPRN . . . . . . . . . . . . .	Number	0004	
STD_AUX_INPUT. . . . . . . . . .	Number	0003	
STD_AUX_OUTPUT . . . . . . . . .	Number	0004	
STD_CON_INPUT. . . . . . . . . .	Number	0001	
STD_CON_INPUT_FLUSH. . . . . . .	Number	000C	
STD_CON_INPUT_NO_ECHO. . . . . .	Number	0008	
STD_CON_INPUT_STATUS . . . . . .	Number	000B	
STD_CON_OUTPUT . . . . . . . . .	Number	0002	
STD_CON_STRING_INPUT . . . . . .	Number	000A	
STD_CON_STRING_OUTPUT. . . . . .	Number	0009	
STD_PRINTER_OUTPUT . . . . . . .	Number	0005	
STKSIZ . . . . . . . . . . . . .	Number	0080	
TABLE. . . . . . . . . . . . . .	L WORD 	12A8	CODE
THE_ROOT . . . . . . . . . . . .	L BYTE 	0026	CONST
THREE4TH . . . . . . . . . . . .	L WORD 	0022	DATA
TOOLNG . . . . . . . . . . . . .	V BYTE 	0000	CONST	External
TOOLONG. . . . . . . . . . . . .	L NEAR 	15CD	CODE
 The Microsoft MACRO Assembler             12-27-<1    	PAGE	Symbols
	 	 	 	-16
EDLIN for MSDOS 2.0


TRUE . . . . . . . . . . . . . .	Number	- 0001	
TRUNCLP. . . . . . . . . . . . .	L NEAR 	1525	CODE
TXT1 . . . . . . . . . . . . . .	L BYTE 	00EE	CONST	Global
TXT2 . . . . . . . . . . . . . .	L BYTE 	016F	CONST	Global
UNLINK . . . . . . . . . . . . .	Number	0041	
UNLINK_ACCESS_DENIED . . . . . .	Alias	ERROR_ACCESS_DENIED	
 	 	 	 	 	
UNLINK_FILE_NOT_FOUND. . . . . .	Alias	ERROR_FILE_NOT_FOUND	
 	 	 	 	 	
UNQUOTE. . . . . . . . . . . . .	L NEAR 	0000	CODE	External
UPCASE . . . . . . . . . . . . .	L NEAR 	11A8	CODE
USERDIR. . . . . . . . . . . . .	L BYTE 	002C	CONST	Global
USERIDOPER . . . . . . . . . . .	Number	005E	
USER_DRIVE . . . . . . . . . . .	L BYTE 	0028	CONST	Global
VERS_OK. . . . . . . . . . . . .	L NEAR 	0F28	CODE
WAIT . . . . . . . . . . . . . .	Number	004D	
WPRI . . . . . . . . . . . . . .	Number	0008	
WRITE. . . . . . . . . . . . . .	Number	0040	
WRITE_ACCESS_DENIED. . . . . . .	Alias	ERROR_ACCESS_DENIED	
 	 	 	 	 	
WRITE_INVALID_HANDLE . . . . . .	Alias	ERROR_INVALID_HANDLE	
 	 	 	 	 	
WRT. . . . . . . . . . . . . . .	L NEAR 	13FA	CODE
WRTADD . . . . . . . . . . . . .	L NEAR 	13FE	CODE
WRTADD1. . . . . . . . . . . . .	L NEAR 	140A	CODE
WRTERR . . . . . . . . . . . . .	L NEAR 	1440	CODE
XDUP . . . . . . . . . . . . . .	Number	0045	
XDUP2. . . . . . . . . . . . . .	Number	0046	
XERROR . . . . . . . . . . . . .	L NEAR 	1447	CODE
XX1. . . . . . . . . . . . . . .	L NEAR 	0F63	CODE

Warning Severe
Errors	Errors 
0	0
