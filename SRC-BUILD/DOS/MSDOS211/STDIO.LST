Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 09:23:49

STDIO - device IO for MSDOS                                 Page     1-1
                                                            

       1                                ; 
       2                                ; Standard device IO for MSDOS (first 1
					2 function calls) 
       3                                ; 
       4                                 
       5                                .list 
       6                                 
       7                                TITLE   STDIO - device IO for MSDOS 
       8                                NAME    STDIO 
       9                                 
      10                             C  INCLUDE IO.ASM 
      11                             C  ; 
      12                             C  ; (Reconstructed) IO.ASM for MSDOS 
      13                             C  ; 
      14                             C          ASSUME  SS:DOSGROUP,CS:DOSGROUP
					 
      15                             C   
      16                             C  	public	$STD_AUX_OUTPUT 
      17                             C  	public	$STD_PRINTER_OUTPUT 
      18                             C  	public	Tab 
      19                             C   
      20                             C  	extrn	ESCCHAR:BYTE 
      21                             C  	extrn	PFLAG:BYTE 
      22                             C  	extrn	CARPOS:BYTE 
      23                             C  	extrn	STARTPOS:BYTE 
      24                             C  	extrn	INBUF:BYTE 
      25                             C  	extrn	INSMODE:BYTE 
      26                             C  	extrn	CHARCO:BYTE 
      27                             C  	extrn	STATCHK:NEAR 
      28                             C  	extrn	RAWOUT:NEAR 
      29                             C  	extrn	RAWOUT2:NEAR 
      30                             C  	extrn	SPOOLINT:NEAR 
      31                             C  	extrn	IOFUNC:NEAR 
      32                             C   
      33                             C  .list 
      34                             C   
      35 0000                        C  CODE    SEGMENT BYTE PUBLIC  'CODE' 
      36                             C  ; 
      37                             C   
      38                             C  	procedure	$STD_CON_INPUT, NEAR 
      39 0000                        C1 $STD_CON_INPUT PROC NEAR
      40 0000  E8 00D3 R             C  	call	$STD_CON_INPUT_NO_ECHO 
      41 0003  50                    C  	push	ax 
      42 0004  E8 000B R             C  	call	OUT 
      43 0007  58                    C  	pop	ax 
      44                             C  	return 
      45 0008                        C1 ??0000:
      46 0008  C3                    C1  RET
      47                             C  $STD_CON_INPUT	endp 
      48                             C  ; 
      49                             C  	procedure	$STD_CON_OUTPUT, NEAR 
      50 0009                        C1 $STD_CON_OUTPUT PROC NEAR
      51 0009  8A C2                 C  	mov	al, dl 
      52                             C  	entry	OUT 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 09:23:49

STDIO - device IO for MSDOS                                 Page     1-2
DEVICE TABLE AND SRH DEFINITION                             

      53 000B                        C1 OUT:
      54 000B  3C 20                 C  	cmp	al, ' ' 
      55 000D  72 43                 C  	jc	out_controlch 
      56 000F  3C 7F                 C  	cmp	al, c_DEL	;DEL does not increase C
					ARPOS 
      57 0011  74 05                 C  	jz	out_notprint 
      58 0013  36: FE 06 0000 E      C  	inc	ss:CARPOS 
      59 0018                        C  out_notprint: 
      60 0018  1E                    C  	push	ds 
      61 0019  56                    C  	push	si 
      62 001A  36: FE 06 0000 E      C  	inc	ss:charco 
      63 001F  36: 80 26 0000 E 03   C  	and	ss:charco, 3 
      64 0025  75 05                 C  	jnz	out_nobreak 
      65 0027  50                    C  	push	ax 
      66 0028  E8 0000 E             C  	call	STATCHK 
      67 002B  58                    C  	pop	ax 
      68 002C                        C  out_nobreak: 
      69 002C  E8 0000 E             C  	call	RAWOUT 
      70 002F  5E                    C  	pop	si 
      71 0030  1F                    C  	pop	ds 
      72 0031  36: F6 06 0000 E FF   C  	test	ss:PFLAG, 0FFH		;Echoing to print
					er? 
      73                             C  	retz 
      74 0037  74 CF                 C2  ??0001: jz ret_l
      75 0039  53                    C  	push	bx 
      76 003A  1E                    C  	push	ds 
      77 003B  56                    C  	push	si 
      78 003C  BB 0001               C  	mov	bx, 1			;STDOUT 
      79                             C  	invoke	GET_IO_FCB 
      80 003F  E8 0000 E             C1  CALL GET_IO_FCB
      81 0042  72 0C                 C  	jc	j_out_finish 
      82 0044  F6 44 18 80           C  	test	[SI.fcb_DEVID],080H	;If STDOUT is
					 redirected to a file, 
      83 0048  74 06                 C  	jz	j_out_finish		;don't echo to printe
					r. 
      84 004A  BB 0004               C  	mov	bx, 4			 
      85 004D  EB 7D                 C  	jmp	short out_rawout2	;Otherwise echo 
					to stdlpt	 
      86 004F  C3                    C  	ret 
      87                             C   
      88 0050                        C  j_out_finish: 
      89 0050  EB 7D                 C  	jmp	short out_finish 
      90                             C   
      91 0052                        C  out_controlch: 
      92 0052  3C 0D                 C  	cmp	al, c_CR	;CR resets console X to 0
					 
      93 0054  74 20                 C  	jz	out_cr 
      94 0056  3C 08                 C  	cmp	al, c_BS	;BS decreases console X 
      95 0058  74 26                 C  	jz	out_bs 
      96 005A  3C 09                 C  	cmp	al, c_HT	;HT moves to next tabstop
					 
      97 005C  75 BA                 C  	jnz	out_notprint 
      98 005E  36: A0 0000 E         C  	mov	al, ss:CARPOS 
      99 0062  0C F8                 C  	or	al, 0F8h 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 09:23:49

STDIO - device IO for MSDOS                                 Page     1-3
DEVICE TABLE AND SRH DEFINITION                             

     100 0064  F6 D8                 C  	neg	al		;Spaces to next tabstop 
     101                             C   
     102 0066                        C  TAB: 
     103 0066  51                    C  	push	cx 
     104 0067  8A C8                 C  	mov	cl, al 
     105 0069  B5 00                 C  	mov	ch, 0 
     106 006B  E3 07                 C  	jcxz	TAB_end 
     107 006D                        C  TAB1: 
     108 006D  B0 20                 C  	mov	al, ' ' 
     109 006F  E8 000B R             C  	call	OUT 
     110 0072  E2 F9                 C  	loop	TAB1 
     111 0074                        C  TAB_end: 
     112 0074  59                    C  	pop	cx 
     113 0075  C3                    C  	ret 
     114                             C  ; 
     115 0076                        C  out_cr: 
     116 0076  36: C6 06 0000 E 00   C  	mov	ss:CARPOS, 0 
     117 007C  EB 9A                 C  	jmp	short out_notprint 
     118                             C  ; 
     119 007E  EB 8B                 C  j_OUT:	jmp	short OUT 
     120                             C  ; 
     121 0080                        C  out_bs: 
     122 0080  36: FE 0E 0000 E      C  	dec	ss:CARPOS 
     123 0085  EB 91                 C  	jmp	short out_notprint 
     124                             C   
     125                             C  $STD_CON_OUTPUT	endp 
     126                             C   
     127                             C  	procedure BUFOUT, NEAR 
     128 0087                        C1 BUFOUT PROC NEAR
     129 0087  3C 20                 C  	cmp	al, ' '		;Render printable charact
					ers  
     130 0089  73 F3                 C  	jnc	j_OUT	 
     131 008B  3C 09                 C  	cmp	al, c_HT	;and tabs 
     132 008D  74 EF                 C  	jz	j_OUT 
     133 008F  50                    C  	push	ax 
     134 0090  B0 5E                 C  	mov	al, '^' 
     135 0092  E8 000B R             C  	call	OUT 
     136 0095  58                    C  	pop	ax 
     137 0096  0C 40                 C  	or	al, 40h 
     138 0098  E8 000B R             C  	call	OUT 
     139                             C  	return 
     140 009B                        C1 ??0003:
     141 009B  C3                    C1  RET
     142                             C  BUFOUT	endp 
     143                             C           
     144                             C  	procedure   $STD_AUX_INPUT,NEAR   ;Sys
					tem call 3 
     145 009C                        C1 $STD_AUX_INPUT PROC NEAR
     146 009C  E8 0000 E             C  	call	STATCHK 
     147 009F  BB 0003               C  	mov	bx, 3	;stdaux file handle 
     148 00A2  E8 0000 E             C  	call	GET_IO_FCB 
     149                             C  	retc 
     150 00A5  72 F4                 C2  ??0004: jc ret_l
     151 00A7  EB 03                 C  	jmp	short auxin2 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 09:23:49

STDIO - device IO for MSDOS                                 Page     1-4
DEVICE TABLE AND SRH DEFINITION                             

     152                             C  ; 
     153 00A9  E8 0000 E             C  auxin1:	call	SPOOLINT 
     154 00AC  B4 01                 C  auxin2:	mov	ah, 1	;Get input status 
     155 00AE  E8 0000 E             C  	call	IOFUNC 
     156 00B1  74 F6                 C  	jz	auxin1	;Spin until there's somethin
					g there 
     157 00B3  32 E4                 C  	xor	ah, ah 
     158 00B5  E8 0000 E             C  	call	IOFUNC	;Get the byte 
     159 00B8  C3                    C  	ret	 
     160                             C   
     161                             C  $STD_AUX_INPUT	endp 
     162                             C   
     163                             C  	procedure   $STD_AUX_OUTPUT,NEAR	;Syst
					em call 4 
     164 00B9                        C1 $STD_AUX_OUTPUT PROC NEAR
     165 00B9  53                    C  	push	bx 
     166 00BA  BB 0003               C  	mov	bx, 3	;stdaux file handle 
     167 00BD  EB 04                 C  	jmp	short aux_lpt_out 
     168                             C  ; 
     169                             C  	entry $STD_PRINTER_OUTPUT 
     170 00BF                        C1 $STD_PRINTER_OUTPUT:
     171 00BF  53                    C  	push	bx 
     172 00C0  BB 0004               C  	mov	bx, 4	;stdlpt file handle 
     173 00C3                        C  aux_lpt_out: 
     174 00C3  8A C2                 C  	mov	al, dl 
     175 00C5  50                    C  	push	ax 
     176 00C6  E8 0000 E             C  	call	STATCHK 
     177 00C9  58                    C  	pop	ax 
     178 00CA  1E                    C  	push	ds 
     179 00CB  56                    C  	push	si 
     180 00CC                        C  out_rawout2: 
     181 00CC  E8 0000 E             C  	call	RAWOUT2 
     182 00CF                        C  out_finish: 
     183 00CF  5E                    C  	pop	si 
     184 00D0  1F                    C  	pop	ds 
     185 00D1  5B                    C  	pop	bx 
     186 00D2  C3                    C  	ret 
     187                             C  $STD_AUX_OUTPUT	endp 
     188                             C   
     189                             C   
     190                             C   
     191                             C  	public	$STD_CON_INPUT_NO_ECHO 
     192                             C  	public	$STD_CON_STRING_OUTPUT 
     193                             C   
     194                             C          procedure   $STD_CON_INPUT_NO_E
					CHO,NEAR   ;System call 8 
     195 00D3                        C1 $STD_CON_INPUT_NO_ECHO PROC NEAR
     196 00D3  1E                    C  	push	ds 
     197 00D4  56                    C  	push	si 
     198 00D5  E8 0000 E             C  conin1:	call	STATCHK	;Wait for input re
					ady 
     199 00D8  74 FB                 C  	jz	conin1 
     200 00DA  32 E4                 C  	xor	ah, ah 
     201 00DC  E8 0000 E             C  	call	IOFUNC 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 09:23:49

STDIO - device IO for MSDOS                                 Page     1-5
DEVICE TABLE AND SRH DEFINITION                             

     202 00DF  5E                    C  	pop	si 
     203 00E0  1F                    C  	pop	ds 
     204                             C  	return 
     205 00E1                        C1 ??0006:
     206 00E1  C3                    C1  RET
     207                             C   
     208                             C  $STD_CON_INPUT_NO_ECHO	endp 
     209                             C   
     210                             C          procedure   $STD_CON_STRING_OUT
					PUT,NEAR   ;System call 9 
     211 00E2                        C1 $STD_CON_STRING_OUTPUT PROC NEAR
     212                             C  ASSUME  DS:NOTHING,ES:NOTHING 
     213                             C   
     214 00E2  8B F2                 C  	mov	si, dx 
     215 00E4                        C  output1: 
     216 00E4  AC                    C  	lodsb 
     217 00E5  3C 24                 C  	cmp	al,'$' 
     218                             C  	retz 
     219 00E7  74 F8                 C2  ??0007: jz ret_l
     220 00E9  E8 000B R             C  	call	OUT 
     221 00EC  EB F6                 C  	jmp	short output1	 
     222                             C   
     223                             C   
     224                             C  $STD_CON_STRING_OUTPUT endp 
     225                             C   
     226                             C  	include	STRIN.ASM 
     227                             C          procedure   $STD_CON_STRING_INP
					UT,NEAR   ;System call 10 
     228 00EE                        C1 $STD_CON_STRING_INPUT PROC NEAR
     229                             C  ASSUME  DS:NOTHING,ES:NOTHING 
     230                             C   
     231                             C  ; Inputs: 
     232                             C  ;       DS:DX Point to an input buffer 
     233                             C  ; Function: 
     234                             C  ;       Fill buffer from console input 
					until CR 
     235                             C  ; Returns: 
     236                             C  ;       None 
     237                             C   
     238 00EE  8C D0                 C          MOV     AX,SS 
     239 00F0  8E C0                 C          MOV     ES,AX 
     240 00F2  8B F2                 C          MOV     SI,DX 
     241 00F4  32 ED                 C          XOR     CH,CH 
     242 00F6  AD                    C          LODSW 
     243 00F7  0A C0                 C          OR      AL,AL 
     244                             C          retz                    ;Buffer
					 is 0 length!!? 
     245 00F9  74 E6                 C2  ??0009: jz ret_l
     246 00FB  8A DC                 C          MOV     BL,AH           ;Init t
					emplate counter 
     247 00FD  8A FD                 C          MOV     BH,CH           ;Init t
					emplate counter 
     248 00FF  3A C3                 C          CMP     AL,BL 
     249 0101  76 05                 C          JBE     NOEDIT          ;If len
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 09:23:49

STDIO - device IO for MSDOS                                 Page     1-6
DEVICE TABLE AND SRH DEFINITION                             

					gth of buffer inconsistent with content
					s 
     250 0103  80 38 0D              C          CMP     BYTE PTR [BX+SI],c_CR 
     251 0106  74 02                 C          JZ      EDITON          ;If CR 
					correctly placed EDIT is OK 
     252 0108                        C  NOEDIT: 
     253 0108  8A DD                 C          MOV     BL,CH           ;Reset 
					buffer 
     254 010A                        C  EDITON: 
     255 010A  8A D0                 C          MOV     DL,AL 
     256 010C  4A                    C          DEC     DX              ;DL is 
					# of bytes we can put in the buffer 
     257 010D                        C  NEWLIN: 
     258 010D  36: A0 0000 E         C          MOV     AL,SS:[CARPOS] 
     259 0111  36: A2 0000 E         C          MOV     SS:[STARTPOS],AL   ;Rem
					ember position in raw buffer 
     260 0115  56                    C          PUSH    SI 
     261 0116  BF 0000 E             C          MOV     DI,OFFSET DOSGROUP:INBU
					F        ;Build the new line here 
     262 0119  36: 88 2E 0000 E      C          MOV     SS:[INSMODE],CH    ;Ins
					ert mode off 
     263 011E  8A FD                 C          MOV     BH,CH           ;No cha
					rs from template yet 
     264 0120  8A F5                 C          MOV     DH,CH           ;No cha
					rs to new line yet 
     265                             C          invoke  $STD_CON_INPUT_NO_ECHO 
					         ;Get first char 
     266 0122  E8 00D3 R             C1  CALL $STD_CON_INPUT_NO_ECHO
     267 0125  3C 0A                 C          CMP     AL,c_LF         ;Linefe
					ed 
     268 0127  75 03                 C          JNZ     GOTCH           ;Filter
					 out LF so < works 
     269                             C          entry   GETCH 
     270 0129                        C1 GETCH:
     271                             C          invoke  $STD_CON_INPUT_NO_ECHO 
     272 0129  E8 00D3 R             C1  CALL $STD_CON_INPUT_NO_ECHO
     273 012C                        C  GOTCH: 
     274 012C  3C 06                 C          CMP     AL,"F"-"@"      ;Ignore
					 ^F 
     275 012E  74 F9                 C          JZ      GETCH 
     276 0130  36: 3A 06 0000 E      C          CMP     AL,SS:[ESCCHAR] 
     277 0135  74 38                 C          JZ      ESC 
     278 0137  3C 7F                 C          CMP     AL,c_DEL 
     279 0139  74 2B                 C          JZ      BACKSPJ 
     280 013B  3C 08                 C          CMP     AL,c_BS 
     281 013D  74 27                 C          JZ      BACKSPJ 
     282 013F  3C 0D                 C          CMP     AL,c_CR 
     283 0141  74 2F                 C          JZ      ENDLIN 
     284 0143  3C 0A                 C          CMP     AL,c_LF 
     285 0145  74 4F                 C          JZ      PHYCRLF 
     286 0147  3C 18                 C          CMP     AL,CANCEL 
     287 0149  74 50                 C          JZ      KILNEW 
     288 014B                        C  SAVCH: 
     289 014B  3A F2                 C          CMP     DH,DL 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 09:23:49

STDIO - device IO for MSDOS                                 Page     1-7
DEVICE TABLE AND SRH DEFINITION                             

     290 014D  73 19                 C          JAE     BUFFUL          ;No roo
					m 
     291 014F  AA                    C          STOSB 
     292 0150  FE C6                 C          INC     DH              ;Got a 
					char 
     293                             C          invoke  BUFOUT          ;Print 
					control chars nicely 
     294 0152  E8 0087 R             C1  CALL BUFOUT
     295 0155  36: 80 3E 0000 E 00   C          CMP     BYTE PTR SS:[INSMODE],0
					 
     296 015B  75 CC                 C          JNZ     GETCH           ;In ins
					ert mode, get more chars 
     297 015D  3A FB                 C          CMP     BH,BL 
     298 015F  73 C8                 C          JAE     GETCH           ;We are
					 out of chars in template 
     299 0161  46                    C          INC     SI              ;Skip t
					o next char in template 
     300 0162  FE C7                 C          INC     BH 
     301 0164  EB C3                 C          JMP     SHORT GETCH 
     302                             C   
     303 0166  EB 46                 C  BACKSPJ: JMP    SHORT BACKSP 
     304                             C   
     305 0168                        C  BUFFUL: 
     306 0168  B0 07                 C          MOV     AL,7            ;Bell 
     307                             C          invoke  OUT 
     308 016A  E8 000B R             C1  CALL OUT
     309 016D  EB BA                 C          JMP     SHORT GETCH 
     310                             C   
     311 016F                        C  ESC: 
     312                             C          transfer    OEMFunctionKey 
     313 016F                        C2  ??000B:
     314 016F  E9 0000 E             C2  JMP OEMFunctionKey
     315                             C   
     316 0172                        C  ENDLIN: 
     317 0172  AA                    C          STOSB                   ;Put th
					e CR in the buffer 
     318                             C          invoke  OUT             ;Echo i
					t 
     319 0173  E8 000B R             C1  CALL OUT
     320 0176  5F                    C          POP     DI              ;Get st
					art of buffer 
     321 0177  88 75 FF              C          MOV     [DI-1],DH       ;Tell u
					ser how many bytes 
     322 017A  FE C6                 C          INC     DH              ;DH is 
					length including CR 
     323 017C                        C  COPYNEW: 
     324 017C  8C C5                 C          MOV     BP,ES           ;XCHG E
					S,DS 
     325 017E  8C DB                 C          MOV     BX,DS 
     326 0180  8E C3                 C          MOV     ES,BX 
     327 0182  8E DD                 C          MOV     DS,BP 
     328 0184  BE 0000 E             C          MOV     SI,OFFSET DOSGROUP:INBU
					F 
     329 0187  8A CE                 C          MOV     CL,DH 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 09:23:49

STDIO - device IO for MSDOS                                 Page     1-8
DEVICE TABLE AND SRH DEFINITION                             

     330 0189  F3/ A4                C          REP     MOVSB           ;Copy f
					inal line to user buffer 
     331                             C          return                  ;All do
					ne 
     332 018B                        C1 ??000C:
     333 018B  C3                    C1  RET
     334                             C   
     335                             C  ;Output a CRLF 
     336                             C          entry   CRLF 
     337 018C                        C1 CRLF:
     338 018C  B0 0D                 C          MOV     AL,c_CR 
     339                             C          invoke  OUT 
     340 018E  E8 000B R             C1  CALL OUT
     341 0191  B0 0A                 C          MOV     AL,c_LF 
     342 0193  E9 000B R             C          JMP     OUT 
     343                             C   
     344                             C  ;Output a CRLF which is not terminate b
					uffer 
     345 0196                        C  PHYCRLF: 
     346                             C          invoke  CRLF 
     347 0196  E8 018C R             C1  CALL CRLF
     348 0199  EB 8E                 C          JMP     GETCH 
     349                             C   
     350                             C  ;Zap the line without zapping the templ
					ate 
     351                             C          entry   KILNEW 
     352 019B                        C1 KILNEW:
     353 019B  B0 5C                 C          MOV     AL,"\" 
     354                             C          invoke  OUT             ;Print 
					the CANCEL indicator 
     355 019D  E8 000B R             C1  CALL OUT
     356 01A0  5E                    C          POP     SI              ;Rememb
					er start of edit buffer 
     357 01A1                        C  PUTNEW: 
     358                             C          invoke  CRLF            ;Go to 
					next line on screen 
     359 01A1  E8 018C R             C1  CALL CRLF
     360 01A4  36: A0 0000 E         C          MOV     AL,SS:[STARTPOS] 
     361                             C          invoke  TAB             ;Tab ov
					er 
     362 01A8  E8 0066 R             C1  CALL TAB
     363 01AB  E9 010D R             C          JMP     NEWLIN          ;Start 
					over again 
     364                             C   
     365                             C  ;Back up one char 
     366                             C          entry   BACKSP 
     367 01AE                        C1 BACKSP:
     368 01AE  0A F6                 C          OR      DH,DH 
     369 01B0  74 11                 C          JZ      OLDBAK          ;No cha
					rs in line, do nothing to line 
     370 01B2  E8 0207 R             C          CALL    BACKUP          ;Do the
					 backup 
     371 01B5  26: 8A 05             C          MOV     AL,ES:[DI]      ;Get th
					e deleted char 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 09:23:49

STDIO - device IO for MSDOS                                 Page     1-9
DEVICE TABLE AND SRH DEFINITION                             

     372 01B8  3C 20                 C          CMP     AL," " 
     373 01BA  73 07                 C          JAE     OLDBAK          ;Was a 
					normal char 
     374 01BC  3C 09                 C          CMP     AL,c_HT 
     375 01BE  74 15                 C          JZ      BAKTAB          ;Was a 
					tab, fix up users display 
     376 01C0  E8 020A R             C          CALL    BACKMES         ;Was a 
					control char, zap the '^' 
     377 01C3                        C  OLDBAK: 
     378 01C3  36: 80 3E 0000 E 00   C          CMP     BYTE PTR SS:[INSMODE],0
					 
     379 01C9  75 07                 C          JNZ     GETCH1          ;In ins
					ert mode, get more chars 
     380 01CB  0A FF                 C          OR      BH,BH 
     381 01CD  74 03                 C          JZ      GETCH1          ;Not ad
					vanced in template, stay where we are 
     382 01CF  FE CF                 C          DEC     BH              ;Go bac
					k in template 
     383 01D1  4E                    C          DEC     SI 
     384 01D2                        C  GETCH1: 
     385 01D2  E9 0129 R             C          JMP     GETCH 
     386                             C   
     387 01D5                        C  BAKTAB: 
     388 01D5  57                    C          PUSH    DI 
     389 01D6  4F                    C          DEC     DI              ;Back u
					p one char 
     390 01D7  FD                    C          STD                     ;Go bac
					kward 
     391 01D8  8A CE                 C          MOV     CL,DH           ;Number
					 of chars currently in line 
     392 01DA  B0 20                 C          MOV     AL," " 
     393 01DC  53                    C          PUSH    BX 
     394 01DD  B3 07                 C          MOV     BL,7            ;Max 
     395 01DF  E3 0E                 C          JCXZ    FIGTAB          ;At sta
					rt, do nothing 
     396 01E1                        C  FNDPOS: 
     397 01E1  AE                    C          SCASB                   ;Look b
					ack 
     398 01E2  76 09                 C          JNA     CHKCNT 
     399 01E4  26: 80 7D 01 09       C          CMP     BYTE PTR ES:[DI+1],9 
     400 01E9  74 09                 C          JZ      HAVTAB          ;Found 
					a tab 
     401 01EB  FE CB                 C          DEC     BL              ;Back o
					ne char if non tab control char 
     402 01ED                        C  CHKCNT: 
     403 01ED  E2 F2                 C          LOOP    FNDPOS 
     404 01EF                        C  FIGTAB: 
     405 01EF  36: 2A 1E 0000 E      C          SUB     BL,SS:[STARTPOS] 
     406 01F4                        C  HAVTAB: 
     407 01F4  2A DE                 C          SUB     BL,DH 
     408 01F6  02 CB                 C          ADD     CL,BL 
     409 01F8  80 E1 07              C          AND     CL,7            ;CX has
					 correct number to erase 
     410 01FB  FC                    C          CLD                     ;Back t
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 09:23:49

STDIO - device IO for MSDOS                                 Page     1-10
DEVICE TABLE AND SRH DEFINITION                             

					o normal 
     411 01FC  5B                    C          POP     BX 
     412 01FD  5F                    C          POP     DI 
     413 01FE  74 C3                 C          JZ      OLDBAK          ;Nothin
					g to erase 
     414 0200                        C  TABBAK: 
     415                             C          invoke  BACKMES 
     416 0200  E8 020A R             C1  CALL BACKMES
     417 0203  E2 FB                 C          LOOP    TABBAK          ;Erase 
					correct number of chars 
     418 0205  EB BC                 C          JMP     SHORT OLDBAK 
     419                             C   
     420 0207                        C  BACKUP: 
     421 0207  FE CE                 C          DEC     DH              ;Back u
					p in line 
     422 0209  4F                    C          DEC     DI 
     423 020A                        C  BACKMES: 
     424 020A  B0 08                 C          MOV     AL,c_BS         ;Backsp
					ace 
     425                             C          invoke  OUT 
     426 020C  E8 000B R             C1  CALL OUT
     427 020F  B0 20                 C          MOV     AL," "          ;Erase 
     428                             C          invoke  OUT 
     429 0211  E8 000B R             C1  CALL OUT
     430 0214  B0 08                 C          MOV     AL,c_BS         ;Backsp
					ace 
     431 0216  E9 000B R             C          JMP     OUT             ;Done 
     432                             C   
     433                             C  ;User really wants an ESC character in 
					his line 
     434                             C          entry   TwoEsc 
     435 0219                        C1 TwoEsc:
     436 0219  36: A0 0000 E         C          MOV     AL,SS:[ESCCHAR] 
     437 021D  E9 014B R             C          JMP     SAVCH 
     438                             C   
     439                             C  ;Copy the rest of the template 
     440                             C          entry   COPYLIN 
     441 0220                        C1 COPYLIN:
     442 0220  8A CB                 C          MOV     CL,BL           ;Total 
					size of template 
     443 0222  2A CF                 C          SUB     CL,BH           ;Minus 
					position in template, is number to move
					 
     444 0224  EB 07                 C          JMP     SHORT COPYEACH 
     445                             C   
     446                             C          entry   CopyStr 
     447 0226                        C1 CopyStr:
     448                             C          invoke  FINDOLD         ;Find t
					he char 
     449 0226  E8 025D R             C1  CALL FINDOLD
     450 0229  EB 02                 C          JMP     SHORT COPYEACH  ;Copy u
					p to it 
     451                             C   
     452                             C  ;Copy one char from template to line 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 09:23:49

STDIO - device IO for MSDOS                                 Page     1-11
DEVICE TABLE AND SRH DEFINITION                             

     453                             C          entry   COPYONE 
     454 022B                        C1 COPYONE:
     455 022B  B1 01                 C          MOV     CL,1 
     456                             C  ;Copy CX chars from template to line 
     457 022D                        C  COPYEACH: 
     458 022D  36: C6 06 0000 E 00   C          MOV     BYTE PTR SS:[INSMODE],0
					    ;All copies turn off insert mode 
     459 0233  3A F2                 C          CMP     DH,DL 
     460 0235  74 0F                 C          JZ      GETCH2                 
					 ;At end of line, can't do anything 
     461 0237  3A FB                 C          CMP     BH,BL 
     462 0239  74 0B                 C          JZ      GETCH2                 
					 ;At end of template, can't do anything
					 
     463 023B  AC                    C          LODSB 
     464 023C  AA                    C          STOSB 
     465                             C          invoke  BUFOUT 
     466 023D  E8 0087 R             C1  CALL BUFOUT
     467 0240  FE C7                 C          INC     BH                     
					 ;Ahead in template 
     468 0242  FE C6                 C          INC     DH                     
					 ;Ahead in line 
     469 0244  E2 E7                 C          LOOP    COPYEACH 
     470 0246                        C  GETCH2: 
     471 0246  E9 0129 R             C          JMP     GETCH 
     472                             C   
     473                             C  ;Skip one char in template 
     474                             C          entry   SKIPONE 
     475 0249                        C1 SKIPONE:
     476 0249  3A FB                 C          CMP     BH,BL 
     477 024B  74 F9                 C          JZ      GETCH2                 
					 ;At end of template 
     478 024D  FE C7                 C          INC     BH                     
					 ;Ahead in template 
     479 024F  46                    C          INC     SI 
     480 0250  E9 0129 R             C          JMP     GETCH 
     481                             C   
     482                             C          entry   SKIPSTR 
     483 0253                        C1 SKIPSTR:
     484                             C          invoke  FINDOLD                
					 ;Find out how far to go 
     485 0253  E8 025D R             C1  CALL FINDOLD
     486 0256  03 F1                 C          ADD     SI,CX                  
					 ;Go there 
     487 0258  02 F9                 C          ADD     BH,CL 
     488 025A  E9 0129 R             C          JMP     GETCH 
     489                             C   
     490                             C  ;Get the next user char, and look ahead
					 in template for a match 
     491                             C  ;CX indicates how many chars to skip to
					 get there on output 
     492                             C  ;NOTE: WARNING: If the operation cannot
					 be done, the return 
     493                             C  ;       address is popped off and a jum
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 09:23:49

STDIO - device IO for MSDOS                                 Page     1-12
DEVICE TABLE AND SRH DEFINITION                             

					p to GETCH is taken. 
     494                             C  ;       Make sure nothing extra on stac
					k when this routine 
     495                             C  ;       is called!!! (no PUSHes before 
					calling it). 
     496 025D                        C  FINDOLD: 
     497                             C          invoke  $STD_CON_INPUT_NO_ECHO 
     498 025D  E8 00D3 R             C1  CALL $STD_CON_INPUT_NO_ECHO
     499 0260  36: 3A 06 0000 E      C          CMP     AL,SS:[ESCCHAR]        
					 ; did he type a function key? 
     500 0265  75 06                 C          JNZ     FindSetup              
					 ; no, set up for scan 
     501                             C          invoke  $STD_CON_INPUT_NO_ECHO 
					 ; eat next char 
     502 0267  E8 00D3 R             C1  CALL $STD_CON_INPUT_NO_ECHO
     503 026A  EB 1E 90              C          JMP     NotFnd                 
					 ; go try again 
     504 026D                        C  FindSetup: 
     505 026D  8A CB                 C          MOV     CL,BL 
     506 026F  2A CF                 C          SUB     CL,BH           ;CX is 
					number of chars to end of template 
     507 0271  74 17                 C          JZ      NOTFND          ;At end
					 of template 
     508 0273  49                    C          DEC     CX              ;Cannot
					 point past end, limit search 
     509 0274  74 14                 C          JZ      NOTFND          ;If onl
					y one char in template, forget it 
     510 0276  06                    C          PUSH    ES 
     511 0277  1E                    C          PUSH    DS 
     512 0278  07                    C          POP     ES 
     513 0279  57                    C          PUSH    DI 
     514 027A  8B FE                 C          MOV     DI,SI           ;Templa
					te to ES:DI 
     515 027C  47                    C          INC     DI 
     516 027D  F2/ AE                C          REPNE   SCASB           ;Look 
     517 027F  5F                    C          POP     DI 
     518 0280  07                    C          POP     ES 
     519 0281  75 07                 C          JNZ     NOTFND          ;Didn't
					 find the char 
     520 0283  F6 D1                 C          NOT     CL              ;Turn h
					ow far to go into how far we went 
     521 0285  02 CB                 C          ADD     CL,BL           ;Add si
					ze of template 
     522 0287  2A CF                 C          SUB     CL,BH           ;Subtra
					ct current pos, result distance to skip
					 
     523                             C          return 
     524 0289                        C1 ??000D:
     525 0289  C3                    C1  RET
     526                             C   
     527 028A                        C  NOTFND: 
     528 028A  5D                    C          POP     BP              ;Chuck 
					return address 
     529 028B  E9 0129 R             C          JMP     GETCH 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 09:23:49

STDIO - device IO for MSDOS                                 Page     1-13
DEVICE TABLE AND SRH DEFINITION                             

     530                             C   
     531                             C          entry   REEDIT 
     532 028E                        C1 REEDIT:
     533 028E  B0 40                 C          MOV     AL,"@"          ;Output
					 re-edit character 
     534                             C          invoke  OUT 
     535 0290  E8 000B R             C1  CALL OUT
     536 0293  5F                    C          POP     DI 
     537 0294  57                    C          PUSH    DI 
     538 0295  06                    C          PUSH    ES 
     539 0296  1E                    C          PUSH    DS 
     540                             C          invoke  COPYNEW         ;Copy c
					urrent line into template 
     541 0297  E8 017C R             C1  CALL COPYNEW
     542 029A  1F                    C          POP     DS 
     543 029B  07                    C          POP     ES 
     544 029C  5E                    C          POP     SI 
     545 029D  8A DE                 C          MOV     BL,DH           ;Size o
					f line is new size template 
     546 029F  E9 01A1 R             C          JMP     PUTNEW          ;Start 
					over again 
     547                             C   
     548                             C          entry   EXITINS 
     549 02A2                        C1 EXITINS:
     550                             C          entry   ENTERINS 
     551 02A2                        C1 ENTERINS:
     552 02A2  36: F6 16 0000 E      C          NOT     BYTE PTR SS:[INSMODE] 
     553 02A7  E9 0129 R             C          JMP     GETCH 
     554                             C   
     555                             C  ;Put a real live ^Z in the buffer (embe
					dded) 
     556                             C          entry   CTRLZ 
     557 02AA                        C1 CTRLZ:
     558 02AA  B0 1A                 C          MOV     AL,"Z"-"@" 
     559 02AC  E9 014B R             C          JMP     SAVCH 
     560                             C  $STD_CON_STRING_INPUT   ENDP 
     561                             C   
     562                             C  	include IO2.ASM 
     563                             C  ; 
     564                             C  ; (Reconstructed) IO.ASM for MSDOS 
     565                             C  ; 
     566                             C          ASSUME  SS:DOSGROUP,CS:DOSGROUP
					 
     567                             C   
     568                             C  	public	$STD_CON_INPUT_STATUS 
     569                             C  	public	$STD_CON_INPUT_FLUSH 
     570                             C   
     571                             C  	extrn 	REDISP:NEAR 
     572                             C   
     573                             C  	procedure $STD_CON_INPUT_STATUS, NEAR	
					;System call 11 
     574 02AF                        C1 $STD_CON_INPUT_STATUS PROC NEAR
     575 02AF  E8 0000 E             C  	call	STATCHK 
     576 02B2  B0 00                 C  	mov	al, 0 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 09:23:49

STDIO - device IO for MSDOS                                 Page     1-14
DEVICE TABLE AND SRH DEFINITION                             

     577                             C  	retz 
     578 02B4  74 D3                 C2  ??000E: jz ret_l
     579 02B6  0C FF                 C  	or	al, 0FFH 
     580 02B8  C3                    C  	ret 
     581                             C   
     582                             C  $STD_CON_INPUT_STATUS	endp 
     583                             C   
     584                             C  	procedure $STD_CON_INPUT_FLUSH, NEAR	;
					System call 12 
     585 02B9                        C1 $STD_CON_INPUT_FLUSH PROC NEAR
     586 02B9  50                    C  	push	ax 
     587 02BA  52                    C  	push	dx 
     588 02BB  33 DB                 C  	xor	bx, bx 
     589 02BD  E8 0000 E             C  	call	GET_IO_FCB 
     590 02C0  72 05                 C  	jc	flush1 
     591 02C2  B4 04                 C  	mov	ah, 4 
     592 02C4  E8 0000 E             C  	call	IOFUNC 
     593 02C7  5A                    C  flush1:	pop	dx 
     594 02C8  58                    C  	pop	ax 
     595 02C9  8A E0                 C  	mov	ah, al 
     596 02CB  3C 01                 C  	cmp	al, STD_CON_INPUT 
     597 02CD  74 13                 C  	jz	flush2 
     598 02CF  3C 06                 C  	cmp	al, RAW_CON_IO 
     599 02D1  74 0F                 C  	jz	flush2 
     600 02D3  3C 07                 C  	cmp	al, RAW_CON_INPUT 
     601 02D5  74 0B                 C  	jz	flush2 
     602 02D7  3C 08                 C  	cmp	al, STD_CON_INPUT_NO_ECHO 
     603 02D9  74 07                 C  	jz	flush2 
     604 02DB  3C 0A                 C  	cmp	al, STD_CON_STRING_INPUT 
     605 02DD  74 03                 C  	jz	flush2 
     606 02DF  B0 00                 C  	mov	al, 0	 
     607 02E1  C3                    C  	ret 
     608                             C  ; 
     609 02E2  FA                    C  flush2:	cli	 
     610 02E3  E9 0000 E             C  	jmp	REDISP 
     611                             C  $STD_CON_INPUT_FLUSH	endp 
     612                             C   
     613                             C   
     614                             C   
     615                             C   
     616                             C   
     617 02E6                        C  	CODE	ENDS 
     618                             C  	END 

Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 09:23:49

STDIO - device IO for MSDOS                                 Symbols-1
                                                             

Macros:

		N a m e			Lines

BREAK  . . . . . . . . . . . . .  	   2
CONDRET  . . . . . . . . . . . .  	  19
CONTEXT  . . . . . . . . . . . .  	   3
DO_EXT . . . . . . . . . . . . .  	   0
ENTRY  . . . . . . . . . . . . .  	   2
ERROR  . . . . . . . . . . . . .  	   4
INVOKE . . . . . . . . . . . . .  	   8
I_AM . . . . . . . . . . . . . .  	  14
I_NEED . . . . . . . . . . . . .  	  11
JUMP . . . . . . . . . . . . . .  	  17
LONG_ADDR  . . . . . . . . . . .  	   7
MAKELAB  . . . . . . . . . . . .  	   4
PROCEDURE  . . . . . . . . . . .  	   2
RETC . . . . . . . . . . . . . .  	   1
RETNC  . . . . . . . . . . . . .  	   1
RETNZ  . . . . . . . . . . . . .  	   1
RETURN . . . . . . . . . . . . .  	   5
RETZ . . . . . . . . . . . . . .  	   1
SHORT_ADDR . . . . . . . . . . .  	  12
TRANSFER . . . . . . . . . . . .  	   8

Structures and Records:

                N a m e                 Width   # fields
                                        Shift   Width   Mask    Initial

ARENA  . . . . . . . . . . . . .  	0005	0003
  ARENA_SIGNATURE  . . . . . . .  	0000
  ARENA_OWNER  . . . . . . . . .  	0001
  ARENA_SIZE . . . . . . . . . .  	0003
BPBLOCK  . . . . . . . . . . . .  	000D	0008
  BPSECSZ  . . . . . . . . . . .  	0000
  BPCLUS . . . . . . . . . . . .  	0002
  BPRES  . . . . . . . . . . . .  	0003
  BPFTCNT  . . . . . . . . . . .  	0005
  BPDRCNT  . . . . . . . . . . .  	0006
  BPSCCNT  . . . . . . . . . . .  	0008
  BPMEDIA  . . . . . . . . . . .  	000A
  BPFTSEC  . . . . . . . . . . .  	000B
BUFFINFO . . . . . . . . . . . .  	0010	0009
  NEXTBUF  . . . . . . . . . . .  	0000
  BUFDRV . . . . . . . . . . . .  	0004
  BUFDIRTY . . . . . . . . . . .  	0005
  BUFPRI . . . . . . . . . . . .  	0006
  VISIT  . . . . . . . . . . . .  	0007
  BUFSECNO . . . . . . . . . . .  	0008
  BUFWRTCNT  . . . . . . . . . .  	000A
  BUFWRTINC  . . . . . . . . . .  	000B
  BUFDRVDP . . . . . . . . . . .  	000C
DIR_ENTRY  . . . . . . . . . . .  	0020	0008
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 09:23:49

STDIO - device IO for MSDOS                                 Symbols-2
                                                             

  DIR_NAME . . . . . . . . . . .  	0000
  DIR_ATTR . . . . . . . . . . .  	000B
  DIR_PAD  . . . . . . . . . . .  	000C
  DIR_TIME . . . . . . . . . . .  	0016
  DIR_DATE . . . . . . . . . . .  	0018
  DIR_FIRST  . . . . . . . . . .  	001A
  DIR_SIZE_L . . . . . . . . . .  	001C
  DIR_SIZE_H . . . . . . . . . .  	001E
DPB  . . . . . . . . . . . . . .  	005E	0012
  DPB_DRIVE  . . . . . . . . . .  	0000
  DPB_UNIT . . . . . . . . . . .  	0001
  DPB_SECTOR_SIZE  . . . . . . .  	0002
  DPB_CLUSTER_MASK . . . . . . .  	0004
  DPB_CLUSTER_SHIFT  . . . . . .  	0005
  DPB_FIRST_FAT  . . . . . . . .  	0006
  DPB_FAT_COUNT  . . . . . . . .  	0008
  DPB_ROOT_ENTRIES . . . . . . .  	0009
  DPB_FIRST_SECTOR . . . . . . .  	000B
  DPB_MAX_CLUSTER  . . . . . . .  	000D
  DPB_FAT_SIZE . . . . . . . . .  	000F
  DPB_DIR_SECTOR . . . . . . . .  	0010
  DPB_DRIVER_ADDR  . . . . . . .  	0012
  DPB_MEDIA  . . . . . . . . . .  	0016
  DPB_FIRST_ACCESS . . . . . . .  	0017
  DPB_NEXT_DPB . . . . . . . . .  	0018
  DPB_CURRENT_DIR  . . . . . . .  	001C
  DPB_DIR_TEXT . . . . . . . . .  	001E
EXEC0  . . . . . . . . . . . . .  	000E	0004
  EXEC0_ENVIRON  . . . . . . . .  	0000
  EXEC0_COM_LINE . . . . . . . .  	0002
  EXEC0_5C_FCB . . . . . . . . .  	0006
  EXEC0_6C_FCB . . . . . . . . .  	000A
EXEC1  . . . . . . . . . . . . .  	0016	0008
  EXEC1_ENVIRON  . . . . . . . .  	0000
  EXEC1_COM_LINE . . . . . . . .  	0002
  EXEC1_5C_FCB . . . . . . . . .  	0006
  EXEC1_6C_FCB . . . . . . . . .  	000A
  EXEC1_SP . . . . . . . . . . .  	000E
  EXEC1_SS . . . . . . . . . . .  	0010
  EXEC1_IP . . . . . . . . . . .  	0012
  EXEC1_CS . . . . . . . . . . .  	0014
EXEC3  . . . . . . . . . . . . .  	0004	0002
  EXEC3_LOAD_ADDR  . . . . . . .  	0000
  EXEC3_RELOC_FAC  . . . . . . .  	0002
EXE_FILE . . . . . . . . . . . .  	0020	000F
  EXE_SIGNATURE  . . . . . . . .  	0000
  EXE_LEN_MOD_512  . . . . . . .  	0002
  EXE_PAGES  . . . . . . . . . .  	0004
  EXE_RLE_COUNT  . . . . . . . .  	0006
  EXE_PAR_DIR  . . . . . . . . .  	0008
  EXE_MIN_BSS  . . . . . . . . .  	000A
  EXE_MAX_BSS  . . . . . . . . .  	000C
  EXE_SS . . . . . . . . . . . .  	000E
  EXE_SP . . . . . . . . . . . .  	0010
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 09:23:49

STDIO - device IO for MSDOS                                 Symbols-3
                                                             

  EXE_CHKSUM . . . . . . . . . .  	0012
  EXE_IP . . . . . . . . . . . .  	0014
  EXE_CS . . . . . . . . . . . .  	0016
  EXE_RLE_TABLE  . . . . . . . .  	0018
  EXE_IOV  . . . . . . . . . . .  	001A
  EXE_SYM_TAB  . . . . . . . . .  	001C
FIND_BUF . . . . . . . . . . . .  	002B	000C
  FIND_BUF_SATTR . . . . . . . .  	0000
  FIND_BUF_DRIVE . . . . . . . .  	0001
  FIND_BUF_NAME  . . . . . . . .  	0002
  FIND_BUF_LASTENT . . . . . . .  	000D
  FIND_BUF_THISDPB . . . . . . .  	000F
  FIND_BUF_DIRSTART  . . . . . .  	0013
  FIND_BUF_ATTR  . . . . . . . .  	0015
  FIND_BUF_TIME  . . . . . . . .  	0016
  FIND_BUF_DATE  . . . . . . . .  	0018
  FIND_BUF_SIZE_L  . . . . . . .  	001A
  FIND_BUF_SIZE_H  . . . . . . .  	001C
  FIND_BUF_PNAME . . . . . . . .  	001E
INTERNAT_BLOCK . . . . . . . . .  	0018	0015
  DATE_TIM_FORMAT  . . . . . . .  	0000
  CURRENCY_SYM . . . . . . . . .  	0002
  THOUS_SEP  . . . . . . . . . .  	0007
  DECIMAL_SEP  . . . . . . . . .  	0009
  DATE_SEP . . . . . . . . . . .  	000B
  TIME_SEP . . . . . . . . . . .  	000D
  BIT_FEILD  . . . . . . . . . .  	000F
  CURRENCY_CENTS . . . . . . . .  	0010
  TIME_24  . . . . . . . . . . .  	0011
  MAP_CALL . . . . . . . . . . .  	0012
  DATA_SEP . . . . . . . . . . .  	0016
PROCESS_DATA_BLOCK . . . . . . .  	005B	000E
  PDB_EXIT_CALL  . . . . . . . .  	0000
  PDB_BLOCK_LEN  . . . . . . . .  	0002
  PDB_CPM_CALL . . . . . . . . .  	0005
  PDB_EXIT . . . . . . . . . . .  	000A
  PDB_CTRL_C . . . . . . . . . .  	000E
  PDB_FATAL_ABORT  . . . . . . .  	0012
  PDB_PARENT_PID . . . . . . . .  	0016
  PDB_JFN_TABLE  . . . . . . . .  	0018
  PDB_ENVIRON  . . . . . . . . .  	002C
  PDB_USER_STACK . . . . . . . .  	002E
  PDB_PAD1 . . . . . . . . . . .  	0032
  PDB_CALL_SYSTEM  . . . . . . .  	0050
  PDB_PAD2 . . . . . . . . . . .  	0055
SFT  . . . . . . . . . . . . . .  	0008	0003
  SFT_LINK . . . . . . . . . . .  	0000
  SFT_COUNT  . . . . . . . . . .  	0004
  SFT_TABLE  . . . . . . . . . .  	0006
SF_ENTRY . . . . . . . . . . . .  	0028	0004
  SF_REF_COUNT . . . . . . . . .  	0000
  SF_MODE  . . . . . . . . . . .  	0001
  SF_ATTR  . . . . . . . . . . .  	0002
  SF_FCB . . . . . . . . . . . .  	0003
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 09:23:49

STDIO - device IO for MSDOS                                 Symbols-4
                                                             

SRHEAD . . . . . . . . . . . . .  	000D	0005
  REQLEN . . . . . . . . . . . .  	0000
  REQUNIT  . . . . . . . . . . .  	0001
  REQFUNC  . . . . . . . . . . .  	0002
  REQSTAT  . . . . . . . . . . .  	0003
SYMBOL_ENTRY . . . . . . . . . .  	0106	0004
  SYM_VALUE  . . . . . . . . . .  	0000
  SYM_TYPE . . . . . . . . . . .  	0004
  SYM_LEN  . . . . . . . . . . .  	0006
  SYM_NAME . . . . . . . . . . .  	0007
SYSDEV . . . . . . . . . . . . .  	0012	0005
  SDEVNEXT . . . . . . . . . . .  	0000
  SDEVATT  . . . . . . . . . . .  	0004
  SDEVSTRAT  . . . . . . . . . .  	0006
  SDEVINT  . . . . . . . . . . .  	0008
  SDEVNAME . . . . . . . . . . .  	000A
SYS_FCB  . . . . . . . . . . . .  	0025	0010
  FCB_DRIVE  . . . . . . . . . .  	0000
  FCB_NAME . . . . . . . . . . .  	0001
  FCB_EXT  . . . . . . . . . . .  	0009
  FCB_EXTENT . . . . . . . . . .  	000C
  FCB_RECSIZ . . . . . . . . . .  	000E
  FCB_FILSIZ . . . . . . . . . .  	0010
  FCB_DRVBP  . . . . . . . . . .  	0012
  FCB_FDATE  . . . . . . . . . .  	0014
  FCB_FTIME  . . . . . . . . . .  	0016
  FCB_DEVID  . . . . . . . . . .  	0018
  FCB_FIRCLUS  . . . . . . . . .  	0019
  FCB_CLUSPOS  . . . . . . . . .  	001B
  FCB_LSTCLUS  . . . . . . . . .  	001D
  FCB_NR . . . . . . . . . . . .  	0020
  FCB_RR . . . . . . . . . . . .  	0021
USER_ENVIRON . . . . . . . . . .  	0018	000C
  USER_AX  . . . . . . . . . . .  	0000
  USER_BX  . . . . . . . . . . .  	0002
  USER_CX  . . . . . . . . . . .  	0004
  USER_DX  . . . . . . . . . . .  	0006
  USER_SI  . . . . . . . . . . .  	0008
  USER_DI  . . . . . . . . . . .  	000A
  USER_BP  . . . . . . . . . . .  	000C
  USER_DS  . . . . . . . . . . .  	000E
  USER_ES  . . . . . . . . . . .  	0010
  USER_IP  . . . . . . . . . . .  	0012
  USER_CS  . . . . . . . . . . .  	0014
  USER_F . . . . . . . . . . . .  	0016

Segments and Groups:

                N a m e         	Size	Align	Combine Class

DOSGROUP . . . . . . . . . . . .  	GROUP
  CODE . . . . . . . . . . . . .  	02E6	BYTE	PUBLIC	'CODE'
  CONSTANTS  . . . . . . . . . .  	0000	BYTE	PUBLIC	'CONST'
  DATA . . . . . . . . . . . . .  	0000	BYTE	PUBLIC	'DATA'
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 09:23:49

STDIO - device IO for MSDOS                                 Symbols-5
                                                             

  LAST . . . . . . . . . . . . .  	0000	BYTE	PUBLIC	'LAST'

Symbols:            

                N a m e         	Type	Value	Attr         

ABORT  . . . . . . . . . . . . .  	Number	0000	
ADDR_INT_ABORT . . . . . . . . .  	Number	0080	
ADDR_INT_COMMAND . . . . . . . .  	Number	0084	
ADDR_INT_CTRL_C  . . . . . . . .  	Number	008C	
ADDR_INT_DISK_READ . . . . . . .  	Number	0094	
ADDR_INT_DISK_WRITE  . . . . . .  	Number	0098	
ADDR_INT_FASTCON . . . . . . . .  	Number	00A4	
ADDR_INT_FATAL_ABORT . . . . . .  	Number	0090	
ADDR_INT_KEEP_PROCESS  . . . . .  	Number	009C	
ADDR_INT_SPOOLER . . . . . . . .  	Number	00A0	
ADDR_INT_TERMINATE . . . . . . .  	Number	0088	
ALLOC  . . . . . . . . . . . . .  	Number	0048	
ALLOCOPER  . . . . . . . . . . .  	Number	0058	
ALLOC_ARENA_TRASHED  . . . . . .  	Alias	 ERROR_ARENA_TRASHED		
ALLOC_NOT_ENOUGH_MEMORY  . . . .  	Alias	 ERROR_NOT_ENOUGH_MEMORY		
ALTVECT  . . . . . . . . . . . .  	Alias	 FALSE		
ARENA_OWNER_SYSTEM . . . . . . .  	Number	0000	
ARENA_SIGNATURE_END  . . . . . .  	Number	005A	
ARENA_SIGNATURE_NORMAL . . . . .  	Number	004D	
ASSIGNOPER . . . . . . . . . . .  	Number	005F	
ATTR_ALL . . . . . . . . . . . .  	Number	0016	
ATTR_ARCHIVE . . . . . . . . . .  	Number	0020	
ATTR_CHANGEABLE  . . . . . . . .  	Number	0027	
ATTR_DIRECTORY . . . . . . . . .  	Number	0010	
ATTR_HIDDEN  . . . . . . . . . .  	Number	0002	
ATTR_IGNORE  . . . . . . . . . .  	Number	0021	
ATTR_READ_ONLY . . . . . . . . .  	Number	0001	
ATTR_SYSTEM  . . . . . . . . . .  	Number	0004	
ATTR_VOLUME_ID . . . . . . . . .  	Number	0008	
AUXIN1 . . . . . . . . . . . . .  	L NEAR	00A9	CODE
AUXIN2 . . . . . . . . . . . . .  	L NEAR	00AC	CODE
AUX_LPT_OUT  . . . . . . . . . .  	L NEAR	00C3	CODE

BACKMES  . . . . . . . . . . . .  	L NEAR	020A	CODE
BACKSP . . . . . . . . . . . . .  	L NEAR	01AE	CODE	Global
BACKSPJ  . . . . . . . . . . . .  	L NEAR	0166	CODE
BACKUP . . . . . . . . . . . . .  	L NEAR	0207	CODE
BAKTAB . . . . . . . . . . . . .  	L NEAR	01D5	CODE
BUFFUL . . . . . . . . . . . . .  	L NEAR	0168	CODE
BUFINSIZ . . . . . . . . . . . .  	Number	0010	
BUFOUT . . . . . . . . . . . . .  	N PROC	0087	CODE	Global	Length = 0015

CANCEL . . . . . . . . . . . . .  	Number	0018	
CARPOS . . . . . . . . . . . . .  	V BYTE 	0000		External
CHARCO . . . . . . . . . . . . .  	V BYTE 	0000		External
CHAR_OPER  . . . . . . . . . . .  	Number	0037	
CHDIR  . . . . . . . . . . . . .  	Number	003B	
CHDIR_PATH_NOT_FOUND . . . . . .  	Alias	 ERROR_PATH_NOT_FOUND		
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 09:23:49

STDIO - device IO for MSDOS                                 Symbols-6
                                                             

CHKCNT . . . . . . . . . . . . .  	L NEAR	01ED	CODE
CHMOD  . . . . . . . . . . . . .  	Number	0043	
CHMOD_ACCESS_DENIED  . . . . . .  	Alias	 ERROR_ACCESS_DENIED		
CHMOD_INVALID_FUNCTION . . . . .  	Alias	 ERROR_INVALID_FUNCTION		
CHMOD_PATH_NOT_FOUND . . . . . .  	Alias	 ERROR_PATH_NOT_FOUND		
CLOSE  . . . . . . . . . . . . .  	Number	003E	
CLOSE_INVALID_FUNCTION . . . . .  	Alias	 ERROR_INVALID_FUNCTION		
CLOSE_INVALID_HANDLE . . . . . .  	Alias	 ERROR_INVALID_HANDLE		
CONIN1 . . . . . . . . . . . . .  	L NEAR	00D5	CODE
COPYEACH . . . . . . . . . . . .  	L NEAR	022D	CODE
COPYLIN  . . . . . . . . . . . .  	L NEAR	0220	CODE	Global
COPYNEW  . . . . . . . . . . . .  	L NEAR	017C	CODE
COPYONE  . . . . . . . . . . . .  	L NEAR	022B	CODE	Global
COPYSTR  . . . . . . . . . . . .  	L NEAR	0226	CODE	Global
COUNTRY_NOT_FOUND  . . . . . . .  	Alias	 ERROR_FILE_NOT_FOUND		
CREAT  . . . . . . . . . . . . .  	Number	003C	
CREATENEWFILE  . . . . . . . . .  	Number	005B	
CREATETEMPFILE . . . . . . . . .  	Number	005A	
CREATE_PROCESS_DATA_BLOCK  . . .  	Number	0026	
CREAT_ACCESS_DENIED  . . . . . .  	Alias	 ERROR_ACCESS_DENIED		
CREAT_PATH_NOT_FOUND . . . . . .  	Alias	 ERROR_PATH_NOT_FOUND		
CREAT_TOO_MANY_OPEN_FILES  . . .  	Alias	 ERROR_TOO_MANY_OPEN_FILES		
CRLF . . . . . . . . . . . . . .  	L NEAR	018C	CODE	Global
CTRLZ  . . . . . . . . . . . . .  	L NEAR	02AA	CODE	Global
CURDIR_INVALID_DRIVE . . . . . .  	Alias	 ERROR_INVALID_DRIVE		
CURRENT_DIR  . . . . . . . . . .  	Number	0047	
C_BS . . . . . . . . . . . . . .  	Number	0008	
C_CR . . . . . . . . . . . . . .  	Number	000D	
C_DEL  . . . . . . . . . . . . .  	Number	007F	
C_ETB  . . . . . . . . . . . . .  	Number	0017	
C_ETX  . . . . . . . . . . . . .  	Number	0003	
C_HT . . . . . . . . . . . . . .  	Number	0009	
C_LF . . . . . . . . . . . . . .  	Number	000A	
C_NAK  . . . . . . . . . . . . .  	Number	0015	

DBPBHL . . . . . . . . . . . . .  	Number	0016	
DEALLOC  . . . . . . . . . . . .  	Number	0049	
DEALLOC_ARENA_TRASHED  . . . . .  	Alias	 ERROR_ARENA_TRASHED		
DEALLOC_INVALID_BLOCK  . . . . .  	Alias	 ERROR_INVALID_BLOCK		
DEVBPB . . . . . . . . . . . . .  	Number	0002	
DEVID_BLOCK_DEV  . . . . . . . .  	Number	001F	
DEVID_DEVICE . . . . . . . . . .  	Number	0080	
DEVID_DEVICE_CLOCK . . . . . . .  	Number	0008	
DEVID_DEVICE_CON_IN  . . . . . .  	Number	0001	
DEVID_DEVICE_CON_OUT . . . . . .  	Number	0002	
DEVID_DEVICE_EOF . . . . . . . .  	Number	0040	
DEVID_DEVICE_NULL  . . . . . . .  	Number	0004	
DEVID_DEVICE_RAW . . . . . . . .  	Number	0020	
DEVID_DEVICE_SPECIAL . . . . . .  	Number	0010	
DEVID_EOF  . . . . . . . . . . .  	Number	0040	
DEVID_FILE_CLEAN . . . . . . . .  	Number	0040	
DEVID_FILE_MASK_DRIVE  . . . . .  	Number	003F	
DEVID_ISCIN  . . . . . . . . . .  	Number	0001	
DEVID_ISCLK  . . . . . . . . . .  	Number	0008	
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 09:23:49

STDIO - device IO for MSDOS                                 Symbols-7
                                                             

DEVID_ISCOT  . . . . . . . . . .  	Number	0002	
DEVID_ISDEV  . . . . . . . . . .  	Number	0080	
DEVID_ISNUL  . . . . . . . . . .  	Number	0004	
DEVID_RAW  . . . . . . . . . . .  	Number	0020	
DEVID_SPECIAL  . . . . . . . . .  	Number	0010	
DEVIFL . . . . . . . . . . . . .  	Number	0007	
DEVINIT  . . . . . . . . . . . .  	Number	0000	
DEVIOCTL . . . . . . . . . . . .  	Number	4000	
DEVIST . . . . . . . . . . . . .  	Number	0006	
DEVMDCH  . . . . . . . . . . . .  	Number	0001	
DEVOFL . . . . . . . . . . . . .  	Number	000B	
DEVOST . . . . . . . . . . . . .  	Number	000A	
DEVRD  . . . . . . . . . . . . .  	Number	0004	
DEVRDIOCTL . . . . . . . . . . .  	Number	0003	
DEVRDND  . . . . . . . . . . . .  	Number	0005	
DEVTYP . . . . . . . . . . . . .  	Number	8000	
DEVWRIOCTL . . . . . . . . . . .  	Number	000C	
DEVWRT . . . . . . . . . . . . .  	Number	0008	
DEVWRTV  . . . . . . . . . . . .  	Number	0009	
DFLSHL . . . . . . . . . . . . .  	Number	000F	
DINITHL  . . . . . . . . . . . .  	Number	001A	
DIRPRI . . . . . . . . . . . . .  	Number	000F	
DIRSTRLEN  . . . . . . . . . . .  	Number	0040	
DIR_SEARCH_FIRST . . . . . . . .  	Number	0011	
DIR_SEARCH_NEXT  . . . . . . . .  	Number	0012	
DISK_RESET . . . . . . . . . . .  	Number	000D	
DMEDHL . . . . . . . . . . . . .  	Number	000F	
DOS_MAJOR_VERSION  . . . . . . .  	Number	0002	
DOS_MINOR_VERSION  . . . . . . .  	Number	000B	
DPBSIZ . . . . . . . . . . . . .  	Number	005E	
DRDNDHL  . . . . . . . . . . . .  	Number	000E	
DRDWRHL  . . . . . . . . . . . .  	Number	0016	
DSKSIZ . . . . . . . . . . . . .  	Number	000D	
DSTATHL  . . . . . . . . . . . .  	Number	000D	
DUP2_INVALID_HANDLE  . . . . . .  	Alias	 ERROR_INVALID_HANDLE		
DUP_INVALID_HANDLE . . . . . . .  	Alias	 ERROR_INVALID_HANDLE		
DUP_PDB  . . . . . . . . . . . .  	Number	0055	
DUP_TOO_MANY_OPEN_FILES  . . . .  	Alias	 ERROR_TOO_MANY_OPEN_FILES		

EDITON . . . . . . . . . . . . .  	L NEAR	010A	CODE
ENDLIN . . . . . . . . . . . . .  	L NEAR	0172	CODE
ENTERINS . . . . . . . . . . . .  	L NEAR	02A2	CODE	Global
ENTRYPOINT . . . . . . . . . . .  	Number	00C0	
ERROR_ACCESS_DENIED  . . . . . .  	Number	0005	
ERROR_ARENA_TRASHED  . . . . . .  	Number	0007	
ERROR_BAD_ENVIRONMENT  . . . . .  	Number	000A	
ERROR_BAD_FORMAT . . . . . . . .  	Number	000B	
ERROR_CURRENT_DIRECTORY  . . . .  	Number	0010	
ERROR_FILE_NOT_FOUND . . . . . .  	Number	0002	
ERROR_INVALID_ACCESS . . . . . .  	Number	000C	
ERROR_INVALID_BLOCK  . . . . . .  	Number	0009	
ERROR_INVALID_DATA . . . . . . .  	Number	000D	
ERROR_INVALID_DRIVE  . . . . . .  	Number	000F	
ERROR_INVALID_FUNCTION . . . . .  	Number	0001	
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 09:23:49

STDIO - device IO for MSDOS                                 Symbols-8
                                                             

ERROR_INVALID_HANDLE . . . . . .  	Number	0006	
ERROR_NOT_ENOUGH_MEMORY  . . . .  	Number	0008	
ERROR_NOT_SAME_DEVICE  . . . . .  	Number	0011	
ERROR_NO_MORE_FILES  . . . . . .  	Number	0012	
ERROR_PATH_NOT_FOUND . . . . . .  	Number	0003	
ERROR_TOO_MANY_OPEN_FILES  . . .  	Number	0004	
ESC  . . . . . . . . . . . . . .  	L NEAR	016F	CODE
ESCCH  . . . . . . . . . . . . .  	Number	001B	
ESCCHAR  . . . . . . . . . . . .  	V BYTE 	0000		External
EXEC . . . . . . . . . . . . . .  	Number	004B	
EXEC_BAD_ENVIRONMENT . . . . . .  	Alias	 ERROR_BAD_ENVIRONMENT		
EXEC_BAD_FORMAT  . . . . . . . .  	Alias	 ERROR_BAD_FORMAT		
EXEC_FILE_NOT_FOUND  . . . . . .  	Alias	 ERROR_FILE_NOT_FOUND		
EXEC_FUNC_NO_EXECUTE . . . . . .  	Number	0001	
EXEC_FUNC_OVERLAY  . . . . . . .  	Number	0002	
EXEC_INVALID_FUNCTION  . . . . .  	Alias	 ERROR_INVALID_FUNCTION		
EXEC_NOT_ENOUGH_MEMORY . . . . .  	Alias	 ERROR_NOT_ENOUGH_MEMORY		
EXE_VALID_OLD_SIGNATURE  . . . .  	Number	4D5A	
EXE_VALID_SIGNATURE  . . . . . .  	Number	5A4D	
EXIT . . . . . . . . . . . . . .  	Number	004C	
EXITINS  . . . . . . . . . . . .  	L NEAR	02A2	CODE	Global
EXIT_ABORT . . . . . . . . . . .  	Number	0000	
EXIT_CTRL_C  . . . . . . . . . .  	Number	0001	
EXIT_HARD_ERROR  . . . . . . . .  	Number	0002	
EXIT_KEEP_PROCESS  . . . . . . .  	Number	0003	
EXIT_TERMINATE . . . . . . . . .  	Number	0000	

FALSE  . . . . . . . . . . . . .  	Number	0000	
FATPRI . . . . . . . . . . . . .  	Number	001E	
FCB_CLOSE  . . . . . . . . . . .  	Number	0010	
FCB_CREATE . . . . . . . . . . .  	Number	0016	
FCB_DELETE . . . . . . . . . . .  	Number	0013	
FCB_OPEN . . . . . . . . . . . .  	Number	000F	
FCB_RANDOM_READ  . . . . . . . .  	Number	0021	
FCB_RANDOM_READ_BLOCK  . . . . .  	Number	0027	
FCB_RANDOM_WRITE . . . . . . . .  	Number	0022	
FCB_RANDOM_WRITE_BLOCK . . . . .  	Number	0028	
FCB_RENAME . . . . . . . . . . .  	Number	0017	
FCB_SEQ_READ . . . . . . . . . .  	Number	0014	
FCB_SEQ_WRITE  . . . . . . . . .  	Number	0015	
FIGTAB . . . . . . . . . . . . .  	L NEAR	01EF	CODE
FILDIRENT  . . . . . . . . . . .  	Number	0010	
FILETIMES_INVALID_FUNCTION . . .  	Alias	 ERROR_INVALID_FUNCTION		
FILETIMES_INVALID_HANDLE . . . .  	Alias	 ERROR_INVALID_HANDLE		
FILE_TIMES . . . . . . . . . . .  	Number	0057	
FILPERPROC . . . . . . . . . . .  	Number	0014	
FINDFIRST_FILE_NOT_FOUND . . . .  	Alias	 ERROR_FILE_NOT_FOUND		
FINDFIRST_NO_MORE_FILES  . . . .  	Alias	 ERROR_NO_MORE_FILES		
FINDNEXT_NO_MORE_FILES . . . . .  	Alias	 ERROR_NO_MORE_FILES		
FINDOLD  . . . . . . . . . . . .  	L NEAR	025D	CODE
FINDSETUP  . . . . . . . . . . .  	L NEAR	026D	CODE
FIND_FIRST . . . . . . . . . . .  	Number	004E	
FIND_NEXT  . . . . . . . . . . .  	Number	004F	
FLUSH1 . . . . . . . . . . . . .  	L NEAR	02C7	CODE
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 09:23:49

STDIO - device IO for MSDOS                                 Symbols-9
                                                             

FLUSH2 . . . . . . . . . . . . .  	L NEAR	02E2	CODE
FNDPOS . . . . . . . . . . . . .  	L NEAR	01E1	CODE
FREEPRI  . . . . . . . . . . . .  	Number	0000	

GETCH  . . . . . . . . . . . . .  	L NEAR	0129	CODE	Global
GETCH1 . . . . . . . . . . . . .  	L NEAR	01D2	CODE
GETCH2 . . . . . . . . . . . . .  	L NEAR	0246	CODE
GETEXTENDEDERROR . . . . . . . .  	Number	0059	
GET_CURRENT_PDB  . . . . . . . .  	Number	0051	
GET_DATE . . . . . . . . . . . .  	Number	002A	
GET_DEFAULT_DPB  . . . . . . . .  	Number	001F	
GET_DEFAULT_DRIVE  . . . . . . .  	Number	0019	
GET_DMA  . . . . . . . . . . . .  	Number	002F	
GET_DPB  . . . . . . . . . . . .  	Number	0032	
GET_DRIVE_FREESPACE  . . . . . .  	Number	0036	
GET_FCB_FILE_LENGTH  . . . . . .  	Number	0023	
GET_FCB_POSITION . . . . . . . .  	Number	0024	
GET_INDOS_FLAG . . . . . . . . .  	Number	0034	
GET_INTERRUPT_VECTOR . . . . . .  	Number	0035	
GET_IN_VARS  . . . . . . . . . .  	Number	0052	
GET_TIME . . . . . . . . . . . .  	Number	002C	
GET_VERIFY_ON_WRITE  . . . . . .  	Number	0054	
GET_VERSION  . . . . . . . . . .  	Number	0030	
GOTCH  . . . . . . . . . . . . .  	L NEAR	012C	CODE

HAVTAB . . . . . . . . . . . . .  	L NEAR	01F4	CODE
HIGHMEM  . . . . . . . . . . . .  	Alias	 FALSE		

IBM  . . . . . . . . . . . . . .  	Alias	 FALSE		
INBUF  . . . . . . . . . . . . .  	V BYTE 	0000		External
INSMODE  . . . . . . . . . . . .  	V BYTE 	0000		External
INTBASE  . . . . . . . . . . . .  	Number	0080	
INTERNATIONAL  . . . . . . . . .  	Number	0038	
INTERNATIONAL_INVALID_FUNCTION .  	Alias	 ERROR_INVALID_FUNCTION		
INTERNAT_BLOCK_MAX . . . . . . .  	Number	0020	
INTTAB . . . . . . . . . . . . .  	Number	0020	
INT_ABORT  . . . . . . . . . . .  	Alias	 INTTAB		
INT_COMMAND  . . . . . . . . . .  	Number	0021	
INT_CTRL_C . . . . . . . . . . .  	Number	0023	
INT_DISK_READ  . . . . . . . . .  	Number	0025	
INT_DISK_WRITE . . . . . . . . .  	Number	0026	
INT_FASTCON  . . . . . . . . . .  	Number	0029	
INT_FATAL_ABORT  . . . . . . . .  	Number	0024	
INT_KEEP_PROCESS . . . . . . . .  	Number	0027	
INT_SPOOLER  . . . . . . . . . .  	Number	0028	
INT_TERMINATE  . . . . . . . . .  	Number	0022	
IOCTL  . . . . . . . . . . . . .  	Number	0044	
IOCTL_INVALID_DATA . . . . . . .  	Alias	 ERROR_INVALID_DATA		
IOCTL_INVALID_FUNCTION . . . . .  	Alias	 ERROR_INVALID_FUNCTION		
IOCTL_INVALID_HANDLE . . . . . .  	Alias	 ERROR_INVALID_HANDLE		
IOFUNC . . . . . . . . . . . . .  	L NEAR	0000		External
ISCIN  . . . . . . . . . . . . .  	Number	0001	
ISCLOCK  . . . . . . . . . . . .  	Number	0008	
ISCOUT . . . . . . . . . . . . .  	Number	0002	
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 09:23:49

STDIO - device IO for MSDOS                                 Symbols-10
                                                             

ISFATBYDEV . . . . . . . . . . .  	Number	2000	
ISIBM  . . . . . . . . . . . . .  	Number	0010	
ISNULL . . . . . . . . . . . . .  	Number	0004	

J_OUT  . . . . . . . . . . . . .  	L NEAR	007E	CODE
J_OUT_FINISH . . . . . . . . . .  	L NEAR	0050	CODE

KEEP_PROCESS . . . . . . . . . .  	Number	0031	
KILNEW . . . . . . . . . . . . .  	L NEAR	019B	CODE	Global

LBRPRI . . . . . . . . . . . . .  	Number	0002	
LBWPRI . . . . . . . . . . . . .  	Number	0004	
LOCKOPER . . . . . . . . . . . .  	Number	005C	
LSEEK  . . . . . . . . . . . . .  	Number	0042	
LSEEK_INVALID_FUNCTION . . . . .  	Alias	 ERROR_INVALID_FUNCTION		
LSEEK_INVALID_HANDLE . . . . . .  	Alias	 ERROR_INVALID_HANDLE		

MI_INT . . . . . . . . . . . . .  	Number	00CD	
MI_LONG_CALL . . . . . . . . . .  	Number	009A	
MI_LONG_JMP  . . . . . . . . . .  	Number	00EA	
MI_LONG_RET  . . . . . . . . . .  	Number	00CB	
MKDIR  . . . . . . . . . . . . .  	Number	0039	
MKDIR_ACCESS_DENIED  . . . . . .  	Alias	 ERROR_ACCESS_DENIED		
MKDIR_PATH_NOT_FOUND . . . . . .  	Alias	 ERROR_PATH_NOT_FOUND		
MSVER  . . . . . . . . . . . . .  	Alias	 TRUE		

NEWLIN . . . . . . . . . . . . .  	L NEAR	010D	CODE
NOEDIT . . . . . . . . . . . . .  	L NEAR	0108	CODE
NOTFND . . . . . . . . . . . . .  	L NEAR	028A	CODE
NO_ERROR_OCCURRED  . . . . . . .  	Text  0                                                              ?		

OEMFUNCTIONKEY_J . . . . . . . .  	NEAR 	016F	CODE
OEM_C1 . . . . . . . . . . . . .  	Number	00F9	
OEM_C2 . . . . . . . . . . . . .  	Number	00FA	
OEM_C3 . . . . . . . . . . . . .  	Number	00FB	
OEM_C4 . . . . . . . . . . . . .  	Number	00FC	
OEM_C5 . . . . . . . . . . . . .  	Number	00FD	
OEM_C6 . . . . . . . . . . . . .  	Number	00FE	
OEM_C7 . . . . . . . . . . . . .  	Number	00FF	
OLDBAK . . . . . . . . . . . . .  	L NEAR	01C3	CODE
OPEN . . . . . . . . . . . . . .  	Number	003D	
OPEN_ACCESS_DENIED . . . . . . .  	Alias	 ERROR_ACCESS_DENIED		
OPEN_FILE_NOT_FOUND  . . . . . .  	Alias	 ERROR_FILE_NOT_FOUND		
OPEN_FOR_BOTH  . . . . . . . . .  	Number	0002	
OPEN_FOR_READ  . . . . . . . . .  	Number	0000	
OPEN_FOR_WRITE . . . . . . . . .  	Number	0001	
OPEN_INVALID_ACCESS  . . . . . .  	Alias	 ERROR_INVALID_ACCESS		
OPEN_TOO_MANY_OPEN_FILES . . . .  	Alias	 ERROR_TOO_MANY_OPEN_FILES		
OUT  . . . . . . . . . . . . . .  	L NEAR	000B	CODE	Global
OUTPUT1  . . . . . . . . . . . .  	L NEAR	00E4	CODE
OUT_BS . . . . . . . . . . . . .  	L NEAR	0080	CODE
OUT_CONTROLCH  . . . . . . . . .  	L NEAR	0052	CODE
OUT_CR . . . . . . . . . . . . .  	L NEAR	0076	CODE
OUT_FINISH . . . . . . . . . . .  	L NEAR	00CF	CODE
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 09:23:49

STDIO - device IO for MSDOS                                 Symbols-11
                                                             

OUT_NOBREAK  . . . . . . . . . .  	L NEAR	002C	CODE
OUT_NOTPRINT . . . . . . . . . .  	L NEAR	0018	CODE
OUT_RAWOUT2  . . . . . . . . . .  	L NEAR	00CC	CODE

PARSE_FILE_DESCRIPTOR  . . . . .  	Number	0029	
PFLAG  . . . . . . . . . . . . .  	V BYTE 	0000		External
PHYCRLF  . . . . . . . . . . . .  	L NEAR	0196	CODE
PUTNEW . . . . . . . . . . . . .  	L NEAR	01A1	CODE

RAWOUT . . . . . . . . . . . . .  	L NEAR	0000		External
RAWOUT2  . . . . . . . . . . . .  	L NEAR	0000		External
RAW_CON_INPUT  . . . . . . . . .  	Number	0007	
RAW_CON_IO . . . . . . . . . . .  	Number	0006	
READ . . . . . . . . . . . . . .  	Number	003F	
READ_ACCESS_DENIED . . . . . . .  	Alias	 ERROR_ACCESS_DENIED		
READ_INVALID_HANDLE  . . . . . .  	Alias	 ERROR_INVALID_HANDLE		
REDISP . . . . . . . . . . . . .  	L NEAR	0000	CODE	External
REEDIT . . . . . . . . . . . . .  	L NEAR	028E	CODE	Global
RENAME . . . . . . . . . . . . .  	Number	0056	
RENAME_ACCESS_DENIED . . . . . .  	Alias	 ERROR_ACCESS_DENIED		
RENAME_FILE_NOT_FOUND  . . . . .  	Alias	 ERROR_FILE_NOT_FOUND		
RENAME_NOT_SAME_DEVICE . . . . .  	Alias	 ERROR_NOT_SAME_DEVICE		
RET_C  . . . . . . . . . . . . .  	NEAR 	00A5	CODE
RET_L  . . . . . . . . . . . . .  	NEAR 	0289	CODE
RET_Z  . . . . . . . . . . . . .  	NEAR 	02B4	CODE
RMDIR  . . . . . . . . . . . . .  	Number	003A	
RMDIR_ACCESS_DENIED  . . . . . .  	Alias	 ERROR_ACCESS_DENIED		
RMDIR_CURRENT_DIRECTORY  . . . .  	Alias	 ERROR_CURRENT_DIRECTORY		
RMDIR_PATH_NOT_FOUND . . . . . .  	Alias	 ERROR_PATH_NOT_FOUND		
RPRI . . . . . . . . . . . . . .  	Number	0006	

SAVCH  . . . . . . . . . . . . .  	L NEAR	014B	CODE
SERVERCALL . . . . . . . . . . .  	Number	005D	
SETBLOCK . . . . . . . . . . . .  	Number	004A	
SETBLOCK_ARENA_TRASHED . . . . .  	Alias	 ERROR_ARENA_TRASHED		
SETBLOCK_INVALID_BLOCK . . . . .  	Alias	 ERROR_INVALID_BLOCK		
SETBLOCK_INVALID_FUNCTION  . . .  	Alias	 ERROR_INVALID_FUNCTION		
SETBLOCK_NOT_ENOUGH_MEMORY . . .  	Alias	 ERROR_NOT_ENOUGH_MEMORY		
SETDPB . . . . . . . . . . . . .  	Number	0053	
SET_CTRL_C_TRAPPING  . . . . . .  	Number	0033	
SET_CURRENT_PDB  . . . . . . . .  	Number	0050	
SET_DATE . . . . . . . . . . . .  	Number	002B	
SET_DEFAULT_DRIVE  . . . . . . .  	Number	000E	
SET_DMA  . . . . . . . . . . . .  	Number	001A	
SET_INTERRUPT_VECTOR . . . . . .  	Number	0025	
SET_OEM_HANDLER  . . . . . . . .  	Number	00F8	
SET_TIME . . . . . . . . . . . .  	Number	002D	
SET_VERIFY_ON_WRITE  . . . . . .  	Number	002E	
SF_DEFAULT_NUMBER  . . . . . . .  	Number	0005	
SKIPONE  . . . . . . . . . . . .  	L NEAR	0249	CODE	Global
SKIPSTR  . . . . . . . . . . . .  	L NEAR	0253	CODE	Global
SPOOLINT . . . . . . . . . . . .  	L NEAR	0000		External
STARTPOS . . . . . . . . . . . .  	V BYTE 	0000		External
STATCHK  . . . . . . . . . . . .  	L NEAR	0000		External
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 09:23:49

STDIO - device IO for MSDOS                                 Symbols-12
                                                             

STBUI  . . . . . . . . . . . . .  	Number	0200	
STDAUX . . . . . . . . . . . . .  	Number	0003	
STDERR . . . . . . . . . . . . .  	Number	0002	
STDIN  . . . . . . . . . . . . .  	Number	0000	
STDON  . . . . . . . . . . . . .  	Number	0100	
STDOUT . . . . . . . . . . . . .  	Number	0001	
STDPRN . . . . . . . . . . . . .  	Number	0004	
STD_AUX_INPUT  . . . . . . . . .  	Number	0003	
STD_AUX_OUTPUT . . . . . . . . .  	Number	0004	
STD_CON_INPUT  . . . . . . . . .  	Number	0001	
STD_CON_INPUT_FLUSH  . . . . . .  	Number	000C	
STD_CON_INPUT_NO_ECHO  . . . . .  	Number	0008	
STD_CON_INPUT_STATUS . . . . . .  	Number	000B	
STD_CON_OUTPUT . . . . . . . . .  	Number	0002	
STD_CON_STRING_INPUT . . . . . .  	Number	000A	
STD_CON_STRING_OUTPUT  . . . . .  	Number	0009	
STD_PRINTER_OUTPUT . . . . . . .  	Number	0005	
STECODE  . . . . . . . . . . . .  	Number	00FF	
STERR  . . . . . . . . . . . . .  	Number	8000	

TAB  . . . . . . . . . . . . . .  	L NEAR	0066	CODE	Global
TAB1 . . . . . . . . . . . . . .  	L NEAR	006D	CODE
TABBAK . . . . . . . . . . . . .  	L NEAR	0200	CODE
TAB_END  . . . . . . . . . . . .  	L NEAR	0074	CODE
TOGLINS  . . . . . . . . . . . .  	Alias	 WANG		
TOGLPRN  . . . . . . . . . . . .  	Alias	 FALSE		
TRUE . . . . . . . . . . . . . .  	Number	FFFF	
TWOESC . . . . . . . . . . . . .  	L NEAR	0219	CODE	Global

UNLINK . . . . . . . . . . . . .  	Number	0041	
UNLINK_ACCESS_DENIED . . . . . .  	Alias	 ERROR_ACCESS_DENIED		
UNLINK_FILE_NOT_FOUND  . . . . .  	Alias	 ERROR_FILE_NOT_FOUND		
USERIDOPER . . . . . . . . . . .  	Number	005E	

WAIT . . . . . . . . . . . . . .  	Number	004D	
WANG . . . . . . . . . . . . . .  	Alias	 FALSE		
WPRI . . . . . . . . . . . . . .  	Number	0008	
WRECODE  . . . . . . . . . . . .  	Number	0000	
WRITE  . . . . . . . . . . . . .  	Number	0040	
WRITE_ACCESS_DENIED  . . . . . .  	Alias	 ERROR_ACCESS_DENIED		
WRITE_INVALID_HANDLE . . . . . .  	Alias	 ERROR_INVALID_HANDLE		

XDUP . . . . . . . . . . . . . .  	Number	0045	
XDUP2  . . . . . . . . . . . . .  	Number	0046	

ZEROEXT  . . . . . . . . . . . .  	Alias	 TRUE		

$STD_AUX_INPUT . . . . . . . . .  	N PROC	009C	CODE	Global	Length = 001D
$STD_AUX_OUTPUT  . . . . . . . .  	N PROC	00B9	CODE	Global	Length = 001A
$STD_CON_INPUT . . . . . . . . .  	N PROC	0000	CODE	Global	Length = 0009
$STD_CON_INPUT_FLUSH . . . . . .  	N PROC	02B9	CODE	Global	Length = 002D
$STD_CON_INPUT_NO_ECHO . . . . .  	N PROC	00D3	CODE	Global	Length = 000F
$STD_CON_INPUT_STATUS  . . . . .  	N PROC	02AF	CODE	Global	Length = 000A
$STD_CON_OUTPUT  . . . . . . . .  	N PROC	0009	CODE	Global	Length = 007E
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 09:23:49

STDIO - device IO for MSDOS                                 Symbols-13
                                                             

$STD_CON_STRING_INPUT  . . . . .  	N PROC	00EE	CODE	Global	Length = 01C1
$STD_CON_STRING_OUTPUT . . . . .  	N PROC	00E2	CODE	Global	Length = 000C
$STD_PRINTER_OUTPUT  . . . . . .  	L NEAR	00BF	CODE	Global
??0000 . . . . . . . . . . . . .  	L NEAR	0008	CODE
??0001 . . . . . . . . . . . . .  	L NEAR	0037	CODE
??0003 . . . . . . . . . . . . .  	L NEAR	009B	CODE
??0004 . . . . . . . . . . . . .  	L NEAR	00A5	CODE
??0006 . . . . . . . . . . . . .  	L NEAR	00E1	CODE
??0007 . . . . . . . . . . . . .  	L NEAR	00E7	CODE
??0009 . . . . . . . . . . . . .  	L NEAR	00F9	CODE
??000B . . . . . . . . . . . . .  	L NEAR	016F	CODE
??000C . . . . . . . . . . . . .  	L NEAR	018B	CODE
??000D . . . . . . . . . . . . .  	L NEAR	0289	CODE
??000E . . . . . . . . . . . . .  	L NEAR	02B4	CODE


   1907 Source  Lines
   2344 Total   Lines
    643 Symbols

  17672 Bytes symbol space free

      0 Warning Errors
      0 Severe  Errors
