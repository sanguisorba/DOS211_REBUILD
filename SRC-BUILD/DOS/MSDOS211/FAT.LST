Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 09:23:43

FAT - FAT maintenance routines                              Page     1-1
                                                            

       1                                ; 
       2                                ; FAT operations for MSDOS 
       3                                ; 
       4                                 
       5                             C  INCLUDE DOSSEG.ASM 
       6                             C  ; 
       7                             C  ; segment ordering for MSDOS 
       8                             C  ; 
       9                             C   
      10 0000                        C  CONSTANTS       SEGMENT BYTE PUBLIC 'CO
					NST' 
      11 0000                        C  CONSTANTS       ENDS 
      12                             C   
      13 0000                        C  DATA            SEGMENT BYTE PUBLIC 'DA
					TA' 
      14 0000                        C  DATA            ENDS 
      15                             C   
      16 0000                        C  CODE            SEGMENT BYTE PUBLIC 'CO
					DE' 
      17 0000                        C  CODE            ENDS 
      18                             C   
      19 0000                        C  LAST            SEGMENT BYTE PUBLIC 'LA
					ST' 
      20 0000                        C  LAST            ENDS 
      21                             C   
      22                             C  DOSGROUP    GROUP   CODE,CONSTANTS,DATA
					,LAST 
      23                                 
      24                                 
      25 0000                           CODE    SEGMENT BYTE PUBLIC  'CODE' 
      26                                        ASSUME  SS:DOSGROUP,CS:DOSGROUP
					 
      27                                 
      28                                .list 
      29                                 
      30                                TITLE   FAT - FAT maintenance routines 
      31                                NAME    FAT 
      32                                 
      33                                        i_need  CURBUF,DWORD 
      34 0000                         1  DATA SEGMENT BYTE PUBLIC 'DATA'
      35 0000                         1  DATA ENDS
      36                                        i_need  CLUSSPLIT,BYTE 
      37 0000                         1  DATA SEGMENT BYTE PUBLIC 'DATA'
      38 0000                         1  DATA ENDS
      39                                        i_need  CLUSSAVE,WORD 
      40 0000                         1  DATA SEGMENT BYTE PUBLIC 'DATA'
      41 0000                         1  DATA ENDS
      42                                        i_need  CLUSSEC,WORD 
      43 0000                         1  DATA SEGMENT BYTE PUBLIC 'DATA'
      44 0000                         1  DATA ENDS
      45                                        i_need  THISDRV,BYTE 
      46 0000                         1  DATA SEGMENT BYTE PUBLIC 'DATA'
      47 0000                         1  DATA ENDS
      48                                        i_need  DEVCALL,BYTE 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 09:23:43

FAT - FAT maintenance routines                              Page     1-2
DEVICE TABLE AND SRH DEFINITION                             

      49 0000                         1  DATA SEGMENT BYTE PUBLIC 'DATA'
      50 0000                         1  DATA ENDS
      51                                        i_need  CALLMED,BYTE 
      52 0000                         1  DATA SEGMENT BYTE PUBLIC 'DATA'
      53 0000                         1  DATA ENDS
      54                                        i_need  CALLRBYT,BYTE 
      55 0000                         1  DATA SEGMENT BYTE PUBLIC 'DATA'
      56 0000                         1  DATA ENDS
      57                                        i_need  BUFFHEAD,DWORD 
      58 0000                         1  DATA SEGMENT BYTE PUBLIC 'DATA'
      59 0000                         1  DATA ENDS
      60                                        i_need  CALLXAD,DWORD 
      61 0000                         1  DATA SEGMENT BYTE PUBLIC 'DATA'
      62 0000                         1  DATA ENDS
      63                                        i_need  CALLBPB,DWORD 
      64 0000                         1  DATA SEGMENT BYTE PUBLIC 'DATA'
      65 0000                         1  DATA ENDS
      66                                 
      67                                SUBTTL UNPACK -- UNPACK FAT ENTRIES 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 09:23:43

FAT - FAT maintenance routines                              Page     1-3
UNPACK -- UNPACK FAT ENTRIES                                

      68                                PAGE 
      69                                 
      70                                ASSUME  SS:DOSGROUP 
      71                                        procedure   UNPACK,NEAR 
      72 0000                         1 UNPACK PROC NEAR
      73                                ASSUME  DS:DOSGROUP,ES:NOTHING 
      74                                 
      75                                ; Inputs: 
      76                                ;       BX = Cluster number 
      77                                ;       ES:BP = Base of drive parameter
					s 
      78                                ; Outputs: 
      79                                ;       DI = Contents of FAT for given 
					cluster 
      80                                ;       Zero set means DI=0 (free clust
					er) 
      81                                ; SI Destroyed, No other registers affe
					cted. Fatal error if cluster too big. 
      82                                 
      83 0000  26: 3B 5E 0D                     CMP     BX,ES:[BP.dpb_max_clust
					er] 
      84 0004  77 15                            JA      HURTFAT 
      85 0006  E8 008B R                        CALL    MAPCLUSTER 
      86                                ASSUME  DS:NOTHING 
      87 0009  8B 3D                            MOV     DI,[DI] 
      88 000B  73 07                            JNC     HAVCLUS 
      89 000D  51                               PUSH    CX 
      90 000E  B1 04                            MOV     CL,4 
      91 0010  D3 EF                            SHR     DI,CL 
      92 0012  59                               POP     CX 
      93 0013  F9                               STC 
      94 0014                           HAVCLUS: 
      95 0014  81 E7 0FFF                       AND     DI,0FFFH 
      96 0018  16                               PUSH    SS 
      97 0019  1F                               POP     DS 
      98                                        return 
      99 001A                         1 ??0000:
     100 001A  C3                     1  RET
     101                                 
     102 001B                           HURTFAT: 
     103 001B  50                               PUSH    AX 
     104 001C  B4 80                            MOV     AH,80H          ; Signa
					l Bad FAT to INT int_fatal_abort handle
					r 
     105 001E  BF 0FFF                          MOV     DI,0FFFH        ; In ca
					se INT int_fatal_abort returns (it shou
					ldn't) 
     106                                        invoke  FATAL 
     107 0021  E8 0000 E              1  CALL FATAL
     108 0024  58                               POP     AX              ; Try t
					o ignore bad FAT 
     109                                        return 
     110 0025                         1 ??0001:
     111 0025  C3                     1  RET
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 09:23:43

FAT - FAT maintenance routines                              Page     1-4
UNPACK -- UNPACK FAT ENTRIES                                

     112                                UNPACK  ENDP 
     113                                 
     114                                SUBTTL PACK -- PACK FAT ENTRIES 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 09:23:43

FAT - FAT maintenance routines                              Page     1-5
PACK -- PACK FAT ENTRIES                                    

     115                                PAGE 
     116                                        procedure   PACK,NEAR 
     117 0026                         1 PACK PROC NEAR
     118                                ASSUME  DS:DOSGROUP,ES:NOTHING 
     119                                 
     120                                ; Inputs: 
     121                                ;       BX = Cluster number 
     122                                ;       DX = Data 
     123                                ;       ES:BP = Pointer to drive DPB 
     124                                ; Outputs: 
     125                                ;       The data is stored in the FAT a
					t the given cluster. 
     126                                ;       SI,DX,DI all destroyed 
     127                                ;       No other registers affected 
     128                                 
     129 0026  E8 008B R                        CALL    MAPCLUSTER 
     130                                ASSUME  DS:NOTHING 
     131 0029  8B 35                            MOV     SI,[DI] 
     132 002B  73 0C                            JNC     ALIGNED 
     133 002D  51                               PUSH    CX 
     134 002E  B1 04                            MOV     CL,4 
     135 0030  D3 E2                            SHL     DX,CL 
     136 0032  59                               POP     CX 
     137 0033  81 E6 000F                       AND     SI,0FH 
     138 0037  EB 04                            JMP     SHORT PACKIN 
     139 0039                           ALIGNED: 
     140 0039  81 E6 F000                       AND     SI,0F000H 
     141 003D                           PACKIN: 
     142 003D  0B F2                            OR      SI,DX 
     143 003F  89 35                            MOV     [DI],SI 
     144 0041  36: C5 36 0000 E                 LDS     SI,[CURBUF] 
     145 0046  C6 44 05 01                      MOV     [SI.BUFDIRTY],1 
     146 004A  36: 80 3E 0000 E 00              CMP     BYTE PTR [CLUSSPLIT],0 
     147 0050  16                               PUSH    SS 
     148 0051  1F                               POP     DS 
     149                                ASSUME  DS:DOSGROUP 
     150                                        retz 
     151 0052  74 D1                  2  ??0002: jz ret_l
     152 0054  50                               PUSH    AX 
     153 0055  53                               PUSH    BX 
     154 0056  51                               PUSH    CX 
     155 0057  A1 0000 E                        MOV     AX,[CLUSSAVE] 
     156 005A  8E 1E 0002 E                     MOV     DS,WORD PTR [CURBUF+2] 
     157                                ASSUME  DS:NOTHING 
     158 005E  83 C6 10                         ADD     SI,BUFINSIZ 
     159 0061  88 24                            MOV     [SI],AH 
     160 0063  16                               PUSH    SS 
     161 0064  1F                               POP     DS 
     162                                ASSUME  DS:DOSGROUP 
     163 0065  50                               PUSH    AX 
     164 0066  8B 16 0000 E                     MOV     DX,[CLUSSEC] 
     165 006A  BE 0001                          MOV     SI,1 
     166 006D  32 C0                            XOR     AL,AL 
     167                                        invoke  GETBUFFRB 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 09:23:43

FAT - FAT maintenance routines                              Page     1-6
PACK -- PACK FAT ENTRIES                                    

     168 006F  E8 0000 E              1  CALL GETBUFFRB
     169 0072  C5 3E 0000 E                     LDS     DI,[CURBUF] 
     170                                ASSUME  DS:NOTHING 
     171 0076  C6 45 05 01                      MOV     [DI.BUFDIRTY],1 
     172 007A  83 C7 10                         ADD     DI,BUFINSIZ 
     173 007D  4F                               DEC     DI 
     174 007E  26: 03 7E 02                     ADD     DI,ES:[BP.dpb_sector_si
					ze] 
     175 0082  58                               POP     AX 
     176 0083  88 05                            MOV     [DI],AL 
     177 0085  16                               PUSH    SS 
     178 0086  1F                               POP     DS 
     179 0087  59                               POP     CX 
     180 0088  5B                               POP     BX 
     181 0089  58                               POP     AX 
     182                                        return 
     183 008A                         1 ??0004:
     184 008A  C3                     1  RET
     185                                PACK    ENDP 
     186                                 
     187                                SUBTTL MAPCLUSTER - BUFFER A FAT SECTOR
					 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 09:23:43

FAT - FAT maintenance routines                              Page     1-7
MAPCLUSTER - BUFFER A FAT SECTOR                            

     188                                PAGE 
     189                                        procedure   MAPCLUSTER,NEAR 
     190 008B                         1 MAPCLUSTER PROC NEAR
     191                                ASSUME  DS:DOSGROUP,ES:NOTHING 
     192                                 
     193                                ; Inputs: 
     194                                ;       ES:BP Points to DPB 
     195                                ;       BX Is cluster number 
     196                                ; Function: 
     197                                ;       Get a pointer to the cluster 
     198                                ; Outputs: 
     199                                ;       DS:DI Points to contents of FAT
					 for given cluster 
     200                                ;       DS:SI Points to start of buffer
					 
     201                                ;       Carry set if cluster data is in
					 high 12 bits of word 
     202                                ; No other registers effected 
     203                                 
     204 008B  C6 06 0000 E 00                  MOV     BYTE PTR [CLUSSPLIT],0 
     205 0090  50                               PUSH    AX 
     206 0091  53                               PUSH    BX 
     207 0092  51                               PUSH    CX 
     208 0093  52                               PUSH    DX 
     209 0094  8B C3                            MOV     AX,BX 
     210 0096  D1 E8                            SHR     AX,1 
     211 0098  03 C3                            ADD     AX,BX 
     212 009A  33 D2                            XOR     DX,DX 
     213 009C  26: 8B 4E 02                     MOV     CX,ES:[BP.dpb_sector_si
					ze] 
     214 00A0  F7 F1                            DIV     CX              ; AX is
					 FAT sector # DX is sector index 
     215 00A2  26: 03 46 06                     ADD     AX,ES:[BP.dpb_first_FAT
					] 
     216 00A6  49                               DEC     CX 
     217 00A7  50                               PUSH    AX 
     218 00A8  52                               PUSH    DX 
     219 00A9  51                               PUSH    CX 
     220 00AA  8B D0                            MOV     DX,AX 
     221 00AC  32 C0                            XOR     AL,AL 
     222 00AE  BE 0001                          MOV     SI,1 
     223                                        invoke  GETBUFFRB 
     224 00B1  E8 0000 E              1  CALL GETBUFFRB
     225 00B4  C5 36 0000 E                     LDS     SI,[CURBUF] 
     226                                ASSUME  DS:NOTHING 
     227 00B8  8D 7C 10                         LEA     DI,[SI.BufInSiz] 
     228 00BB  59                               POP     CX 
     229 00BC  58                               POP     AX 
     230 00BD  5A                               POP     DX 
     231 00BE  03 F8                            ADD     DI,AX 
     232 00C0  3B C1                            CMP     AX,CX 
     233 00C2  75 29                            JNZ     MAPRET 
     234 00C4  8A 05                            MOV     AL,[DI] 
     235 00C6  16                               PUSH    SS 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 09:23:43

FAT - FAT maintenance routines                              Page     1-8
MAPCLUSTER - BUFFER A FAT SECTOR                            

     236 00C7  1F                               POP     DS 
     237                                ASSUME  DS:DOSGROUP 
     238 00C8  FE 06 0000 E                     INC     BYTE PTR [CLUSSPLIT] 
     239 00CC  A2 0000 E                        MOV     BYTE PTR [CLUSSAVE],AL 
     240 00CF  89 16 0000 E                     MOV     [CLUSSEC],DX 
     241 00D3  42                               INC     DX 
     242 00D4  32 C0                            XOR     AL,AL 
     243 00D6  BE 0001                          MOV     SI,1 
     244                                        invoke  GETBUFFRB 
     245 00D9  E8 0000 E              1  CALL GETBUFFRB
     246 00DC  C5 36 0000 E                     LDS     SI,[CURBUF] 
     247                                ASSUME  DS:NOTHING 
     248 00E0  8D 7C 10                         LEA     DI,[SI.BufInSiz] 
     249 00E3  8A 05                            MOV     AL,[DI] 
     250 00E5  16                               PUSH    SS 
     251 00E6  1F                               POP     DS 
     252                                ASSUME  DS:DOSGROUP 
     253 00E7  A2 0001 E                        MOV     BYTE PTR [CLUSSAVE+1],A
					L 
     254 00EA  BF 0000 E                        MOV     DI,OFFSET DOSGROUP:CLUS
					SAVE 
     255 00ED                           MAPRET: 
     256 00ED  5A                               POP     DX 
     257 00EE  59                               POP     CX 
     258 00EF  5B                               POP     BX 
     259 00F0  8B C3                            MOV     AX,BX 
     260 00F2  D1 E8                            SHR     AX,1 
     261 00F4  58                               POP     AX 
     262                                        return 
     263 00F5                         1 ??0005:
     264 00F5  C3                     1  RET
     265                                MAPCLUSTER  ENDP 
     266                                 
     267                                SUBTTL FATREAD -- CHECK DRIVE GET FAT 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 09:23:43

FAT - FAT maintenance routines                              Page     1-9
FATREAD -- CHECK DRIVE GET FAT                              

     268                                PAGE 
     269                                ASSUME  DS:DOSGROUP,ES:NOTHING 
     270                                 
     271                                        procedure   FAT_operation,NEAR 
     272 00F6                         1 FAT_operation PROC NEAR
     273 00F6                           FATERR: 
     274 00F6  81 E7 00FF                       AND     DI,STECODE      ; Put e
					rror code in DI 
     275 00FA  B4 02                            MOV     AH,2            ; While
					 trying to read FAT 
     276 00FC  A0 0000 E                        MOV     AL,BYTE PTR [THISDRV]  
					  ; Tell which drive 
     277                                        invoke  FATAL1 
     278 00FF  E8 0000 E              1  CALL FATAL1
     279                                 
     280                                        entry   FATREAD 
     281 0102                         1 FATREAD:
     282                                ASSUME  DS:DOSGROUP,ES:NOTHING 
     283                                 
     284                                ; Function: 
     285                                ;       If disk may have been changed, 
					FAT is read in and buffers are 
     286                                ;       flagged invalid. If not, no act
					ion is taken. 
     287                                ; Outputs: 
     288                                ;       ES:BP = Base of drive parameter
					s 
     289                                ; All other registers destroyed 
     290                                 
     291 0102  A0 0000 E                        MOV     AL,BYTE PTR [THISDRV] 
     292                                        invoke  GETBP 
     293 0105  E8 0000 E              1  CALL GETBP
     294 0108  B0 0F                            MOV     AL,DMEDHL 
     295 010A  26: 8A 66 01                     MOV     AH,ES:[BP.dpb_UNIT] 
     296 010E  A3 0000 E                        MOV     WORD PTR [DEVCALL],AX 
     297 0111  C6 06 0002 E 01                  MOV     BYTE PTR [DEVCALL.REQFU
					NC],DEVMDCH 
     298 0116  C7 06 0003 E 0000                MOV     [DEVCALL.REQSTAT],0 
     299 011C  26: 8A 46 16                     MOV     AL,ES:[BP.dpb_media] 
     300 0120  A2 0000 E                        MOV     BYTE PTR [CALLMED],AL 
     301 0123  06                               PUSH    ES 
     302 0124  1E                               PUSH    DS 
     303 0125  BB 0000 E                        MOV     BX,OFFSET DOSGROUP:DEVC
					ALL 
     304 0128  26: C5 76 12                     LDS     SI,ES:[BP.dpb_driver_ad
					dr]       ; DS:SI Points to device head
					er 
     305                                ASSUME  DS:NOTHING 
     306 012C  07                               POP     ES                     
					 ; ES:BX Points to call header 
     307                                        invoke  DEVIOCALL2 
     308 012D  E8 0000 E              1  CALL DEVIOCALL2
     309 0130  16                               PUSH    SS 
     310 0131  1F                               POP     DS 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 09:23:43

FAT - FAT maintenance routines                              Page     1-10
FATREAD -- CHECK DRIVE GET FAT                              

     311                                ASSUME  DS:DOSGROUP 
     312 0132  07                               POP     ES                     
					 ; Restore ES:BP 
     313 0133  8B 3E 0003 E                     MOV     DI,[DEVCALL.REQSTAT] 
     314 0137  F7 C7 8000                       TEST    DI,STERR 
     315 013B  75 B9                            JNZ     FATERR 
     316 013D  32 E4                            XOR     AH,AH 
     317 013F  26: 86 66 17                     XCHG    AH,ES:[BP.dpb_first_acc
					ess]      ; Reset dpb_first_access 
     318 0143  A0 0000 E                        MOV     AL,BYTE PTR [THISDRV]  
					  ; Use physical unit number 
     319 0146  0A 26 0000 E                     OR      AH,BYTE PTR [CALLRBYT] 
     320 014A  78 15                            JS      NEWDSK          ; new d
					isk or first access? 
     321 014C  74 01                            JZ      CHKBUFFDIRT 
     322                                        return                  ; If Me
					dia not changed 
     323 014E                         1 ??0006:
     324 014E  C3                     1  RET
     325 014F                           CHKBUFFDIRT: 
     326 014F  FE C4                            INC     AH              ; Here 
					if ?Media..Check buffers 
     327 0151  C5 3E 0000 E                     LDS     DI,[BUFFHEAD] 
     328                                ASSUME  DS:NOTHING 
     329 0155                           NBUFFER:                        ; Look 
					for dirty buffers 
     330 0155  3B 45 04                         CMP     AX,WORD PTR [DI.BUFDRV]
					 
     331                                        retz                    ; There
					 is a dirty buffer, assume Media OK 
     332 0158  74 F4                  2  ??0007: jz ret_l
     333 015A  C5 3D                            LDS     DI,[DI.NEXTBUF] 
     334 015C  83 FF FF                         CMP     DI,-1 
     335 015F  75 F4                            JNZ     NBUFFER 
     336                                ; If no dirty buffers, assume Media cha
					nged 
     337 0161                           NEWDSK: 
     338                                        invoke  SETVISIT 
     339 0161  E8 0000 E              1  CALL SETVISIT
     340 0164                           NXBUFFER: 
     341 0164  C6 45 07 01                      MOV     [DI.VISIT],1 
     342 0168  3A 45 04                         CMP     AL,[DI.BUFDRV]       ; 
					For this drive? 
     343 016B  75 08                            JNZ     SKPBUFF 
     344 016D  C7 45 04 00FF                    MOV     WORD PTR [DI.BUFDRV],00
					FFH  ; Free up buffer 
     345                                        invoke  SCANPLACE 
     346 0172  E8 0000 E              1  CALL SCANPLACE
     347 0175                           SKPBUFF: 
     348                                        invoke  SKIPVISIT 
     349 0175  E8 0000 E              1  CALL SKIPVISIT
     350 0178  75 EA                            JNZ     NXBUFFER 
     351 017A  26: C5 7E 12                     LDS     DI,ES:[BP.dpb_driver_ad
					dr] 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 09:23:43

FAT - FAT maintenance routines                              Page     1-11
FATREAD -- CHECK DRIVE GET FAT                              

     352 017E  F7 45 04 2000                    TEST    [DI.SDEVATT],ISFATBYDEV
					 
     353 0183  75 0E                            JNZ     GETFREEBUF 
     354                                        context DS 
     355 0185  16                     1  PUSH SS
     356 0186  1F                     1  POP DS
     357 0187  BB 0002                          MOV     BX,2 
     358 018A  E8 0000 R                        CALL    UNPACK                 
					 ; Read the first FAT sector into  CURB
					UF 
     359 018D  C5 3E 0000 E                     LDS     DI,[CURBUF] 
     360 0191  EB 0C                            JMP     SHORT GOTGETBUF 
     361 0193                           GETFREEBUF: 
     362                                ASSUME  DS:NOTHING 
     363 0193  06                               PUSH    ES                     
					 ; Get a free buffer for BIOS to use 
     364 0194  55                               PUSH    BP 
     365 0195  36: C5 3E 0000 E                 LDS     DI,[BUFFHEAD] 
     366                                        invoke  BUFWRITE 
     367 019A  E8 0000 E              1  CALL BUFWRITE
     368 019D  5D                               POP     BP 
     369 019E  07                               POP     ES 
     370 019F                           GOTGETBUF: 
     371 019F  83 C7 10                         ADD     DI,BUFINSIZ 
     372 01A2  36: 8C 1E 0002 E                 MOV     WORD PTR [CALLXAD+2],DS
					 
     373 01A7  16                               PUSH    SS 
     374 01A8  1F                               POP     DS 
     375                                ASSUME  DS:DOSGROUP 
     376 01A9  89 3E 0000 E                     MOV     WORD PTR [CALLXAD],DI 
     377 01AD  B0 16                            MOV     AL,DBPBHL 
     378 01AF  26: 8A 66 01                     MOV     AH,BYTE PTR ES:[BP.dpb_
					UNIT] 
     379 01B3  A3 0000 E                        MOV     WORD PTR [DEVCALL],AX 
     380 01B6  C6 06 0002 E 02                  MOV     BYTE PTR [DEVCALL.REQFU
					NC],DEVBPB 
     381 01BB  C7 06 0003 E 0000                MOV     [DEVCALL.REQSTAT],0 
     382 01C1  26: 8A 46 16                     MOV     AL,BYTE PTR ES:[BP.dpb_
					media] 
     383 01C5  A2 0000 E                        MOV     [CALLMED],AL 
     384 01C8  06                               PUSH    ES 
     385 01C9  1E                               PUSH    DS 
     386 01CA  26: FF 76 14                     PUSH    WORD PTR ES:[BP.dpb_dri
					ver_addr+2] 
     387 01CE  26: FF 76 12                     PUSH    WORD PTR ES:[BP.dpb_dri
					ver_addr] 
     388 01D2  BB 0000 E                        MOV     BX,OFFSET DOSGROUP:DEVC
					ALL 
     389 01D5  5E                               POP     SI 
     390 01D6  1F                               POP     DS                     
					 ; DS:SI Points to device header 
     391                                ASSUME  DS:NOTHING 
     392 01D7  07                               POP     ES                     
					 ; ES:BX Points to call header 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 09:23:43

FAT - FAT maintenance routines                              Page     1-12
FATREAD -- CHECK DRIVE GET FAT                              

     393                                        invoke  DEVIOCALL2 
     394 01D8  E8 0000 E              1  CALL DEVIOCALL2
     395 01DB  07                               POP     ES                     
					 ; Restore ES:BP 
     396 01DC  16                               PUSH    SS 
     397 01DD  1F                               POP     DS 
     398                                ASSUME  DS:DOSGROUP 
     399 01DE  8B 3E 0003 E                     MOV     DI,[DEVCALL.REQSTAT] 
     400 01E2  F7 C7 8000                       TEST    DI,STERR 
     401 01E6  75 31                            JNZ     FATERRJ 
     402 01E8  26: 8A 46 16                     MOV     AL,BYTE PTR ES:[BP.dpb_
					media] 
     403 01EC  C5 36 0000 E                     LDS     SI,[CALLBPB] 
     404                                ASSUME  DS:NOTHING 
     405 01F0  3A 44 0A                         CMP     AL,BYTE PTR [SI.BPMEDIA
					] 
     406 01F3  74 13                            JZ      DPBOK 
     407                                        invoke  $SETDPB 
     408 01F5  E8 0000 E              1  CALL $SETDPB
     409 01F8  36: C5 3E 0000 E                 LDS     DI,[CALLXAD]           
					 ; Get back buffer pointer 
     410 01FD  26: 8A 46 08                     MOV     AL,BYTE PTR ES:[BP.dpb_
					FAT_count] 
     411 0201  26: 8A 66 0F                     MOV     AH,BYTE PTR ES:[BP.dpb_
					FAT_size] 
     412 0205  89 45 FA                         MOV     WORD PTR [DI.BUFWRTCNT-
					BUFINSIZ],AX   ;Correct buffer info 
     413 0208                           DPBOK: 
     414                                        context ds 
     415 0208  16                     1  PUSH SS
     416 0209  1F                     1  POP ds
     417 020A  B8 FFFF                          MOV     AX,-1 
     418 020D  26: 85 46 1C                     TEST    ES:[BP.dpb_current_dir]
					,AX 
     419                                        retz                           
					 ; If root, leave as root 
     420 0211  75 01                  3  jnz ??000B
     421 0213                         4 ??000C:
     422 0213  C3                     4  RET
     423 0214                         3  ??000B:
     424 0214  26: 89 46 1C                     MOV     ES:[BP.dpb_current_dir]
					,AX    ; Path may be bad, mark invalid 
     425                                        return 
     426 0218                         1 ??000D:
     427 0218  C3                     1  RET
     428                                 
     429 0219  E9 00F6 R                FATERRJ: JMP    FATERR 
     430                                 
     431                                FAT_operation   ENDP 
     432                                 
     433                                do_ext 
     434                                 
     435 021C                           CODE    ENDS 
     436                                    END 

Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 09:23:43

FAT - FAT maintenance routines                              Symbols-1
                                                             

Macros:

		N a m e			Lines

BREAK  . . . . . . . . . . . . .  	   2
CONDRET  . . . . . . . . . . . .  	  19
CONTEXT  . . . . . . . . . . . .  	   3
DO_EXT . . . . . . . . . . . . .  	   0
ENTRY  . . . . . . . . . . . . .  	   2
ERROR  . . . . . . . . . . . . .  	   4
INVOKE . . . . . . . . . . . . .  	   8
I_AM . . . . . . . . . . . . . .  	  14
I_NEED . . . . . . . . . . . . .  	  11
JUMP . . . . . . . . . . . . . .  	  17
LONG_ADDR  . . . . . . . . . . .  	   7
MAKELAB  . . . . . . . . . . . .  	   4
PROCEDURE  . . . . . . . . . . .  	   2
RETC . . . . . . . . . . . . . .  	   1
RETNC  . . . . . . . . . . . . .  	   1
RETNZ  . . . . . . . . . . . . .  	   1
RETURN . . . . . . . . . . . . .  	   5
RETZ . . . . . . . . . . . . . .  	   1
SHORT_ADDR . . . . . . . . . . .  	  12
TRANSFER . . . . . . . . . . . .  	   8

Structures and Records:

                N a m e                 Width   # fields
                                        Shift   Width   Mask    Initial

ARENA  . . . . . . . . . . . . .  	0005	0003
  ARENA_SIGNATURE  . . . . . . .  	0000
  ARENA_OWNER  . . . . . . . . .  	0001
  ARENA_SIZE . . . . . . . . . .  	0003
BPBLOCK  . . . . . . . . . . . .  	000D	0008
  BPSECSZ  . . . . . . . . . . .  	0000
  BPCLUS . . . . . . . . . . . .  	0002
  BPRES  . . . . . . . . . . . .  	0003
  BPFTCNT  . . . . . . . . . . .  	0005
  BPDRCNT  . . . . . . . . . . .  	0006
  BPSCCNT  . . . . . . . . . . .  	0008
  BPMEDIA  . . . . . . . . . . .  	000A
  BPFTSEC  . . . . . . . . . . .  	000B
BUFFINFO . . . . . . . . . . . .  	0010	0009
  NEXTBUF  . . . . . . . . . . .  	0000
  BUFDRV . . . . . . . . . . . .  	0004
  BUFDIRTY . . . . . . . . . . .  	0005
  BUFPRI . . . . . . . . . . . .  	0006
  VISIT  . . . . . . . . . . . .  	0007
  BUFSECNO . . . . . . . . . . .  	0008
  BUFWRTCNT  . . . . . . . . . .  	000A
  BUFWRTINC  . . . . . . . . . .  	000B
  BUFDRVDP . . . . . . . . . . .  	000C
DIR_ENTRY  . . . . . . . . . . .  	0020	0008
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 09:23:43

FAT - FAT maintenance routines                              Symbols-2
                                                             

  DIR_NAME . . . . . . . . . . .  	0000
  DIR_ATTR . . . . . . . . . . .  	000B
  DIR_PAD  . . . . . . . . . . .  	000C
  DIR_TIME . . . . . . . . . . .  	0016
  DIR_DATE . . . . . . . . . . .  	0018
  DIR_FIRST  . . . . . . . . . .  	001A
  DIR_SIZE_L . . . . . . . . . .  	001C
  DIR_SIZE_H . . . . . . . . . .  	001E
DPB  . . . . . . . . . . . . . .  	005E	0012
  DPB_DRIVE  . . . . . . . . . .  	0000
  DPB_UNIT . . . . . . . . . . .  	0001
  DPB_SECTOR_SIZE  . . . . . . .  	0002
  DPB_CLUSTER_MASK . . . . . . .  	0004
  DPB_CLUSTER_SHIFT  . . . . . .  	0005
  DPB_FIRST_FAT  . . . . . . . .  	0006
  DPB_FAT_COUNT  . . . . . . . .  	0008
  DPB_ROOT_ENTRIES . . . . . . .  	0009
  DPB_FIRST_SECTOR . . . . . . .  	000B
  DPB_MAX_CLUSTER  . . . . . . .  	000D
  DPB_FAT_SIZE . . . . . . . . .  	000F
  DPB_DIR_SECTOR . . . . . . . .  	0010
  DPB_DRIVER_ADDR  . . . . . . .  	0012
  DPB_MEDIA  . . . . . . . . . .  	0016
  DPB_FIRST_ACCESS . . . . . . .  	0017
  DPB_NEXT_DPB . . . . . . . . .  	0018
  DPB_CURRENT_DIR  . . . . . . .  	001C
  DPB_DIR_TEXT . . . . . . . . .  	001E
EXEC0  . . . . . . . . . . . . .  	000E	0004
  EXEC0_ENVIRON  . . . . . . . .  	0000
  EXEC0_COM_LINE . . . . . . . .  	0002
  EXEC0_5C_FCB . . . . . . . . .  	0006
  EXEC0_6C_FCB . . . . . . . . .  	000A
EXEC1  . . . . . . . . . . . . .  	0016	0008
  EXEC1_ENVIRON  . . . . . . . .  	0000
  EXEC1_COM_LINE . . . . . . . .  	0002
  EXEC1_5C_FCB . . . . . . . . .  	0006
  EXEC1_6C_FCB . . . . . . . . .  	000A
  EXEC1_SP . . . . . . . . . . .  	000E
  EXEC1_SS . . . . . . . . . . .  	0010
  EXEC1_IP . . . . . . . . . . .  	0012
  EXEC1_CS . . . . . . . . . . .  	0014
EXEC3  . . . . . . . . . . . . .  	0004	0002
  EXEC3_LOAD_ADDR  . . . . . . .  	0000
  EXEC3_RELOC_FAC  . . . . . . .  	0002
EXE_FILE . . . . . . . . . . . .  	0020	000F
  EXE_SIGNATURE  . . . . . . . .  	0000
  EXE_LEN_MOD_512  . . . . . . .  	0002
  EXE_PAGES  . . . . . . . . . .  	0004
  EXE_RLE_COUNT  . . . . . . . .  	0006
  EXE_PAR_DIR  . . . . . . . . .  	0008
  EXE_MIN_BSS  . . . . . . . . .  	000A
  EXE_MAX_BSS  . . . . . . . . .  	000C
  EXE_SS . . . . . . . . . . . .  	000E
  EXE_SP . . . . . . . . . . . .  	0010
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 09:23:43

FAT - FAT maintenance routines                              Symbols-3
                                                             

  EXE_CHKSUM . . . . . . . . . .  	0012
  EXE_IP . . . . . . . . . . . .  	0014
  EXE_CS . . . . . . . . . . . .  	0016
  EXE_RLE_TABLE  . . . . . . . .  	0018
  EXE_IOV  . . . . . . . . . . .  	001A
  EXE_SYM_TAB  . . . . . . . . .  	001C
FIND_BUF . . . . . . . . . . . .  	002B	000C
  FIND_BUF_SATTR . . . . . . . .  	0000
  FIND_BUF_DRIVE . . . . . . . .  	0001
  FIND_BUF_NAME  . . . . . . . .  	0002
  FIND_BUF_LASTENT . . . . . . .  	000D
  FIND_BUF_THISDPB . . . . . . .  	000F
  FIND_BUF_DIRSTART  . . . . . .  	0013
  FIND_BUF_ATTR  . . . . . . . .  	0015
  FIND_BUF_TIME  . . . . . . . .  	0016
  FIND_BUF_DATE  . . . . . . . .  	0018
  FIND_BUF_SIZE_L  . . . . . . .  	001A
  FIND_BUF_SIZE_H  . . . . . . .  	001C
  FIND_BUF_PNAME . . . . . . . .  	001E
INTERNAT_BLOCK . . . . . . . . .  	0018	0015
  DATE_TIM_FORMAT  . . . . . . .  	0000
  CURRENCY_SYM . . . . . . . . .  	0002
  THOUS_SEP  . . . . . . . . . .  	0007
  DECIMAL_SEP  . . . . . . . . .  	0009
  DATE_SEP . . . . . . . . . . .  	000B
  TIME_SEP . . . . . . . . . . .  	000D
  BIT_FEILD  . . . . . . . . . .  	000F
  CURRENCY_CENTS . . . . . . . .  	0010
  TIME_24  . . . . . . . . . . .  	0011
  MAP_CALL . . . . . . . . . . .  	0012
  DATA_SEP . . . . . . . . . . .  	0016
PROCESS_DATA_BLOCK . . . . . . .  	005B	000E
  PDB_EXIT_CALL  . . . . . . . .  	0000
  PDB_BLOCK_LEN  . . . . . . . .  	0002
  PDB_CPM_CALL . . . . . . . . .  	0005
  PDB_EXIT . . . . . . . . . . .  	000A
  PDB_CTRL_C . . . . . . . . . .  	000E
  PDB_FATAL_ABORT  . . . . . . .  	0012
  PDB_PARENT_PID . . . . . . . .  	0016
  PDB_JFN_TABLE  . . . . . . . .  	0018
  PDB_ENVIRON  . . . . . . . . .  	002C
  PDB_USER_STACK . . . . . . . .  	002E
  PDB_PAD1 . . . . . . . . . . .  	0032
  PDB_CALL_SYSTEM  . . . . . . .  	0050
  PDB_PAD2 . . . . . . . . . . .  	0055
SFT  . . . . . . . . . . . . . .  	0008	0003
  SFT_LINK . . . . . . . . . . .  	0000
  SFT_COUNT  . . . . . . . . . .  	0004
  SFT_TABLE  . . . . . . . . . .  	0006
SF_ENTRY . . . . . . . . . . . .  	0028	0004
  SF_REF_COUNT . . . . . . . . .  	0000
  SF_MODE  . . . . . . . . . . .  	0001
  SF_ATTR  . . . . . . . . . . .  	0002
  SF_FCB . . . . . . . . . . . .  	0003
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 09:23:43

FAT - FAT maintenance routines                              Symbols-4
                                                             

SRHEAD . . . . . . . . . . . . .  	000D	0005
  REQLEN . . . . . . . . . . . .  	0000
  REQUNIT  . . . . . . . . . . .  	0001
  REQFUNC  . . . . . . . . . . .  	0002
  REQSTAT  . . . . . . . . . . .  	0003
SYMBOL_ENTRY . . . . . . . . . .  	0106	0004
  SYM_VALUE  . . . . . . . . . .  	0000
  SYM_TYPE . . . . . . . . . . .  	0004
  SYM_LEN  . . . . . . . . . . .  	0006
  SYM_NAME . . . . . . . . . . .  	0007
SYSDEV . . . . . . . . . . . . .  	0012	0005
  SDEVNEXT . . . . . . . . . . .  	0000
  SDEVATT  . . . . . . . . . . .  	0004
  SDEVSTRAT  . . . . . . . . . .  	0006
  SDEVINT  . . . . . . . . . . .  	0008
  SDEVNAME . . . . . . . . . . .  	000A
SYS_FCB  . . . . . . . . . . . .  	0025	0010
  FCB_DRIVE  . . . . . . . . . .  	0000
  FCB_NAME . . . . . . . . . . .  	0001
  FCB_EXT  . . . . . . . . . . .  	0009
  FCB_EXTENT . . . . . . . . . .  	000C
  FCB_RECSIZ . . . . . . . . . .  	000E
  FCB_FILSIZ . . . . . . . . . .  	0010
  FCB_DRVBP  . . . . . . . . . .  	0012
  FCB_FDATE  . . . . . . . . . .  	0014
  FCB_FTIME  . . . . . . . . . .  	0016
  FCB_DEVID  . . . . . . . . . .  	0018
  FCB_FIRCLUS  . . . . . . . . .  	0019
  FCB_CLUSPOS  . . . . . . . . .  	001B
  FCB_LSTCLUS  . . . . . . . . .  	001D
  FCB_NR . . . . . . . . . . . .  	0020
  FCB_RR . . . . . . . . . . . .  	0021
USER_ENVIRON . . . . . . . . . .  	0018	000C
  USER_AX  . . . . . . . . . . .  	0000
  USER_BX  . . . . . . . . . . .  	0002
  USER_CX  . . . . . . . . . . .  	0004
  USER_DX  . . . . . . . . . . .  	0006
  USER_SI  . . . . . . . . . . .  	0008
  USER_DI  . . . . . . . . . . .  	000A
  USER_BP  . . . . . . . . . . .  	000C
  USER_DS  . . . . . . . . . . .  	000E
  USER_ES  . . . . . . . . . . .  	0010
  USER_IP  . . . . . . . . . . .  	0012
  USER_CS  . . . . . . . . . . .  	0014
  USER_F . . . . . . . . . . . .  	0016

Segments and Groups:

                N a m e         	Size	Align	Combine Class

DOSGROUP . . . . . . . . . . . .  	GROUP
  CODE . . . . . . . . . . . . .  	021C	BYTE	PUBLIC	'CODE'
  CONSTANTS  . . . . . . . . . .  	0000	BYTE	PUBLIC	'CONST'
  DATA . . . . . . . . . . . . .  	0000	BYTE	PUBLIC	'DATA'
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 09:23:43

FAT - FAT maintenance routines                              Symbols-5
                                                             

  LAST . . . . . . . . . . . . .  	0000	BYTE	PUBLIC	'LAST'

Symbols:            

                N a m e         	Type	Value	Attr         

ABORT  . . . . . . . . . . . . .  	Number	0000	
ADDR_INT_ABORT . . . . . . . . .  	Number	0080	
ADDR_INT_COMMAND . . . . . . . .  	Number	0084	
ADDR_INT_CTRL_C  . . . . . . . .  	Number	008C	
ADDR_INT_DISK_READ . . . . . . .  	Number	0094	
ADDR_INT_DISK_WRITE  . . . . . .  	Number	0098	
ADDR_INT_FASTCON . . . . . . . .  	Number	00A4	
ADDR_INT_FATAL_ABORT . . . . . .  	Number	0090	
ADDR_INT_KEEP_PROCESS  . . . . .  	Number	009C	
ADDR_INT_SPOOLER . . . . . . . .  	Number	00A0	
ADDR_INT_TERMINATE . . . . . . .  	Number	0088	
ALIGNED  . . . . . . . . . . . .  	L NEAR	0039	CODE
ALLOC  . . . . . . . . . . . . .  	Number	0048	
ALLOCOPER  . . . . . . . . . . .  	Number	0058	
ALLOC_ARENA_TRASHED  . . . . . .  	Alias	 ERROR_ARENA_TRASHED		
ALLOC_NOT_ENOUGH_MEMORY  . . . .  	Alias	 ERROR_NOT_ENOUGH_MEMORY		
ALTVECT  . . . . . . . . . . . .  	Number	0000	
ARENA_OWNER_SYSTEM . . . . . . .  	Number	0000	
ARENA_SIGNATURE_END  . . . . . .  	Number	005A	
ARENA_SIGNATURE_NORMAL . . . . .  	Number	004D	
ASSIGNOPER . . . . . . . . . . .  	Number	005F	
ATTR_ALL . . . . . . . . . . . .  	Number	0016	
ATTR_ARCHIVE . . . . . . . . . .  	Number	0020	
ATTR_CHANGEABLE  . . . . . . . .  	Number	0027	
ATTR_DIRECTORY . . . . . . . . .  	Number	0010	
ATTR_HIDDEN  . . . . . . . . . .  	Number	0002	
ATTR_IGNORE  . . . . . . . . . .  	Number	0021	
ATTR_READ_ONLY . . . . . . . . .  	Number	0001	
ATTR_SYSTEM  . . . . . . . . . .  	Number	0004	
ATTR_VOLUME_ID . . . . . . . . .  	Number	0008	

BUFFHEAD . . . . . . . . . . . .  	V DWORD	0000	DATA	External
BUFINSIZ . . . . . . . . . . . .  	Number	0010	

CALLBPB  . . . . . . . . . . . .  	V DWORD	0000	DATA	External
CALLMED  . . . . . . . . . . . .  	V BYTE 	0000	DATA	External
CALLRBYT . . . . . . . . . . . .  	V BYTE 	0000	DATA	External
CALLXAD  . . . . . . . . . . . .  	V DWORD	0000	DATA	External
CHAR_OPER  . . . . . . . . . . .  	Number	0037	
CHDIR  . . . . . . . . . . . . .  	Number	003B	
CHDIR_PATH_NOT_FOUND . . . . . .  	Alias	 ERROR_PATH_NOT_FOUND		
CHKBUFFDIRT  . . . . . . . . . .  	L NEAR	014F	CODE
CHMOD  . . . . . . . . . . . . .  	Number	0043	
CHMOD_ACCESS_DENIED  . . . . . .  	Alias	 ERROR_ACCESS_DENIED		
CHMOD_INVALID_FUNCTION . . . . .  	Alias	 ERROR_INVALID_FUNCTION		
CHMOD_PATH_NOT_FOUND . . . . . .  	Alias	 ERROR_PATH_NOT_FOUND		
CLOSE  . . . . . . . . . . . . .  	Number	003E	
CLOSE_INVALID_FUNCTION . . . . .  	Alias	 ERROR_INVALID_FUNCTION		
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 09:23:43

FAT - FAT maintenance routines                              Symbols-6
                                                             

CLOSE_INVALID_HANDLE . . . . . .  	Alias	 ERROR_INVALID_HANDLE		
CLUSSAVE . . . . . . . . . . . .  	V WORD 	0000	DATA	External
CLUSSEC  . . . . . . . . . . . .  	V WORD 	0000	DATA	External
CLUSSPLIT  . . . . . . . . . . .  	V BYTE 	0000	DATA	External
COUNTRY_NOT_FOUND  . . . . . . .  	Alias	 ERROR_FILE_NOT_FOUND		
CREAT  . . . . . . . . . . . . .  	Number	003C	
CREATENEWFILE  . . . . . . . . .  	Number	005B	
CREATETEMPFILE . . . . . . . . .  	Number	005A	
CREATE_PROCESS_DATA_BLOCK  . . .  	Number	0026	
CREAT_ACCESS_DENIED  . . . . . .  	Alias	 ERROR_ACCESS_DENIED		
CREAT_PATH_NOT_FOUND . . . . . .  	Alias	 ERROR_PATH_NOT_FOUND		
CREAT_TOO_MANY_OPEN_FILES  . . .  	Alias	 ERROR_TOO_MANY_OPEN_FILES		
CURBUF . . . . . . . . . . . . .  	V DWORD	0000	DATA	External
CURDIR_INVALID_DRIVE . . . . . .  	Alias	 ERROR_INVALID_DRIVE		
CURRENT_DIR  . . . . . . . . . .  	Number	0047	
C_BS . . . . . . . . . . . . . .  	Number	0008	
C_CR . . . . . . . . . . . . . .  	Number	000D	
C_DEL  . . . . . . . . . . . . .  	Number	007F	
C_ETB  . . . . . . . . . . . . .  	Number	0017	
C_ETX  . . . . . . . . . . . . .  	Number	0003	
C_HT . . . . . . . . . . . . . .  	Number	0009	
C_LF . . . . . . . . . . . . . .  	Number	000A	
C_NAK  . . . . . . . . . . . . .  	Number	0015	

DBPBHL . . . . . . . . . . . . .  	Number	0016	
DEALLOC  . . . . . . . . . . . .  	Number	0049	
DEALLOC_ARENA_TRASHED  . . . . .  	Alias	 ERROR_ARENA_TRASHED		
DEALLOC_INVALID_BLOCK  . . . . .  	Alias	 ERROR_INVALID_BLOCK		
DEVBPB . . . . . . . . . . . . .  	Number	0002	
DEVCALL  . . . . . . . . . . . .  	V BYTE 	0000	DATA	External
DEVID_BLOCK_DEV  . . . . . . . .  	Number	001F	
DEVID_DEVICE . . . . . . . . . .  	Number	0080	
DEVID_DEVICE_CLOCK . . . . . . .  	Number	0008	
DEVID_DEVICE_CON_IN  . . . . . .  	Number	0001	
DEVID_DEVICE_CON_OUT . . . . . .  	Number	0002	
DEVID_DEVICE_EOF . . . . . . . .  	Number	0040	
DEVID_DEVICE_NULL  . . . . . . .  	Number	0004	
DEVID_DEVICE_RAW . . . . . . . .  	Number	0020	
DEVID_DEVICE_SPECIAL . . . . . .  	Number	0010	
DEVID_EOF  . . . . . . . . . . .  	Number	0040	
DEVID_FILE_CLEAN . . . . . . . .  	Number	0040	
DEVID_FILE_MASK_DRIVE  . . . . .  	Number	003F	
DEVID_ISCIN  . . . . . . . . . .  	Number	0001	
DEVID_ISCLK  . . . . . . . . . .  	Number	0008	
DEVID_ISCOT  . . . . . . . . . .  	Number	0002	
DEVID_ISDEV  . . . . . . . . . .  	Number	0080	
DEVID_ISNUL  . . . . . . . . . .  	Number	0004	
DEVID_RAW  . . . . . . . . . . .  	Number	0020	
DEVID_SPECIAL  . . . . . . . . .  	Number	0010	
DEVIFL . . . . . . . . . . . . .  	Number	0007	
DEVINIT  . . . . . . . . . . . .  	Number	0000	
DEVIOCTL . . . . . . . . . . . .  	Number	4000	
DEVIST . . . . . . . . . . . . .  	Number	0006	
DEVMDCH  . . . . . . . . . . . .  	Number	0001	
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 09:23:43

FAT - FAT maintenance routines                              Symbols-7
                                                             

DEVOFL . . . . . . . . . . . . .  	Number	000B	
DEVOST . . . . . . . . . . . . .  	Number	000A	
DEVRD  . . . . . . . . . . . . .  	Number	0004	
DEVRDIOCTL . . . . . . . . . . .  	Number	0003	
DEVRDND  . . . . . . . . . . . .  	Number	0005	
DEVTYP . . . . . . . . . . . . .  	Number	8000	
DEVWRIOCTL . . . . . . . . . . .  	Number	000C	
DEVWRT . . . . . . . . . . . . .  	Number	0008	
DEVWRTV  . . . . . . . . . . . .  	Number	0009	
DFLSHL . . . . . . . . . . . . .  	Number	000F	
DINITHL  . . . . . . . . . . . .  	Number	001A	
DIRPRI . . . . . . . . . . . . .  	Number	000F	
DIRSTRLEN  . . . . . . . . . . .  	Number	0040	
DIR_SEARCH_FIRST . . . . . . . .  	Number	0011	
DIR_SEARCH_NEXT  . . . . . . . .  	Number	0012	
DISK_RESET . . . . . . . . . . .  	Number	000D	
DMEDHL . . . . . . . . . . . . .  	Number	000F	
DOS_MAJOR_VERSION  . . . . . . .  	Number	0002	
DOS_MINOR_VERSION  . . . . . . .  	Number	000B	
DPBOK  . . . . . . . . . . . . .  	L NEAR	0208	CODE
DPBSIZ . . . . . . . . . . . . .  	Number	005E	
DRDNDHL  . . . . . . . . . . . .  	Number	000E	
DRDWRHL  . . . . . . . . . . . .  	Number	0016	
DSKSIZ . . . . . . . . . . . . .  	Number	000D	
DSTATHL  . . . . . . . . . . . .  	Number	000D	
DUP2_INVALID_HANDLE  . . . . . .  	Alias	 ERROR_INVALID_HANDLE		
DUP_INVALID_HANDLE . . . . . . .  	Alias	 ERROR_INVALID_HANDLE		
DUP_PDB  . . . . . . . . . . . .  	Number	0055	
DUP_TOO_MANY_OPEN_FILES  . . . .  	Alias	 ERROR_TOO_MANY_OPEN_FILES		

ENTRYPOINT . . . . . . . . . . .  	Number	00C0	
ERROR_ACCESS_DENIED  . . . . . .  	Number	0005	
ERROR_ARENA_TRASHED  . . . . . .  	Number	0007	
ERROR_BAD_ENVIRONMENT  . . . . .  	Number	000A	
ERROR_BAD_FORMAT . . . . . . . .  	Number	000B	
ERROR_CURRENT_DIRECTORY  . . . .  	Number	0010	
ERROR_FILE_NOT_FOUND . . . . . .  	Number	0002	
ERROR_INVALID_ACCESS . . . . . .  	Number	000C	
ERROR_INVALID_BLOCK  . . . . . .  	Number	0009	
ERROR_INVALID_DATA . . . . . . .  	Number	000D	
ERROR_INVALID_DRIVE  . . . . . .  	Number	000F	
ERROR_INVALID_FUNCTION . . . . .  	Number	0001	
ERROR_INVALID_HANDLE . . . . . .  	Number	0006	
ERROR_NOT_ENOUGH_MEMORY  . . . .  	Number	0008	
ERROR_NOT_SAME_DEVICE  . . . . .  	Number	0011	
ERROR_NO_MORE_FILES  . . . . . .  	Number	0012	
ERROR_PATH_NOT_FOUND . . . . . .  	Number	0003	
ERROR_TOO_MANY_OPEN_FILES  . . .  	Number	0004	
EXEC . . . . . . . . . . . . . .  	Number	004B	
EXEC_BAD_ENVIRONMENT . . . . . .  	Alias	 ERROR_BAD_ENVIRONMENT		
EXEC_BAD_FORMAT  . . . . . . . .  	Alias	 ERROR_BAD_FORMAT		
EXEC_FILE_NOT_FOUND  . . . . . .  	Alias	 ERROR_FILE_NOT_FOUND		
EXEC_FUNC_NO_EXECUTE . . . . . .  	Number	0001	
EXEC_FUNC_OVERLAY  . . . . . . .  	Number	0002	
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 09:23:43

FAT - FAT maintenance routines                              Symbols-8
                                                             

EXEC_INVALID_FUNCTION  . . . . .  	Alias	 ERROR_INVALID_FUNCTION		
EXEC_NOT_ENOUGH_MEMORY . . . . .  	Alias	 ERROR_NOT_ENOUGH_MEMORY		
EXE_VALID_OLD_SIGNATURE  . . . .  	Number	4D5A	
EXE_VALID_SIGNATURE  . . . . . .  	Number	5A4D	
EXIT . . . . . . . . . . . . . .  	Number	004C	
EXIT_ABORT . . . . . . . . . . .  	Number	0000	
EXIT_CTRL_C  . . . . . . . . . .  	Number	0001	
EXIT_HARD_ERROR  . . . . . . . .  	Number	0002	
EXIT_KEEP_PROCESS  . . . . . . .  	Number	0003	
EXIT_TERMINATE . . . . . . . . .  	Number	0000	

FATERR . . . . . . . . . . . . .  	L NEAR	00F6	CODE
FATERRJ  . . . . . . . . . . . .  	L NEAR	0219	CODE
FATPRI . . . . . . . . . . . . .  	Number	001E	
FATREAD  . . . . . . . . . . . .  	L NEAR	0102	CODE	Global
FAT_OPERATION  . . . . . . . . .  	N PROC	00F6	CODE	Global	Length = 0126
FCB_CLOSE  . . . . . . . . . . .  	Number	0010	
FCB_CREATE . . . . . . . . . . .  	Number	0016	
FCB_DELETE . . . . . . . . . . .  	Number	0013	
FCB_OPEN . . . . . . . . . . . .  	Number	000F	
FCB_RANDOM_READ  . . . . . . . .  	Number	0021	
FCB_RANDOM_READ_BLOCK  . . . . .  	Number	0027	
FCB_RANDOM_WRITE . . . . . . . .  	Number	0022	
FCB_RANDOM_WRITE_BLOCK . . . . .  	Number	0028	
FCB_RENAME . . . . . . . . . . .  	Number	0017	
FCB_SEQ_READ . . . . . . . . . .  	Number	0014	
FCB_SEQ_WRITE  . . . . . . . . .  	Number	0015	
FILDIRENT  . . . . . . . . . . .  	Number	0010	
FILETIMES_INVALID_FUNCTION . . .  	Alias	 ERROR_INVALID_FUNCTION		
FILETIMES_INVALID_HANDLE . . . .  	Alias	 ERROR_INVALID_HANDLE		
FILE_TIMES . . . . . . . . . . .  	Number	0057	
FILPERPROC . . . . . . . . . . .  	Number	0014	
FINDFIRST_FILE_NOT_FOUND . . . .  	Alias	 ERROR_FILE_NOT_FOUND		
FINDFIRST_NO_MORE_FILES  . . . .  	Alias	 ERROR_NO_MORE_FILES		
FINDNEXT_NO_MORE_FILES . . . . .  	Alias	 ERROR_NO_MORE_FILES		
FIND_FIRST . . . . . . . . . . .  	Number	004E	
FIND_NEXT  . . . . . . . . . . .  	Number	004F	
FREEPRI  . . . . . . . . . . . .  	Number	0000	

GETEXTENDEDERROR . . . . . . . .  	Number	0059	
GETFREEBUF . . . . . . . . . . .  	L NEAR	0193	CODE
GET_CURRENT_PDB  . . . . . . . .  	Number	0051	
GET_DATE . . . . . . . . . . . .  	Number	002A	
GET_DEFAULT_DPB  . . . . . . . .  	Number	001F	
GET_DEFAULT_DRIVE  . . . . . . .  	Number	0019	
GET_DMA  . . . . . . . . . . . .  	Number	002F	
GET_DPB  . . . . . . . . . . . .  	Number	0032	
GET_DRIVE_FREESPACE  . . . . . .  	Number	0036	
GET_FCB_FILE_LENGTH  . . . . . .  	Number	0023	
GET_FCB_POSITION . . . . . . . .  	Number	0024	
GET_INDOS_FLAG . . . . . . . . .  	Number	0034	
GET_INTERRUPT_VECTOR . . . . . .  	Number	0035	
GET_IN_VARS  . . . . . . . . . .  	Number	0052	
GET_TIME . . . . . . . . . . . .  	Number	002C	
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 09:23:43

FAT - FAT maintenance routines                              Symbols-9
                                                             

GET_VERIFY_ON_WRITE  . . . . . .  	Number	0054	
GET_VERSION  . . . . . . . . . .  	Number	0030	
GOTGETBUF  . . . . . . . . . . .  	L NEAR	019F	CODE

HAVCLUS  . . . . . . . . . . . .  	L NEAR	0014	CODE
HURTFAT  . . . . . . . . . . . .  	L NEAR	001B	CODE

INTBASE  . . . . . . . . . . . .  	Number	0080	
INTERNATIONAL  . . . . . . . . .  	Number	0038	
INTERNATIONAL_INVALID_FUNCTION .  	Alias	 ERROR_INVALID_FUNCTION		
INTERNAT_BLOCK_MAX . . . . . . .  	Number	0020	
INTTAB . . . . . . . . . . . . .  	Number	0020	
INT_ABORT  . . . . . . . . . . .  	Alias	 INTTAB		
INT_COMMAND  . . . . . . . . . .  	Number	0021	
INT_CTRL_C . . . . . . . . . . .  	Number	0023	
INT_DISK_READ  . . . . . . . . .  	Number	0025	
INT_DISK_WRITE . . . . . . . . .  	Number	0026	
INT_FASTCON  . . . . . . . . . .  	Number	0029	
INT_FATAL_ABORT  . . . . . . . .  	Number	0024	
INT_KEEP_PROCESS . . . . . . . .  	Number	0027	
INT_SPOOLER  . . . . . . . . . .  	Number	0028	
INT_TERMINATE  . . . . . . . . .  	Number	0022	
IOCTL  . . . . . . . . . . . . .  	Number	0044	
IOCTL_INVALID_DATA . . . . . . .  	Alias	 ERROR_INVALID_DATA		
IOCTL_INVALID_FUNCTION . . . . .  	Alias	 ERROR_INVALID_FUNCTION		
IOCTL_INVALID_HANDLE . . . . . .  	Alias	 ERROR_INVALID_HANDLE		
ISCIN  . . . . . . . . . . . . .  	Number	0001	
ISCLOCK  . . . . . . . . . . . .  	Number	0008	
ISCOUT . . . . . . . . . . . . .  	Number	0002	
ISFATBYDEV . . . . . . . . . . .  	Number	2000	
ISIBM  . . . . . . . . . . . . .  	Number	0010	
ISNULL . . . . . . . . . . . . .  	Number	0004	

KEEP_PROCESS . . . . . . . . . .  	Number	0031	

LBRPRI . . . . . . . . . . . . .  	Number	0002	
LBWPRI . . . . . . . . . . . . .  	Number	0004	
LOCKOPER . . . . . . . . . . . .  	Number	005C	
LSEEK  . . . . . . . . . . . . .  	Number	0042	
LSEEK_INVALID_FUNCTION . . . . .  	Alias	 ERROR_INVALID_FUNCTION		
LSEEK_INVALID_HANDLE . . . . . .  	Alias	 ERROR_INVALID_HANDLE		

MAPCLUSTER . . . . . . . . . . .  	N PROC	008B	CODE	Global	Length = 006B
MAPRET . . . . . . . . . . . . .  	L NEAR	00ED	CODE
MI_INT . . . . . . . . . . . . .  	Number	00CD	
MI_LONG_CALL . . . . . . . . . .  	Number	009A	
MI_LONG_JMP  . . . . . . . . . .  	Number	00EA	
MI_LONG_RET  . . . . . . . . . .  	Number	00CB	
MKDIR  . . . . . . . . . . . . .  	Number	0039	
MKDIR_ACCESS_DENIED  . . . . . .  	Alias	 ERROR_ACCESS_DENIED		
MKDIR_PATH_NOT_FOUND . . . . . .  	Alias	 ERROR_PATH_NOT_FOUND		

NBUFFER  . . . . . . . . . . . .  	L NEAR	0155	CODE
NEWDSK . . . . . . . . . . . . .  	L NEAR	0161	CODE
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 09:23:43

FAT - FAT maintenance routines                              Symbols-10
                                                             

NO_ERROR_OCCURRED  . . . . . . .  	Text  0                                                              ?		
NXBUFFER . . . . . . . . . . . .  	L NEAR	0164	CODE

OEM_C1 . . . . . . . . . . . . .  	Number	00F9	
OEM_C2 . . . . . . . . . . . . .  	Number	00FA	
OEM_C3 . . . . . . . . . . . . .  	Number	00FB	
OEM_C4 . . . . . . . . . . . . .  	Number	00FC	
OEM_C5 . . . . . . . . . . . . .  	Number	00FD	
OEM_C6 . . . . . . . . . . . . .  	Number	00FE	
OEM_C7 . . . . . . . . . . . . .  	Number	00FF	
OPEN . . . . . . . . . . . . . .  	Number	003D	
OPEN_ACCESS_DENIED . . . . . . .  	Alias	 ERROR_ACCESS_DENIED		
OPEN_FILE_NOT_FOUND  . . . . . .  	Alias	 ERROR_FILE_NOT_FOUND		
OPEN_FOR_BOTH  . . . . . . . . .  	Number	0002	
OPEN_FOR_READ  . . . . . . . . .  	Number	0000	
OPEN_FOR_WRITE . . . . . . . . .  	Number	0001	
OPEN_INVALID_ACCESS  . . . . . .  	Alias	 ERROR_INVALID_ACCESS		
OPEN_TOO_MANY_OPEN_FILES . . . .  	Alias	 ERROR_TOO_MANY_OPEN_FILES		

PACK . . . . . . . . . . . . . .  	N PROC	0026	CODE	Global	Length = 0065
PACKIN . . . . . . . . . . . . .  	L NEAR	003D	CODE
PARSE_FILE_DESCRIPTOR  . . . . .  	Number	0029	

RAW_CON_INPUT  . . . . . . . . .  	Number	0007	
RAW_CON_IO . . . . . . . . . . .  	Number	0006	
READ . . . . . . . . . . . . . .  	Number	003F	
READ_ACCESS_DENIED . . . . . . .  	Alias	 ERROR_ACCESS_DENIED		
READ_INVALID_HANDLE  . . . . . .  	Alias	 ERROR_INVALID_HANDLE		
RENAME . . . . . . . . . . . . .  	Number	0056	
RENAME_ACCESS_DENIED . . . . . .  	Alias	 ERROR_ACCESS_DENIED		
RENAME_FILE_NOT_FOUND  . . . . .  	Alias	 ERROR_FILE_NOT_FOUND		
RENAME_NOT_SAME_DEVICE . . . . .  	Alias	 ERROR_NOT_SAME_DEVICE		
RET_L  . . . . . . . . . . . . .  	NEAR 	0218	CODE
RET_Z  . . . . . . . . . . . . .  	NEAR 	0213	CODE
RMDIR  . . . . . . . . . . . . .  	Number	003A	
RMDIR_ACCESS_DENIED  . . . . . .  	Alias	 ERROR_ACCESS_DENIED		
RMDIR_CURRENT_DIRECTORY  . . . .  	Alias	 ERROR_CURRENT_DIRECTORY		
RMDIR_PATH_NOT_FOUND . . . . . .  	Alias	 ERROR_PATH_NOT_FOUND		
RPRI . . . . . . . . . . . . . .  	Number	0006	

SERVERCALL . . . . . . . . . . .  	Number	005D	
SETBLOCK . . . . . . . . . . . .  	Number	004A	
SETBLOCK_ARENA_TRASHED . . . . .  	Alias	 ERROR_ARENA_TRASHED		
SETBLOCK_INVALID_BLOCK . . . . .  	Alias	 ERROR_INVALID_BLOCK		
SETBLOCK_INVALID_FUNCTION  . . .  	Alias	 ERROR_INVALID_FUNCTION		
SETBLOCK_NOT_ENOUGH_MEMORY . . .  	Alias	 ERROR_NOT_ENOUGH_MEMORY		
SETDPB . . . . . . . . . . . . .  	Number	0053	
SET_CTRL_C_TRAPPING  . . . . . .  	Number	0033	
SET_CURRENT_PDB  . . . . . . . .  	Number	0050	
SET_DATE . . . . . . . . . . . .  	Number	002B	
SET_DEFAULT_DRIVE  . . . . . . .  	Number	000E	
SET_DMA  . . . . . . . . . . . .  	Number	001A	
SET_INTERRUPT_VECTOR . . . . . .  	Number	0025	
SET_OEM_HANDLER  . . . . . . . .  	Number	00F8	
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 09:23:43

FAT - FAT maintenance routines                              Symbols-11
                                                             

SET_TIME . . . . . . . . . . . .  	Number	002D	
SET_VERIFY_ON_WRITE  . . . . . .  	Number	002E	
SF_DEFAULT_NUMBER  . . . . . . .  	Number	0005	
SKPBUFF  . . . . . . . . . . . .  	L NEAR	0175	CODE
STBUI  . . . . . . . . . . . . .  	Number	0200	
STDAUX . . . . . . . . . . . . .  	Number	0003	
STDERR . . . . . . . . . . . . .  	Number	0002	
STDIN  . . . . . . . . . . . . .  	Number	0000	
STDON  . . . . . . . . . . . . .  	Number	0100	
STDOUT . . . . . . . . . . . . .  	Number	0001	
STDPRN . . . . . . . . . . . . .  	Number	0004	
STD_AUX_INPUT  . . . . . . . . .  	Number	0003	
STD_AUX_OUTPUT . . . . . . . . .  	Number	0004	
STD_CON_INPUT  . . . . . . . . .  	Number	0001	
STD_CON_INPUT_FLUSH  . . . . . .  	Number	000C	
STD_CON_INPUT_NO_ECHO  . . . . .  	Number	0008	
STD_CON_INPUT_STATUS . . . . . .  	Number	000B	
STD_CON_OUTPUT . . . . . . . . .  	Number	0002	
STD_CON_STRING_INPUT . . . . . .  	Number	000A	
STD_CON_STRING_OUTPUT  . . . . .  	Number	0009	
STD_PRINTER_OUTPUT . . . . . . .  	Number	0005	
STECODE  . . . . . . . . . . . .  	Number	00FF	
STERR  . . . . . . . . . . . . .  	Number	8000	

THISDRV  . . . . . . . . . . . .  	V BYTE 	0000	DATA	External

UNLINK . . . . . . . . . . . . .  	Number	0041	
UNLINK_ACCESS_DENIED . . . . . .  	Alias	 ERROR_ACCESS_DENIED		
UNLINK_FILE_NOT_FOUND  . . . . .  	Alias	 ERROR_FILE_NOT_FOUND		
UNPACK . . . . . . . . . . . . .  	N PROC	0000	CODE	Global	Length = 0026
USERIDOPER . . . . . . . . . . .  	Number	005E	

WAIT . . . . . . . . . . . . . .  	Number	004D	
WPRI . . . . . . . . . . . . . .  	Number	0008	
WRECODE  . . . . . . . . . . . .  	Number	0000	
WRITE  . . . . . . . . . . . . .  	Number	0040	
WRITE_ACCESS_DENIED  . . . . . .  	Alias	 ERROR_ACCESS_DENIED		
WRITE_INVALID_HANDLE . . . . . .  	Alias	 ERROR_INVALID_HANDLE		

XDUP . . . . . . . . . . . . . .  	Number	0045	
XDUP2  . . . . . . . . . . . . .  	Number	0046	

??0000 . . . . . . . . . . . . .  	L NEAR	001A	CODE
??0001 . . . . . . . . . . . . .  	L NEAR	0025	CODE
??0002 . . . . . . . . . . . . .  	L NEAR	0052	CODE
??0004 . . . . . . . . . . . . .  	L NEAR	008A	CODE
??0005 . . . . . . . . . . . . .  	L NEAR	00F5	CODE
??0006 . . . . . . . . . . . . .  	L NEAR	014E	CODE
??0007 . . . . . . . . . . . . .  	L NEAR	0158	CODE
??000B . . . . . . . . . . . . .  	L NEAR	0214	CODE
??000C . . . . . . . . . . . . .  	L NEAR	0213	CODE
??000D . . . . . . . . . . . . .  	L NEAR	0218	CODE


   1673 Source  Lines
   2077 Total   Lines
    583 Symbols

  19470 Bytes symbol space free

      0 Warning Errors
      0 Severe  Errors
