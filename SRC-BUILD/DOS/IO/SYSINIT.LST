Microsoft (R) Macro Assembler  Version 4.00                 3/28/20 21:19:37

BIOS SYSTEM INITIALIZATION                                  Page     1-1
                                                            

       1                                TITLE   BIOS SYSTEM INITIALIZATION 
       2                                 
       3 = 0000                         FALSE   EQU     0 
       4 = FFFF                         TRUE    EQU     NOT FALSE 
       5                                 
       6 =                              IBMVER     EQU     FALSE 
       7 =                              IBM        EQU     IBMVER 
       8 =                              IBMJAPVER  EQU     FALSE               
					 ; If TRUE set KANJI true also 
       9 =                              MSVER      EQU     TRUE  
      10 =                              ALTVECT    EQU     FALSE               
					 ; Switch to build ALTVECT version 
      11 =                              HIGHMEM    EQU     FALSE 
      12 =                              KANJI      EQU     FALSE 
      13                                 
      14                                        ELSE 
      15 =                              NOEXEC  EQU     FALSE 
      16                                        ENDIF 
      17                                 
      18                                ; Set to agree with those in DOST:MSHEA
					D.ASM, ALTVECT version only 
      19 = 0002                         MAJOR_VERSION   EQU      2 
      20 = 0000                         MINOR_VERSION   EQU     0B	;2.11 
      21                                 
      22 = 5000                         DOSSIZE EQU     5000H 
      23                                 
      24                                ; Internal DOS data returned by DOSINIT
					 
      25                                 
      26                                SYSINITVAR  STRUC 
      27 0000  ????????                 DPBHEAD     DD      ?                  
					 ; Pointer to head of DPB-FAT list 
      28 0004  ????????                 sft_addr    DD      ?                  
					 ; Pointer to first FCB table 
      29                                ; The following address points to the C
					LOCK device 
      30 0008  ????????                 BCLOCK      DD      ? 
      31                                ; The following address is used by DISK
					STATCHK it is always 
      32                                ; points to the console input device he
					ader 
      33 000C  ????????                 BCON        DD      ?                  
					 ; Console device entry points 
      34 0010  00                       NUMIO       DB      0                  
					 ; Number of disk tables 
      35 0011  0000                     MAXSEC      DW      0                  
					 ; Maximum allowed sector size 
      36 0013  ????????                 BUFFHEAD    DD      ?                  
					 ; Head of buffer queue 
      37 0017  ????????                 DEVHEAD     DD      ? 
      38 001B                           SYSINITVAR  ENDS 
      39                                 
      40                             C          INCLUDE DOSSYM.ASM 
      41                             C  include DOSMAC.ASM 
Microsoft (R) Macro Assembler  Version 4.00                 3/28/20 21:19:37

BIOS SYSTEM INITIALIZATION                                  Page     1-2
                                                            

      42                             C  ; 
      43                             C  ; Macro file for MSDOS. 
      44                             C  ; 
      45                             C   
      46                             C  SUBTTL BREAK a listing into pages and g
					ive new subtitles 
Microsoft (R) Macro Assembler  Version 4.00                 3/28/20 21:19:37

BIOS SYSTEM INITIALIZATION                                  Page     1-3
BREAK a listing into pages and give new subtitles           

      47                             C  PAGE 
      48                             C  BREAK MACRO subtitle 
      49                             C   SUBTTL subtitle 
      50                             C   PAGE 
      51                             C  ENDM 
      52                             C   
      53                             C  BREAK <I_NEED: declare a variable exter
					nal, if necessary, and allocate a size>
					 
Microsoft (R) Macro Assembler  Version 4.00                 3/28/20 21:19:37

BIOS SYSTEM INITIALIZATION                                  Page     1-4
I_NEED: declare a variable external, if necessary, and alloc

      54                             C   
      55                             C  ; 
      56                             C  ; declare a variable external and alloc
					ate a size 
      57                             C  ; 
      58                             C  I_NEED MACRO sym,len 
      59                             C   DATA SEGMENT BYTE PUBLIC 'DATA' 
      60                             C   IFIDN <len>,<WORD> 
      61                             C   EXTRN &sym:WORD 
      62                             C   ELSE 
      63                             C   IFIDN <len>,<DWORD> 
      64                             C   EXTRN &sym:DWORD 
      65                             C   ELSE 
      66                             C   EXTRN &sym:BYTE 
      67                             C   ENDIF 
      68                             C   ENDIF 
      69                             C   DATA ENDS 
      70                             C  ENDM 
      71                             C   
      72                             C  ; 
      73                             C  ; call a procedure that may be external
					. The call will be short. 
      74                             C  ; 
      75                             C  invoke MACRO name 
      76                             C  .xcref 
      77                             C   IF2 
      78                             C   IFNDEF name 
      79                             C   EXTRN name:NEAR 
      80                             C   ENDIF 
      81                             C   ENDIF 
      82                             C  .cref 
      83                             C   CALL name 
      84                             C  ENDM 
      85                             C   
Microsoft (R) Macro Assembler  Version 4.00                 3/28/20 21:19:37

BIOS SYSTEM INITIALIZATION                                  Page     1-5
I_NEED: declare a variable external, if necessary, and alloc

      86                             C  PAGE 
      87                             C  ; 
      88                             C  ; jump to a label that may be external.
					 The jump will be near. 
      89                             C  ; 
      90                             C  transfer MACRO name 
      91                             C  .xcref 
      92                             C   IF2 
      93                             C   IFNDEF name 
      94                             C   EXTRN name:NEAR 
      95                             C   ENDIF 
      96                             C   ENDIF 
      97                             C  .cref 
      98                             C   JUMP name 
      99                             C  ENDM 
     100                             C   
     101                             C  ; 
     102                             C  ; get a short address in a word 
     103                             C  ; 
     104                             C  short_addr MACRO name 
     105                             C   IFDIF <name>,<?> 
     106                             C  .xcref 
     107                             C   IF2 
     108                             C   IFNDEF name 
     109                             C   EXTRN name:NEAR 
     110                             C   ENDIF 
     111                             C   ENDIF 
     112                             C  .cref 
     113                             C   DW OFFSET DOSGROUP:name 
     114                             C   ELSE 
     115                             C   DW ? 
     116                             C   ENDIF 
     117                             C  ENDM 
     118                             C   
     119                             C  ; 
     120                             C  ; get a long address in a dword 
     121                             C  ; 
     122                             C  long_addr MACRO name 
     123                             C  .xcref 
     124                             C   IF2 
     125                             C   IFNDEF name 
     126                             C   EXTRN name:NEAR 
     127                             C   ENDIF 
     128                             C  .cref 
     129                             C   DD name 
     130                             C  ENDM 
     131                             C   
     132                             C  ; 
     133                             C  ; declare a PROC near or far but PUBLIC
					 nonetheless 
     134                             C  ; 
     135                             C  procedure MACRO name,distance 
     136                             C   PUBLIC name 
     137                             C  name PROC distance 
Microsoft (R) Macro Assembler  Version 4.00                 3/28/20 21:19:37

BIOS SYSTEM INITIALIZATION                                  Page     1-6
I_NEED: declare a variable external, if necessary, and alloc

     138                             C  ENDM 
     139                             C   
Microsoft (R) Macro Assembler  Version 4.00                 3/28/20 21:19:37

BIOS SYSTEM INITIALIZATION                                  Page     1-7
I_NEED: declare a variable external, if necessary, and alloc

     140                             C  PAGE 
     141                             C  ; 
     142                             C  ; define a data item to be public and o
					f an appropriate size/type 
     143                             C  ; 
     144                             C  I_AM MACRO name,size 
     145                             C   PUBLIC name 
     146                             C   
     147                             C   IFIDN <size>,<WORD> 
     148                             C  name DW ? 
     149                             C   ELSE 
     150                             C   IFIDN <size>,<DWORD> 
     151                             C  name DD ? 
     152                             C   ELSE 
     153                             C   IFIDN <size>,<BYTE> 
     154                             C  name DB ? 
     155                             C   ELSE 
     156                             C  name DB size DUP (?) 
     157                             C   ENDIF 
     158                             C   ENDIF 
     159                             C   ENDIF 
     160                             C  ENDM 
     161                             C   
Microsoft (R) Macro Assembler  Version 4.00                 3/28/20 21:19:37

BIOS SYSTEM INITIALIZATION                                  Page     1-8
I_NEED: declare a variable external, if necessary, and alloc

     162                             C  PAGE 
     163                             C  ; 
     164                             C  ; call the macro chain 
     165                             C  ; 
     166                             C  do_ext macro 
     167                             C  endm 
     168                             C   
Microsoft (R) Macro Assembler  Version 4.00                 3/28/20 21:19:37

BIOS SYSTEM INITIALIZATION                                  Page     1-9
I_NEED: declare a variable external, if necessary, and alloc

     169                             C  PAGE 
     170                             C   
     171                             C  ; 
     172                             C  ; define an entry in a procedure 
     173                             C  ; 
     174                             C  entry macro name 
     175                             C   PUBLIC name 
     176                             C  name: 
     177                             C  endm 
     178                             C   
     179                             C  BREAK <ERROR - print a message and then
					 jump to a label> 
Microsoft (R) Macro Assembler  Version 4.00                 3/28/20 21:19:37

BIOS SYSTEM INITIALIZATION                                  Page     1-10
ERROR - print a message and then jump to a label            

     180                             C   
     181                             C  error macro code 
     182                             C   local a 
     183                             C  .xcref 
     184                             C   MOV AL,code 
     185                             C   transfer SYS_RET_ERR 
     186                             C  .cref 
     187                             C  ENDM 
     188                             C   
     189                             C  BREAK <JUMP - real jump that links up s
					hortwise> 
Microsoft (R) Macro Assembler  Version 4.00                 3/28/20 21:19:37

BIOS SYSTEM INITIALIZATION                                  Page     1-11
JUMP - real jump that links up shortwise                    

     190                             C  ; 
     191                             C  ; given a label <lbl> either 2 byte jum
					p to another label <lbl>_J 
     192                             C  ; if it is near enough or 3 byte jump t
					o <lbl> 
     193                             C  ; 
     194                             C   
     195                             C  jump macro lbl 
     196                             C   local a 
     197                             C  .xcref 
     198                             C   a: 
     199                             C   ifndef lbl&_J ;; is this the first inv
					ocation 
     200                             C   JMP lbl 
     201                             C   ELSE 
     202                             C   IF lbl&_J GE $ 
     203                             C   JMP lbl 
     204                             C   ELSE 
     205                             C   IF ($-lbl&_J) GT 126 ;; is the jump to
					o far away? 
     206                             C   JMP lbl 
     207                             C   ELSE ;; do the short one... 
     208                             C   JMP lbl&_J 
     209                             C   ENDIF 
     210                             C   ENDIF 
     211                             C   ENDIF 
     212                             C   lbl&_j = a 
     213                             C  .cref 
     214                             C  endm 
     215                             C   
     216                             C  BREAK <RETURN - return from a function>
					 
Microsoft (R) Macro Assembler  Version 4.00                 3/28/20 21:19:37

BIOS SYSTEM INITIALIZATION                                  Page     1-12
RETURN - return from a function                             

     217                             C   
     218                             C  return macro 
     219                             C   local a 
     220                             C  .xcref 
     221                             C  a: 
     222                             C   RET 
     223                             C  ret_l = a 
     224                             C  .cref 
     225                             C  endm 
     226                             C   
     227                             C  BREAK <CONDRET - conditional return> 
Microsoft (R) Macro Assembler  Version 4.00                 3/28/20 21:19:37

BIOS SYSTEM INITIALIZATION                                  Page     1-13
CONDRET - conditional return                                

     228                             C   
     229                             C  makelab macro l,cc,ncc 
     230                             C   local a 
     231                             C   j&ncc a ;; j<NCC> a: 
     232                             C   return ;; return 
     233                             C   a: ;; a: 
     234                             C   ret_&cc = ret_l ;; define ret_<CC> to 
					be ret_l 
     235                             C  endm 
     236                             C   
     237                             C  condret macro cc,ncc 
     238                             C   local a,b 
     239                             C   ifdef ret_l ;; if ret_l is defined 
     240                             C   if (($ - ret_l) le 126) and ($ gt ret_
					l) 
     241                             C   ;; if ret_l is near enough then 
     242                             C   a: j&cc ret_l ;; a: j<CC> to ret_l 
     243                             C   ret_&cc = a ;; define ret_<CC> to be a
					: 
     244                             C   else 
     245                             C   makelab a,cc,ncc 
     246                             C   endif 
     247                             C   else 
     248                             C   ifdef ret_&cc ;; if ret_<CC> defined 
     249                             C   if (($ - ret_&cc) le 126) and ($ gt re
					t_&cc) 
     250                             C   ;; if ret_<CC> is near enough 
     251                             C   a: j&cc ret_&cc ;; a: j<CC> to ret_<CC
					> 
     252                             C   ret_&cc = a ;; define ret_<CC> to be a
					: 
     253                             C   else 
     254                             C   makelab a,cc,ncc 
     255                             C   endif 
     256                             C   else 
     257                             C   makelab a,cc,ncc 
     258                             C   endif 
     259                             C   endif 
     260                             C  endm 
     261                             C  ;condret macro cc,ncc 
     262                             C  ; local a,b 
     263                             C  ; ifdef ret_l ; if ret_l is defined 
     264                             C  ; if (($ - ret_l) le 126) and ($ gt ret
					_l) 
     265                             C  ; ; if ret_l is near enough then 
     266                             C  ; a: j&cc ret_l ; a: j<CC> to ret_l 
     267                             C  ; ret_&cc = a ; define ret_<CC> to be a
					: 
     268                             C  ; exitm 
     269                             C  ; endif 
     270                             C  ; endif 
     271                             C  ; ifdef ret_&cc ; if ret_<CC> defined 
     272                             C  ; if (($ - ret_&cc) le 126) and ($ gt r
					et_&cc) 
Microsoft (R) Macro Assembler  Version 4.00                 3/28/20 21:19:37

BIOS SYSTEM INITIALIZATION                                  Page     1-14
CONDRET - conditional return                                

     273                             C  ; ; if ret_<CC> is near enough 
     274                             C  ; a: j&cc ret_&cc ; a: j<CC> to ret_<CC
					> 
     275                             C  ; ret_&cc = a ; define ret_<CC> to be a
					: 
     276                             C  ; exitm 
     277                             C  ; endif 
     278                             C  ; endif 
     279                             C  ; j&ncc a ; j<NCC> a: 
     280                             C  ; return ; return 
     281                             C  ; a: ; a: 
     282                             C  ; ret_&cc = ret_l ; define ret_<CC> to 
					be ret_l 
     283                             C  ;endm 
     284                             C  ; 
     285                             C  BREAK <RETZ - return if zero, links up 
					shortwise if necessary> 
Microsoft (R) Macro Assembler  Version 4.00                 3/28/20 21:19:37

BIOS SYSTEM INITIALIZATION                                  Page     1-15
RETZ - return if zero, links up shortwise if necessary      

     286                             C   
     287                             C  retz macro 
     288                             C   condret z,nz 
     289                             C  endm 
     290                             C   
     291                             C  BREAK <RETNZ - return if not zero, link
					s up shortwise if necessary> 
Microsoft (R) Macro Assembler  Version 4.00                 3/28/20 21:19:37

BIOS SYSTEM INITIALIZATION                                  Page     1-16
RETNZ - return if not zero, links up shortwise if necessary 

     292                             C   
     293                             C  retnz macro 
     294                             C   condret nz,z 
     295                             C  endm 
     296                             C   
     297                             C  BREAK <RETC - return if carry set, link
					s up shortwise if necessary> 
Microsoft (R) Macro Assembler  Version 4.00                 3/28/20 21:19:37

BIOS SYSTEM INITIALIZATION                                  Page     1-17
RETC - return if carry set, links up shortwise if necessary 

     298                             C   
     299                             C  retc macro 
     300                             C   condret c,nc 
     301                             C  endm 
     302                             C   
     303                             C  BREAK <RETNC - return if not carry, lin
					ks up shortwise if necessary> 
Microsoft (R) Macro Assembler  Version 4.00                 3/28/20 21:19:37

BIOS SYSTEM INITIALIZATION                                  Page     1-18
RETNC - return if not carry, links up shortwise if necessary

     304                             C   
     305                             C  retnc macro 
     306                             C   condret nc,c 
     307                             C  endm 
     308                             C   
     309                             C  BREAK <CONTEXT - set the DOS context to
					 a particular register> 
Microsoft (R) Macro Assembler  Version 4.00                 3/28/20 21:19:37

BIOS SYSTEM INITIALIZATION                                  Page     1-19
CONTEXT - set the DOS context to a particular register      

     310                             C   
     311                             C  context macro r 
     312                             C   PUSH SS 
     313                             C   POP r 
     314                             C   ASSUME r:DOSGROUP 
     315                             C  endm 
     316                             C   
     317                             C  IF2 
     318                             C      %OUT    DOSSYM in Pass 2 
     319                             C  ENDIF 
     320                             C   
     321                             C  ENDIF 
     322                             C   
     323 = 0002                      C  DOS_MAJOR_VERSION   EQU      2 
     324 = 000B                      C  DOS_MINOR_VERSION   EQU     11 
     325                             C   
     326                             C  BREAK <Control character definitions> 
Microsoft (R) Macro Assembler  Version 4.00                 3/28/20 21:19:37

BIOS SYSTEM INITIALIZATION                                  Page     1-20
Control character definitions                               

     327                             C   
     328 = 007F                      C  c_DEL       EQU     7Fh         ;    AS
					CII rubout or delete previous char 
     329 = 0008                      C  c_BS        EQU     08h         ; ^H AS
					CII backspace 
     330 = 000D                      C  c_CR        EQU     0Dh         ; ^M AS
					CII carriage return 
     331 = 000A                      C  c_LF        EQU     0Ah         ; ^J AS
					CII linefeed 
     332 = 0017                      C  c_ETB       EQU     17h         ; ^W AS
					CII end of transmission 
     333 = 0015                      C  c_NAK       EQU     15h         ; ^U AS
					CII negative acknowledge 
     334 = 0003                      C  c_ETX       EQU     03h         ; ^C AS
					CII end of text 
     335 = 0009                      C  c_HT        EQU     09h         ; ^I AS
					CII tab 
     336                             C   
     337                             C  BREAK <BPB Definition> 
Microsoft (R) Macro Assembler  Version 4.00                 3/28/20 21:19:37

BIOS SYSTEM INITIALIZATION                                  Page     1-21
BPB Definition                                              

     338                             C   
     339                             C   
     340                             C  ;----+----+----+----+----+----+----+---
					-+----+----+----+----+----+----+----; 
     341                             C  ;                                      
					                                    ; 
     342                             C  ;            C  A  V  E  A  T     P  R 
					 O  G  R  A  M  M  E  R             ; 
     343                             C  ;                                      
					                                    ; 
     344                             C  ; Certain structures, constants and sys
					tem  calls  below  are  private  to ; 
     345                             C  ; the DOS  and  are  extremely  version
					-dependent.  They may change at any ; 
     346                             C  ; time at  the  implementors'  whim.   
					As  a  result,  they  must  not  be ; 
     347                             C  ; documented to  the  general  public. 
					  If  an  extreme case arises, they ; 
     348                             C  ; must be documented with this warning.
					                                    ; 
     349                             C  ;                                      
					                                    ; 
     350                             C  ; Those structures and constants that a
					re subject to  the  above  will  be ; 
     351                             C  ; marked and bracketed with the flag:  
					                                    ; 
     352                             C  ;                                      
					                                    ; 
     353                             C  ;            C  A  V  E  A  T     P  R 
					 O  G  R  A  M  M  E  R             ; 
     354                             C  ;                                      
					                                    ; 
     355                             C  ;----+----+----+----+----+----+----+---
					-+----+----+----+----+----+----+----; 
     356                             C   
     357                             C  BREAK  <Bios Parameter Block> 
Microsoft (R) Macro Assembler  Version 4.00                 3/28/20 21:19:37

BIOS SYSTEM INITIALIZATION                                  Page     1-22
Bios Parameter Block                                        

     358                             C  ;----+----+----+----+----+----+----+---
					-+----+----+----+----+----+----+----; 
     359                             C  ;            C  A  V  E  A  T     P  R 
					 O  G  R  A  M  M  E  R             ; 
     360                             C  ;                                      
					                                    ; 
     361                             C   
     362                             C  ; Bios Parameter Block definition 
     363                             C  ; This structure is used to build a ful
					l DPB 
     364                             C   
     365                             C  BPBLOCK STRUC 
     366 0000  ????                  C  BPSECSZ DW      ?       ; Size in bytes
					 of physical sector 
     367 0002  ??                    C  BPCLUS  DB      ?       ; Sectors/Alloc
					 unit 
     368 0003  ????                  C  BPRES   DW      ?       ; Number of res
					erved sectors 
     369 0005  ??                    C  BPFTCNT DB      ?       ; Number of FAT
					s 
     370 0006  ????                  C  BPDRCNT DW      ?       ; Number of dir
					ectory entries 
     371 0008  ????                  C  BPSCCNT DW      ?       ; Total number 
					of sectors 
     372 000A  ??                    C  BPMEDIA DB      ?       ; Media descrip
					tor byte 
     373 000B  ????                  C  BPFTSEC DW      ?       ; Number of sec
					tors taken up by one FAT 
     374 000D                        C  BPBLOCK ENDS 
     375                             C  ;                                      
					                                    ; 
     376                             C  ;            C  A  V  E  A  T     P  R 
					 O  G  R  A  M  M  E  R             ; 
     377                             C  ;----+----+----+----+----+----+----+---
					-+----+----+----+----+----+----+----; 
     378                             C   
     379                             C  BREAK <Disk I/O Buffer Header> 
Microsoft (R) Macro Assembler  Version 4.00                 3/28/20 21:19:37

BIOS SYSTEM INITIALIZATION                                  Page     1-23
Disk I/O Buffer Header                                      

     380                             C  ;----+----+----+----+----+----+----+---
					-+----+----+----+----+----+----+----; 
     381                             C  ;            C  A  V  E  A  T     P  R 
					 O  G  R  A  M  M  E  R             ; 
     382                             C  ;                                      
					                                    ; 
     383                             C   
     384                             C  ; Field definition for I/O buffer infor
					mation 
     385                             C   
     386                             C  BUFFINFO        STRUC 
     387 0000  ????????              C  NEXTBUF         DD      ?       ; Point
					er to next buffer in list 
     388                             C  ; The next two items are often refed as
					 a word 
     389 0004  ??                    C  BUFDRV          DB      ?       ; Logic
					al drive # assoc with buffer FF = free 
     390 0005  ??                    C  BUFDIRTY        DB      ?       ; Dirty
					 flag 
     391 0006  ??                    C  BUFPRI          DB      ?       ; Buffe
					r selection priority (see EQUs below) 
     392 0007  ??                    C  VISIT           DB      ?       ; Visit
					 flag for buffer pool scans 
     393 0008  ????                  C  BUFSECNO        DW      ?       ; Secto
					r number of buffer 
     394                             C  ; The next two items are often refed as
					 a word 
     395 000A  ??                    C  BUFWRTCNT       DB      ?       ; For F
					AT sectors, # times sector written out 
     396 000B  ??                    C  BUFWRTINC       DB      ?       ; "   "
					     "   , # sectors between each write
					 
     397 000C  ????????              C  BUFDRVDP        DD      ?       ; Point
					er to drive parameters 
     398 0010                        C  BUFFINFO        ENDS 
     399                             C   
     400 = 0010                      C  BUFINSIZ        EQU     SIZE BUFFINFO 
     401                             C                                  ; Size 
					of structure in bytes 
     402                             C   
     403 = 0000                      C  FREEPRI EQU     0 
     404 = 0002                      C  LBRPRI  EQU     2               ; Last 
					byte of buffer read 
     405 = 0004                      C  LBWPRI  EQU     4               ; Last 
					byte written 
     406 = 0006                      C  RPRI    EQU     6               ; Read 
					but not last byte 
     407 = 0008                      C  WPRI    EQU     8               ; Writt
					en but not last byte 
     408 = 000F                      C  DIRPRI  EQU     15              ; Direc
					tory Sector 
     409 = 001E                      C  FATPRI  EQU     30              ; FAT s
					ector 
     410                             C  ;                                      
Microsoft (R) Macro Assembler  Version 4.00                 3/28/20 21:19:37

BIOS SYSTEM INITIALIZATION                                  Page     1-24
Disk I/O Buffer Header                                      

					                                    ; 
     411                             C  ;            C  A  V  E  A  T     P  R 
					 O  G  R  A  M  M  E  R             ; 
     412                             C  ;----+----+----+----+----+----+----+---
					-+----+----+----+----+----+----+----; 
     413                             C   
     414                             C  BREAK <User stack inside of system call
					> 
Microsoft (R) Macro Assembler  Version 4.00                 3/28/20 21:19:37

BIOS SYSTEM INITIALIZATION                                  Page     1-25
User stack inside of system call                            

     415                             C  ; Location of user registers relative u
					ser stack pointer 
     416                             C   
     417                             C  user_environ    STRUC 
     418 0000  ????                  C  user_AX     DW      ? 
     419 0002  ????                  C  user_BX     DW      ? 
     420 0004  ????                  C  user_CX     DW      ? 
     421 0006  ????                  C  user_DX     DW      ? 
     422 0008  ????                  C  user_SI     DW      ? 
     423 000A  ????                  C  user_DI     DW      ? 
     424 000C  ????                  C  user_BP     DW      ? 
     425 000E  ????                  C  user_DS     DW      ? 
     426 0010  ????                  C  user_ES     DW      ? 
     427 0012  ????                  C  user_IP     DW      ? 
     428 0014  ????                  C  user_CS     DW      ? 
     429 0016  ????                  C  user_F      DW      ? 
     430 0018                        C  user_environ    ENDS 
     431                             C   
     432                             C  BREAK <interrupt definitions> 
Microsoft (R) Macro Assembler  Version 4.00                 3/28/20 21:19:37

BIOS SYSTEM INITIALIZATION                                  Page     1-26
interrupt definitions                                       

     433                             C   
     434 = 0020                      C  INTTAB          EQU     20H 
     435 = 0080                      C  INTBASE         EQU     4 * inttab 
     436 = 00C0                      C  ENTRYPOINT      EQU     INTBASE+40H 
     437                             C   
     438                             C          ENDIF 
     439                             C   
     440                             C  ; 
     441                             C  ; interrupt assignments 
     442                             C  ; 
     443                             C          IF      NOT ALTVECT 
     444 =                           C  int_abort           EQU     INTTAB     
					     ; abort process 
     445 = 0021                      C  int_command         EQU     int_abort+1
					     ; call MSDOS 
     446 = 0022                      C  int_terminate       EQU     int_abort+2
					     ; int to terminate address 
     447 = 0023                      C  int_ctrl_c          EQU     int_abort+3
					     ; ^c trapper 
     448 = 0024                      C  int_fatal_abort     EQU     int_abort+4
					     ; hard disk error 
     449 = 0025                      C  int_disk_read       EQU     int_abort+5
					     ; logical sector disk read 
     450 = 0026                      C  int_disk_write      EQU     int_abort+6
					     ; logical sector disk write 
     451 = 0027                      C  int_keep_process    EQU     int_abort+7
					     ; terminate program and stay 
     452                             C                                         
					     ; resident 
     453                             C  ;----+----+----+----+----+----+----+---
					-+----+----+----+----+----+----+----; 
     454                             C  ;            C  A  V  E  A  T     P  R 
					 O  G  R  A  M  M  E  R             ; 
     455                             C  ;                                      
					                                    ; 
     456 = 0028                      C  int_spooler         EQU     int_abort+8
					     ; spooler call 
     457 = 0029                      C  int_fastcon         EQU     int_abort+9
					     ; fast CON interrupt 
     458                             C  ;                                      
					                                    ; 
     459                             C  ;            C  A  V  E  A  T     P  R 
					 O  G  R  A  M  M  E  R             ; 
     460                             C  ;----+----+----+----+----+----+----+---
					-+----+----+----+----+----+----+----; 
     461                             C          ENDIF 
     462                             C   
     463 = 0080                      C  addr_int_abort          EQU    4 * int_
					abort 
     464 = 0084                      C  addr_int_command        EQU    4 * int_
					command 
     465 = 0088                      C  addr_int_terminate      EQU    4 * int_
					terminate 
     466 = 008C                      C  addr_int_ctrl_c         EQU    4 * int_
Microsoft (R) Macro Assembler  Version 4.00                 3/28/20 21:19:37

BIOS SYSTEM INITIALIZATION                                  Page     1-27
interrupt definitions                                       

					ctrl_c 
     467 = 0090                      C  addr_int_fatal_abort    EQU    4 * int_
					fatal_abort 
     468 = 0094                      C  addr_int_disk_read      EQU    4 * int_
					disk_read 
     469 = 0098                      C  addr_int_disk_write     EQU    4 * int_
					disk_write 
     470 = 009C                      C  addr_int_keep_process   EQU    4 * int_
					keep_process 
     471                             C  ;----+----+----+----+----+----+----+---
					-+----+----+----+----+----+----+----; 
     472                             C  ;            C  A  V  E  A  T     P  R 
					 O  G  R  A  M  M  E  R             ; 
     473                             C  ;                                      
					                                    ; 
     474 = 00A0                      C  addr_int_spooler        EQU    4 * int_
					spooler 
     475 = 00A4                      C  addr_int_fastcon        EQU    4 * int_
					fastcon 
     476                             C  ;                                      
					                                    ; 
     477                             C  ;            C  A  V  E  A  T     P  R 
					 O  G  R  A  M  M  E  R             ; 
     478                             C  ;----+----+----+----+----+----+----+---
					-+----+----+----+----+----+----+----; 
     479                             C   
     480                             C  BREAK <Disk map> 
Microsoft (R) Macro Assembler  Version 4.00                 3/28/20 21:19:37

BIOS SYSTEM INITIALIZATION                                  Page     1-28
Disk map                                                    

     481                             C  ;  MSDOS partitions the disk into 4 sec
					tions: 
     482                             C  ; 
     483                             C  ;  phys sector 0:   +------------------
					-+ 
     484                             C  ;       |           | boot/reserved    
					 | 
     485                             C  ;       |           +------------------
					-+ 
     486                             C  ;       |           |  File allocation 
					 | 
     487                             C  ;       v           |      table(s)    
					 | 
     488                             C  ;                   |  (multiple copies
					 | 
     489                             C  ;                   |     are kept)    
					 | 
     490                             C  ;                   +------------------
					-+ 
     491                             C  ;                   |     Directory    
					 | 
     492                             C  ;                   +------------------
					-+ 
     493                             C  ;                   |     File space   
					 | 
     494                             C  ;                   +------------------
					-+ 
     495                             C  ;                   |   Unaddressable  
					 | 
     496                             C  ;                   |  (to end of disk)
					 | 
     497                             C  ;                   +------------------
					-+ 
     498                             C  ; 
     499                             C  ; All partition boundaries are sector b
					oundaries.  The size of the FAT is 
     500                             C  ; adjusted to maximize the file space a
					ddressable. 
     501                             C   
     502                             C  BREAK <Directory entry> 
Microsoft (R) Macro Assembler  Version 4.00                 3/28/20 21:19:37

BIOS SYSTEM INITIALIZATION                                  Page     1-29
Directory entry                                             

     503                             C   
     504                             C  ; 
     505                             C  ;       +---------------------------+ 
     506                             C  ;       |  (12 BYTE) filename/ext   |  
					     0       0 
     507                             C  ;       +---------------------------+ 
     508                             C  ;       |     (BYTE) attributes     |  
					     11      B 
     509                             C  ;       +---------------------------+ 
     510                             C  ;       |    (10 BYTE) reserved     |  
					     12      C 
     511                             C  ;       +---------------------------+ 
     512                             C  ;       | (WORD) time of last write |  
					     22      16 
     513                             C  ;       +---------------------------+ 
     514                             C  ;       | (WORD) date of last write |  
					     24      18 
     515                             C  ;       +---------------------------+ 
     516                             C  ;       |   (WORD) First cluster    |  
					     26      1A 
     517                             C  ;       +---------------------------+ 
     518                             C  ;       |     (DWORD) file size     |  
					     28      1C 
     519                             C  ;       +---------------------------+ 
     520                             C  ; 
     521                             C  ;   First byte of filename  = E5 -> fre
					e directory entry 
     522                             C  ;                           = 00 -> end
					 of allocated directory 
     523                             C  ;   Time:   Bits 0-4=seconds/2, bits 5-
					10=minute, 11-15=hour 
     524                             C  ;   Date:   Bits 0-4=day, bits 5-8=mont
					h, bits 9-15=year-1980 
     525                             C  ; 
     526                             C  dir_entry   STRUC 
     527 0000  000B[                 C  dir_name    DB      11 DUP (?)         
					 ; file name 
     528            ??               C  
     529                         ]   C  
     530                             C  
     531 000B  ??                    C  dir_attr    DB      ?                  
					 ; attribute bits 
     532 000C  000A[                 C  dir_pad     DB      10 DUP (?)         
					 ; reserved for expansion 
     533            ??               C  
     534                         ]   C  
     535                             C  
     536 0016  ????                  C  dir_time    DW      ?                  
					 ; time of last write 
     537 0018  ????                  C  dir_date    DW      ?                  
					 ; date of last write 
     538 001A  ????                  C  dir_first   DW      ?                  
					 ; first allocation unit of file 
     539 001C  ????                  C  dir_size_l  DW      ?                  
Microsoft (R) Macro Assembler  Version 4.00                 3/28/20 21:19:37

BIOS SYSTEM INITIALIZATION                                  Page     1-30
Directory entry                                             

					 ; low 16 bits of file size 
     540 001E  ????                  C  dir_size_h  DW      ?                  
					 ; high 16 bits of file size 
     541 0020                        C  dir_entry   ENDS 
     542                             C   
     543 = 0001                      C  attr_read_only      EQU      1h 
     544 = 0002                      C  attr_hidden         EQU      2h 
     545 = 0004                      C  attr_system         EQU      4h 
     546 = 0008                      C  attr_volume_id      EQU      8h 
     547 = 0010                      C  attr_directory      EQU     10h 
     548 = 0020                      C  attr_archive        EQU     20h 
     549                             C   
     550 = 0016                      C  attr_all            EQU     attr_hidden
					+attr_system+attr_directory 
     551                             C                                         
					 ; OR of hard attributes for FINDENTRY 
     552                             C   
     553 = 0021                      C  attr_ignore         EQU     attr_read_o
					nly+attr_archive 
     554                             C                                         
					 ; ignore this(ese) attribute(s) during
					 
     555                             C                                         
					 ; search first/next 
     556                             C   
     557 = 0027                      C  attr_changeable     EQU     attr_read_o
					nly+attr_hidden+attr_system+attr_archiv
					e 
     558                             C                                         
					 ; changeable via CHMOD 
     559                             C   
     560                             C  BREAK <File allocation Table informatio
					n> 
Microsoft (R) Macro Assembler  Version 4.00                 3/28/20 21:19:37

BIOS SYSTEM INITIALIZATION                                  Page     1-31
File allocation Table information                           

     561                             C  ; 
     562                             C  ; The File Allocation Table uses a 12-b
					it entry for each allocation unit on 
     563                             C  ; the disk.  These entries are packed, 
					two for every three bytes.  The content
					s 
     564                             C  ; of entry number N is found by 1) mult
					iplying N by 1.5; 2) adding the result 
     565                             C  ; to the base address of the Allocation
					 Table; 3) fetching the 16-bit word 
     566                             C  ; at this address; 4) If N was odd (so 
					that N*1.5 was not an integer), shift 
     567                             C  ; the word right four bits; 5) mask to 
					12 bits (AND with 0FFF hex).  Entry 
     568                             C  ; number zero is used as an end-of-file
					 trap in the OS and is passed to the 
     569                             C  ; BIOS to help determine disk format.  
					Entry 1 is reserved for future use. 
     570                             C  ; The first available allocation unit i
					s assigned entry number two, and even 
     571                             C  ; though it is the first, is called clu
					ster 2.  Entries greater than 0FF8H 
     572                             C  ; are end of file marks; entries of zer
					o are unallocated.  Otherwise, the 
     573                             C  ; contents of a FAT entry is the number
					 of the next cluster in the file. 
     574                             C  ; 
     575                             C  ; Clusters with bad sectors are tagged 
					with FF7H.  Any non-zero number would 
     576                             C  ; do because these clusters show as all
					ocated, but are not part of any 
     577                             C  ; allocation chain and thus will never 
					be allocated to a file.  A particular 
     578                             C  ; number is selected so that disk check
					ing programs know what to do (ie.  a 
     579                             C  ; cluster with entry FF7H which is not 
					in a chain is not an error). 
     580                             C   
     581                             C  BREAK <DPB structure> 
Microsoft (R) Macro Assembler  Version 4.00                 3/28/20 21:19:37

BIOS SYSTEM INITIALIZATION                                  Page     1-32
DPB structure                                               

     582                             C  ;----+----+----+----+----+----+----+---
					-+----+----+----+----+----+----+----; 
     583                             C  ;            C  A  V  E  A  T     P  R 
					 O  G  R  A  M  M  E  R             ; 
     584                             C  ;                                      
					                                    ; 
     585                             C   
     586 = 0040                      C  DIRSTRLEN       EQU     64      ; Max l
					ength in bytes of directory strings 
     587                             C   
     588                             C  dpb     STRUC 
     589 0000  ??                    C  dpb_drive           DB      ?   ; Logic
					al drive # assoc with DPB (A=0,B=1,...)
					 
     590 0001  ??                    C  dpb_UNIT            DB      ?   ; Drive
					r unit number of DPB 
     591 0002  ????                  C  dpb_sector_size     DW      ?   ; Size 
					of physical sector in bytes 
     592 0004  ??                    C  dpb_cluster_mask    DB      ?   ; Secto
					rs/cluster - 1 
     593 0005  ??                    C  dpb_cluster_shift   DB      ?   ; Log2 
					of sectors/cluster 
     594 0006  ????                  C  dpb_first_FAT       DW      ?   ; Start
					ing record of FATs 
     595 0008  ??                    C  dpb_FAT_count       DB      ?   ; Numbe
					r of FATs for this drive 
     596 0009  ????                  C  dpb_root_entries    DW      ?   ; Numbe
					r of directory entries 
     597 000B  ????                  C  dpb_first_sector    DW      ?   ; First
					 sector of first cluster 
     598 000D  ????                  C  dpb_max_cluster     DW      ?   ; Numbe
					r of clusters on drive + 1 
     599 000F  ??                    C  dpb_FAT_size        DB      ?   ; Numbe
					r of records occupied by FAT 
     600 0010  ????                  C  dpb_dir_sector      DW      ?   ; Start
					ing record of directory 
     601 0012  ????????              C  dpb_driver_addr     DD      ?   ; Point
					er to driver 
     602 0016  ??                    C  dpb_media           DB      ?   ; Media
					 byte 
     603 0017  ??                    C  dpb_first_access    DB      ?   ; This 
					is initialized to -1 to force a media 
     604                             C                                  ; check
					 the first time this DPB is used 
     605 0018  ????????              C  dpb_next_dpb        DD      ?   ; Point
					er to next Drive parameter block 
     606 001C  ????                  C  dpb_current_dir     DW      ?   ; Clust
					er number of start of current directory
					 
     607                             C                                  ; 0 ind
					icates root, -1 indicates invalid (disk
					 
     608                             C                                  ; ?  ch
					anged) 
Microsoft (R) Macro Assembler  Version 4.00                 3/28/20 21:19:37

BIOS SYSTEM INITIALIZATION                                  Page     1-33
DPB structure                                               

     609 001E  0040[                 C  dpb_dir_text        DB      DIRSTRLEN D
					UP(?) 
     610            ??               C  
     611                         ]   C  
     612                             C  
     613                             C                                  ; ASCIZ
					 string of current directory 
     614 005E                        C  dpb     ENDS 
     615                             C   
     616 = 005E                      C  DPBSIZ  EQU     SIZE dpb        ; Size 
					of the structure in bytes 
     617                             C   
     618 = 000D                      C  DSKSIZ  =       dpb_max_cluster ; Size 
					of disk (temp used during init only) 
     619                             C  ;                                      
					                                    ; 
     620                             C  ;            C  A  V  E  A  T     P  R 
					 O  G  R  A  M  M  E  R             ; 
     621                             C  ;----+----+----+----+----+----+----+---
					-+----+----+----+----+----+----+----; 
     622                             C   
     623                             C  BREAK <File Control Block definition> 
Microsoft (R) Macro Assembler  Version 4.00                 3/28/20 21:19:37

BIOS SYSTEM INITIALIZATION                                  Page     1-34
File Control Block definition                               

     624                             C  ; 
     625                             C  ; Field definition for FCBs 
     626                             C  ; The FCB has the following structure: 
     627                             C  ; 
     628                             C  ;       +---------------------------+ 
     629                             C  ;       |   Drive indicator(byte)   | 
     630                             C  ;       +---------------------------+ 
     631                             C  ;       |    Filename (8 chars)     | 
     632                             C  ;       +---------------------------+ 
     633                             C  ;       |    Extension (3 chars)    | 
     634                             C  ;       +---------------------------+ 
     635                             C  ;       |   Current Extent(word)    | 
     636                             C  ;       +---------------------------+ 
     637                             C  ;       |    Record size (word)     | 
     638                             C  ;       +---------------------------+ 
     639                             C  ;       |    File Size (2 words)    | 
     640                             C  ;       +---------------------------+ 
     641                             C  ;       |       Date of write       | 
     642                             C  ;       +---------------------------+ 
     643                             C  ;       |       Time of write       | 
     644                             C  ;       +---------------------------+ 
     645                             C  ;----+----+----+----+----+----+----+---
					-+----+----+----+----+----+----+----; 
     646                             C  ;            C  A  V  E  A  T     P  R 
					 O  G  R  A  M  M  E  R             ; 
     647                             C  ;                                      
					                                    ; 
     648                             C  ;       | Flags:                    | 
     649                             C  ;       |  bit 7=0 file/1 device    | 
     650                             C  ;       |  bit 6=0 if dirty         | 
     651                             C  ;       |  bits 0-5 deviceid        | 
     652                             C  ;       +---------------------------+ 
     653                             C  ;       |   first cluster in file   | 
     654                             C  ;       +---------------------------+ 
     655                             C  ;       | position of last cluster  | 
     656                             C  ;       +---------------------------+ 
     657                             C  ;       |   last cluster accessed   |  
					 12 bit-+--- packed in 3 bytes 
     658                             C  ;       +---------------------------+  
					        | 
     659                             C  ;       |     parent directory      |  
					 <------+ 
     660                             C  ;       +---------------------------+ 
     661                             C  ;                                      
					                                    ; 
     662                             C  ;            C  A  V  E  A  T     P  R 
					 O  G  R  A  M  M  E  R             ; 
     663                             C  ;----+----+----+----+----+----+----+---
					-+----+----+----+----+----+----+----; 
     664                             C  ;       |    next record number     | 
     665                             C  ;       +---------------------------+ 
     666                             C  ;       |   random record number    | 
     667                             C  ;       +---------------------------+ 
     668                             C  ; 
Microsoft (R) Macro Assembler  Version 4.00                 3/28/20 21:19:37

BIOS SYSTEM INITIALIZATION                                  Page     1-35
File Control Block definition                               

     669                             C   
     670                             C  sys_fcb     STRUC 
     671 0000  ??                    C  fcb_drive   DB      ? 
     672 0001  0008[                 C  fcb_name    DB      8 DUP (?) 
     673            ??               C  
     674                         ]   C  
     675                             C  
     676 0009  0003[                 C  fcb_ext     DB      3 DUP (?) 
     677            ??               C  
     678                         ]   C  
     679                             C  
     680 000C  ????                  C  fcb_EXTENT  DW      ? 
     681 000E  ????                  C  fcb_RECSIZ  DW      ?       ; Size of r
					ecord (user settable) 
     682 0010  ????                  C  fcb_FILSIZ  DW      ?       ; Size of f
					ile in bytes; used with the following 
     683                             C                              ; word 
     684 0012  ????                  C  fcb_DRVBP   DW      ?       ; BP for SE
					ARCH FIRST and SEARCH NEXT 
     685 0014  ????                  C  fcb_FDATE   DW      ?       ; Date of l
					ast writing 
     686 0016  ????                  C  fcb_FTIME   DW      ?       ; Time of l
					ast writing 
     687                             C  ;----+----+----+----+----+----+----+---
					-+----+----+----+----+----+----+----; 
     688                             C  ;            C  A  V  E  A  T     P  R 
					 O  G  R  A  M  M  E  R             ; 
     689                             C  ;                                      
					                                    ; 
     690 0018  ??                    C  fcb_DEVID   DB      ?       ; Device ID
					 number, bits 0-5 if file. 
     691                             C                              ; bit 7=0 f
					or file, bit 7=1 for I/O device 
     692                             C                              ; If file, 
					bit 6=0 if dirty 
     693                             C                              ; If I/O de
					vice, bit 6=0 if EOF (input) 
     694                             C                              ;          
					     Bit 5=1 if Raw mode 
     695                             C                              ;          
					     Bit 0=1 if console input device 
     696                             C                              ;          
					     Bit 1=1 if console output device 
     697                             C                              ;          
					     Bit 2=1 if null device 
     698                             C                              ;          
					     Bit 3=1 if clock device 
     699 0019  ????                  C  fcb_FIRCLUS DW      ?       ; First clu
					ster of file 
     700 001B  ????                  C  fcb_CLUSPOS DW      ?       ; Position 
					of last cluster accessed 
     701 001D  ????                  C  fcb_LSTCLUS DW      ?       ; Last clus
					ter accessed and directory pack 2 12 
     702 001F  ??                    C              DB      ?       ; bit numbe
Microsoft (R) Macro Assembler  Version 4.00                 3/28/20 21:19:37

BIOS SYSTEM INITIALIZATION                                  Page     1-36
File Control Block definition                               

					rs into 24 bits... 
     703                             C  ;                                      
					                                    ; 
     704                             C  ;            C  A  V  E  A  T     P  R 
					 O  G  R  A  M  M  E  R             ; 
     705                             C  ;----+----+----+----+----+----+----+---
					-+----+----+----+----+----+----+----; 
     706 0020  ??                    C  fcb_NR      DB      ?       ; Next reco
					rd 
     707 0021  0004[                 C  fcb_RR      DB      4 DUP (?)          
					     ; Random record 
     708            ??               C  
     709                         ]   C  
     710                             C  
     711 0025                        C  sys_fcb     ENDS 
     712                             C   
     713 = 0010                      C  FILDIRENT       = fcb_FILSIZ           
					 ; Used only by SEARCH FIRST and SEARCH
					 
     714                             C                                         
					 ; NEXT 
     715                             C   
     716                             C  ;----+----+----+----+----+----+----+---
					-+----+----+----+----+----+----+----; 
     717                             C  ;            C  A  V  E  A  T     P  R 
					 O  G  R  A  M  M  E  R             ; 
     718                             C  ;                                      
					                                    ; 
     719 = 0040                      C  devid_file_clean        EQU     40h    
					 ; true if file and not written 
     720 = 003F                      C  devid_file_mask_drive   EQU     3Fh    
					 ; mask for drive number 
     721                             C   
     722 = 0080                      C  devid_device            EQU     80h    
					 ; true if a device 
     723 = 0040                      C  devid_device_EOF        EQU     40h    
					 ; true if end of file reached 
     724 = 0020                      C  devid_device_raw        EQU     20h    
					 ; true if in raw mode 
     725 = 0010                      C  devid_device_special    EQU     10h    
					 ; true if special device 
     726 = 0008                      C  devid_device_clock      EQU     08h    
					 ; true if clock device 
     727 = 0004                      C  devid_device_null       EQU     04h    
					 ; true if null device 
     728 = 0002                      C  devid_device_con_out    EQU     02h    
					 ; true if console output 
     729 = 0001                      C  devid_device_con_in     EQU     01h    
					 ; true if consle input 
     730                             C   
     731                             C  ; 
     732                             C  ; structure of devid field as returned 
					by IOCTL is: 
     733                             C  ; 
Microsoft (R) Macro Assembler  Version 4.00                 3/28/20 21:19:37

BIOS SYSTEM INITIALIZATION                                  Page     1-37
File Control Block definition                               

     734                             C  ;       BIT     7   6   5   4   3   2  
					 1   0 
     735                             C  ;             |---|---|---|---|---|---|
					---|---| 
     736                             C  ;             | I | E | R | S | I | I |
					 I | I | 
     737                             C  ;             | S | O | A | P | S | S |
					 S | S | 
     738                             C  ;             | D | F | W | E | C | N |
					 C | C | 
     739                             C  ;             | E |   |   | C | L | U |
					 O | I | 
     740                             C  ;             | V |   |   | L | K | L |
					 T | N | 
     741                             C  ;             |---|---|---|---|---|---|
					---|---| 
     742                             C  ;       ISDEV = 1 if this channel is a 
					device 
     743                             C  ;             = 0 if this channel is a 
					disk file 
     744                             C  ; 
     745                             C  ;       If ISDEV = 1 
     746                             C  ; 
     747                             C  ;             EOF = 0 if End Of File on
					 input 
     748                             C  ;             RAW = 1 if this device is
					 in Raw mode 
     749                             C  ;                 = 0 if this device is
					 cooked 
     750                             C  ;             ISCLK = 1 if this device 
					is the clock device 
     751                             C  ;             ISNUL = 1 if this device 
					is the null device 
     752                             C  ;             ISCOT = 1 if this device 
					is the console output 
     753                             C  ;             ISCIN = 1 if this device 
					is the console input 
     754                             C  ; 
     755                             C  ;       If ISDEV = 0 
     756                             C  ;             EOF = 0 if channel has be
					en written 
     757                             C  ;             Bits 0-5  are  the  block
					  device  number  for 
     758                             C  ;                 the channel (0 = A, 1
					 = B, ...) 
     759                             C  ; 
     760 = 0080                      C  devid_ISDEV     EQU     80h 
     761 = 0040                      C  devid_EOF       EQU     40h 
     762 = 0020                      C  devid_RAW       EQU     20h 
     763 = 0010                      C  devid_SPECIAL   EQU     10H 
     764 = 0008                      C  devid_ISCLK     EQU     08h 
     765 = 0004                      C  devid_ISNUL     EQU     04h 
     766 = 0002                      C  devid_ISCOT     EQU     02h 
     767 = 0001                      C  devid_ISCIN     EQU     01h 
Microsoft (R) Macro Assembler  Version 4.00                 3/28/20 21:19:37

BIOS SYSTEM INITIALIZATION                                  Page     1-38
File Control Block definition                               

     768                             C   
     769 = 001F                      C  devid_block_dev EQU     1Fh            
					 ; mask for block device number 
     770                             C   
     771                             C  ; 
     772                             C  ; find first/next buffer 
     773                             C  ; 
     774                             C  find_buf    STRUC 
     775 0000  ??                    C  find_buf_sattr      DB  ?           ; a
					ttribute of search 
     776 0001  ??                    C  find_buf_drive      DB  ?           ; d
					rive of search 
     777 0002  000B[                 C  find_buf_name       DB  11 DUP (?)  ; f
					ormatted name 
     778            ??               C  
     779                         ]   C  
     780                             C  
     781 000D  ????                  C  find_buf_LastEnt    DW  ?           ; L
					astEnt 
     782 000F  ????????              C  find_buf_ThisDPB    DD  ?           ; T
					his DPB 
     783 0013  ????                  C  find_buf_DirStart   DW  ?           ; D
					irStart 
     784                             C  ;                                      
					                                    ; 
     785                             C  ;            C  A  V  E  A  T     P  R 
					 O  G  R  A  M  M  E  R             ; 
     786                             C  ;----+----+----+----+----+----+----+---
					-+----+----+----+----+----+----+----; 
     787                             C   
     788 0015  ??                    C  find_buf_attr       DB  ?           ; a
					ttribute found 
     789 0016  ????                  C  find_buf_time       DW  ?           ; t
					ime 
     790 0018  ????                  C  find_buf_date       DW  ?           ; d
					ate 
     791 001A  ????                  C  find_buf_size_l     DW  ?           ; l
					ow(size) 
     792 001C  ????                  C  find_buf_size_h     DW  ?           ; h
					igh(size) 
     793 001E  000D[                 C  find_buf_pname      DB  13 DUP (?)  ; p
					acked name 
     794            ??               C  
     795                         ]   C  
     796                             C  
     797 002B                        C  find_buf    ENDS 
     798                             C   
     799                             C  BREAK <Process data block> 
Microsoft (R) Macro Assembler  Version 4.00                 3/28/20 21:19:37

BIOS SYSTEM INITIALIZATION                                  Page     1-39
Process data block                                          

     800                             C  ; 
     801                             C  ; Process data block (otherwise known a
					s program header) 
     802                             C  ; 
     803                             C   
     804 = 0014                      C  FilPerProc          EQU     20 
     805                             C   
     806                             C  Process_data_block  STRUC 
     807 0000  ????                  C  PDB_Exit_Call       DW      ?          
					 ; INT int_abort system terminate 
     808 0002  ????                  C  PDB_block_len       DW      ?          
					 ; size of execution block 
     809 0004  ??                    C                      DB      ? 
     810 0005  0005[                 C  PDB_CPM_Call        DB  5 DUP (?)      
					 ; ancient call to system 
     811            ??               C  
     812                         ]   C  
     813                             C  
     814 000A  ????????              C  PDB_Exit            DD      ?          
					 ; pointer to exit routine 
     815 000E  ????????              C  PDB_Ctrl_C          DD      ?          
					 ; pointer to ^C routine 
     816 0012  ????????              C  PDB_Fatal_abort     DD      ?          
					 ; pointer to fatal error 
     817                             C  ;----+----+----+----+----+----+----+---
					-+----+----+----+----+----+----+----; 
     818                             C  ;            C  A  V  E  A  T     P  R 
					 O  G  R  A  M  M  E  R             ; 
     819                             C  ;                                      
					                                    ; 
     820 0016  ????                  C  PDB_Parent_PID      DW      ?          
					 ; PID of parent (terminate PID) 
     821 0018  0014[                 C  PDB_JFN_Table       DB  FilPerProc DUP 
					(?) 
     822            ??               C  
     823                         ]   C  
     824                             C  
     825                             C                                         
					 ; indices into system table 
     826                             C  ;                                      
					                                    ; 
     827                             C  ;            C  A  V  E  A  T     P  R 
					 O  G  R  A  M  M  E  R             ; 
     828                             C  ;----+----+----+----+----+----+----+---
					-+----+----+----+----+----+----+----; 
     829 002C  ????                  C  PDB_environ         DW      ?          
					 ; seg addr of environment 
     830                             C  ;----+----+----+----+----+----+----+---
					-+----+----+----+----+----+----+----; 
     831                             C  ;            C  A  V  E  A  T     P  R 
					 O  G  R  A  M  M  E  R             ; 
     832                             C  ;                                      
					                                    ; 
     833 002E  ????????              C  PDB_User_stack      DD      ?          
Microsoft (R) Macro Assembler  Version 4.00                 3/28/20 21:19:37

BIOS SYSTEM INITIALIZATION                                  Page     1-40
Process data block                                          

					 ; stack of self during system calls 
     834 0032  001E[                 C  PDB_PAD1            DB      1Eh DUP (?)
					 
     835            ??               C  
     836                         ]   C  
     837                             C  
     838                             C  ;                                      
					                                    ; 
     839                             C  ;            C  A  V  E  A  T     P  R 
					 O  G  R  A  M  M  E  R             ; 
     840                             C  ;----+----+----+----+----+----+----+---
					-+----+----+----+----+----+----+----; 
     841 0050  0005[                 C  PDB_Call_system     DB      5 DUP (?)  
					 ; portable method of system call 
     842            ??               C  
     843                         ]   C  
     844                             C  
     845                             C  ;----+----+----+----+----+----+----+---
					-+----+----+----+----+----+----+----; 
     846                             C  ;            C  A  V  E  A  T     P  R 
					 O  G  R  A  M  M  E  R             ; 
     847                             C  ;                                      
					                                    ; 
     848 0055  0006[                 C  PDB_PAD2            DB      6h DUP (?) 
					 ; 
     849            ??               C  
     850                         ]   C  
     851                             C  
     852                             C  ;                                      
					                                    ; 
     853                             C  ;            C  A  V  E  A  T     P  R 
					 O  G  R  A  M  M  E  R             ; 
     854                             C  ;----+----+----+----+----+----+----+---
					-+----+----+----+----+----+----+----; 
     855 005B                        C  Process_data_block  ENDS 
     856                             C   
     857                             C  BREAK <EXEC and EXE file structures> 
Microsoft (R) Macro Assembler  Version 4.00                 3/28/20 21:19:37

BIOS SYSTEM INITIALIZATION                                  Page     1-41
EXEC and EXE file structures                                

     858                             C  ; 
     859                             C  ; EXEC arg block - load/go program 
     860                             C  ; 
     861                             C   
     862                             C  ; 
     863                             C  ; The following get used as arguments t
					o the EXEC system call.  They indicate 
     864                             C  ; whether or not the program is execute
					d or whether or not a program header 
     865                             C  ; gets created. 
     866                             C  ; 
     867 = 0001                      C  exec_func_no_execute    EQU 1          
					 ; no execute bit 
     868 = 0002                      C  exec_func_overlay       EQU 2          
					 ; overlay bit 
     869                             C   
     870                             C  Exec0           STRUC 
     871 0000  ????                  C  Exec0_environ   DW      ?              
					 ; seg addr of environment 
     872 0002  ????????              C  Exec0_com_line  DD      ?              
					 ; pointer to asciz command line 
     873 0006  ????????              C  Exec0_5C_FCB    DD      ?              
					 ; default fcb at 5C 
     874 000A  ????????              C  Exec0_6C_FCB    DD      ?              
					 ; default fcb at 6C 
     875 000E                        C  Exec0           ENDS 
     876                             C   
     877                             C  Exec1           STRUC 
     878 0000  ????                  C  Exec1_environ   DW      ?              
					 ; seg addr of environment 
     879 0002  ????????              C  Exec1_com_line  DD      ?              
					 ; pointer to asciz command line 
     880 0006  ????????              C  Exec1_5C_FCB    DD      ?              
					 ; default fcb at 5C 
     881 000A  ????????              C  Exec1_6C_FCB    DD      ?              
					 ; default fcb at 6C 
     882 000E  ????                  C  Exec1_SP        DW      ?              
					 ; stack pointer of program 
     883 0010  ????                  C  Exec1_SS        DW      ?              
					 ; stack seg register of program 
     884 0012  ????                  C  Exec1_IP        DW      ?              
					 ; entry point IP 
     885 0014  ????                  C  Exec1_CS        DW      ?              
					 ; entry point CS 
     886 0016                        C  Exec1           ENDS 
     887                             C   
     888                             C  Exec3           STRUC 
     889 0000  ????                  C  Exec3_load_addr DW      ?              
					 ; seg address of load point 
     890 0002  ????                  C  Exec3_reloc_fac DW      ?              
					 ; relocation factor 
     891 0004                        C  Exec3           ENDS 
     892                             C   
     893                             C  ; 
Microsoft (R) Macro Assembler  Version 4.00                 3/28/20 21:19:37

BIOS SYSTEM INITIALIZATION                                  Page     1-42
EXEC and EXE file structures                                

     894                             C  ; Exit codes in upper byte 
     895                             C  ; 
     896 = 0000                      C  Exit_terminate      EQU     0 
     897 = 0000                      C  Exit_abort          EQU     0 
     898 = 0001                      C  Exit_Ctrl_C         EQU     1 
     899 = 0002                      C  Exit_Hard_Error     EQU     2 
     900 = 0003                      C  Exit_Keep_process   EQU     3 
     901                             C   
     902                             C  ; 
     903                             C  ; EXE file header 
     904                             C  ; 
     905                             C   
     906                             C  EXE_file    STRUC 
     907 0000  ????                  C  exe_signature   DW  ?                  
					 ; must contain 4D5A  (yay zibo!) 
     908 0002  ????                  C  exe_len_mod_512 DW  ?                  
					 ; low 9 bits of length 
     909 0004  ????                  C  exe_pages       DW  ?                  
					 ; number of 512b pages in file 
     910 0006  ????                  C  exe_rle_count   DW  ?                  
					 ; count of reloc entries 
     911 0008  ????                  C  exe_par_dir     DW  ?                  
					 ; number of paragraphs before image 
     912 000A  ????                  C  exe_min_BSS     DW  ?                  
					 ; minimum number of para of BSS 
     913 000C  ????                  C  exe_max_BSS     DW  ?                  
					 ; max number of para of BSS 
     914 000E  ????                  C  exe_SS          DW  ?                  
					 ; stack of image 
     915 0010  ????                  C  exe_SP          DW  ?                  
					 ; SP of image 
     916 0012  ????                  C  exe_chksum      DW  ?                  
					 ; checksum  of file (ignored) 
     917 0014  ????                  C  exe_IP          DW  ?                  
					 ; IP of entry 
     918 0016  ????                  C  exe_CS          DW  ?                  
					 ; CS of entry 
     919 0018  ????                  C  exe_rle_table   DW  ?                  
					 ; byte offset of reloc table 
     920 001A  ????                  C  exe_iov         DW  ?                  
					 ; overlay number (0 for root) 
     921 001C  ????????              C  exe_sym_tab     DD  ?                  
					 ; offset of symbol table in file 
     922 0020                        C  EXE_file    ENDS 
     923                             C   
     924 = 5A4D                      C  exe_valid_signature     EQU 5A4Dh 
     925 = 4D5A                      C  exe_valid_old_signature EQU 4D5Ah 
     926                             C   
     927                             C  symbol_entry    STRUC 
     928 0000  ????????              C  sym_value       DD  ? 
     929 0004  ????                  C  sym_type        DW  ? 
     930 0006  ??                    C  sym_len         DB  ? 
     931 0007  00FF[                 C  sym_name        DB  255 dup (?) 
     932            ??               C  
Microsoft (R) Macro Assembler  Version 4.00                 3/28/20 21:19:37

BIOS SYSTEM INITIALIZATION                                  Page     1-43
EXEC and EXE file structures                                

     933                         ]   C  
     934                             C  
     935 0106                        C  symbol_entry    ENDS 
     936                             C   
     937                             C  BREAK <Internal system file table forma
					t> 
Microsoft (R) Macro Assembler  Version 4.00                 3/28/20 21:19:37

BIOS SYSTEM INITIALIZATION                                  Page     1-44
Internal system file table format                           

     938                             C  ;----+----+----+----+----+----+----+---
					-+----+----+----+----+----+----+----; 
     939                             C  ;            C  A  V  E  A  T     P  R 
					 O  G  R  A  M  M  E  R             ; 
     940                             C  ;                                      
					                                    ; 
     941                             C  ; 
     942                             C  ; system file table 
     943                             C  ; 
     944                             C   
     945                             C  sft             STRUC 
     946 0000  ????????              C  sft_link        DD      ? 
     947 0004  ????                  C  sft_count       DW      ?              
					 ; number of entries 
     948 0006  ????                  C  sft_table       DW      ?              
					 ; beginning of array of the following 
     949 0008                        C  sft             ENDS 
     950                             C   
     951                             C  ; 
     952                             C  ; system file table entry 
     953                             C  ; 
     954                             C   
     955                             C  sf_entry        STRUC 
     956 0000  ??                    C  sf_ref_count    DB      ?              
					 ; number of processes sharing fcb 
     957 0001  ??                    C  sf_mode         DB      ?              
					 ; mode of access 
     958 0002  ??                    C  sf_attr         DB      ?              
					 ; attribute of file 
     959 0003  0025[                 C  sf_fcb          DB      (SIZE sys_fcb) 
					DUP (?) 
     960            ??               C  
     961                         ]   C  
     962                             C  
     963                             C                                         
					 ; actual FCB 
     964 0028                        C  sf_entry        ENDS 
     965                             C   
     966 = 0005                      C  sf_default_number   EQU     5h 
     967                             C  ;                                      
					                                    ; 
     968                             C  ;            C  A  V  E  A  T     P  R 
					 O  G  R  A  M  M  E  R             ; 
     969                             C  ;----+----+----+----+----+----+----+---
					-+----+----+----+----+----+----+----; 
     970                             C   
     971                             C  BREAK <Memory arena structure> 
Microsoft (R) Macro Assembler  Version 4.00                 3/28/20 21:19:37

BIOS SYSTEM INITIALIZATION                                  Page     1-45
Memory arena structure                                      

     972                             C  ;----+----+----+----+----+----+----+---
					-+----+----+----+----+----+----+----; 
     973                             C  ;            C  A  V  E  A  T     P  R 
					 O  G  R  A  M  M  E  R             ; 
     974                             C  ;                                      
					                                    ; 
     975                             C  ; 
     976                             C  ; arena item 
     977                             C  ; 
     978                             C  arena   STRUC 
     979 0000  ??                    C  arena_signature     DB  ?              
					 ; 4D for valid item, 5A for last item 
     980 0001  ????                  C  arena_owner         DW  ?              
					 ; owner of arena item 
     981 0003  ????                  C  arena_size          DW  ?              
					 ; size in paragraphs of item 
     982 0005                        C  arena   ENDS 
     983                             C   
     984                             C  ; 
     985                             C  ; Current structure of the data returne
					d by the international call 
     986                             C  ; 
     987                             C   
     988                             C  internat_block STRUC 
     989 0000  ????                  C  Date_tim_format DW      ?           ; 0
					-USA, 1-EUR, 2-JAP 
     990 0002  ??                    C  Currency_sym    DB      ?           ; C
					urrency Symbol 5 bytes 
     991 0003  ??                    C                  DB      ? 
     992 0004  ??                    C                  DB      ? 
     993 0005  ??                    C                  DB      ? 
     994 0006  ??                    C                  DB      ? 
     995 0007  ??                    C  Thous_sep       DB      ?           ; T
					housands separator 2 bytes 
     996 0008  ??                    C                  DB      ? 
     997 0009  ??                    C  Decimal_sep     DB      ?           ; D
					ecimal separator 2 bytes 
     998 000A  ??                    C                  DB      ? 
     999 000B  ??                    C  Date_sep        DB      ?           ; D
					ate separator 2 bytes 
    1000 000C  ??                    C                  DB      ? 
    1001 000D  ??                    C  Time_sep        DB      ?           ; D
					ecimal separator 2 bytes 
    1002 000E  ??                    C                  DB      ? 
    1003 000F  ??                    C  Bit_feild       DB      ?           ; B
					it values 
    1004                             C                                      ;  
					 Bit 0 = 0 if currency symbol first 
    1005                             C                                      ;  
					       = 1 if currency symbol last 
    1006                             C                                      ;  
					 Bit 1 = 0 if No space after currency s
					ymbol 
    1007                             C                                      ;  
Microsoft (R) Macro Assembler  Version 4.00                 3/28/20 21:19:37

BIOS SYSTEM INITIALIZATION                                  Page     1-46
Memory arena structure                                      

					       = 1 if space after currency symb
					ol 
    1008 0010  ??                    C  Currency_cents  DB      ?           ; N
					umber of places after currency dec poin
					t 
    1009 0011  ??                    C  Time_24         DB      ?           ; 1
					 if 24 hour time, 0 if 12 hour time 
    1010 0012  ????                  C  Map_call        DW      ?           ; A
					ddress of case mapping call (DWORD) 
    1011 0014  ????                  C                  DW      ?           ; T
					HIS IS TWO WORDS SO IT CAN BE INITIALIZ
					ED 
    1012                             C                                      ;  
					in pieces. 
    1013 0016  ??                    C  Data_sep        DB      ?           ; D
					ata list separator character 
    1014 0017  ??                    C                  DB      ? 
    1015 0018                        C  internat_block ENDS 
    1016                             C   
    1017                             C  ; 
    1018                             C  ; Max size of the block returned by the
					 INTERNATIONAL call 
    1019                             C  ; 
    1020 = 0020                      C  internat_block_max      EQU     32 
    1021                             C   
    1022                             C  ; 
    1023                             C  ; CAUTION: The routines in ALLOC.ASM re
					ly on the fact that arena_signature 
    1024                             C  ; and arena_owner_system are all equal 
					to zero and are contained in DI.  Chang
					e 
    1025                             C  ; them and change ALLOC.ASM. 
    1026                             C   
    1027 = 0000                      C  arena_owner_system  EQU 0              
					 ; free block indication 
    1028                             C   
    1029 = 004D                      C  arena_signature_normal  EQU 4Dh        
					 ; valid signature, not end of arena 
    1030 = 005A                      C  arena_signature_end     EQU 5Ah        
					 ; valid signature, last block in arena
					 
    1031                             C  ;                                      
					                                    ; 
    1032                             C  ;            C  A  V  E  A  T     P  R 
					 O  G  R  A  M  M  E  R             ; 
    1033                             C  ;----+----+----+----+----+----+----+---
					-+----+----+----+----+----+----+----; 
    1034                             C   
    1035                             C  BREAK <Machine instruction definitions>
					 
Microsoft (R) Macro Assembler  Version 4.00                 3/28/20 21:19:37

BIOS SYSTEM INITIALIZATION                                  Page     1-47
Machine instruction definitions                             

    1036                             C   
    1037 = 00CD                      C  mi_INT          EQU     0CDh 
    1038 = 00EA                      C  mi_Long_JMP     EQU     0EAh 
    1039 = 009A                      C  mi_Long_CALL    EQU     09Ah 
    1040 = 00CB                      C  mi_Long_RET     EQU     0CBh 
    1041                             C   
    1042                             C  BREAK <Standard I/O assignments> 
Microsoft (R) Macro Assembler  Version 4.00                 3/28/20 21:19:37

BIOS SYSTEM INITIALIZATION                                  Page     1-48
Standard I/O assignments                                    

    1043                             C   
    1044 = 0000                      C  stdin       EQU     0 
    1045 = 0001                      C  stdout      EQU     1 
    1046 = 0002                      C  stderr      EQU     2 
    1047 = 0003                      C  stdaux      EQU     3 
    1048 = 0004                      C  stdprn      EQU     4 
    1049                             C   
    1050                             C  BREAK <Xenix subfunction assignments> 
Microsoft (R) Macro Assembler  Version 4.00                 3/28/20 21:19:37

BIOS SYSTEM INITIALIZATION                                  Page     1-49
Xenix subfunction assignments                               

    1051                             C   
    1052 = 0000                      C  open_for_read   EQU 0 
    1053 = 0001                      C  open_for_write  EQU 1 
    1054 = 0002                      C  open_for_both   EQU 2 
    1055                             C   
    1056                             C  BREAK <Xenix error codes> 
Microsoft (R) Macro Assembler  Version 4.00                 3/28/20 21:19:37

BIOS SYSTEM INITIALIZATION                                  Page     1-50
Xenix error codes                                           

    1057                             C   
    1058                             C  ; 
    1059                             C  ; XENIX calls all return error codes th
					rough AX.  If an error occurred then 
    1060                             C  ; the carry bit will be set and the err
					or code is in AX.  If no error occurred
					 
    1061                             C  ; then the carry bit is reset and AX co
					ntains returned info. 
    1062                             C  ; 
    1063                             C   
    1064 =                           C  no_error_occurred               EQU    
					 0                                     
					                         ? 
    1065                             C   
    1066 = 0001                      C  error_invalid_function          EQU    
					 1 
    1067 = 0002                      C  error_file_not_found            EQU    
					 2 
    1068 = 0003                      C  error_path_not_found            EQU    
					 3 
    1069 = 0004                      C  error_too_many_open_files       EQU    
					 4 
    1070 = 0005                      C  error_access_denied             EQU    
					 5 
    1071 = 0006                      C  error_invalid_handle            EQU    
					 6 
    1072 = 0007                      C  error_arena_trashed             EQU    
					 7 
    1073 = 0008                      C  error_not_enough_memory         EQU    
					 8 
    1074 = 0009                      C  error_invalid_block             EQU    
					 9 
    1075 = 000A                      C  error_bad_environment           EQU    
					 10 
    1076 = 000B                      C  error_bad_format                EQU    
					 11 
    1077 = 000C                      C  error_invalid_access            EQU    
					 12 
    1078 = 000D                      C  error_invalid_data              EQU    
					 13 
    1079                             C  ;**** unused                    EQU    
					 14 
    1080 = 000F                      C  error_invalid_drive             EQU    
					 15 
    1081 = 0010                      C  error_current_directory         EQU    
					 16 
    1082 = 0011                      C  error_not_same_device           EQU    
					 17 
    1083 = 0012                      C  error_no_more_files             EQU    
					 18 
    1084                             C   
    1085 =                           C  country_not_found               EQU    
					 error_file_not_found 
Microsoft (R) Macro Assembler  Version 4.00                 3/28/20 21:19:37

BIOS SYSTEM INITIALIZATION                                  Page     1-51
Xenix error codes                                           

    1086 =                           C  alloc_not_enough_memory         EQU    
					 error_not_enough_memory 
    1087 =                           C  alloc_arena_trashed             EQU    
					 error_arena_trashed 
    1088                             C   
    1089 =                           C  close_invalid_handle            EQU    
					 error_invalid_handle 
    1090 =                           C  close_invalid_function          EQU    
					 error_invalid_function 
    1091                             C   
    1092 =                           C  chdir_path_not_found            EQU    
					 error_path_not_found 
    1093                             C   
    1094 =                           C  chmod_path_not_found            EQU    
					 error_path_not_found 
    1095 =                           C  chmod_access_denied             EQU    
					 error_access_denied 
    1096 =                           C  chmod_invalid_function          EQU    
					 error_invalid_function 
    1097                             C   
    1098 =                           C  creat_access_denied             EQU    
					 error_access_denied 
    1099 =                           C  creat_path_not_found            EQU    
					 error_path_not_found 
    1100 =                           C  creat_too_many_open_files       EQU    
					 error_too_many_open_files 
    1101                             C   
    1102 =                           C  curdir_invalid_drive            EQU    
					 error_invalid_drive 
    1103                             C   
    1104 =                           C  dealloc_invalid_block           EQU    
					 error_invalid_block 
    1105 =                           C  dealloc_arena_trashed           EQU    
					 error_arena_trashed 
    1106                             C   
    1107 =                           C  dup_invalid_handle              EQU    
					 error_invalid_handle 
    1108 =                           C  dup_too_many_open_files         EQU    
					 error_too_many_open_files 
    1109                             C   
    1110 =                           C  dup2_invalid_handle             EQU    
					 error_invalid_handle 
    1111                             C   
    1112 =                           C  exec_invalid_function           EQU    
					 error_invalid_function 
    1113 =                           C  exec_bad_environment            EQU    
					 error_bad_environment 
    1114 =                           C  exec_bad_format                 EQU    
					 error_bad_format 
    1115 =                           C  exec_not_enough_memory          EQU    
					 error_not_enough_memory 
    1116 =                           C  exec_file_not_found             EQU    
					 error_file_not_found 
    1117                             C   
Microsoft (R) Macro Assembler  Version 4.00                 3/28/20 21:19:37

BIOS SYSTEM INITIALIZATION                                  Page     1-52
Xenix error codes                                           

    1118 =                           C  filetimes_invalid_function      EQU    
					 error_invalid_function 
    1119 =                           C  filetimes_invalid_handle        EQU    
					 error_invalid_handle 
    1120                             C   
    1121 =                           C  findfirst_file_not_found        EQU    
					 error_file_not_found 
    1122 =                           C  findfirst_no_more_files         EQU    
					 error_no_more_files 
    1123 =                           C  findnext_no_more_files          EQU    
					 error_no_more_files 
    1124                             C   
    1125 =                           C  international_invalid_function  EQU    
					 error_invalid_function 
    1126                             C   
    1127 =                           C  ioctl_invalid_handle            EQU    
					 error_invalid_handle 
    1128 =                           C  ioctl_invalid_function          EQU    
					 error_invalid_function 
    1129 =                           C  ioctl_invalid_data              EQU    
					 error_invalid_data 
    1130                             C   
    1131 =                           C  lseek_invalid_handle            EQU    
					 error_invalid_handle 
    1132 =                           C  lseek_invalid_function          EQU    
					 error_invalid_function 
    1133                             C   
    1134 =                           C  mkdir_path_not_found            EQU    
					 error_path_not_found 
    1135 =                           C  mkdir_access_denied             EQU    
					 error_access_denied 
    1136                             C   
    1137 =                           C  open_invalid_access             EQU    
					 error_invalid_access 
    1138 =                           C  open_file_not_found             EQU    
					 error_file_not_found 
    1139 =                           C  open_access_denied              EQU    
					 error_access_denied 
    1140 =                           C  open_too_many_open_files        EQU    
					 error_too_many_open_files 
    1141                             C   
    1142 =                           C  read_invalid_handle             EQU    
					 error_invalid_handle 
    1143 =                           C  read_access_denied              EQU    
					 error_access_denied 
    1144                             C   
    1145 =                           C  rename_file_not_found           EQU    
					 error_file_not_found 
    1146 =                           C  rename_not_same_device          EQU    
					 error_not_same_device 
    1147 =                           C  rename_access_denied            EQU    
					 error_access_denied 
    1148                             C   
    1149 =                           C  rmdir_path_not_found            EQU    
Microsoft (R) Macro Assembler  Version 4.00                 3/28/20 21:19:37

BIOS SYSTEM INITIALIZATION                                  Page     1-53
Xenix error codes                                           

					 error_path_not_found 
    1150 =                           C  rmdir_access_denied             EQU    
					 error_access_denied 
    1151 =                           C  rmdir_current_directory         EQU    
					 error_current_directory 
    1152                             C   
    1153 =                           C  setblock_invalid_block          EQU    
					 error_invalid_block 
    1154 =                           C  setblock_arena_trashed          EQU    
					 error_arena_trashed 
    1155 =                           C  setblock_not_enough_memory      EQU    
					 error_not_enough_memory 
    1156 =                           C  setblock_invalid_function       EQU    
					 error_invalid_function 
    1157                             C   
    1158 =                           C  unlink_file_not_found           EQU    
					 error_file_not_found 
    1159 =                           C  unlink_access_denied            EQU    
					 error_access_denied 
    1160                             C   
    1161 =                           C  write_invalid_handle            EQU    
					 error_invalid_handle 
    1162 =                           C  write_access_denied             EQU    
					 error_access_denied 
    1163                             C   
    1164                             C  BREAK <system call definitions> 
Microsoft (R) Macro Assembler  Version 4.00                 3/28/20 21:19:37

BIOS SYSTEM INITIALIZATION                                  Page     1-54
system call definitions                                     

    1165                             C   
    1166 = 0000                      C  Abort                           EQU 0  
					 ;  0      0 
    1167 = 0001                      C  Std_Con_Input                   EQU 1  
					 ;  1      1 
    1168 = 0002                      C  Std_Con_Output                  EQU 2  
					 ;  2      2 
    1169 = 0003                      C  Std_Aux_Input                   EQU 3  
					 ;  3      3 
    1170 = 0004                      C  Std_Aux_Output                  EQU 4  
					 ;  4      4 
    1171 = 0005                      C  Std_Printer_Output              EQU 5  
					 ;  5      5 
    1172 = 0006                      C  Raw_Con_IO                      EQU 6  
					 ;  6      6 
    1173 = 0007                      C  Raw_Con_Input                   EQU 7  
					 ;  7      7 
    1174 = 0008                      C  Std_Con_Input_No_Echo           EQU 8  
					 ;  8      8 
    1175 = 0009                      C  Std_Con_String_Output           EQU 9  
					 ;  9      9 
    1176 = 000A                      C  Std_Con_String_Input            EQU 10 
					 ; 10      A 
    1177 = 000B                      C  Std_Con_Input_Status            EQU 11 
					 ; 11      B 
    1178 = 000C                      C  Std_Con_Input_Flush             EQU 12 
					 ; 12      C 
    1179 = 000D                      C  Disk_Reset                      EQU 13 
					 ; 13      D 
    1180 = 000E                      C  Set_Default_Drive               EQU 14 
					 ; 14      E 
    1181 = 000F                      C  FCB_Open                        EQU 15 
					 ; 15      F 
    1182 = 0010                      C  FCB_Close                       EQU 16 
					 ; 16     10 
    1183 = 0011                      C  Dir_Search_First                EQU 17 
					 ; 17     11 
    1184 = 0012                      C  Dir_Search_Next                 EQU 18 
					 ; 18     12 
    1185 = 0013                      C  FCB_Delete                      EQU 19 
					 ; 19     13 
    1186 = 0014                      C  FCB_Seq_Read                    EQU 20 
					 ; 20     14 
    1187 = 0015                      C  FCB_Seq_Write                   EQU 21 
					 ; 21     15 
    1188 = 0016                      C  FCB_Create                      EQU 22 
					 ; 22     16 
    1189 = 0017                      C  FCB_Rename                      EQU 23 
					 ; 23     17 
    1190 = 0019                      C  Get_Default_Drive               EQU 25 
					 ; 25     19 
    1191 = 001A                      C  Set_DMA                         EQU 26 
					 ; 26     1A 
    1192                             C  ;----+----+----+----+----+----+----+---
Microsoft (R) Macro Assembler  Version 4.00                 3/28/20 21:19:37

BIOS SYSTEM INITIALIZATION                                  Page     1-55
system call definitions                                     

					-+----+----+----+----+----+----+----; 
    1193                             C  ;            C  A  V  E  A  T     P  R 
					 O  G  R  A  M  M  E  R             ; 
    1194                             C  ;                                      
					                                    ; 
    1195 = 001F                      C  Get_Default_DPB                 EQU 31 
					 ; 31     1F 
    1196                             C  ;                                      
					                                    ; 
    1197                             C  ;            C  A  V  E  A  T     P  R 
					 O  G  R  A  M  M  E  R             ; 
    1198                             C  ;----+----+----+----+----+----+----+---
					-+----+----+----+----+----+----+----; 
    1199 = 0021                      C  FCB_Random_Read                 EQU 33 
					 ; 33     21 
    1200 = 0022                      C  FCB_Random_Write                EQU 34 
					 ; 34     22 
    1201 = 0023                      C  Get_FCB_File_Length             EQU 35 
					 ; 35     23 
    1202 = 0024                      C  Get_FCB_Position                EQU 36 
					 ; 36     24 
    1203 = 0025                      C  Set_Interrupt_Vector            EQU 37 
					 ; 37     25 
    1204 = 0026                      C  Create_Process_Data_Block       EQU 38 
					 ; 38     26 
    1205 = 0027                      C  FCB_Random_Read_Block           EQU 39 
					 ; 39     27 
    1206 = 0028                      C  FCB_Random_Write_Block          EQU 40 
					 ; 40     28 
    1207 = 0029                      C  Parse_File_Descriptor           EQU 41 
					 ; 41     29 
    1208 = 002A                      C  Get_Date                        EQU 42 
					 ; 42     2A 
    1209 = 002B                      C  Set_Date                        EQU 43 
					 ; 43     2B 
    1210 = 002C                      C  Get_Time                        EQU 44 
					 ; 44     2C 
    1211 = 002D                      C  Set_Time                        EQU 45 
					 ; 45     2D 
    1212 = 002E                      C  Set_Verify_On_Write             EQU 46 
					 ; 46     2E 
    1213                             C  ; Extended functionality group 
    1214 = 002F                      C  Get_DMA                         EQU 47 
					 ; 47     2F 
    1215 = 0030                      C  Get_Version                     EQU 48 
					 ; 48     30 
    1216 = 0031                      C  Keep_Process                    EQU 49 
					 ; 49     31 
    1217                             C  ;----+----+----+----+----+----+----+---
					-+----+----+----+----+----+----+----; 
    1218                             C  ;            C  A  V  E  A  T     P  R 
					 O  G  R  A  M  M  E  R             ; 
    1219                             C  ;                                      
					                                    ; 
Microsoft (R) Macro Assembler  Version 4.00                 3/28/20 21:19:37

BIOS SYSTEM INITIALIZATION                                  Page     1-56
system call definitions                                     

    1220 = 0032                      C  Get_DPB                         EQU 50 
					 ; 50     32 
    1221                             C  ;                                      
					                                    ; 
    1222                             C  ;            C  A  V  E  A  T     P  R 
					 O  G  R  A  M  M  E  R             ; 
    1223                             C  ;----+----+----+----+----+----+----+---
					-+----+----+----+----+----+----+----; 
    1224 = 0033                      C  Set_CTRL_C_Trapping             EQU 51 
					 ; 51     33 
    1225 = 0034                      C  Get_InDOS_Flag                  EQU 52 
					 ; 52     34 
    1226 = 0035                      C  Get_Interrupt_Vector            EQU 53 
					 ; 53     35 
    1227 = 0036                      C  Get_Drive_Freespace             EQU 54 
					 ; 54     36 
    1228 = 0037                      C  Char_Oper                       EQU 55 
					 ; 55     37 
    1229 = 0038                      C  International                   EQU 56 
					 ; 56     38 
    1230                             C  ;   Directory Group 
    1231 = 0039                      C  MKDir                           EQU 57 
					 ; 57     39 
    1232 = 003A                      C  RMDir                           EQU 58 
					 ; 58     3A 
    1233 = 003B                      C  CHDir                           EQU 59 
					 ; 59     3B 
    1234                             C  ;   File Group 
    1235 = 003C                      C  Creat                           EQU 60 
					 ; 60     3C 
    1236 = 003D                      C  Open                            EQU 61 
					 ; 61     3D 
    1237 = 003E                      C  Close                           EQU 62 
					 ; 62     3E 
    1238 = 003F                      C  Read                            EQU 63 
					 ; 63     3F 
    1239 = 0040                      C  Write                           EQU 64 
					 ; 64     40 
    1240 = 0041                      C  Unlink                          EQU 65 
					 ; 65     41 
    1241 = 0042                      C  LSeek                           EQU 66 
					 ; 66     42 
    1242 = 0043                      C  CHMod                           EQU 67 
					 ; 67     43 
    1243 = 0044                      C  IOCtl                           EQU 68 
					 ; 68     44 
    1244 = 0045                      C  XDup                            EQU 69 
					 ; 69     45 
    1245 = 0046                      C  XDup2                           EQU 70 
					 ; 70     46 
    1246 = 0047                      C  Current_Dir                     EQU 71 
					 ; 71     47 
    1247                             C  ;    Memory Group 
    1248 = 0048                      C  Alloc                           EQU 72 
Microsoft (R) Macro Assembler  Version 4.00                 3/28/20 21:19:37

BIOS SYSTEM INITIALIZATION                                  Page     1-57
system call definitions                                     

					 ; 72     48 
    1249 = 0049                      C  Dealloc                         EQU 73 
					 ; 73     49 
    1250 = 004A                      C  Setblock                        EQU 74 
					 ; 74     4A 
    1251                             C  ;    Process Group 
    1252 = 004B                      C  Exec                            EQU 75 
					 ; 75     4B 
    1253 = 004C                      C  Exit                            EQU 76 
					 ; 76     4C 
    1254 = 004D                      C  Wait                            EQU 77 
					 ; 77     4D 
    1255 = 004E                      C  Find_First                      EQU 78 
					 ; 78     4E 
    1256                             C  ;   Special Group 
    1257 = 004F                      C  Find_Next                       EQU 79 
					 ; 79     4F 
    1258                             C  ; SPECIAL SYSTEM GROUP 
    1259                             C  ;----+----+----+----+----+----+----+---
					-+----+----+----+----+----+----+----; 
    1260                             C  ;            C  A  V  E  A  T     P  R 
					 O  G  R  A  M  M  E  R             ; 
    1261                             C  ;                                      
					                                    ; 
    1262 = 0050                      C  Set_Current_PDB                 EQU 80 
					 ; 80     50 
    1263 = 0051                      C  Get_Current_PDB                 EQU 81 
					 ; 81     51 
    1264 = 0052                      C  Get_In_Vars                     EQU 82 
					 ; 82     52 
    1265 = 0053                      C  SetDPB                          EQU 83 
					 ; 83     53 
    1266                             C  ;                                      
					                                    ; 
    1267                             C  ;            C  A  V  E  A  T     P  R 
					 O  G  R  A  M  M  E  R             ; 
    1268                             C  ;----+----+----+----+----+----+----+---
					-+----+----+----+----+----+----+----; 
    1269 = 0054                      C  Get_Verify_On_Write             EQU 84 
					 ; 84     54 
    1270                             C  ;----+----+----+----+----+----+----+---
					-+----+----+----+----+----+----+----; 
    1271                             C  ;            C  A  V  E  A  T     P  R 
					 O  G  R  A  M  M  E  R             ; 
    1272                             C  ;                                      
					                                    ; 
    1273 = 0055                      C  Dup_PDB                         EQU 85 
					 ; 85     55 
    1274                             C  ;                                      
					                                    ; 
    1275                             C  ;            C  A  V  E  A  T     P  R 
					 O  G  R  A  M  M  E  R             ; 
    1276                             C  ;----+----+----+----+----+----+----+---
					-+----+----+----+----+----+----+----; 
Microsoft (R) Macro Assembler  Version 4.00                 3/28/20 21:19:37

BIOS SYSTEM INITIALIZATION                                  Page     1-58
system call definitions                                     

    1277 = 0056                      C  Rename                          EQU 86 
					 ; 86     56 
    1278 = 0057                      C  File_Times                      EQU 87 
					 ; 87     57 
    1279 = 0058                      C  AllocOper                       EQU 88 
					 ; 88     58 
    1280                             C  ; Network extention system calls 
    1281 = 0059                      C  GetExtendedError                EQU 89 
					 ; 89     59 
    1282 = 005A                      C  CreateTempFile                  EQU 90 
					 ; 90     5A 
    1283 = 005B                      C  CreateNewFile                   EQU 91 
					 ; 91     5B 
    1284 = 005C                      C  LockOper                        EQU 92 
					 ; 92     5C Lock and Unlock 
    1285 = 005D                      C  ServerCall                      EQU 93 
					 ; 93     5D CommitAll, ServerDOSCall, 
    1286                             C                                         
					 ;           CloseByName, CloseUser, 
    1287                             C                                         
					 ;           CloseUserProcess, 
    1288                             C                                         
					 ;           GetOpenFileList 
    1289 = 005E                      C  UserIDOper                      EQU 94 
					 ; 94     5E Get and Set 
    1290 = 005F                      C  AssignOper                      EQU 95 
					 ; 95     5F On, Off, Get, Set, Cancel 
    1291                             C   
    1292 = 00F8                      C  Set_Oem_Handler                 EQU 248
					 ; 248    F8 
    1293 = 00F9                      C  OEM_C1                          EQU 249
					 ; 249    F9 
    1294 = 00FA                      C  OEM_C2                          EQU 250
					 ; 250    FA 
    1295 = 00FB                      C  OEM_C3                          EQU 251
					 ; 251    FB 
    1296 = 00FC                      C  OEM_C4                          EQU 252
					 ; 252    FC 
    1297 = 00FD                      C  OEM_C5                          EQU 253
					 ; 253    FD 
    1298 = 00FE                      C  OEM_C6                          EQU 254
					 ; 254    FE 
    1299 = 00FF                      C  OEM_C7                          EQU 255
					 ; 255    FF 
    1300                             C  SUBTTL 
    1301                                 
    1302                             C          INCLUDE DEVSYM.ASM 
    1303                             C  SUBTTL DEVICE TABLE AND SRH DEFINITION 
Microsoft (R) Macro Assembler  Version 4.00                 3/28/20 21:19:37

BIOS SYSTEM INITIALIZATION                                  Page     1-59
DEVICE TABLE AND SRH DEFINITION                             

    1304                             C  PAGE 
    1305                             C  ; The device table list has the form: 
    1306                             C  SYSDEV  STRUC 
    1307 0000  ????????              C  SDEVNEXT        DD      ?       ;Pointe
					r to next device header 
    1308 0004  ????                  C  SDEVATT         DW      ?       ;Attrib
					utes of the device 
    1309 0006  ????                  C  SDEVSTRAT       DW      ?       ;Strate
					gy entry point 
    1310 0008  ????                  C  SDEVINT         DW      ?       ;Interr
					upt entry point 
    1311 000A  0008[                 C  SDEVNAME        DB      8 DUP (?) ;Name
					 of device (only first byte used for bl
					ock) 
    1312            ??               C  
    1313                         ]   C  
    1314                             C  
    1315 0012                        C  SYSDEV  ENDS 
    1316                             C   
    1317                             C  ;Attribute bit masks 
    1318 = 8000                      C  DEVTYP  EQU     8000H           ;Bit 15
					 - 1  if Char, 0 if block 
    1319 = 4000                      C  DEVIOCTL EQU    4000H           ;Bit 14
					 - CONTROL mode bit 
    1320 = 2000                      C  ISFATBYDEV EQU  2000H           ;Bit 13
					 - Device uses FAT ID bytes, comp media
					. 
    1321 = 0001                      C  ISCIN   EQU     0001H           ;Bit 0 
					- This device is the console input. 
    1322 = 0002                      C  ISCOUT  EQU     0002H           ;Bit 1 
					- This device is the console output. 
    1323 = 0004                      C  ISNULL  EQU     0004H           ;Bit 2 
					- This device is the null device. 
    1324 = 0008                      C  ISCLOCK EQU     0008H           ;Bit 3 
					- This device is the clock device. 
    1325 = 0010                      C  ISIBM   EQU     0010H           ;Bit 4 
					- This device is special 
    1326                             C   
    1327                             C  ;Static Reguest Header 
    1328                             C  SRHEAD  STRUC 
    1329 0000  ??                    C  REQLEN  DB      ?               ;Length
					 in bytes of request block 
    1330 0001  ??                    C  REQUNIT DB      ?               ;Device
					 unit number 
    1331 0002  ??                    C  REQFUNC DB      ?               ;Type o
					f request 
    1332 0003  ????                  C  REQSTAT DW      ?               ;Status
					 Word 
    1333 0005  0008[                 C          DB      8 DUP(?)        ;Reserv
					ed for queue links 
    1334            ??               C  
    1335                         ]   C  
    1336                             C  
    1337 000D                        C  SRHEAD  ENDS 
Microsoft (R) Macro Assembler  Version 4.00                 3/28/20 21:19:37

BIOS SYSTEM INITIALIZATION                                  Page     1-60
DEVICE TABLE AND SRH DEFINITION                             

    1338                             C   
    1339                             C  ;Status word masks 
    1340 = 8000                      C  STERR   EQU     8000H           ;Bit 15
					 - Error 
    1341 = 0200                      C  STBUI   EQU     0200H           ;Bit 9 
					- Buisy 
    1342 = 0100                      C  STDON   EQU     0100H           ;Bit 8 
					- Done 
    1343 = 00FF                      C  STECODE EQU     00FFH           ;Error 
					code 
    1344 = 0000                      C  WRECODE EQU     0 
    1345                             C   
    1346                             C  ;Function codes 
    1347 = 0000                      C  DEVINIT EQU     0               ;Initia
					lization 
    1348 = 001A                      C  DINITHL EQU     26              ;Size o
					f init header 
    1349 = 0001                      C  DEVMDCH EQU     1               ;Media 
					check 
    1350 = 000F                      C  DMEDHL  EQU     15              ;Size o
					f media check header 
    1351 = 0002                      C  DEVBPB  EQU     2               ;Get BP
					B 
    1352 = 0003                      C  DEVRDIOCTL EQU  3               ;IOCTL 
					read 
    1353 = 0016                      C  DBPBHL  EQU     22              ;Size o
					f Get BPB header 
    1354 = 0004                      C  DEVRD   EQU     4               ;Read 
    1355 = 0016                      C  DRDWRHL EQU     22              ;Size o
					f RD/WR header 
    1356 = 0005                      C  DEVRDND EQU     5               ;Non de
					structive read no wait (character devs)
					 
    1357 = 000E                      C  DRDNDHL EQU     14              ;Size o
					f non destructive read header 
    1358 = 0006                      C  DEVIST  EQU     6               ;Input 
					status 
    1359 = 000D                      C  DSTATHL EQU     13              ;Size o
					f status header 
    1360 = 0007                      C  DEVIFL  EQU     7               ;Input 
					flush 
    1361 = 000F                      C  DFLSHL  EQU     15              ;Size o
					f flush header 
    1362 = 0008                      C  DEVWRT  EQU     8               ;Write 
    1363 = 0009                      C  DEVWRTV EQU     9               ;Write 
					with verify 
    1364 = 000A                      C  DEVOST  EQU     10              ;Output
					 status 
    1365 = 000B                      C  DEVOFL  EQU     11              ;Output
					 flush 
    1366 = 000C                      C  DEVWRIOCTL EQU  12              ;IOCTL 
					write 
    1367                                
					write 
Microsoft (R) Macro Assembler  Version 4.00                 3/28/20 21:19:37

BIOS SYSTEM INITIALIZATION                                  Page     1-61
DEVICE TABLE AND SRH DEFINITION                             

    1368                                 
    1369                                        IF      NOT IBM 
    1370                                        IF      NOT IBMJAPVER 
    1371                                        EXTRN   RE_INIT:FAR 
    1372                                        ENDIF 
    1373                                        ENDIF 
    1374                                 
    1375 0000                           SYSINITSEG      SEGMENT PUBLIC 'SYSTEM_
					INIT' 
    1376                                 
    1377                                ASSUME  CS:SYSINITSEG,DS:NOTHING,ES:NOT
					HING,SS:NOTHING 
    1378                                 
    1379                                        EXTRN   BADOPM:BYTE,CRLFM:BYTE,
					BADCOM:BYTE 
    1380                                        EXTRN   BADSIZ_PRE:BYTE,BADLD_P
					RE:BYTE 
    1381                                        EXTRN   BADSIZ_POST:BYTE,BADLD_
					POST:BYTE 
    1382                                        EXTRN   SYSSIZE:BYTE,BADCOUNTRY
					:BYTE 
    1383                                 
    1384                                        PUBLIC  CURRENT_DOS_LOCATION 
    1385                                        PUBLIC  FINAL_DOS_LOCATION 
    1386                                        PUBLIC  DEVICE_LIST 
    1387                                        PUBLIC  MEMORY_SIZE 
    1388                                        PUBLIC  DEFAULT_DRIVE 
    1389                                        PUBLIC  BUFFERS 
    1390                                        PUBLIC  FILES 
    1391                                        PUBLIC  SYSINIT 
    1392                                 
    1393                                        ENDIF 
    1394                                 
    1395 0000                           SYSINIT: 
    1396 0000  EB 63 90                         JMP     GOINIT 
    1397                                 
    1398 0003                           DOSINFO                 LABEL   DWORD 
    1399 0003  0000                                             DW      0000 
    1400 0005  0000                     CURRENT_DOS_LOCATION    DW      0000 
    1401                                 
    1402 0007                           MSDOS                   LABEL   DWORD 
    1403 0007                           ENTRY_POINT             LABEL   DWORD 
    1404 0007  0000                                             DW      0000 
    1405 0009  0000                     FINAL_DOS_LOCATION      DW      0000 
    1406 000B  00 00 00 00              DEVICE_LIST             DD      0000000
					0 
    1407                                 
    1408                                        ENDIF 
    1409                                 
    1410 000F  0001                     MEMORY_SIZE             DW      0001 
    1411 0011  00                       DEFAULT_DRIVE           DB      00 
    1412 0012  02                       BUFFERS                 DB      2 
    1413 0013  08                       FILES                   DB      8 
    1414 0014  02 00 50                 COMMAND_LINE            DB      2,0,"P"
Microsoft (R) Macro Assembler  Version 4.00                 3/28/20 21:19:37

BIOS SYSTEM INITIALIZATION                                  Page     1-62
DEVICE TABLE AND SRH DEFINITION                             

					 ; Default Command.com Args 
    1415 0017  001D[                                            DB      29 DUP 
					(0) 
    1416            00                  
    1417                         ]      
    1418                                
    1419 0034  00                       ZERO                    DB      0 
    1420                                 
    1421                                        IF      NOT NOEXEC 
    1422 0035  0000                     COMEXE  EXEC0 <0,COMMAND_LINE,DEFAULT_D
					RIVE,ZERO> 
    1423 0037  0014 ---- R              
    1424 003B  0011 ---- R              
    1425 003F  0034 ---- R              
    1426                                
    1427                                        ENDIF 
    1428                                 
    1429 0043  0000                     COUNT   DW      0000 
    1430 0045  0000                     CHRPTR  DW      0000 
    1431                                 
    1432 0047                           BUFPTR  LABEL   DWORD                  
					 ; LEAVE THIS STUFF IN ORDER! 
    1433 0047  0000                     MEMLO   DW      0 
    1434 0049                           PRMBLK  LABEL   WORD 
    1435 0049  0000                     MEMHI   DW      0 
    1436 004B  0000                     LDOFF   DW      0 
    1437 004D  0000                     AREA    DW      0 
    1438                                 
    1439 004F  16                       PACKET                  DB      22 
    1440 0050  00                                               DB      0 
    1441 0051  00                                               DB      0      
					 ; INITIALIZE CODE 
    1442 0052  0000                                             DW      0 
    1443 0054  0008[                                            DB      8 DUP (
					?) 
    1444            ??                  
    1445                         ]      
    1446                                
    1447 005C  00                       UNITCOUNT               DB      0 
    1448 005D  00 00 00 00              BREAK_ADDR              DD      0 
    1449 0061  00 00 00 00              BPB_ADDR                DD      0 
    1450                                 
    1451 0065                           GOINIT: 
    1452 0065  FC                               CLD 
    1453 0066  33 F6                            XOR     SI,SI 
    1454 0068  8B FE                            MOV     DI,SI 
    1455                                 
    1456                                        IF      MSVER 
    1457 006A  2E: 8B 0E 000F R                 MOV     CX,[MEMORY_SIZE] 
    1458 006F  83 F9 01                         CMP     CX,1 
    1459 0072  75 1D                            JNZ     NOSCAN 
    1460 0074  B9 0800                          MOV     CX,2048                
					 ; START SCANNING AT 32K BOUNDARY 
    1461 0077  33 DB                            XOR     BX,BX 
Microsoft (R) Macro Assembler  Version 4.00                 3/28/20 21:19:37

BIOS SYSTEM INITIALIZATION                                  Page     1-63
DEVICE TABLE AND SRH DEFINITION                             

    1462                                 
    1463 0079  41                       MEMSCAN:INC     CX 
    1464 007A  74 10                            JZ      SETEND 
    1465 007C  8E D9                            MOV     DS,CX 
    1466 007E  8A 07                            MOV     AL,[BX] 
    1467 0080  F6 D0                            NOT     AL 
    1468 0082  88 07                            MOV     [BX],AL 
    1469 0084  3A 07                            CMP     AL,[BX] 
    1470 0086  F6 D0                            NOT     AL 
    1471 0088  88 07                            MOV     [BX],AL 
    1472 008A  74 ED                            JZ      MEMSCAN 
    1473 008C                           SETEND: 
    1474 008C  2E: 89 0E 000F R                 MOV     [MEMORY_SIZE],CX 
    1475                                        ENDIF 
    1476                                 
    1477                                        ENDIF 
    1478                                 
    1479 0091                           NOSCAN: 
    1480 0091  8C C8                            MOV     AX,CS 
    1481 0093  8E D8                            MOV     DS,AX 
    1482                                ASSUME  DS:SYSINITSEG 
    1483                                 
    1484                                        ENDIF 
    1485                                 
    1486 0095  B8 000F E                        MOV     AX,OFFSET SYSSIZE + 15 
    1487 0098  D1 E8                            SHR     AX,1                   
					 ; Divide by 16 for paras 
    1488 009A  D1 E8                            SHR     AX,1 
    1489 009C  D1 E8                            SHR     AX,1 
    1490 009E  D1 E8                            SHR     AX,1 
    1491 00A0  2B C8                            SUB     CX,AX 
    1492 00A2  8E C1                            MOV     ES,CX 
    1493 00A4  B9 0001 E                        MOV     CX,OFFSET SYSSIZE + 1 
    1494 00A7  D1 E9                            SHR     CX,1                   
					 ; Divide by 2 to get words 
    1495 00A9  F3/ A5                           REP     MOVSW                  
					 ; RELOCATE SYSINIT 
    1496                                 
    1497                                        ASSUME  ES:SYSINITSEG 
    1498                                 
    1499 00AB  06                               PUSH    ES 
    1500 00AC  B8 00B1 R                        MOV     AX,OFFSET SYSIN 
    1501 00AF  50                               PUSH    AX 
    1502                                 
    1503 00B0                           AAA     PROC    FAR 
    1504 00B0  CB                               RET 
    1505                                AAA     ENDP 
    1506                                ; 
    1507                                ;       MOVE THE DOS TO ITS PROPER LOCA
					TION 
    1508                                ; 
    1509 00B1                           SYSIN: 
    1510                                 
    1511                                        ASSUME  DS:NOTHING,ES:SYSINITSE
Microsoft (R) Macro Assembler  Version 4.00                 3/28/20 21:19:37

BIOS SYSTEM INITIALIZATION                                  Page     1-64
DEVICE TABLE AND SRH DEFINITION                             

					G,SS:NOTHING 
    1512                                 
    1513 00B1  26: A1 0005 R                    MOV     AX,[CURRENT_DOS_LOCATIO
					N] 
    1514 00B5  8E D8                            MOV     DS,AX 
    1515 00B7  26: A1 0009 R                    MOV     AX,[FINAL_DOS_LOCATION]
					 
    1516 00BB  8E C0                            MOV     ES,AX 
    1517                                 
    1518                                        ASSUME  ES:NOTHING 
    1519                                 
    1520 00BD  33 F6                            XOR     SI,SI 
    1521 00BF  8B FE                            MOV     DI,SI 
    1522 00C1  B9 2800                          MOV     CX,DOSSIZE/2 
    1523 00C4  F3/ A5                           REP     MOVSW 
    1524                                 
    1525 00C6  2E: C5 36 000B R                 LDS     SI,[DEVICE_LIST] 
    1526 00CB  2E: 8B 16 000F R                 MOV     DX,[MEMORY_SIZE] 
    1527                                 
    1528 00D0  FA                               CLI 
    1529 00D1  8C C8                            MOV     AX,CS 
    1530 00D3  8E D0                            MOV     SS,AX 
    1531 00D5  BC 00D9 R                        MOV     SP,OFFSET LOCSTACK 
    1532                                 
    1533                                        ASSUME  SS:SYSINITSEG 
    1534                                 
    1535                                        IF      NOT ALTVECT 
    1536 00D8  FB                               STI                            
					 ; Leave INTs disabled for ALTVECT 
    1537                                        ENDIF 
    1538 00D9                           LOCSTACK LABEL BYTE 
    1539                                 
    1540 00D9  36: FF 1E 0007 R                 CALL    MSDOS 
    1541 00DE  36: 8C 06 0005 R                 MOV     WORD PTR [DOSINFO+2],ES
					 ; SAVE POINTER TO DOS INFO 
    1542 00E3  36: 89 3E 0003 R                 MOV     WORD PTR [DOSINFO],DI 
    1543                                 
    1544                                        IF      NOT IBM 
    1545                                        IF      NOT IBMJAPVER 
    1546 00E8  9A 0000 ---- E                   CALL    RE_INIT                
					 ; Re-call the BIOS 
    1547                                        ENDIF 
    1548                                        ENDIF 
    1549                                 
    1550 00ED  FB                               STI 
    1551 00EE  FC                               CLD 
    1552                                 
    1553                                      ELSE 
    1554 00EF  8C CB                            MOV     BX,CS 
    1555 00F1  83 EB 10                         SUB     BX,10H 
    1556 00F4  8E C3                            MOV     ES,BX 
    1557 00F6  33 F6                            XOR     SI,SI 
    1558 00F8  8B FE                            MOV     DI,SI 
    1559 00FA  B9 0080                          MOV     CX,80H 
Microsoft (R) Macro Assembler  Version 4.00                 3/28/20 21:19:37

BIOS SYSTEM INITIALIZATION                                  Page     1-65
DEVICE TABLE AND SRH DEFINITION                             

    1560 00FD  F3/ A5                           REP     MOVSW 
    1561 00FF  B4 50                            MOV     AH,SET_CURRENT_PDB 
    1562 0101  CD 21                            INT     21H 
    1563                                        ENDIF 
    1564                                 
    1565 0103  1E                               PUSH    DS 
    1566 0104  0E                               PUSH    CS 
    1567 0105  1F                               POP     DS 
    1568 0106  BA 06EA R                        MOV     DX,OFFSET INT24        
					 ; SET UP INT 24 HANDLER 
    1569 0109  B8 2524                          MOV     AX,(SET_INTERRUPT_VECTO
					R SHL 8) OR 24H 
    1570 010C  CD 21                            INT     21H 
    1571                                 
    1572                                        ENDIF 
    1573                                 
    1574 010E  1F                               POP     DS 
    1575                                 
    1576 010F  36: 8A 16 0011 R                 MOV     DL,[DEFAULT_DRIVE] 
    1577 0114  0A D2                            OR      DL,DL 
    1578 0116  74 06                            JZ      NODRVSET 
    1579 0118  FE CA                            DEC     DL                     
					 ; A = 0 
    1580 011A  B4 0E                            MOV     AH,SET_DEFAULT_DRIVE 
    1581 011C  CD 21                            INT     21H                    
					 ; SELECT THE DISK 
    1582 011E                           NODRVSET: 
    1583                                 
    1584 011E  E8 01A6 R                        CALL    DOCONF                 
					 ; DO THE CONFIG STUFF 
    1585                                 
    1586                                        ENDIF 
    1587                                 
    1588                                        ENDIF 
    1589                                 
    1590 0121  0E                               PUSH    CS 
    1591 0122  1F                               POP     DS 
    1592                                ASSUME  DS:SYSINITSEG 
    1593 0123  A0 0013 R                        MOV     AL,[FILES] 
    1594 0126  98                               CBW 
    1595 0127  8B C8                            MOV     CX,AX 
    1596 0129  33 DB                            XOR     BX,BX                  
					 ; Close standard input 
    1597 012B  B4 3E                            MOV     AH,CLOSE 
    1598 012D  CD 21                            INT     21H 
    1599 012F  BB 0002                          MOV     BX,2 
    1600 0132                           RCCLLOOP:                              
					 ; Close everybody but standard output 
    1601 0132  B4 3E                            MOV     AH,CLOSE 
    1602 0134  CD 21                            INT     21H 
    1603 0136  43                               INC     BX 
    1604 0137  E2 F9                            LOOP    RCCLLOOP 
    1605                                 
    1606 0139  BA 0706 R                        MOV     DX,OFFSET CONDEV 
Microsoft (R) Macro Assembler  Version 4.00                 3/28/20 21:19:37

BIOS SYSTEM INITIALIZATION                                  Page     1-66
DEVICE TABLE AND SRH DEFINITION                             

    1607 013C  B0 02                            MOV     AL,2 
    1608 013E  B4 3D                            MOV     AH,OPEN                
					 ; OPEN CON FOR READ/WRITE 
    1609 0140  F9                               STC 
    1610 0141  CD 21                            INT     21H 
    1611 0143  73 05                            JNC     GOAUX 
    1612 0145  E8 066C R                        CALL    BADFIL 
    1613 0148  EB 13                            JMP     SHORT GOAUX2 
    1614                                 
    1615 014A  50                       GOAUX:  PUSH    AX 
    1616 014B  BB 0001                          MOV     BX,1                   
					 ; close standard output 
    1617 014E  B4 3E                            MOV     AH,CLOSE 
    1618 0150  CD 21                            INT     21H 
    1619 0152  58                               POP     AX 
    1620                                 
    1621 0153  8B D8                            MOV     BX,AX                  
					 ; New device handle 
    1622 0155  B4 45                            MOV     AH,XDUP 
    1623 0157  CD 21                            INT     21H                    
					 ; Dup to 1, STDOUT 
    1624 0159  B4 45                            MOV     AH,XDUP 
    1625 015B  CD 21                            INT     21H                    
					 ; Dup to 2, STDERR 
    1626                                 
    1627 015D  BA 070F R                GOAUX2: MOV     DX,OFFSET AUXDEV 
    1628 0160  B0 02                            MOV     AL,2                   
					 ; READ/WRITE ACCESS 
    1629 0162  E8 06C7 R                        CALL    OPEN_DEV 
    1630                                 
    1631 0165  BA 0718 R                        MOV     DX,OFFSET PRNDEV 
    1632 0168  B0 01                            MOV     AL,1                   
					 ; WRITE ONLY 
    1633 016A  E8 06C7 R                        CALL    OPEN_DEV 
    1634                                ; 
    1635                                ; SET UP THE PARAMETERS FOR COMMAND 
    1636                                ; 
    1637 016D                           GOSET: 
    1638 016D  BE 0015 R                        MOV     SI,OFFSET COMMAND_LINE+
					1 
    1639                                 
    1640                                        ELSE 
    1641 0170  1E                               PUSH    DS 
    1642 0171  07                               POP     ES 
    1643 0172  8B FE                            MOV     DI,SI 
    1644                                        ENDIF 
    1645                                 
    1646 0174  B1 FF                            MOV     CL,-1 
    1647 0176                           COMTRANLP:                             
					 ; FIND LENGTH OF COMMAND LINE 
    1648 0176  FE C1                            INC     CL 
    1649 0178  AC                               LODSB 
    1650 0179  AA                               STOSB                          
					 ; COPY COMMAND LINE IN 
Microsoft (R) Macro Assembler  Version 4.00                 3/28/20 21:19:37

BIOS SYSTEM INITIALIZATION                                  Page     1-67
DEVICE TABLE AND SRH DEFINITION                             

    1651 017A  0A C0                            OR      AL,AL 
    1652 017C  75 F8                            JNZ     COMTRANLP 
    1653 017E  4F                               DEC     DI 
    1654 017F  B0 0D                            MOV     AL,0DH 
    1655 0181  AA                               STOSB 
    1656                                 
    1657                                        ELSE 
    1658 0182  88 0E 0014 R                     MOV     [COMMAND_LINE],CL      
					 ; Count 
    1659                                        ENDIF 
    1660                                 
    1661 0186  0E                               PUSH    CS 
    1662 0187  07                               POP     ES 
    1663                                 
    1664                                        ASSUME  ES:SYSINITSEG 
    1665                                 
    1666 0188  BA 072D R                        MOV     DX,OFFSET COMMND       
					 ; NOW POINTING TO FILE DESCRIPTION 
    1667                                 
    1668                                        ELSE 
    1669 018B  BB 0035 R                        MOV     BX,OFFSET COMEXE 
    1670 018E  8C 4F 04                         MOV     WORD PTR [BX.EXEC0_COM_
					LINE+2],CS 
    1671 0191  8C 4F 08                         MOV     WORD PTR [BX.EXEC0_5C_F
					CB+2],CS 
    1672 0194  8C 4F 0C                         MOV     WORD PTR [BX.EXEC0_6C_F
					CB+2],CS 
    1673                                 
    1674 0197  33 C0                            XOR     AX,AX 
    1675 0199  B4 4B                            MOV     AH,EXEC 
    1676 019B  F9                               STC                            
					 ; IN CASE OF INT 24 
    1677 019C  CD 21                            INT     21H                    
					 ; GO START UP COMMAND 
    1678                                        ENDIF 
    1679                                 
    1680 019E                           COMERR: 
    1681 019E  BA 0000 E                        MOV     DX,OFFSET BADCOM       
					 ; WANT TO PRINT COMMAND ERROR 
    1682 01A1  E8 066C R                        CALL    BADFIL 
    1683 01A4  EB FE                    STALL:  JMP     STALL 
    1684                                 
    1685 01A6                           DOCONF: 
    1686 01A6  0E                               PUSH    CS 
    1687 01A7  1F                               POP     DS 
    1688                                 
    1689                                        ASSUME  DS:SYSINITSEG 
    1690                                 
    1691 01A8  BB FFFF                          MOV     BX,0FFFFH 
    1692 01AB  B4 48                            MOV     AH,ALLOC 
    1693 01AD  CD 21                            INT     21H                    
					 ; FIRST TIME FAILS 
    1694 01AF  B4 48                            MOV     AH,ALLOC 
    1695 01B1  CD 21                            INT     21H                    
Microsoft (R) Macro Assembler  Version 4.00                 3/28/20 21:19:37

BIOS SYSTEM INITIALIZATION                                  Page     1-68
DEVICE TABLE AND SRH DEFINITION                             

					 ; SECOND TIME GETS IT 
    1696 01B3  A3 004D R                        MOV     [AREA],AX 
    1697                                 
    1698                                        ENDIF 
    1699                                 
    1700 01B6  A3 0049 R                        MOV     [MEMHI],AX 
    1701                                 
    1702 01B9  B8 3700                          MOV     AX,(CHAR_OPER SHL 8)   
					 ; GET SWITCH CHARACTER 
    1703 01BC  CD 21                            INT     21H 
    1704 01BE  88 16 0015 R                     MOV     [COMMAND_LINE+1],DL 
    1705                                 
    1706 01C2  BA 0721 R                        MOV     DX,OFFSET CONFIG       
					 ; NOW POINTING TO FILE DESCRIPTION 
    1707 01C5  B8 3D00                          MOV     AX,OPEN SHL 8          
					 ; OPEN FILE "CONFIG.SYS" 
    1708 01C8  F9                               STC                            
					 ; IN CASE OF INT 24 
    1709 01C9  CD 21                            INT     21H                    
					 ; FUNCTION REQUEST 
    1710 01CB  72 03                            JC      ENDFILE 
    1711 01CD  E9 0279 R                        JMP     NOPROB                 
					 ; PROBLEM WITH OPEN 
    1712                                 
    1713 01D0                           ENDFILE: 
    1714 01D0  0E                               PUSH    CS 
    1715 01D1  1F                               POP     DS 
    1716 01D2  E8 05EF R                        CALL    ROUND 
    1717 01D5  A0 0013 R                        MOV     AL,[FILES] 
    1718 01D8  2C 05                            SUB     AL,5 
    1719 01DA  76 3B                            JBE     DOBUFF 
    1720 01DC  98                               CBW 
    1721                                 
    1722                                        ENDIF 
    1723                                 
    1724 01DD  8B 1E 0047 R                     MOV     BX,[MEMLO] 
    1725 01E1  8B 16 0049 R                     MOV     DX,[MEMHI] 
    1726 01E5  C5 3E 0003 R                     LDS     DI,[DOSINFO]           
					 ; GET POINTER TO DOS DATA 
    1727 01E9  C5 7D 04                         LDS     DI,[DI+SFT_ADDR]       
					 ; DS:BP POINTS TO SFT 
    1728 01EC  89 1D                            MOV     WORD PTR [DI+SFT_LINK],
					BX 
    1729 01EE  89 55 02                         MOV     WORD PTR [DI+SFT_LINK+2
					],DX ; SET POINTER TO NEW SFT 
    1730 01F1  0E                               PUSH    CS 
    1731 01F2  1F                               POP     DS 
    1732 01F3  C4 3E 0047 R                     LES     DI,DWORD PTR [MEMLO]   
					 ; POINT TO NEW SFT 
    1733 01F7  26: C7 05 FFFF                   MOV     WORD PTR ES:[DI+SFT_LIN
					K],-1 
    1734 01FC  26: 89 45 04                     MOV     ES:[DI+SFT_COUNT],AX 
    1735 0200  B3 28                            MOV     BL,SIZE SF_ENTRY 
    1736 0202  F6 E3                            MUL     BL                     
Microsoft (R) Macro Assembler  Version 4.00                 3/28/20 21:19:37

BIOS SYSTEM INITIALIZATION                                  Page     1-69
DEVICE TABLE AND SRH DEFINITION                             

					 ; AX = NUMBER OF BYTES TO CLEAR 
    1737 0204  8B C8                            MOV     CX,AX 
    1738                                 
    1739                                        ELSE 
    1740 0206  01 06 0047 R                     ADD     [MEMLO],AX             
					 ; ALLOCATE MEMORY 
    1741 020A  B8 0006                          MOV     AX,6 
    1742 020D  01 06 0047 R                     ADD     [MEMLO],AX             
					 ; REMEMBER THE HEADER TOO 
    1743                                        ENDIF 
    1744                                 
    1745 0211  03 F8                            ADD     DI,AX 
    1746 0213  33 C0                            XOR     AX,AX 
    1747 0215  F3/ AA                           REP     STOSB                  
					 ; CLEAN OUT THE STUFF 
    1748                                 
    1749 0217  E8 05EF R                DOBUFF: CALL    ROUND 
    1750                                 
    1751 021A  FE 0E 0012 R                     DEC     [BUFFERS] 
    1752 021E  74 2F                            JZ      BUF1 
    1753                                 
    1754 0220  1E                               PUSH    DS 
    1755 0221  C4 3E 0047 R                     LES     DI,BUFPTR 
    1756 0225  C5 1E 0003 R                     LDS     BX,DOSINFO 
    1757                                 
    1758                                        ENDIF 
    1759                                 
    1760 0229  8B 47 13                         MOV     AX,WORD PTR [BX.BUFFHEA
					D] 
    1761 022C  26: 89 05                        MOV     WORD PTR ES:[DI.NEXTBUF
					],AX 
    1762 022F  8B 47 15                         MOV     AX,WORD PTR [BX.BUFFHEA
					D+2] 
    1763 0232  26: 89 45 02                     MOV     WORD PTR ES:[DI.NEXTBUF
					+2],AX 
    1764                                 
    1765 0236  89 7F 13                         MOV     WORD PTR [BX.BUFFHEAD],
					DI 
    1766 0239  8C 47 15                         MOV     WORD PTR [BX.BUFFHEAD+2
					],ES 
    1767                                 
    1768 023C  26: C7 45 04 00FF                MOV     WORD PTR ES:[DI.BUFDRV]
					,00FFH   ; NEW BUFFER FREE 
    1769 0242  8B 5F 11                         MOV     BX,[BX.MAXSEC] 
    1770 0245  1F                               POP     DS 
    1771                                 
    1772                                        IF      NOT HIGHMEM 
    1773 0246  83 C3 10                         ADD     BX,BUFINSIZ 
    1774 0249  01 1E 0047 R                     ADD     [MEMLO],BX 
    1775                                        ENDIF 
    1776                                 
    1777 024D  EB C8                            JMP     DOBUFF 
    1778                                 
    1779 024F  E8 05EF R                BUF1:   CALL    ROUND 
Microsoft (R) Macro Assembler  Version 4.00                 3/28/20 21:19:37

BIOS SYSTEM INITIALIZATION                                  Page     1-70
DEVICE TABLE AND SRH DEFINITION                             

    1780 0252  8B 1E 0049 R                     MOV     BX,[MEMHI] 
    1781 0256  A1 004D R                        MOV     AX,[AREA] 
    1782 0259  8E C0                            MOV     ES,AX                  
					 ; CALC WHAT WE NEEDED 
    1783 025B  2B D8                            SUB     BX,AX 
    1784                                 
    1785                                        ENDIF 
    1786                                 
    1787 025D  B4 4A                            MOV     AH,SETBLOCK 
    1788 025F  CD 21                            INT     21H                    
					 ; GIVE THE REST BACK 
    1789                                 
    1790                                        IF      NOT HIGHMEM 
    1791 0261  06                               PUSH    ES 
    1792 0262  8C C0                            MOV     AX,ES 
    1793 0264  48                               DEC     AX 
    1794 0265  8E C0                            MOV     ES,AX 
    1795 0267  26: C7 06 0001 0008              MOV     ES:[arena_owner],8     
					 ; Set impossible owner 
    1796 026E  07                               POP     ES 
    1797                                        ENDIF 
    1798                                 
    1799                                      ELSE 
    1800                                        ENDIF 
    1801                                        ENDIF 
    1802                                 
    1803 026F  C3                               RET 
    1804                                 
    1805 0270  BA 0000 E                BADOP:  MOV     DX,OFFSET BADOPM       
					 ; WANT TO PRINT COMMAND ERROR 
    1806 0273  E8 068C R                        CALL    PRINT 
    1807 0276  E9 0306 R                        JMP     COFF 
    1808                                 
    1809 0279                           NOPROB:                                
					 ; GET FILE SIZE (NOTE < 64K!!) 
    1810 0279  8B D8                            MOV     BX,AX 
    1811 027B  33 C9                            XOR     CX,CX 
    1812 027D  33 D2                            XOR     DX,DX 
    1813 027F  B8 4202                          MOV     AX,(LSEEK SHL 8) OR 2 
    1814 0282  CD 21                            INT     21H 
    1815 0284  A3 0043 R                        MOV     [COUNT],AX 
    1816 0287  33 D2                            XOR     DX,DX 
    1817 0289  B8 4200                          MOV     AX,LSEEK SHL 8         
					 ; Reset pointer to beginning of file 
    1818 028C  CD 21                            INT     21H 
    1819 028E  8C CA                            MOV     DX,CS 
    1820                                 
    1821                                        ELSE 
    1822 0290  A1 0043 R                        MOV     AX,[COUNT] 
    1823 0293  05 000F                          ADD     AX,15 
    1824 0296  B1 04                            MOV     CL,4 
    1825 0298  D3 E8                            SHR     AX,CL                  
					 ; NUMBER OF SEGMENTS 
    1826 029A  2B D0                            SUB     DX,AX 
Microsoft (R) Macro Assembler  Version 4.00                 3/28/20 21:19:37

BIOS SYSTEM INITIALIZATION                                  Page     1-71
DEVICE TABLE AND SRH DEFINITION                             

    1827 029C  83 EA 11                         SUB     DX,11H                 
					 ; ROOM FOR HEADER 
    1828                                        ENDIF 
    1829                                 
    1830 029F  8E DA                            MOV     DS,DX 
    1831 02A1  8E C2                            MOV     ES,DX 
    1832                                ASSUME  DS:NOTHING,ES:NOTHING 
    1833 02A3  33 D2                            XOR     DX,DX 
    1834 02A5  36: 8B 0E 0043 R                 MOV     CX,[COUNT] 
    1835 02AA  B4 3F                            MOV     AH,READ 
    1836 02AC  F9                               STC                            
					 ; IN CASE OF INT 24 
    1837 02AD  CD 21                            INT     21H                    
					 ; Function request 
    1838 02AF  9C                               PUSHF 
    1839 02B0  0E                               PUSH    CS 
    1840 02B1  1F                               POP     DS 
    1841                                ASSUME  DS:SYSINITSEG 
    1842 02B2  50                               PUSH    AX 
    1843 02B3  B4 3E                            MOV     AH,CLOSE 
    1844 02B5  CD 21                            INT     21H 
    1845 02B7  58                               POP     AX 
    1846 02B8  9D                               POPF 
    1847 02B9  72 04                            JC      CONFERR                
					 ; IF NOT WE'VE GOT A PROBLEM 
    1848 02BB  3B C8                            CMP     CX,AX 
    1849 02BD  74 09                            JZ      GETCOM                 
					 ; COULDN'T READ THE FILE 
    1850 02BF                           CONFERR: 
    1851 02BF  BA 0721 R                        MOV     DX,OFFSET CONFIG       
					 ; WANT TO PRINT CONFIG ERROR 
    1852 02C2  E8 066C R                        CALL    BADFIL 
    1853 02C5  E9 01D0 R                ENDFILV:JMP     ENDFILE 
    1854                                 
    1855 02C8                           GETCOM: 
    1856 02C8  E8 0532 R                        CALL    ORGANIZE               
					 ; ORGANIZE THE FILE 
    1857 02CB  E8 0519 R                        CALL    GETCHR 
    1858                                 
    1859 02CE  72 F5                    CONFLP: JC      ENDFILV 
    1860 02D0  8A E0                            MOV     AH,AL 
    1861 02D2  E8 0519 R                        CALL    GETCHR 
    1862                                 
    1863 02D5  80 FC 42                         CMP     AH,'B'                 
					 ; BUFFER COMMAND? 
    1864 02D8  75 0F                            JNZ     TRYC 
    1865 02DA  E8 063D R                        CALL    GETNUM 
    1866 02DD  74 27                            JZ      COFF 
    1867 02DF  3D 0064                          CMP     AX,100 
    1868 02E2  73 8C                            JAE     badop 
    1869 02E4  A2 0012 R                        MOV     [BUFFERS],AL 
    1870 02E7  EB 1D                            JMP     SHORT COFF 
    1871                                 
    1872 02E9  80 FC 43                 TRYC:   CMP     AH,'C' 
Microsoft (R) Macro Assembler  Version 4.00                 3/28/20 21:19:37

BIOS SYSTEM INITIALIZATION                                  Page     1-72
DEVICE TABLE AND SRH DEFINITION                             

    1873 02EC  74 03                            JZ      GOTC 
    1874 02EE  EB 1D 90                         JMP     TRYD 
    1875 02F1                           GOTC: 
    1876 02F1  3C 4F                            CMP     AL,'O'                 
					 ; FIRST LETTER OF "ON" 
    1877 02F3  75 11                            JNZ     COFF 
    1878 02F5  E8 0519 R                        CALL    GETCHR 
    1879 02F8  72 CB                            JC      ENDFILV 
    1880 02FA  3C 4E                            CMP     AL,'N'                 
					 ; SECOND LETTER OF "ON" 
    1881 02FC  75 08                            JNZ     COFF 
    1882 02FE  B4 33                            MOV     AH,SET_CTRL_C_TRAPPING 
					 ; TURN ON CONTROL-C CHECK 
    1883 0300  B0 01                            MOV     AL,1 
    1884 0302  8A D0                            MOV     DL,AL 
    1885 0304  CD 21                            INT     21H 
    1886                                 
    1887 0306  0E                       COFF:   PUSH    CS 
    1888 0307  1F                               POP     DS 
    1889 0308  E8 05C7 R                        CALL    NEWLINE 
    1890 030B  EB C1                            JMP     CONFLP 
    1891                                 
    1892 030D  80 FC 44                 TRYD:   CMP     AH,'D' 
    1893 0310  74 03                            JZ      GOTD 
    1894 0312  E9 049A R                        JMP     TRYF 
    1895 0315  8C CB                    GOTD:   MOV     BX,CS 
    1896 0317  8E DB                            MOV     DS,BX 
    1897                                 
    1898 0319  89 36 0061 R                     MOV     WORD PTR [BPB_ADDR],SI 
    1899 031D  8C 06 0063 R                     MOV     WORD PTR [BPB_ADDR+2],E
					S 
    1900                                 
    1901 0321  E8 05EF R                        CALL    ROUND 
    1902                                 
    1903                                        ENDIF 
    1904                                 
    1905 0324  33 C0                            XOR     AX,AX 
    1906 0326  A3 0007 R                        MOV     WORD PTR [ENTRY_POINT],
					AX 
    1907 0329  A1 0049 R                        MOV     AX,[MEMHI] 
    1908 032C  A3 0009 R                        MOV     WORD PTR [ENTRY_POINT+2
					],AX ; SET ENTRY POINT 
    1909                                 
    1910                                 
    1911                                        IF      NOT NOEXEC 
    1912 032F  A3 004B R                        MOV     [LDOFF],AX             
					 ; SET LOAD OFFSET 
    1913                                        ENDIF 
    1914                                 
    1915 0332  06                               PUSH    ES 
    1916 0333  1F                               POP     DS 
    1917 0334  8B D6                            MOV     DX,SI                  
					 ; DS:DX POINTS TO FILE NAME 
    1918                                 
Microsoft (R) Macro Assembler  Version 4.00                 3/28/20 21:19:37

BIOS SYSTEM INITIALIZATION                                  Page     1-73
DEVICE TABLE AND SRH DEFINITION                             

    1919                                        ELSE 
    1920 0336  8E C3                            MOV     ES,BX 
    1921 0338  BB 0049 R                        MOV     BX,OFFSET PRMBLK       
					 ; ES:BX POINTS TO PARAMETERS 
    1922 033B  B0 03                            MOV     AL,3 
    1923 033D  B4 4B                            MOV     AH,EXEC 
    1924 033F  F9                               STC                            
					 ; IN CASE OF INT 24 
    1925 0340  CD 21                            INT     21H                    
					 ; LOAD IN THE DEVICE DRIVER 
    1926                                        ENDIF 
    1927                                 
    1928 0342  1E                               PUSH    DS 
    1929 0343  07                               POP     ES                     
					 ; ES:SI BACK TO CONFIG.SYS 
    1930 0344  0E                               PUSH    CS 
    1931 0345  1F                               POP     DS                     
					 ; DS BACK TO SYSINIT 
    1932 0346  73 05                            JNC     GOODLD 
    1933 0348  E8 0670 R                BADBRK: CALL    BADLOAD 
    1934 034B  EB B9                            JMP     COFF 
    1935                                 
    1936 034D  06                       GOODLD: PUSH    ES                     
					 ; INITIALIZE THE DEVICE 
    1937 034E  56                               PUSH    SI 
    1938                                 
    1939 034F  0E                               PUSH    CS 
    1940 0350  07                               POP     ES 
    1941 0351  BB 0006                          MOV     BX,SDEVSTRAT 
    1942 0354  E8 060A R                        CALL    CALLDEV 
    1943 0357  BB 0008                          MOV     BX,SDEVINT 
    1944 035A  E8 060A R                        CALL    CALLDEV 
    1945                                 
    1946 035D  0E                               PUSH    CS 
    1947 035E  1F                               POP     DS 
    1948                                 
    1949                                        IF      NOT HIGHMEM 
    1950 035F  A1 005F R                        MOV     AX,WORD PTR [BREAK_ADDR
					+2]  ; REMOVE THE INIT CODE 
    1951 0362  3B 06 000F R                     CMP     AX,[MEMORY_SIZE] 
    1952 0366  72 04                            JB      BREAKOK 
    1953 0368  5E                               POP     SI 
    1954 0369  07                               POP     ES 
    1955 036A  EB DC                            JMP     BADBRK 
    1956 036C                           BREAKOK: 
    1957                                 
    1958 036C  A3 0049 R                        MOV     [MEMHI],AX 
    1959 036F  A1 005D R                        MOV     AX,WORD PTR [BREAK_ADDR
					]; REMOVE THE INIT CODE 
    1960 0372  A3 0047 R                        MOV     [MEMLO],AX 
    1961                                        ENDIF 
    1962                                 
    1963 0375  C5 16 0007 R                     LDS     DX,[ENTRY_POINT]       
					 ; SET DS:DX TO HEADER 
Microsoft (R) Macro Assembler  Version 4.00                 3/28/20 21:19:37

BIOS SYSTEM INITIALIZATION                                  Page     1-74
DEVICE TABLE AND SRH DEFINITION                             

    1964 0379  8B F2                            MOV     SI,DX 
    1965 037B  83 C6 04                         ADD     SI,SDEVATT             
					 ; DS:SI POINTS TO ATTRIBUTES 
    1966 037E  2E: C4 3E 0003 R                 LES     DI,CS:[DOSINFO]        
					 ; ES:DI POINT TO DOS INFO 
    1967 0383  8B 04                            MOV     AX,DS:[SI]             
					 ; GET ATTRIBUTES 
    1968 0385  A9 8000                          TEST    AX,DEVTYP              
					 ; TEST IF BLOCK DEV 
    1969 0388  74 1D                            JZ      ISBLOCK 
    1970                                 
    1971 038A  A9 0001                          TEST    AX,ISCIN               
					 ; IS IT A CONSOLE IN? 
    1972 038D  74 08                            JZ      TRYCLK 
    1973 038F  26: 89 55 0C                     MOV     WORD PTR ES:[DI.BCON],D
					X 
    1974 0393  26: 8C 5D 0E                     MOV     WORD PTR ES:[DI.BCON+2]
					,DS 
    1975                                 
    1976 0397  A9 0008                  TRYCLK: TEST    AX,ISCLOCK             
					 ; IS IT A CLOCK DEVICE? 
    1977 039A  74 08                            JZ      GOLINK 
    1978 039C  26: 89 55 08                     MOV     WORD PTR ES:[DI+BCLOCK]
					,DX 
    1979 03A0  26: 8C 5D 0A                     MOV     WORD PTR ES:[DI+BCLOCK+
					2],DS 
    1980 03A4  E9 044B R                GOLINK: JMP     LINKIT 
    1981                                 
    1982 03A7                           ISBLOCK: 
    1983 03A7  2E: A0 005C R                    MOV     AL,CS:[UNITCOUNT]      
					 ; IF NO UNITS FOUND.... 
    1984 03AB  0A C0                            OR      AL,AL 
    1985 03AD  75 0D                            JNZ     PERDRV 
    1986                                 
    1987                                        IF      NOT HIGHMEM 
    1988 03AF  2E: C7 06 0047 R 0000            MOV     CS:[MEMLO],0           
					 ; ...ERASE THE DEVICE 
    1989                                        ENDIF 
    1990                                 
    1991 03B6  B8 FFFF                          MOV     AX,-1 
    1992 03B9  E9 0470 R                        JMP     ENDDEV 
    1993                                 
    1994 03BC                           PERDRV: 
    1995 03BC  98                               CBW 
    1996 03BD  8B C8                            MOV     CX,AX 
    1997 03BF  8A F4                            MOV     DH,AH 
    1998 03C1  26: 8A 55 10                     MOV     DL,ES:[DI.NUMIO]       
					 ; GET NUMBER OF DEVICES 
    1999 03C5  26: 00 45 10                     ADD     ES:[DI.NUMIO],AL       
					 ; UPDATE THE AMOUNT 
    2000                                 
    2001 03C9  2E: C5 1E 0061 R                 LDS     BX,CS:[BPB_ADDR]       
					 ; POINT TO BPB ARRAY 
    2002 03CE                           PERUNIT: 
Microsoft (R) Macro Assembler  Version 4.00                 3/28/20 21:19:37

BIOS SYSTEM INITIALIZATION                                  Page     1-75
DEVICE TABLE AND SRH DEFINITION                             

    2003 03CE  2E: C4 2E 0003 R                 LES     BP,CS:[DOSINFO] 
    2004 03D3  26: C4 6E 00                     LES     BP,DWORD PTR ES:[BP.DPB
					HEAD]; GET FIRST DPB 
    2005                                 
    2006 03D7  26: 83 7E 18 FF          SCANDPB:CMP     WORD PTR ES:[BP.DPB_NEX
					T_DPB],-1 
    2007 03DC  74 06                            JZ      FOUNDPB 
    2008 03DE  26: C4 6E 18                     LES     BP,ES:[BP.DPB_NEXT_DPB]
					 
    2009 03E2  EB F3                            JMP     SCANDPB 
    2010 03E4                           FOUNDPB: 
    2011 03E4  2E: A1 0047 R                    MOV     AX,CS:[MEMLO] 
    2012 03E8  26: 89 46 18                     MOV     WORD PTR ES:[BP.DPB_NEX
					T_DPB],AX 
    2013                                 
    2014                                        ENDIF 
    2015                                 
    2016 03EC  2E: A1 0049 R                    MOV     AX,CS:[MEMHI] 
    2017 03F0  26: 89 46 1A                     MOV     WORD PTR ES:[BP.DPB_NEX
					T_DPB+2],AX 
    2018 03F4  2E: C4 2E 0047 R                 LES     BP,DWORD PTR CS:[MEMLO]
					 
    2019                                 
    2020                                        IF      NOT HIGHMEM 
    2021 03F9  2E: 83 06 0047 R 5E              ADD     WORD PTR CS:[MEMLO],DPB
					SIZ 
    2022                                        ENDIF 
    2023                                 
    2024 03FF  26: C7 46 18 FFFF                MOV     WORD PTR ES:[BP.DPB_NEX
					T_DPB],-1 
    2025 0405  26: C6 46 17 FF                  MOV     ES:[BP.DPB_FIRST_ACCESS
					],-1 
    2026                                 
    2027 040A  8B 37                            MOV     SI,[BX]                
					 ; DS:SI POINTS TO BPB 
    2028 040C  43                               INC     BX 
    2029 040D  43                               INC     BX                     
					 ; POINT TO NEXT GUY 
    2030 040E  26: 89 56 00                     MOV     WORD PTR ES:[BP.DPB_DRI
					VE],DX 
    2031 0412  B4 53                            MOV     AH,SETDPB              
					 ; HIDDEN SYSTEM CALL 
    2032 0414  CD 21                            INT     21H 
    2033 0416  26: 8B 46 02                     MOV     AX,ES:[BP.DPB_SECTOR_SI
					ZE] 
    2034 041A  06                               PUSH    ES 
    2035 041B  2E: C4 3E 0003 R                 LES     DI,CS:[DOSINFO]        
					 ; ES:DI POINT TO DOS INFO 
    2036 0420  26: 3B 45 11                     CMP     AX,ES:[DI.MAXSEC] 
    2037 0424  07                               POP     ES 
    2038 0425  76 0E                            JBE     NOTMAX 
    2039 0427  5E                               POP     SI 
    2040 0428  07                               POP     ES 
    2041 0429  BA 0000 E                        MOV     DX,OFFSET BADSIZ_PRE 
Microsoft (R) Macro Assembler  Version 4.00                 3/28/20 21:19:37

BIOS SYSTEM INITIALIZATION                                  Page     1-76
DEVICE TABLE AND SRH DEFINITION                             

    2042 042C  BB 0000 E                        MOV     BX,OFFSET BADSIZ_POST 
    2043 042F  E8 0676 R                        CALL    PRNERR 
    2044 0432  E9 0306 R                        JMP     COFF 
    2045                                 
    2046 0435  1E                       NOTMAX: PUSH    DS 
    2047 0436  52                               PUSH    DX 
    2048 0437  2E: C5 16 0007 R                 LDS     DX,CS:[ENTRY_POINT] 
    2049 043C  26: 89 56 12                     MOV     WORD PTR ES:[BP.DPB_DRI
					VER_ADDR],DX 
    2050 0440  26: 8C 5E 14                     MOV     WORD PTR ES:[BP.DPB_DRI
					VER_ADDR+2],DS 
    2051 0444  5A                               POP     DX 
    2052 0445  1F                               POP     DS 
    2053 0446  42                               INC     DX 
    2054 0447  FE C6                            INC     DH 
    2055 0449  E2 83                            LOOP    PERUNIT 
    2056                                 
    2057 044B                           LINKIT: 
    2058 044B  2E: C4 3E 0003 R                 LES     DI,CS:[DOSINFO]        
					 ; ES:DI = DOS TABLE 
    2059 0450  26: 8B 4D 17                     MOV     CX,WORD PTR ES:[DI.DEVH
					EAD] ; DX:CX = HEAD OF LIST 
    2060 0454  26: 8B 55 19                     MOV     DX,WORD PTR ES:[DI.DEVH
					EAD+2] 
    2061                                 
    2062 0458  2E: C5 36 0007 R                 LDS     SI,CS:[ENTRY_POINT]    
					 ; DS:SI = DEVICE LOCATION 
    2063 045D  26: 89 75 17                     MOV     WORD PTR ES:[DI.DEVHEAD
					],SI ; SET HEAD OF LIST IN DOS 
    2064 0461  26: 8C 5D 19                     MOV     WORD PTR ES:[DI.DEVHEAD
					+2],DS 
    2065 0465  8B 04                            MOV     AX,DS:[SI]             
					 ; GET POINTER TO NEXT DEVICE 
    2066 0467  2E: A3 0007 R                    MOV     WORD PTR CS:[ENTRY_POIN
					T],AX; AND SAVE IT 
    2067                                 
    2068 046B  89 0C                            MOV     WORD PTR DS:[SI],CX    
					 ; LINK IN THE DRIVER 
    2069 046D  89 54 02                         MOV     WORD PTR DS:[SI+2],DX 
    2070 0470                           ENDDEV: 
    2071 0470  5E                               POP     SI 
    2072 0471  07                               POP     ES 
    2073 0472  40                               INC     AX                     
					 ; AX = FFFF? 
    2074 0473  74 03                            JZ      COFFV 
    2075 0475  E9 034D R                        JMP     GOODLD                 
					 ; OTHERWISE PRETEND WE LOADED IT IN 
    2076 0478  E9 0306 R                COFFV:  JMP     COFF 
    2077                                 
    2078 047B                           TRYQ: 
    2079 047B  80 FC 51                         CMP     AH,'Q' 
    2080 047E  75 2E                            JNZ     TRYW 
    2081 0480  E8 063D R                        CALL    GETNUM 
    2082 0483  74 F3                            JZ      COFFV 
Microsoft (R) Macro Assembler  Version 4.00                 3/28/20 21:19:37

BIOS SYSTEM INITIALIZATION                                  Page     1-77
DEVICE TABLE AND SRH DEFINITION                             

    2083 0485  0A E4                            OR      AH,AH 
    2084 0487  75 EF                            JNZ     COFFV 
    2085 0489  B4 38                            MOV     AH,INTERNATIONAL       
					 ; AL is country code 
    2086 048B  BA FFFF                          MOV     DX,-1                  
					 ; Set country 
    2087 048E  CD 21                            INT     21H 
    2088 0490  73 E6                            JNC     COFFV 
    2089 0492  BA 0000 E                        MOV     DX,OFFSET BADCOUNTRY 
    2090 0495  E8 068C R                        CALL    PRINT 
    2091 0498  EB DE                            JMP     COFFV 
    2092                                 
    2093 049A                           TRYF: 
    2094 049A  80 FC 46                         CMP     AH,'F' 
    2095 049D  75 DC                            JNZ     TRYQ 
    2096 049F  E8 063D R                        CALL    GETNUM 
    2097 04A2  74 D4                            JZ      COFFV 
    2098 04A4  3D 0064                          CMP     AX,100 
    2099 04A7  73 5B                            JAE     TryX 
    2100 04A9  A2 0013 R                        MOV     [FILES],AL 
    2101 04AC  EB CA                            JMP     COFFV 
    2102 04AE                           TRYW: 
    2103 04AE  80 FC 57                         CMP     AH,'W' 
    2104 04B1  75 0E                            JNZ     TRYA 
    2105 04B3  8A D0                            MOV     DL,AL 
    2106 04B5  B8 3701                          MOV     AX,(CHAR_OPER SHL 8) OR
					 1   ; SET SWITCH CHARACTER 
    2107 04B8  88 16 0015 R                     MOV     [COMMAND_LINE+1],DL 
    2108 04BC  CD 21                            INT     21H 
    2109 04BE  E9 0306 R                        JMP     COFF 
    2110                                 
    2111 04C1                           TRYA: 
    2112 04C1  80 FC 41                         CMP     AH,'A' 
    2113 04C4  75 0E                            JNZ     TRYS 
    2114 04C6  3C 46                            CMP     AL,'F'                 
					 ; FIRST LETTER OF "FALSE" 
    2115 04C8  75 07                            JNZ     COFFJ 
    2116 04CA  B8 3703                          MOV     AX,(CHAR_OPER SHL 8) OR
					 3   ; TURN ON "/DEV" PREFIX 
    2117 04CD  32 D2                            XOR     DL,DL 
    2118 04CF  CD 21                            INT     21H 
    2119 04D1  E9 0306 R                COFFJ:  JMP     COFF 
    2120                                 
    2121 04D4                           TRYS: 
    2122 04D4  80 FC 53                         CMP     AH,'S' 
    2123 04D7  75 2B                            JNZ     TRYX 
    2124 04D9  C6 06 0015 R 00                  MOV     [COMMAND_LINE+1],0 
    2125 04DE  BF 072E R                        MOV     DI,OFFSET COMMND + 1 
    2126 04E1  88 45 FF                         MOV     [DI-1],AL 
    2127 04E4                           STORESHELL: 
    2128 04E4  E8 0519 R                        CALL    GETCHR 
    2129 04E7  0A C0                            OR      AL,AL 
    2130 04E9  74 1C                            JZ      GETSHPARMS 
    2131 04EB  3C 20                            CMP     AL," " 
Microsoft (R) Macro Assembler  Version 4.00                 3/28/20 21:19:37

BIOS SYSTEM INITIALIZATION                                  Page     1-78
DEVICE TABLE AND SRH DEFINITION                             

    2132 04ED  72 05                            JB      ENDSH 
    2133 04EF  88 05                            MOV     [DI],AL 
    2134 04F1  47                               INC     DI 
    2135 04F2  EB F0                            JMP     STORESHELL 
    2136                                 
    2137 04F4                           ENDSH: 
    2138 04F4  C6 05 00                         MOV     BYTE PTR [DI],0 
    2139 04F7  E8 0519 R                        CALL    GETCHR 
    2140 04FA  3C 0A                            CMP     AL,10 
    2141 04FC  75 03                            JNZ     CONV 
    2142 04FE  E8 0519 R                        CALL    GETCHR 
    2143 0501  E9 02CE R                CONV:   JMP     CONFLP 
    2144                                 
    2145 0504                           TRYX: 
    2146 0504  E9 0270 R                        JMP     BADOP 
    2147                                 
    2148 0507                           GETSHPARMS: 
    2149 0507  C6 05 00                         MOV     BYTE PTR [DI],0 
    2150 050A  BF 0015 R                        MOV     DI,OFFSET COMMAND_LINE+
					1 
    2151 050D                           PARMLOOP: 
    2152 050D  E8 0519 R                        CALL    GETCHR 
    2153 0510  3C 20                            CMP     AL," " 
    2154 0512  72 E0                            JB      ENDSH 
    2155 0514  88 05                            MOV     [DI],AL 
    2156 0516  47                               INC     DI 
    2157 0517  EB F4                            JMP     PARMLOOP 
    2158                                 
    2159 0519  8B 0E 0043 R             GETCHR: MOV     CX,COUNT 
    2160 051D  E3 11                            JCXZ    NOCHAR 
    2161 051F  8B 36 0045 R                     MOV     SI,CHRPTR 
    2162 0523  26: 8A 04                        MOV     AL,ES:[SI] 
    2163 0526  FF 0E 0043 R                     DEC     COUNT 
    2164 052A  FF 06 0045 R                     INC     CHRPTR 
    2165 052E  F8                               CLC 
    2166 052F  C3                               RET 
    2167 0530  F9                       NOCHAR: STC 
    2168 0531  C3                               RET 
    2169                                 
    2170 0532                           ORGANIZE: 
    2171 0532  8B 0E 0043 R                     MOV     CX,[COUNT] 
    2172 0536  E3 F8                            JCXZ    NOCHAR 
    2173 0538  E8 05D4 R                        CALL    MAPCASE 
    2174 053B  33 F6                            XOR     SI,SI 
    2175 053D  8B FE                            MOV     DI,SI 
    2176                                 
    2177 053F  E8 059B R                ORG1:   CALL    GET                    
					 ; SKIP LEADING CONTROL CHARACTERS 
    2178 0542  3C 20                            CMP     AL,' ' 
    2179 0544  72 F9                            JB      ORG1 
    2180                                 
    2181 0546  51                               PUSH    CX 
    2182 0547  56                               PUSH    SI 
    2183 0548  57                               PUSH    DI 
Microsoft (R) Macro Assembler  Version 4.00                 3/28/20 21:19:37

BIOS SYSTEM INITIALIZATION                                  Page     1-79
DEVICE TABLE AND SRH DEFINITION                             

    2184 0549  8B EE                            MOV     BP,SI 
    2185 054B  4D                               DEC     BP 
    2186 054C  BE 073A R                        MOV     SI,OFFSET COMTAB       
					 ; Prepare to search command table 
    2187 054F  B5 00                            MOV     CH,0 
    2188 0551                           FINDCOM: 
    2189 0551  8B FD                            MOV     DI,BP 
    2190 0553  8A 0C                            MOV     CL,[SI] 
    2191 0555  46                               INC     SI 
    2192 0556  E3 0E                            JCXZ    NOCOM 
    2193 0558  F3/ A6                           REPE    CMPSB 
    2194 055A  9F                               LAHF 
    2195 055B  03 F1                            ADD     SI,CX                  
					 ; Bump to next position without affect
					ing flags 
    2196 055D  9E                               SAHF 
    2197 055E  AC                               LODSB                          
					 ; Get indicator letter 
    2198 055F  75 F0                            JNZ     FINDCOM 
    2199 0561  5F                               POP     DI 
    2200 0562  5E                               POP     SI 
    2201 0563  59                               POP     CX 
    2202 0564  EB 05                            JMP     SHORT GOTCOM 
    2203                                 
    2204 0566                           NOCOM: 
    2205 0566  5F                               POP     DI 
    2206 0567  5E                               POP     SI 
    2207 0568  59                               POP     CX 
    2208 0569  B0 5A                            MOV     AL,'Z' 
    2209 056B  AA                       GOTCOM: STOSB                          
					 ; SAVE INDICATOR CHAR IN BUFFER 
    2210                                 
    2211 056C  E8 0593 R                ORG2:   CALL    GET2                   
					 ; SKIP NAME UNTIL DELIMETER 
    2212 056F  E8 05A8 R                        CALL    DELIM                  
					 ; 
    2213 0572  75 F8                            JNZ     ORG2 
    2214                                 
    2215 0574  E8 059B R                        CALL    GET                    
					 ; GET CHARS TO RIGHT OF EQUALS SIGN 
    2216 0577  AA                               STOSB 
    2217                                 
    2218 0578  E8 0593 R                ORG4:   CALL    GET2 
    2219 057B  AA                               STOSB 
    2220 057C  3C 20                            CMP     AL,' ' 
    2221 057E  77 F8                            JA      ORG4 
    2222 0580  3C 0A                            CMP     AL,10 
    2223 0582  74 BB                            JZ      ORG1 
    2224                                 
    2225 0584  26: C6 45 FF 00                  MOV     BYTE PTR ES:[DI-1],0 
    2226 0589  E8 0593 R                ORG5:   CALL    GET2 
    2227 058C  AA                               STOSB 
    2228 058D  3C 0A                            CMP     AL,10 
    2229 058F  75 F8                            JNZ     ORG5 
Microsoft (R) Macro Assembler  Version 4.00                 3/28/20 21:19:37

BIOS SYSTEM INITIALIZATION                                  Page     1-80
DEVICE TABLE AND SRH DEFINITION                             

    2230 0591  EB AC                            JMP     ORG1 
    2231                                 
    2232 0593                           GET2: 
    2233 0593  E3 26                            JCXZ    NOGET 
    2234 0595  26: 8A 04                        MOV     AL,ES:[SI] 
    2235 0598  46                               INC     SI 
    2236 0599  49                               DEC     CX 
    2237 059A  C3                               RET 
    2238                                 
    2239 059B  E3 1E                    GET:    JCXZ    NOGET 
    2240 059D  26: 8A 04                        MOV     AL,ES:[SI] 
    2241 05A0  46                               INC     SI 
    2242 05A1  49                               DEC     CX 
    2243 05A2  E8 05A8 R                        CALL    DELIM 
    2244 05A5  74 F4                            JZ      GET 
    2245 05A7  C3                       GRET:   RET 
    2246                                 
    2247                                 
    2248 05A8  3C 20                    DELIM:  CMP     AL,' ' 
    2249 05AA  74 FB                            JZ      GRET 
    2250 05AC  3C 09                            CMP     AL,9 
    2251 05AE  74 F7                            JZ      GRET 
    2252 05B0  3C 3D                            CMP     AL,'=' 
    2253 05B2  74 F3                            JZ      GRET 
    2254 05B4  3C 2C                            CMP     AL,',' 
    2255 05B6  74 EF                            JZ      GRET 
    2256 05B8  3C 3B                            CMP     AL,';' 
    2257 05BA  C3                               RET 
    2258                                 
    2259                                 
    2260 05BB  59                       NOGET:  POP     CX 
    2261 05BC  89 3E 0043 R                     MOV     COUNT,DI 
    2262 05C0  33 F6                            XOR     SI,SI 
    2263 05C2  89 36 0045 R                     MOV     CHRPTR,SI 
    2264 05C6  C3                               RET 
    2265                                ; 
    2266                                ;  NEWLINE RETURNS WITH FIRST CHARACTER
					 OF NEXT LINE 
    2267                                ; 
    2268 05C7  E8 0519 R                NEWLINE:CALL    GETCHR                 
					 ; SKIP NON-CONTROL CHARACTERS 
    2269 05CA  72 07                            JC      NONEW 
    2270 05CC  3C 0A                            CMP     AL,10                  
					 ; LOOK FOR LINE FEED 
    2271 05CE  75 F7                            JNZ     NEWLINE 
    2272 05D0  E8 0519 R                        CALL    GETCHR 
    2273 05D3  C3                       NONEW:  RET 
    2274                                 
    2275 05D4                           MAPCASE: 
    2276 05D4  51                               PUSH    CX 
    2277 05D5  56                               PUSH    SI 
    2278 05D6  1E                               PUSH    DS 
    2279 05D7  06                               PUSH    ES 
    2280 05D8  1F                               POP     DS 
Microsoft (R) Macro Assembler  Version 4.00                 3/28/20 21:19:37

BIOS SYSTEM INITIALIZATION                                  Page     1-81
DEVICE TABLE AND SRH DEFINITION                             

    2281 05D9  33 F6                            XOR     SI,SI 
    2282 05DB                           CONVLOOP: 
    2283 05DB  AC                               LODSB 
    2284                                 
    2285                                        ENDIF 
    2286                                 
    2287 05DC  3C 61                            CMP     AL,'a' 
    2288 05DE  72 09                            JB      NOCONV 
    2289 05E0  3C 7A                            CMP     AL,'z' 
    2290 05E2  77 05                            JA      NOCONV 
    2291 05E4  2C 20                            SUB     AL,20H 
    2292 05E6  88 44 FF                         MOV     [SI-1],AL 
    2293 05E9                           NOCONV: 
    2294 05E9  E2 F0                            LOOP    CONVLOOP 
    2295 05EB                           CONVDONE: 
    2296 05EB  1F                               POP     DS 
    2297 05EC  5E                               POP     SI 
    2298 05ED  59                               POP     CX 
    2299 05EE  C3                               RET 
    2300                                 
    2301                                        ENDIF 
    2302                                 
    2303                                ASSUME DS:NOTHING 
    2304                                 
    2305 05EF  36: A1 0047 R            ROUND:  MOV     AX,[MEMLO] 
    2306                                 
    2307                                        IF      NOT HIGHMEM 
    2308 05F3  05 000F                          ADD     AX,15 
    2309                                        ENDIF 
    2310                                 
    2311 05F6  D1 E8                            SHR     AX,1 
    2312 05F8  D1 E8                            SHR     AX,1 
    2313 05FA  D1 E8                            SHR     AX,1 
    2314 05FC  D1 E8                            SHR     AX,1 
    2315 05FE  36: 01 06 0049 R                 ADD     [MEMHI],AX 
    2316 0603  33 C0                            XOR     AX,AX 
    2317 0605  36: A3 0047 R                    MOV     [MEMLO],AX 
    2318 0609  C3                               RET 
    2319                                 
    2320 060A  2E: 8E 1E 0009 R         CALLDEV:MOV     DS,WORD PTR CS:[ENTRY_P
					OINT+2] 
    2321 060F  2E: 03 1E 0007 R                 ADD     BX,WORD PTR CS:[ENTRY_P
					OINT]; Do a little relocation 
    2322 0614  8B 07                            MOV     AX,DS:[BX] 
    2323 0616  2E: FF 36 0007 R                 PUSH    WORD PTR CS:[ENTRY_POIN
					T] 
    2324 061B  2E: A3 0007 R                    MOV     WORD PTR CS:[ENTRY_POIN
					T],AX 
    2325 061F  BB 004F R                        MOV     BX,OFFSET PACKET 
    2326 0622  36: FF 1E 0007 R                 CALL    [ENTRY_POINT] 
    2327 0627  2E: 8F 06 0007 R                 POP     WORD PTR CS:[ENTRY_POIN
					T] 
    2328 062C  C3                               RET 
    2329                                 
Microsoft (R) Macro Assembler  Version 4.00                 3/28/20 21:19:37

BIOS SYSTEM INITIALIZATION                                  Page     1-82
DEVICE TABLE AND SRH DEFINITION                             

    2330 062D  58                       BADNUM: POP     AX                     
					 ; POP RETURN ADDRESS 
    2331 062E  E9 0270 R                        JMP     BADOP 
    2332                                 
    2333 0631                           ToDigit: 
    2334 0631  2C 30                            SUB     AL,'0' 
    2335 0633  72 06                            JB      NotDig 
    2336 0635  3C 09                            CMP     AL,9 
    2337 0637  77 02                            JA      NotDig 
    2338 0639  F8                               CLC 
    2339 063A  C3                               RET 
    2340 063B  F9                       NotDig: STC 
    2341 063C  C3                               RET 
    2342                                 
    2343 063D  33 DB                    GETNUM: XOR     BX,BX                  
					 ; running count is zero 
    2344 063F  E8 0631 R                B2:     CALL    ToDigit                
					 ; do we have a digit 
    2345 0642  72 E9                            JC      BadNum                 
					 ; no, bomb 
    2346 0644  93                               XCHG    AX,BX                  
					 ; put total in AX 
    2347 0645  53                               PUSH    BX                     
					 ; save digit 
    2348 0646  BB 000A                          MOV     BX,10                  
					 ; base of arithmetic 
    2349 0649  F7 E3                            MUL     BX                     
					 ; shift by one decimal digit 
    2350 064B  5B                               POP     BX                     
					 ; get back digit 
    2351 064C  02 C3                            ADD     AL,BL                  
					 ; get total 
    2352 064E  80 D4 00                         ADC     AH,0                   
					 ; make that 16 bits 
    2353 0651  72 DA                            JC      BADNUM                 
					 ; too big a number 
    2354 0653  93                               XCHG    AX,BX                  
					 ; stash total 
    2355 0654  E8 0519 R                        CALL    GETCHR                 
					 ; GET NEXT DIGIT 
    2356 0657  72 0E                            JC      B1                     
					 ; no more characters 
    2357 0659  0A C0                            OR      AL,AL                  
					 ; end of line separator? 
    2358 065B  75 E2                            JNZ     B2                     
					 ; no, try as a valid character 
    2359 065D  36: FF 06 0043 R                 INC     COUNT                  
					 ; one more character to scan 
    2360 0662  36: FF 0E 0045 R                 DEC     CHRPTR                 
					 ; back up over separator 
    2361 0667  8B C3                    B1:     MOV     AX,BX                  
					 ; get proper count 
    2362 0669  0B C0                            OR      AX,AX 
    2363 066B  C3                               RET 
Microsoft (R) Macro Assembler  Version 4.00                 3/28/20 21:19:37

BIOS SYSTEM INITIALIZATION                                  Page     1-83
DEVICE TABLE AND SRH DEFINITION                             

    2364                                ; 
    2365                                ;       ES:SI POINTS TO FILE NAME (NUL 
					TERMINATED) 
    2366                                ;       DS:DX POINTS TO STRING TO OUTPU
					T IN FRONT OF NAME ($ TERM) 
    2367                                ; 
    2368 066C                           BADFIL: 
    2369 066C  0E                               PUSH    CS 
    2370 066D  07                               POP     ES 
    2371 066E  8B F2                            MOV     SI,DX 
    2372 0670                           BADLOAD: 
    2373 0670  BA 0000 E                        MOV     DX,OFFSET BADLD_PRE    
					 ; WANT TO PRINT CONFIG ERROR 
    2374 0673  BB 0000 E                        MOV     BX,OFFSET BADLD_POST 
    2375 0676                           PRNERR: 
    2376 0676  0E                               PUSH    CS 
    2377 0677  1F                               POP     DS 
    2378 0678  B4 09                            MOV     AH,STD_CON_STRING_OUTPU
					T 
    2379 067A  CD 21                            INT     21H 
    2380 067C  26: 8A 14                PRN1:   MOV     DL,ES:[SI] 
    2381 067F  0A D2                            OR      DL,DL 
    2382 0681  74 07                            JZ      PRN2 
    2383 0683  B4 02                            MOV     AH,STD_CON_OUTPUT 
    2384 0685  CD 21                            INT     21H 
    2385 0687  46                               INC     SI 
    2386 0688  EB F2                            JMP     PRN1 
    2387 068A  8B D3                    PRN2:   MOV     DX,BX 
    2388 068C  B4 09                    PRINT:  MOV     AH,STD_CON_STRING_OUTPU
					T 
    2389 068E  CD 21                            INT     21H 
    2390 0690  C3                               RET 
    2391                                ; 
    2392                                ; LOAD FILE CALLED [DS:DX] AT MEMORY LO
					CATION ES:BX 
    2393                                ; 
    2394 0691                           LDFIL: 
    2395 0691  50                               PUSH    AX 
    2396 0692  53                               PUSH    BX 
    2397 0693  51                               PUSH    CX 
    2398 0694  52                               PUSH    DX 
    2399 0695  56                               PUSH    SI 
    2400 0696  1E                               PUSH    DS 
    2401 0697  53                               PUSH    BX 
    2402                                 
    2403 0698  33 C0                            XOR     AX,AX                  
					 ; OPEN THE FILE 
    2404 069A  B4 3D                            MOV     AH,OPEN 
    2405 069C  F9                               STC                            
					 ; IN CASE OF INT 24 
    2406 069D  CD 21                            INT     21H 
    2407 069F  5A                               POP     DX                     
					 ; Trans addr is DS:DX 
    2408 06A0  72 1E                            JC      LDRET 
Microsoft (R) Macro Assembler  Version 4.00                 3/28/20 21:19:37

BIOS SYSTEM INITIALIZATION                                  Page     1-84
DEVICE TABLE AND SRH DEFINITION                             

    2409                                 
    2410 06A2  06                               PUSH    ES                     
					 ; READ THE FILE IN 
    2411 06A3  1F                               POP     DS 
    2412 06A4  8B D8                            MOV     BX,AX                  
					 ; Handle in BX 
    2413 06A6  B9 FF00                          MOV     CX,0FF00H 
    2414 06A9  B4 3F                            MOV     AH,READ 
    2415 06AB  F9                               STC                            
					 ; IN CASE OF INT 24 
    2416 06AC  CD 21                            INT     21H 
    2417 06AE  72 10                            JC      LDRET 
    2418 06B0  8B F2                            MOV     SI,DX                  
					 ; CHECK FOR EXE FILE 
    2419 06B2  81 3C 5A4D                       CMP     WORD PTR [SI],"ZM" 
    2420 06B6  75 03                            JNZ     LDCLS 
    2421 06B8  F9                       LDERR:  STC 
    2422 06B9  EB 05                            JMP     SHORT LDRET 
    2423                                 
    2424 06BB  B4 3E                    LDCLS:  MOV     AH,CLOSE               
					 ; CLOSE THE FILE 
    2425 06BD  F9                               STC 
    2426 06BE  CD 21                            INT     21H 
    2427                                 
    2428 06C0  1F                       LDRET:  POP     DS 
    2429 06C1  5E                               POP     SI 
    2430 06C2  5A                               POP     DX 
    2431 06C3  59                               POP     CX 
    2432 06C4  5B                               POP     BX 
    2433 06C5  58                               POP     AX 
    2434 06C6  C3                               RET 
    2435                                ; 
    2436                                ;  OPEN DEVICE POINTED TO BY DX, AL HAS
					 ACCESS CODE 
    2437                                ;   IF UNABLE TO OPEN DO A DEVICE OPEN 
					NULL DEVICE INSTEAD 
    2438                                ; 
    2439 06C7                           OPEN_DEV: 
    2440 06C7  E8 06E4 R                        CALL    OPEN_FILE 
    2441 06CA  73 07                            JNC     OPEN_DEV3 
    2442 06CC                           OPEN_DEV1: 
    2443 06CC  BA 06FD R                        MOV     DX,OFFSET NULDEV 
    2444 06CF  E8 06E4 R                        CALL    OPEN_FILE 
    2445 06D2                           OPEN_DEV2: 
    2446 06D2  C3                               RET 
    2447 06D3                           OPEN_DEV3: 
    2448 06D3  33 C0                            XOR     AX,AX                  
					 ; GET DEVICE INFO 
    2449 06D5  B4 44                            MOV     AH,IOCTL 
    2450 06D7  CD 21                            INT     21H 
    2451 06D9  F6 C2 80                         TEST    DL,10000000B 
    2452 06DC  75 F4                            JNZ     OPEN_DEV2 
    2453 06DE  B4 3E                            MOV     AH,CLOSE 
    2454 06E0  CD 21                            INT     21H 
Microsoft (R) Macro Assembler  Version 4.00                 3/28/20 21:19:37

BIOS SYSTEM INITIALIZATION                                  Page     1-85
DEVICE TABLE AND SRH DEFINITION                             

    2455 06E2  EB E8                            JMP     OPEN_DEV1 
    2456                                 
    2457 06E4                           OPEN_FILE: 
    2458 06E4  B4 3D                            MOV     AH,OPEN 
    2459 06E6  F9                               STC 
    2460 06E7  CD 21                            INT     21H 
    2461 06E9  C3                               RET 
    2462                                 
    2463 06EA  83 C4 06                 INT24:  ADD     SP,6                   
					 ; RESTORE MACHINE STATE 
    2464 06ED  58                               POP     AX 
    2465 06EE  5B                               POP     BX 
    2466 06EF  59                               POP     CX 
    2467 06F0  5A                               POP     DX 
    2468 06F1  5E                               POP     SI 
    2469 06F2  5F                               POP     DI 
    2470 06F3  5D                               POP     BP 
    2471 06F4  1F                               POP     DS 
    2472 06F5  07                               POP     ES 
    2473 06F6  50                               PUSH    AX 
    2474 06F7  B4 19                            MOV     AH,GET_DEFAULT_DRIVE   
					 ; INITIALIZE DOS 
    2475 06F9  CD 21                            INT     21H 
    2476 06FB  58                               POP     AX 
    2477 06FC  CF                               IRET                           
					 ; BACK TO USER 
    2478                                 
    2479                                        ENDIF 
    2480                                 
    2481 06FD  5C 44 45 56 5C 4E 55     NULDEV  DB      "\DEV\NUL",0 
    2482       4C 00                    
    2483 0706  5C 44 45 56 5C 43 4F     CONDEV  DB      "\DEV\CON",0 
    2484       4E 00                    
    2485 070F  5C 44 45 56 5C 41 55     AUXDEV  DB      "\DEV\AUX",0 
    2486       58 00                    
    2487 0718  5C 44 45 56 5C 50 52     PRNDEV  DB      "\DEV\PRN",0 
    2488       4E 00                    
    2489                                 
    2490 0721  5C 43 4F 4E 46 49 47     CONFIG  DB      "\CONFIG.SYS",0 
    2491       2E 53 59 53 00           
    2492                                 
    2493 072D  5C 43 4F 4D 4D 41 4E     COMMND  DB      "\COMMAND.COM",0 
    2494       44 2E 43 4F 4D 00        
    2495                                 
    2496 073A                           COMTAB  LABEL   BYTE 
    2497 073A  07 42 55 46 46 45 52             DB      7,"BUFFERS",'B' 
    2498       53 42                    
    2499 0743  05 42 52 45 41 4B 43             DB      5,"BREAK",'C' 
    2500 074A  05 53 48 45 4C 4C 53             DB      5,"SHELL",'S' 
    2501 0751  06 44 45 56 49 43 45             DB      6,"DEVICE",'D' 
    2502       44                       
    2503 0759  05 46 49 4C 45 53 46             DB      5,"FILES",'F' 
    2504 0760  08 53 57 49 54 43 48             DB      8,"SWITCHAR",'W' 
    2505       41 52 57                 
Microsoft (R) Macro Assembler  Version 4.00                 3/28/20 21:19:37

BIOS SYSTEM INITIALIZATION                                  Page     1-86
DEVICE TABLE AND SRH DEFINITION                             

    2506 076A  08 41 56 41 49 4C 44             DB      8,"AVAILDEV",'A' 
    2507       45 56 41                 
    2508 0774  07 43 4F 55 4E 54 52             DB      7,"COUNTRY",'Q' 
    2509       59 51                    
    2510 077D  00                               DB      0 
    2511                                 
    2512                                 
    2513 077E                           SYSINITSEG      ENDS 
    2514                                        END 

Microsoft (R) Macro Assembler  Version 4.00                 3/28/20 21:19:37

BIOS SYSTEM INITIALIZATION                                  Symbols-1
                                                             

Macros:

		N a m e			Lines

BREAK  . . . . . . . . . . . . .  	   2
CONDRET  . . . . . . . . . . . .  	  19
CONTEXT  . . . . . . . . . . . .  	   3
DO_EXT . . . . . . . . . . . . .  	   0
ENTRY  . . . . . . . . . . . . .  	   2
ERROR  . . . . . . . . . . . . .  	   4
INVOKE . . . . . . . . . . . . .  	   8
I_AM . . . . . . . . . . . . . .  	  14
I_NEED . . . . . . . . . . . . .  	  11
JUMP . . . . . . . . . . . . . .  	  17
LONG_ADDR  . . . . . . . . . . .  	   7
MAKELAB  . . . . . . . . . . . .  	   4
PROCEDURE  . . . . . . . . . . .  	   2
RETC . . . . . . . . . . . . . .  	   1
RETNC  . . . . . . . . . . . . .  	   1
RETNZ  . . . . . . . . . . . . .  	   1
RETURN . . . . . . . . . . . . .  	   5
RETZ . . . . . . . . . . . . . .  	   1
SHORT_ADDR . . . . . . . . . . .  	  12
TRANSFER . . . . . . . . . . . .  	   8

Structures and Records:

                N a m e                 Width   # fields
                                        Shift   Width   Mask    Initial

ARENA  . . . . . . . . . . . . .  	0005	0003
  ARENA_SIGNATURE  . . . . . . .  	0000
  ARENA_OWNER  . . . . . . . . .  	0001
  ARENA_SIZE . . . . . . . . . .  	0003
BPBLOCK  . . . . . . . . . . . .  	000D	0008
  BPSECSZ  . . . . . . . . . . .  	0000
  BPCLUS . . . . . . . . . . . .  	0002
  BPRES  . . . . . . . . . . . .  	0003
  BPFTCNT  . . . . . . . . . . .  	0005
  BPDRCNT  . . . . . . . . . . .  	0006
  BPSCCNT  . . . . . . . . . . .  	0008
  BPMEDIA  . . . . . . . . . . .  	000A
  BPFTSEC  . . . . . . . . . . .  	000B
BUFFINFO . . . . . . . . . . . .  	0010	0009
  NEXTBUF  . . . . . . . . . . .  	0000
  BUFDRV . . . . . . . . . . . .  	0004
  BUFDIRTY . . . . . . . . . . .  	0005
  BUFPRI . . . . . . . . . . . .  	0006
  VISIT  . . . . . . . . . . . .  	0007
  BUFSECNO . . . . . . . . . . .  	0008
  BUFWRTCNT  . . . . . . . . . .  	000A
  BUFWRTINC  . . . . . . . . . .  	000B
  BUFDRVDP . . . . . . . . . . .  	000C
DIR_ENTRY  . . . . . . . . . . .  	0020	0008
Microsoft (R) Macro Assembler  Version 4.00                 3/28/20 21:19:37

BIOS SYSTEM INITIALIZATION                                  Symbols-2
                                                             

  DIR_NAME . . . . . . . . . . .  	0000
  DIR_ATTR . . . . . . . . . . .  	000B
  DIR_PAD  . . . . . . . . . . .  	000C
  DIR_TIME . . . . . . . . . . .  	0016
  DIR_DATE . . . . . . . . . . .  	0018
  DIR_FIRST  . . . . . . . . . .  	001A
  DIR_SIZE_L . . . . . . . . . .  	001C
  DIR_SIZE_H . . . . . . . . . .  	001E
DPB  . . . . . . . . . . . . . .  	005E	0012
  DPB_DRIVE  . . . . . . . . . .  	0000
  DPB_UNIT . . . . . . . . . . .  	0001
  DPB_SECTOR_SIZE  . . . . . . .  	0002
  DPB_CLUSTER_MASK . . . . . . .  	0004
  DPB_CLUSTER_SHIFT  . . . . . .  	0005
  DPB_FIRST_FAT  . . . . . . . .  	0006
  DPB_FAT_COUNT  . . . . . . . .  	0008
  DPB_ROOT_ENTRIES . . . . . . .  	0009
  DPB_FIRST_SECTOR . . . . . . .  	000B
  DPB_MAX_CLUSTER  . . . . . . .  	000D
  DPB_FAT_SIZE . . . . . . . . .  	000F
  DPB_DIR_SECTOR . . . . . . . .  	0010
  DPB_DRIVER_ADDR  . . . . . . .  	0012
  DPB_MEDIA  . . . . . . . . . .  	0016
  DPB_FIRST_ACCESS . . . . . . .  	0017
  DPB_NEXT_DPB . . . . . . . . .  	0018
  DPB_CURRENT_DIR  . . . . . . .  	001C
  DPB_DIR_TEXT . . . . . . . . .  	001E
EXEC0  . . . . . . . . . . . . .  	000E	0004
  EXEC0_ENVIRON  . . . . . . . .  	0000
  EXEC0_COM_LINE . . . . . . . .  	0002
  EXEC0_5C_FCB . . . . . . . . .  	0006
  EXEC0_6C_FCB . . . . . . . . .  	000A
EXEC1  . . . . . . . . . . . . .  	0016	0008
  EXEC1_ENVIRON  . . . . . . . .  	0000
  EXEC1_COM_LINE . . . . . . . .  	0002
  EXEC1_5C_FCB . . . . . . . . .  	0006
  EXEC1_6C_FCB . . . . . . . . .  	000A
  EXEC1_SP . . . . . . . . . . .  	000E
  EXEC1_SS . . . . . . . . . . .  	0010
  EXEC1_IP . . . . . . . . . . .  	0012
  EXEC1_CS . . . . . . . . . . .  	0014
EXEC3  . . . . . . . . . . . . .  	0004	0002
  EXEC3_LOAD_ADDR  . . . . . . .  	0000
  EXEC3_RELOC_FAC  . . . . . . .  	0002
EXE_FILE . . . . . . . . . . . .  	0020	000F
  EXE_SIGNATURE  . . . . . . . .  	0000
  EXE_LEN_MOD_512  . . . . . . .  	0002
  EXE_PAGES  . . . . . . . . . .  	0004
  EXE_RLE_COUNT  . . . . . . . .  	0006
  EXE_PAR_DIR  . . . . . . . . .  	0008
  EXE_MIN_BSS  . . . . . . . . .  	000A
  EXE_MAX_BSS  . . . . . . . . .  	000C
  EXE_SS . . . . . . . . . . . .  	000E
  EXE_SP . . . . . . . . . . . .  	0010
Microsoft (R) Macro Assembler  Version 4.00                 3/28/20 21:19:37

BIOS SYSTEM INITIALIZATION                                  Symbols-3
                                                             

  EXE_CHKSUM . . . . . . . . . .  	0012
  EXE_IP . . . . . . . . . . . .  	0014
  EXE_CS . . . . . . . . . . . .  	0016
  EXE_RLE_TABLE  . . . . . . . .  	0018
  EXE_IOV  . . . . . . . . . . .  	001A
  EXE_SYM_TAB  . . . . . . . . .  	001C
FIND_BUF . . . . . . . . . . . .  	002B	000C
  FIND_BUF_SATTR . . . . . . . .  	0000
  FIND_BUF_DRIVE . . . . . . . .  	0001
  FIND_BUF_NAME  . . . . . . . .  	0002
  FIND_BUF_LASTENT . . . . . . .  	000D
  FIND_BUF_THISDPB . . . . . . .  	000F
  FIND_BUF_DIRSTART  . . . . . .  	0013
  FIND_BUF_ATTR  . . . . . . . .  	0015
  FIND_BUF_TIME  . . . . . . . .  	0016
  FIND_BUF_DATE  . . . . . . . .  	0018
  FIND_BUF_SIZE_L  . . . . . . .  	001A
  FIND_BUF_SIZE_H  . . . . . . .  	001C
  FIND_BUF_PNAME . . . . . . . .  	001E
INTERNAT_BLOCK . . . . . . . . .  	0018	0015
  DATE_TIM_FORMAT  . . . . . . .  	0000
  CURRENCY_SYM . . . . . . . . .  	0002
  THOUS_SEP  . . . . . . . . . .  	0007
  DECIMAL_SEP  . . . . . . . . .  	0009
  DATE_SEP . . . . . . . . . . .  	000B
  TIME_SEP . . . . . . . . . . .  	000D
  BIT_FEILD  . . . . . . . . . .  	000F
  CURRENCY_CENTS . . . . . . . .  	0010
  TIME_24  . . . . . . . . . . .  	0011
  MAP_CALL . . . . . . . . . . .  	0012
  DATA_SEP . . . . . . . . . . .  	0016
PROCESS_DATA_BLOCK . . . . . . .  	005B	000E
  PDB_EXIT_CALL  . . . . . . . .  	0000
  PDB_BLOCK_LEN  . . . . . . . .  	0002
  PDB_CPM_CALL . . . . . . . . .  	0005
  PDB_EXIT . . . . . . . . . . .  	000A
  PDB_CTRL_C . . . . . . . . . .  	000E
  PDB_FATAL_ABORT  . . . . . . .  	0012
  PDB_PARENT_PID . . . . . . . .  	0016
  PDB_JFN_TABLE  . . . . . . . .  	0018
  PDB_ENVIRON  . . . . . . . . .  	002C
  PDB_USER_STACK . . . . . . . .  	002E
  PDB_PAD1 . . . . . . . . . . .  	0032
  PDB_CALL_SYSTEM  . . . . . . .  	0050
  PDB_PAD2 . . . . . . . . . . .  	0055
SFT  . . . . . . . . . . . . . .  	0008	0003
  SFT_LINK . . . . . . . . . . .  	0000
  SFT_COUNT  . . . . . . . . . .  	0004
  SFT_TABLE  . . . . . . . . . .  	0006
SF_ENTRY . . . . . . . . . . . .  	0028	0004
  SF_REF_COUNT . . . . . . . . .  	0000
  SF_MODE  . . . . . . . . . . .  	0001
  SF_ATTR  . . . . . . . . . . .  	0002
  SF_FCB . . . . . . . . . . . .  	0003
Microsoft (R) Macro Assembler  Version 4.00                 3/28/20 21:19:37

BIOS SYSTEM INITIALIZATION                                  Symbols-4
                                                             

SRHEAD . . . . . . . . . . . . .  	000D	0005
  REQLEN . . . . . . . . . . . .  	0000
  REQUNIT  . . . . . . . . . . .  	0001
  REQFUNC  . . . . . . . . . . .  	0002
  REQSTAT  . . . . . . . . . . .  	0003
SYMBOL_ENTRY . . . . . . . . . .  	0106	0004
  SYM_VALUE  . . . . . . . . . .  	0000
  SYM_TYPE . . . . . . . . . . .  	0004
  SYM_LEN  . . . . . . . . . . .  	0006
  SYM_NAME . . . . . . . . . . .  	0007
SYSDEV . . . . . . . . . . . . .  	0012	0005
  SDEVNEXT . . . . . . . . . . .  	0000
  SDEVATT  . . . . . . . . . . .  	0004
  SDEVSTRAT  . . . . . . . . . .  	0006
  SDEVINT  . . . . . . . . . . .  	0008
  SDEVNAME . . . . . . . . . . .  	000A
SYSINITVAR . . . . . . . . . . .  	001B	0008
  DPBHEAD  . . . . . . . . . . .  	0000
  SFT_ADDR . . . . . . . . . . .  	0004
  BCLOCK . . . . . . . . . . . .  	0008
  BCON . . . . . . . . . . . . .  	000C
  NUMIO  . . . . . . . . . . . .  	0010
  MAXSEC . . . . . . . . . . . .  	0011
  BUFFHEAD . . . . . . . . . . .  	0013
  DEVHEAD  . . . . . . . . . . .  	0017
SYS_FCB  . . . . . . . . . . . .  	0025	0010
  FCB_DRIVE  . . . . . . . . . .  	0000
  FCB_NAME . . . . . . . . . . .  	0001
  FCB_EXT  . . . . . . . . . . .  	0009
  FCB_EXTENT . . . . . . . . . .  	000C
  FCB_RECSIZ . . . . . . . . . .  	000E
  FCB_FILSIZ . . . . . . . . . .  	0010
  FCB_DRVBP  . . . . . . . . . .  	0012
  FCB_FDATE  . . . . . . . . . .  	0014
  FCB_FTIME  . . . . . . . . . .  	0016
  FCB_DEVID  . . . . . . . . . .  	0018
  FCB_FIRCLUS  . . . . . . . . .  	0019
  FCB_CLUSPOS  . . . . . . . . .  	001B
  FCB_LSTCLUS  . . . . . . . . .  	001D
  FCB_NR . . . . . . . . . . . .  	0020
  FCB_RR . . . . . . . . . . . .  	0021
USER_ENVIRON . . . . . . . . . .  	0018	000C
  USER_AX  . . . . . . . . . . .  	0000
  USER_BX  . . . . . . . . . . .  	0002
  USER_CX  . . . . . . . . . . .  	0004
  USER_DX  . . . . . . . . . . .  	0006
  USER_SI  . . . . . . . . . . .  	0008
  USER_DI  . . . . . . . . . . .  	000A
  USER_BP  . . . . . . . . . . .  	000C
  USER_DS  . . . . . . . . . . .  	000E
  USER_ES  . . . . . . . . . . .  	0010
  USER_IP  . . . . . . . . . . .  	0012
  USER_CS  . . . . . . . . . . .  	0014
  USER_F . . . . . . . . . . . .  	0016
Microsoft (R) Macro Assembler  Version 4.00                 3/28/20 21:19:37

BIOS SYSTEM INITIALIZATION                                  Symbols-5
                                                             


Segments and Groups:

                N a m e         	Size	Align	Combine Class

SYSINITSEG . . . . . . . . . . .  	077E	PARA	PUBLIC	'SYSTEM'

Symbols:            

                N a m e         	Type	Value	Attr         

AAA  . . . . . . . . . . . . . .  	F PROC	00B0	SYSINITSEG	Length = 0001
ABORT  . . . . . . . . . . . . .  	Number	0000	
ADDR_INT_ABORT . . . . . . . . .  	Number	0080	
ADDR_INT_COMMAND . . . . . . . .  	Number	0084	
ADDR_INT_CTRL_C  . . . . . . . .  	Number	008C	
ADDR_INT_DISK_READ . . . . . . .  	Number	0094	
ADDR_INT_DISK_WRITE  . . . . . .  	Number	0098	
ADDR_INT_FASTCON . . . . . . . .  	Number	00A4	
ADDR_INT_FATAL_ABORT . . . . . .  	Number	0090	
ADDR_INT_KEEP_PROCESS  . . . . .  	Number	009C	
ADDR_INT_SPOOLER . . . . . . . .  	Number	00A0	
ADDR_INT_TERMINATE . . . . . . .  	Number	0088	
ALLOC  . . . . . . . . . . . . .  	Number	0048	
ALLOCOPER  . . . . . . . . . . .  	Number	0058	
ALLOC_ARENA_TRASHED  . . . . . .  	Alias	 ERROR_ARENA_TRASHED		
ALLOC_NOT_ENOUGH_MEMORY  . . . .  	Alias	 ERROR_NOT_ENOUGH_MEMORY		
ALTVECT  . . . . . . . . . . . .  	Alias	 FALSE		
AREA . . . . . . . . . . . . . .  	L WORD 	004D	SYSINITSEG
ARENA_OWNER_SYSTEM . . . . . . .  	Number	0000	
ARENA_SIGNATURE_END  . . . . . .  	Number	005A	
ARENA_SIGNATURE_NORMAL . . . . .  	Number	004D	
ASSIGNOPER . . . . . . . . . . .  	Number	005F	
ATTR_ALL . . . . . . . . . . . .  	Number	0016	
ATTR_ARCHIVE . . . . . . . . . .  	Number	0020	
ATTR_CHANGEABLE  . . . . . . . .  	Number	0027	
ATTR_DIRECTORY . . . . . . . . .  	Number	0010	
ATTR_HIDDEN  . . . . . . . . . .  	Number	0002	
ATTR_IGNORE  . . . . . . . . . .  	Number	0021	
ATTR_READ_ONLY . . . . . . . . .  	Number	0001	
ATTR_SYSTEM  . . . . . . . . . .  	Number	0004	
ATTR_VOLUME_ID . . . . . . . . .  	Number	0008	
AUXDEV . . . . . . . . . . . . .  	L BYTE 	070F	SYSINITSEG

B1 . . . . . . . . . . . . . . .  	L NEAR	0667	SYSINITSEG
B2 . . . . . . . . . . . . . . .  	L NEAR	063F	SYSINITSEG
BADBRK . . . . . . . . . . . . .  	L NEAR	0348	SYSINITSEG
BADCOM . . . . . . . . . . . . .  	V BYTE 	0000	SYSINITSEG	External
BADCOUNTRY . . . . . . . . . . .  	V BYTE 	0000	SYSINITSEG	External
BADFIL . . . . . . . . . . . . .  	L NEAR	066C	SYSINITSEG
BADLD_POST . . . . . . . . . . .  	V BYTE 	0000	SYSINITSEG	External
BADLD_PRE  . . . . . . . . . . .  	V BYTE 	0000	SYSINITSEG	External
BADLOAD  . . . . . . . . . . . .  	L NEAR	0670	SYSINITSEG
BADNUM . . . . . . . . . . . . .  	L NEAR	062D	SYSINITSEG
Microsoft (R) Macro Assembler  Version 4.00                 3/28/20 21:19:37

BIOS SYSTEM INITIALIZATION                                  Symbols-6
                                                             

BADOP  . . . . . . . . . . . . .  	L NEAR	0270	SYSINITSEG
BADOPM . . . . . . . . . . . . .  	V BYTE 	0000	SYSINITSEG	External
BADSIZ_POST  . . . . . . . . . .  	V BYTE 	0000	SYSINITSEG	External
BADSIZ_PRE . . . . . . . . . . .  	V BYTE 	0000	SYSINITSEG	External
BPB_ADDR . . . . . . . . . . . .  	L DWORD	0061	SYSINITSEG
BREAKOK  . . . . . . . . . . . .  	L NEAR	036C	SYSINITSEG
BREAK_ADDR . . . . . . . . . . .  	L DWORD	005D	SYSINITSEG
BUF1 . . . . . . . . . . . . . .  	L NEAR	024F	SYSINITSEG
BUFFERS  . . . . . . . . . . . .  	L BYTE 	0012	SYSINITSEG	Global
BUFINSIZ . . . . . . . . . . . .  	Number	0010	
BUFPTR . . . . . . . . . . . . .  	L DWORD	0047	SYSINITSEG

CALLDEV  . . . . . . . . . . . .  	L NEAR	060A	SYSINITSEG
CHAR_OPER  . . . . . . . . . . .  	Number	0037	
CHDIR  . . . . . . . . . . . . .  	Number	003B	
CHDIR_PATH_NOT_FOUND . . . . . .  	Alias	 ERROR_PATH_NOT_FOUND		
CHMOD  . . . . . . . . . . . . .  	Number	0043	
CHMOD_ACCESS_DENIED  . . . . . .  	Alias	 ERROR_ACCESS_DENIED		
CHMOD_INVALID_FUNCTION . . . . .  	Alias	 ERROR_INVALID_FUNCTION		
CHMOD_PATH_NOT_FOUND . . . . . .  	Alias	 ERROR_PATH_NOT_FOUND		
CHRPTR . . . . . . . . . . . . .  	L WORD 	0045	SYSINITSEG
CLOSE  . . . . . . . . . . . . .  	Number	003E	
CLOSE_INVALID_FUNCTION . . . . .  	Alias	 ERROR_INVALID_FUNCTION		
CLOSE_INVALID_HANDLE . . . . . .  	Alias	 ERROR_INVALID_HANDLE		
COFF . . . . . . . . . . . . . .  	L NEAR	0306	SYSINITSEG
COFFJ  . . . . . . . . . . . . .  	L NEAR	04D1	SYSINITSEG
COFFV  . . . . . . . . . . . . .  	L NEAR	0478	SYSINITSEG
COMERR . . . . . . . . . . . . .  	L NEAR	019E	SYSINITSEG
COMEXE . . . . . . . . . . . . .  	L 000E	0035	SYSINITSEG
COMMAND_LINE . . . . . . . . . .  	L BYTE 	0014	SYSINITSEG
COMMND . . . . . . . . . . . . .  	L BYTE 	072D	SYSINITSEG
COMTAB . . . . . . . . . . . . .  	L BYTE 	073A	SYSINITSEG
COMTRANLP  . . . . . . . . . . .  	L NEAR	0176	SYSINITSEG
CONDEV . . . . . . . . . . . . .  	L BYTE 	0706	SYSINITSEG
CONFERR  . . . . . . . . . . . .  	L NEAR	02BF	SYSINITSEG
CONFIG . . . . . . . . . . . . .  	L BYTE 	0721	SYSINITSEG
CONFLP . . . . . . . . . . . . .  	L NEAR	02CE	SYSINITSEG
CONV . . . . . . . . . . . . . .  	L NEAR	0501	SYSINITSEG
CONVDONE . . . . . . . . . . . .  	L NEAR	05EB	SYSINITSEG
CONVLOOP . . . . . . . . . . . .  	L NEAR	05DB	SYSINITSEG
COUNT  . . . . . . . . . . . . .  	L WORD 	0043	SYSINITSEG
COUNTRY_NOT_FOUND  . . . . . . .  	Alias	 ERROR_FILE_NOT_FOUND		
CREAT  . . . . . . . . . . . . .  	Number	003C	
CREATENEWFILE  . . . . . . . . .  	Number	005B	
CREATETEMPFILE . . . . . . . . .  	Number	005A	
CREATE_PROCESS_DATA_BLOCK  . . .  	Number	0026	
CREAT_ACCESS_DENIED  . . . . . .  	Alias	 ERROR_ACCESS_DENIED		
CREAT_PATH_NOT_FOUND . . . . . .  	Alias	 ERROR_PATH_NOT_FOUND		
CREAT_TOO_MANY_OPEN_FILES  . . .  	Alias	 ERROR_TOO_MANY_OPEN_FILES		
CRLFM  . . . . . . . . . . . . .  	V BYTE 	0000	SYSINITSEG	External
CURDIR_INVALID_DRIVE . . . . . .  	Alias	 ERROR_INVALID_DRIVE		
CURRENT_DIR  . . . . . . . . . .  	Number	0047	
CURRENT_DOS_LOCATION . . . . . .  	L WORD 	0005	SYSINITSEG	Global
C_BS . . . . . . . . . . . . . .  	Number	0008	
Microsoft (R) Macro Assembler  Version 4.00                 3/28/20 21:19:37

BIOS SYSTEM INITIALIZATION                                  Symbols-7
                                                             

C_CR . . . . . . . . . . . . . .  	Number	000D	
C_DEL  . . . . . . . . . . . . .  	Number	007F	
C_ETB  . . . . . . . . . . . . .  	Number	0017	
C_ETX  . . . . . . . . . . . . .  	Number	0003	
C_HT . . . . . . . . . . . . . .  	Number	0009	
C_LF . . . . . . . . . . . . . .  	Number	000A	
C_NAK  . . . . . . . . . . . . .  	Number	0015	

DBPBHL . . . . . . . . . . . . .  	Number	0016	
DEALLOC  . . . . . . . . . . . .  	Number	0049	
DEALLOC_ARENA_TRASHED  . . . . .  	Alias	 ERROR_ARENA_TRASHED		
DEALLOC_INVALID_BLOCK  . . . . .  	Alias	 ERROR_INVALID_BLOCK		
DEFAULT_DRIVE  . . . . . . . . .  	L BYTE 	0011	SYSINITSEG	Global
DELIM  . . . . . . . . . . . . .  	L NEAR	05A8	SYSINITSEG
DEVBPB . . . . . . . . . . . . .  	Number	0002	
DEVICE_LIST  . . . . . . . . . .  	L DWORD	000B	SYSINITSEG	Global
DEVID_BLOCK_DEV  . . . . . . . .  	Number	001F	
DEVID_DEVICE . . . . . . . . . .  	Number	0080	
DEVID_DEVICE_CLOCK . . . . . . .  	Number	0008	
DEVID_DEVICE_CON_IN  . . . . . .  	Number	0001	
DEVID_DEVICE_CON_OUT . . . . . .  	Number	0002	
DEVID_DEVICE_EOF . . . . . . . .  	Number	0040	
DEVID_DEVICE_NULL  . . . . . . .  	Number	0004	
DEVID_DEVICE_RAW . . . . . . . .  	Number	0020	
DEVID_DEVICE_SPECIAL . . . . . .  	Number	0010	
DEVID_EOF  . . . . . . . . . . .  	Number	0040	
DEVID_FILE_CLEAN . . . . . . . .  	Number	0040	
DEVID_FILE_MASK_DRIVE  . . . . .  	Number	003F	
DEVID_ISCIN  . . . . . . . . . .  	Number	0001	
DEVID_ISCLK  . . . . . . . . . .  	Number	0008	
DEVID_ISCOT  . . . . . . . . . .  	Number	0002	
DEVID_ISDEV  . . . . . . . . . .  	Number	0080	
DEVID_ISNUL  . . . . . . . . . .  	Number	0004	
DEVID_RAW  . . . . . . . . . . .  	Number	0020	
DEVID_SPECIAL  . . . . . . . . .  	Number	0010	
DEVIFL . . . . . . . . . . . . .  	Number	0007	
DEVINIT  . . . . . . . . . . . .  	Number	0000	
DEVIOCTL . . . . . . . . . . . .  	Number	4000	
DEVIST . . . . . . . . . . . . .  	Number	0006	
DEVMDCH  . . . . . . . . . . . .  	Number	0001	
DEVOFL . . . . . . . . . . . . .  	Number	000B	
DEVOST . . . . . . . . . . . . .  	Number	000A	
DEVRD  . . . . . . . . . . . . .  	Number	0004	
DEVRDIOCTL . . . . . . . . . . .  	Number	0003	
DEVRDND  . . . . . . . . . . . .  	Number	0005	
DEVTYP . . . . . . . . . . . . .  	Number	8000	
DEVWRIOCTL . . . . . . . . . . .  	Number	000C	
DEVWRT . . . . . . . . . . . . .  	Number	0008	
DEVWRTV  . . . . . . . . . . . .  	Number	0009	
DFLSHL . . . . . . . . . . . . .  	Number	000F	
DINITHL  . . . . . . . . . . . .  	Number	001A	
DIRPRI . . . . . . . . . . . . .  	Number	000F	
DIRSTRLEN  . . . . . . . . . . .  	Number	0040	
DIR_SEARCH_FIRST . . . . . . . .  	Number	0011	
Microsoft (R) Macro Assembler  Version 4.00                 3/28/20 21:19:37

BIOS SYSTEM INITIALIZATION                                  Symbols-8
                                                             

DIR_SEARCH_NEXT  . . . . . . . .  	Number	0012	
DISK_RESET . . . . . . . . . . .  	Number	000D	
DMEDHL . . . . . . . . . . . . .  	Number	000F	
DOBUFF . . . . . . . . . . . . .  	L NEAR	0217	SYSINITSEG
DOCONF . . . . . . . . . . . . .  	L NEAR	01A6	SYSINITSEG
DOSINFO  . . . . . . . . . . . .  	L DWORD	0003	SYSINITSEG
DOSSIZE  . . . . . . . . . . . .  	Number	5000	
DOS_MAJOR_VERSION  . . . . . . .  	Number	0002	
DOS_MINOR_VERSION  . . . . . . .  	Number	000B	
DPBSIZ . . . . . . . . . . . . .  	Number	005E	
DRDNDHL  . . . . . . . . . . . .  	Number	000E	
DRDWRHL  . . . . . . . . . . . .  	Number	0016	
DSKSIZ . . . . . . . . . . . . .  	Number	000D	
DSTATHL  . . . . . . . . . . . .  	Number	000D	
DUP2_INVALID_HANDLE  . . . . . .  	Alias	 ERROR_INVALID_HANDLE		
DUP_INVALID_HANDLE . . . . . . .  	Alias	 ERROR_INVALID_HANDLE		
DUP_PDB  . . . . . . . . . . . .  	Number	0055	
DUP_TOO_MANY_OPEN_FILES  . . . .  	Alias	 ERROR_TOO_MANY_OPEN_FILES		

ENDDEV . . . . . . . . . . . . .  	L NEAR	0470	SYSINITSEG
ENDFILE  . . . . . . . . . . . .  	L NEAR	01D0	SYSINITSEG
ENDFILV  . . . . . . . . . . . .  	L NEAR	02C5	SYSINITSEG
ENDSH  . . . . . . . . . . . . .  	L NEAR	04F4	SYSINITSEG
ENTRYPOINT . . . . . . . . . . .  	Number	00C0	
ENTRY_POINT  . . . . . . . . . .  	L DWORD	0007	SYSINITSEG
ERROR_ACCESS_DENIED  . . . . . .  	Number	0005	
ERROR_ARENA_TRASHED  . . . . . .  	Number	0007	
ERROR_BAD_ENVIRONMENT  . . . . .  	Number	000A	
ERROR_BAD_FORMAT . . . . . . . .  	Number	000B	
ERROR_CURRENT_DIRECTORY  . . . .  	Number	0010	
ERROR_FILE_NOT_FOUND . . . . . .  	Number	0002	
ERROR_INVALID_ACCESS . . . . . .  	Number	000C	
ERROR_INVALID_BLOCK  . . . . . .  	Number	0009	
ERROR_INVALID_DATA . . . . . . .  	Number	000D	
ERROR_INVALID_DRIVE  . . . . . .  	Number	000F	
ERROR_INVALID_FUNCTION . . . . .  	Number	0001	
ERROR_INVALID_HANDLE . . . . . .  	Number	0006	
ERROR_NOT_ENOUGH_MEMORY  . . . .  	Number	0008	
ERROR_NOT_SAME_DEVICE  . . . . .  	Number	0011	
ERROR_NO_MORE_FILES  . . . . . .  	Number	0012	
ERROR_PATH_NOT_FOUND . . . . . .  	Number	0003	
ERROR_TOO_MANY_OPEN_FILES  . . .  	Number	0004	
EXEC . . . . . . . . . . . . . .  	Number	004B	
EXEC_BAD_ENVIRONMENT . . . . . .  	Alias	 ERROR_BAD_ENVIRONMENT		
EXEC_BAD_FORMAT  . . . . . . . .  	Alias	 ERROR_BAD_FORMAT		
EXEC_FILE_NOT_FOUND  . . . . . .  	Alias	 ERROR_FILE_NOT_FOUND		
EXEC_FUNC_NO_EXECUTE . . . . . .  	Number	0001	
EXEC_FUNC_OVERLAY  . . . . . . .  	Number	0002	
EXEC_INVALID_FUNCTION  . . . . .  	Alias	 ERROR_INVALID_FUNCTION		
EXEC_NOT_ENOUGH_MEMORY . . . . .  	Alias	 ERROR_NOT_ENOUGH_MEMORY		
EXE_VALID_OLD_SIGNATURE  . . . .  	Number	4D5A	
EXE_VALID_SIGNATURE  . . . . . .  	Number	5A4D	
EXIT . . . . . . . . . . . . . .  	Number	004C	
EXIT_ABORT . . . . . . . . . . .  	Number	0000	
Microsoft (R) Macro Assembler  Version 4.00                 3/28/20 21:19:37

BIOS SYSTEM INITIALIZATION                                  Symbols-9
                                                             

EXIT_CTRL_C  . . . . . . . . . .  	Number	0001	
EXIT_HARD_ERROR  . . . . . . . .  	Number	0002	
EXIT_KEEP_PROCESS  . . . . . . .  	Number	0003	
EXIT_TERMINATE . . . . . . . . .  	Number	0000	

FALSE  . . . . . . . . . . . . .  	Number	0000	
FATPRI . . . . . . . . . . . . .  	Number	001E	
FCB_CLOSE  . . . . . . . . . . .  	Number	0010	
FCB_CREATE . . . . . . . . . . .  	Number	0016	
FCB_DELETE . . . . . . . . . . .  	Number	0013	
FCB_OPEN . . . . . . . . . . . .  	Number	000F	
FCB_RANDOM_READ  . . . . . . . .  	Number	0021	
FCB_RANDOM_READ_BLOCK  . . . . .  	Number	0027	
FCB_RANDOM_WRITE . . . . . . . .  	Number	0022	
FCB_RANDOM_WRITE_BLOCK . . . . .  	Number	0028	
FCB_RENAME . . . . . . . . . . .  	Number	0017	
FCB_SEQ_READ . . . . . . . . . .  	Number	0014	
FCB_SEQ_WRITE  . . . . . . . . .  	Number	0015	
FILDIRENT  . . . . . . . . . . .  	Number	0010	
FILES  . . . . . . . . . . . . .  	L BYTE 	0013	SYSINITSEG	Global
FILETIMES_INVALID_FUNCTION . . .  	Alias	 ERROR_INVALID_FUNCTION		
FILETIMES_INVALID_HANDLE . . . .  	Alias	 ERROR_INVALID_HANDLE		
FILE_TIMES . . . . . . . . . . .  	Number	0057	
FILPERPROC . . . . . . . . . . .  	Number	0014	
FINAL_DOS_LOCATION . . . . . . .  	L WORD 	0009	SYSINITSEG	Global
FINDCOM  . . . . . . . . . . . .  	L NEAR	0551	SYSINITSEG
FINDFIRST_FILE_NOT_FOUND . . . .  	Alias	 ERROR_FILE_NOT_FOUND		
FINDFIRST_NO_MORE_FILES  . . . .  	Alias	 ERROR_NO_MORE_FILES		
FINDNEXT_NO_MORE_FILES . . . . .  	Alias	 ERROR_NO_MORE_FILES		
FIND_FIRST . . . . . . . . . . .  	Number	004E	
FIND_NEXT  . . . . . . . . . . .  	Number	004F	
FOUNDPB  . . . . . . . . . . . .  	L NEAR	03E4	SYSINITSEG
FREEPRI  . . . . . . . . . . . .  	Number	0000	

GET  . . . . . . . . . . . . . .  	L NEAR	059B	SYSINITSEG
GET2 . . . . . . . . . . . . . .  	L NEAR	0593	SYSINITSEG
GETCHR . . . . . . . . . . . . .  	L NEAR	0519	SYSINITSEG
GETCOM . . . . . . . . . . . . .  	L NEAR	02C8	SYSINITSEG
GETEXTENDEDERROR . . . . . . . .  	Number	0059	
GETNUM . . . . . . . . . . . . .  	L NEAR	063D	SYSINITSEG
GETSHPARMS . . . . . . . . . . .  	L NEAR	0507	SYSINITSEG
GET_CURRENT_PDB  . . . . . . . .  	Number	0051	
GET_DATE . . . . . . . . . . . .  	Number	002A	
GET_DEFAULT_DPB  . . . . . . . .  	Number	001F	
GET_DEFAULT_DRIVE  . . . . . . .  	Number	0019	
GET_DMA  . . . . . . . . . . . .  	Number	002F	
GET_DPB  . . . . . . . . . . . .  	Number	0032	
GET_DRIVE_FREESPACE  . . . . . .  	Number	0036	
GET_FCB_FILE_LENGTH  . . . . . .  	Number	0023	
GET_FCB_POSITION . . . . . . . .  	Number	0024	
GET_INDOS_FLAG . . . . . . . . .  	Number	0034	
GET_INTERRUPT_VECTOR . . . . . .  	Number	0035	
GET_IN_VARS  . . . . . . . . . .  	Number	0052	
GET_TIME . . . . . . . . . . . .  	Number	002C	
Microsoft (R) Macro Assembler  Version 4.00                 3/28/20 21:19:37

BIOS SYSTEM INITIALIZATION                                  Symbols-10
                                                             

GET_VERIFY_ON_WRITE  . . . . . .  	Number	0054	
GET_VERSION  . . . . . . . . . .  	Number	0030	
GOAUX  . . . . . . . . . . . . .  	L NEAR	014A	SYSINITSEG
GOAUX2 . . . . . . . . . . . . .  	L NEAR	015D	SYSINITSEG
GOINIT . . . . . . . . . . . . .  	L NEAR	0065	SYSINITSEG
GOLINK . . . . . . . . . . . . .  	L NEAR	03A4	SYSINITSEG
GOODLD . . . . . . . . . . . . .  	L NEAR	034D	SYSINITSEG
GOSET  . . . . . . . . . . . . .  	L NEAR	016D	SYSINITSEG
GOTC . . . . . . . . . . . . . .  	L NEAR	02F1	SYSINITSEG
GOTCOM . . . . . . . . . . . . .  	L NEAR	056B	SYSINITSEG
GOTD . . . . . . . . . . . . . .  	L NEAR	0315	SYSINITSEG
GRET . . . . . . . . . . . . . .  	L NEAR	05A7	SYSINITSEG

HIGHMEM  . . . . . . . . . . . .  	Alias	 FALSE		

IBM  . . . . . . . . . . . . . .  	Alias	 IBMVER		
IBMJAPVER  . . . . . . . . . . .  	Alias	 FALSE		
IBMVER . . . . . . . . . . . . .  	Alias	 FALSE		
INT24  . . . . . . . . . . . . .  	L NEAR	06EA	SYSINITSEG
INTBASE  . . . . . . . . . . . .  	Number	0080	
INTERNATIONAL  . . . . . . . . .  	Number	0038	
INTERNATIONAL_INVALID_FUNCTION .  	Alias	 ERROR_INVALID_FUNCTION		
INTERNAT_BLOCK_MAX . . . . . . .  	Number	0020	
INTTAB . . . . . . . . . . . . .  	Number	0020	
INT_ABORT  . . . . . . . . . . .  	Alias	 INTTAB		
INT_COMMAND  . . . . . . . . . .  	Number	0021	
INT_CTRL_C . . . . . . . . . . .  	Number	0023	
INT_DISK_READ  . . . . . . . . .  	Number	0025	
INT_DISK_WRITE . . . . . . . . .  	Number	0026	
INT_FASTCON  . . . . . . . . . .  	Number	0029	
INT_FATAL_ABORT  . . . . . . . .  	Number	0024	
INT_KEEP_PROCESS . . . . . . . .  	Number	0027	
INT_SPOOLER  . . . . . . . . . .  	Number	0028	
INT_TERMINATE  . . . . . . . . .  	Number	0022	
IOCTL  . . . . . . . . . . . . .  	Number	0044	
IOCTL_INVALID_DATA . . . . . . .  	Alias	 ERROR_INVALID_DATA		
IOCTL_INVALID_FUNCTION . . . . .  	Alias	 ERROR_INVALID_FUNCTION		
IOCTL_INVALID_HANDLE . . . . . .  	Alias	 ERROR_INVALID_HANDLE		
ISBLOCK  . . . . . . . . . . . .  	L NEAR	03A7	SYSINITSEG
ISCIN  . . . . . . . . . . . . .  	Number	0001	
ISCLOCK  . . . . . . . . . . . .  	Number	0008	
ISCOUT . . . . . . . . . . . . .  	Number	0002	
ISFATBYDEV . . . . . . . . . . .  	Number	2000	
ISIBM  . . . . . . . . . . . . .  	Number	0010	
ISNULL . . . . . . . . . . . . .  	Number	0004	

KANJI  . . . . . . . . . . . . .  	Alias	 FALSE		
KEEP_PROCESS . . . . . . . . . .  	Number	0031	

LBRPRI . . . . . . . . . . . . .  	Number	0002	
LBWPRI . . . . . . . . . . . . .  	Number	0004	
LDCLS  . . . . . . . . . . . . .  	L NEAR	06BB	SYSINITSEG
LDERR  . . . . . . . . . . . . .  	L NEAR	06B8	SYSINITSEG
LDFIL  . . . . . . . . . . . . .  	L NEAR	0691	SYSINITSEG
Microsoft (R) Macro Assembler  Version 4.00                 3/28/20 21:19:37

BIOS SYSTEM INITIALIZATION                                  Symbols-11
                                                             

LDOFF  . . . . . . . . . . . . .  	L WORD 	004B	SYSINITSEG
LDRET  . . . . . . . . . . . . .  	L NEAR	06C0	SYSINITSEG
LINKIT . . . . . . . . . . . . .  	L NEAR	044B	SYSINITSEG
LOCKOPER . . . . . . . . . . . .  	Number	005C	
LOCSTACK . . . . . . . . . . . .  	L BYTE 	00D9	SYSINITSEG
LSEEK  . . . . . . . . . . . . .  	Number	0042	
LSEEK_INVALID_FUNCTION . . . . .  	Alias	 ERROR_INVALID_FUNCTION		
LSEEK_INVALID_HANDLE . . . . . .  	Alias	 ERROR_INVALID_HANDLE		

MAJOR_VERSION  . . . . . . . . .  	Number	0002	
MAPCASE  . . . . . . . . . . . .  	L NEAR	05D4	SYSINITSEG
MEMHI  . . . . . . . . . . . . .  	L WORD 	0049	SYSINITSEG
MEMLO  . . . . . . . . . . . . .  	L WORD 	0047	SYSINITSEG
MEMORY_SIZE  . . . . . . . . . .  	L WORD 	000F	SYSINITSEG	Global
MEMSCAN  . . . . . . . . . . . .  	L NEAR	0079	SYSINITSEG
MINOR_VERSION  . . . . . . . . .  	Number	0000	
MI_INT . . . . . . . . . . . . .  	Number	00CD	
MI_LONG_CALL . . . . . . . . . .  	Number	009A	
MI_LONG_JMP  . . . . . . . . . .  	Number	00EA	
MI_LONG_RET  . . . . . . . . . .  	Number	00CB	
MKDIR  . . . . . . . . . . . . .  	Number	0039	
MKDIR_ACCESS_DENIED  . . . . . .  	Alias	 ERROR_ACCESS_DENIED		
MKDIR_PATH_NOT_FOUND . . . . . .  	Alias	 ERROR_PATH_NOT_FOUND		
MSDOS  . . . . . . . . . . . . .  	L DWORD	0007	SYSINITSEG
MSVER  . . . . . . . . . . . . .  	Alias	 TRUE		

NEWLINE  . . . . . . . . . . . .  	L NEAR	05C7	SYSINITSEG
NOCHAR . . . . . . . . . . . . .  	L NEAR	0530	SYSINITSEG
NOCOM  . . . . . . . . . . . . .  	L NEAR	0566	SYSINITSEG
NOCONV . . . . . . . . . . . . .  	L NEAR	05E9	SYSINITSEG
NODRVSET . . . . . . . . . . . .  	L NEAR	011E	SYSINITSEG
NOEXEC . . . . . . . . . . . . .  	Alias	 FALSE		
NOGET  . . . . . . . . . . . . .  	L NEAR	05BB	SYSINITSEG
NONEW  . . . . . . . . . . . . .  	L NEAR	05D3	SYSINITSEG
NOPROB . . . . . . . . . . . . .  	L NEAR	0279	SYSINITSEG
NOSCAN . . . . . . . . . . . . .  	L NEAR	0091	SYSINITSEG
NOTDIG . . . . . . . . . . . . .  	L NEAR	063B	SYSINITSEG
NOTMAX . . . . . . . . . . . . .  	L NEAR	0435	SYSINITSEG
NO_ERROR_OCCURRED  . . . . . . .  	Text  0                                                              ?		
NULDEV . . . . . . . . . . . . .  	L BYTE 	06FD	SYSINITSEG

OEM_C1 . . . . . . . . . . . . .  	Number	00F9	
OEM_C2 . . . . . . . . . . . . .  	Number	00FA	
OEM_C3 . . . . . . . . . . . . .  	Number	00FB	
OEM_C4 . . . . . . . . . . . . .  	Number	00FC	
OEM_C5 . . . . . . . . . . . . .  	Number	00FD	
OEM_C6 . . . . . . . . . . . . .  	Number	00FE	
OEM_C7 . . . . . . . . . . . . .  	Number	00FF	
OPEN . . . . . . . . . . . . . .  	Number	003D	
OPEN_ACCESS_DENIED . . . . . . .  	Alias	 ERROR_ACCESS_DENIED		
OPEN_DEV . . . . . . . . . . . .  	L NEAR	06C7	SYSINITSEG
OPEN_DEV1  . . . . . . . . . . .  	L NEAR	06CC	SYSINITSEG
OPEN_DEV2  . . . . . . . . . . .  	L NEAR	06D2	SYSINITSEG
OPEN_DEV3  . . . . . . . . . . .  	L NEAR	06D3	SYSINITSEG
Microsoft (R) Macro Assembler  Version 4.00                 3/28/20 21:19:37

BIOS SYSTEM INITIALIZATION                                  Symbols-12
                                                             

OPEN_FILE  . . . . . . . . . . .  	L NEAR	06E4	SYSINITSEG
OPEN_FILE_NOT_FOUND  . . . . . .  	Alias	 ERROR_FILE_NOT_FOUND		
OPEN_FOR_BOTH  . . . . . . . . .  	Number	0002	
OPEN_FOR_READ  . . . . . . . . .  	Number	0000	
OPEN_FOR_WRITE . . . . . . . . .  	Number	0001	
OPEN_INVALID_ACCESS  . . . . . .  	Alias	 ERROR_INVALID_ACCESS		
OPEN_TOO_MANY_OPEN_FILES . . . .  	Alias	 ERROR_TOO_MANY_OPEN_FILES		
ORG1 . . . . . . . . . . . . . .  	L NEAR	053F	SYSINITSEG
ORG2 . . . . . . . . . . . . . .  	L NEAR	056C	SYSINITSEG
ORG4 . . . . . . . . . . . . . .  	L NEAR	0578	SYSINITSEG
ORG5 . . . . . . . . . . . . . .  	L NEAR	0589	SYSINITSEG
ORGANIZE . . . . . . . . . . . .  	L NEAR	0532	SYSINITSEG

PACKET . . . . . . . . . . . . .  	L BYTE 	004F	SYSINITSEG
PARMLOOP . . . . . . . . . . . .  	L NEAR	050D	SYSINITSEG
PARSE_FILE_DESCRIPTOR  . . . . .  	Number	0029	
PERDRV . . . . . . . . . . . . .  	L NEAR	03BC	SYSINITSEG
PERUNIT  . . . . . . . . . . . .  	L NEAR	03CE	SYSINITSEG
PRINT  . . . . . . . . . . . . .  	L NEAR	068C	SYSINITSEG
PRMBLK . . . . . . . . . . . . .  	L WORD 	0049	SYSINITSEG
PRN1 . . . . . . . . . . . . . .  	L NEAR	067C	SYSINITSEG
PRN2 . . . . . . . . . . . . . .  	L NEAR	068A	SYSINITSEG
PRNDEV . . . . . . . . . . . . .  	L BYTE 	0718	SYSINITSEG
PRNERR . . . . . . . . . . . . .  	L NEAR	0676	SYSINITSEG

RAW_CON_INPUT  . . . . . . . . .  	Number	0007	
RAW_CON_IO . . . . . . . . . . .  	Number	0006	
RCCLLOOP . . . . . . . . . . . .  	L NEAR	0132	SYSINITSEG
READ . . . . . . . . . . . . . .  	Number	003F	
READ_ACCESS_DENIED . . . . . . .  	Alias	 ERROR_ACCESS_DENIED		
READ_INVALID_HANDLE  . . . . . .  	Alias	 ERROR_INVALID_HANDLE		
RENAME . . . . . . . . . . . . .  	Number	0056	
RENAME_ACCESS_DENIED . . . . . .  	Alias	 ERROR_ACCESS_DENIED		
RENAME_FILE_NOT_FOUND  . . . . .  	Alias	 ERROR_FILE_NOT_FOUND		
RENAME_NOT_SAME_DEVICE . . . . .  	Alias	 ERROR_NOT_SAME_DEVICE		
RE_INIT  . . . . . . . . . . . .  	L FAR 	0000		External
RMDIR  . . . . . . . . . . . . .  	Number	003A	
RMDIR_ACCESS_DENIED  . . . . . .  	Alias	 ERROR_ACCESS_DENIED		
RMDIR_CURRENT_DIRECTORY  . . . .  	Alias	 ERROR_CURRENT_DIRECTORY		
RMDIR_PATH_NOT_FOUND . . . . . .  	Alias	 ERROR_PATH_NOT_FOUND		
ROUND  . . . . . . . . . . . . .  	L NEAR	05EF	SYSINITSEG
RPRI . . . . . . . . . . . . . .  	Number	0006	

SCANDPB  . . . . . . . . . . . .  	L NEAR	03D7	SYSINITSEG
SERVERCALL . . . . . . . . . . .  	Number	005D	
SETBLOCK . . . . . . . . . . . .  	Number	004A	
SETBLOCK_ARENA_TRASHED . . . . .  	Alias	 ERROR_ARENA_TRASHED		
SETBLOCK_INVALID_BLOCK . . . . .  	Alias	 ERROR_INVALID_BLOCK		
SETBLOCK_INVALID_FUNCTION  . . .  	Alias	 ERROR_INVALID_FUNCTION		
SETBLOCK_NOT_ENOUGH_MEMORY . . .  	Alias	 ERROR_NOT_ENOUGH_MEMORY		
SETDPB . . . . . . . . . . . . .  	Number	0053	
SETEND . . . . . . . . . . . . .  	L NEAR	008C	SYSINITSEG
SET_CTRL_C_TRAPPING  . . . . . .  	Number	0033	
SET_CURRENT_PDB  . . . . . . . .  	Number	0050	
Microsoft (R) Macro Assembler  Version 4.00                 3/28/20 21:19:37

BIOS SYSTEM INITIALIZATION                                  Symbols-13
                                                             

SET_DATE . . . . . . . . . . . .  	Number	002B	
SET_DEFAULT_DRIVE  . . . . . . .  	Number	000E	
SET_DMA  . . . . . . . . . . . .  	Number	001A	
SET_INTERRUPT_VECTOR . . . . . .  	Number	0025	
SET_OEM_HANDLER  . . . . . . . .  	Number	00F8	
SET_TIME . . . . . . . . . . . .  	Number	002D	
SET_VERIFY_ON_WRITE  . . . . . .  	Number	002E	
SF_DEFAULT_NUMBER  . . . . . . .  	Number	0005	
STALL  . . . . . . . . . . . . .  	L NEAR	01A4	SYSINITSEG
STBUI  . . . . . . . . . . . . .  	Number	0200	
STDAUX . . . . . . . . . . . . .  	Number	0003	
STDERR . . . . . . . . . . . . .  	Number	0002	
STDIN  . . . . . . . . . . . . .  	Number	0000	
STDON  . . . . . . . . . . . . .  	Number	0100	
STDOUT . . . . . . . . . . . . .  	Number	0001	
STDPRN . . . . . . . . . . . . .  	Number	0004	
STD_AUX_INPUT  . . . . . . . . .  	Number	0003	
STD_AUX_OUTPUT . . . . . . . . .  	Number	0004	
STD_CON_INPUT  . . . . . . . . .  	Number	0001	
STD_CON_INPUT_FLUSH  . . . . . .  	Number	000C	
STD_CON_INPUT_NO_ECHO  . . . . .  	Number	0008	
STD_CON_INPUT_STATUS . . . . . .  	Number	000B	
STD_CON_OUTPUT . . . . . . . . .  	Number	0002	
STD_CON_STRING_INPUT . . . . . .  	Number	000A	
STD_CON_STRING_OUTPUT  . . . . .  	Number	0009	
STD_PRINTER_OUTPUT . . . . . . .  	Number	0005	
STECODE  . . . . . . . . . . . .  	Number	00FF	
STERR  . . . . . . . . . . . . .  	Number	8000	
STORESHELL . . . . . . . . . . .  	L NEAR	04E4	SYSINITSEG
SYSIN  . . . . . . . . . . . . .  	L NEAR	00B1	SYSINITSEG
SYSINIT  . . . . . . . . . . . .  	L NEAR	0000	SYSINITSEG	Global
SYSSIZE  . . . . . . . . . . . .  	V BYTE 	0000	SYSINITSEG	External

TODIGIT  . . . . . . . . . . . .  	L NEAR	0631	SYSINITSEG
TRUE . . . . . . . . . . . . . .  	Number	FFFF	
TRYA . . . . . . . . . . . . . .  	L NEAR	04C1	SYSINITSEG
TRYC . . . . . . . . . . . . . .  	L NEAR	02E9	SYSINITSEG
TRYCLK . . . . . . . . . . . . .  	L NEAR	0397	SYSINITSEG
TRYD . . . . . . . . . . . . . .  	L NEAR	030D	SYSINITSEG
TRYF . . . . . . . . . . . . . .  	L NEAR	049A	SYSINITSEG
TRYQ . . . . . . . . . . . . . .  	L NEAR	047B	SYSINITSEG
TRYS . . . . . . . . . . . . . .  	L NEAR	04D4	SYSINITSEG
TRYW . . . . . . . . . . . . . .  	L NEAR	04AE	SYSINITSEG
TRYX . . . . . . . . . . . . . .  	L NEAR	0504	SYSINITSEG

UNITCOUNT  . . . . . . . . . . .  	L BYTE 	005C	SYSINITSEG
UNLINK . . . . . . . . . . . . .  	Number	0041	
UNLINK_ACCESS_DENIED . . . . . .  	Alias	 ERROR_ACCESS_DENIED		
UNLINK_FILE_NOT_FOUND  . . . . .  	Alias	 ERROR_FILE_NOT_FOUND		
USERIDOPER . . . . . . . . . . .  	Number	005E	

WAIT . . . . . . . . . . . . . .  	Number	004D	
WPRI . . . . . . . . . . . . . .  	Number	0008	
WRECODE  . . . . . . . . . . . .  	Number	0000	
Microsoft (R) Macro Assembler  Version 4.00                 3/28/20 21:19:37

BIOS SYSTEM INITIALIZATION                                  Symbols-14
                                                             

WRITE  . . . . . . . . . . . . .  	Number	0040	
WRITE_ACCESS_DENIED  . . . . . .  	Alias	 ERROR_ACCESS_DENIED		
WRITE_INVALID_HANDLE . . . . . .  	Alias	 ERROR_INVALID_HANDLE		

XDUP . . . . . . . . . . . . . .  	Number	0045	
XDUP2  . . . . . . . . . . . . .  	Number	0046	

ZERO . . . . . . . . . . . . . .  	L BYTE 	0034	SYSINITSEG


   2716 Source  Lines
   2779 Total   Lines
    691 Symbols

  15742 Bytes symbol space free

      0 Warning Errors
      0 Severe  Errors
