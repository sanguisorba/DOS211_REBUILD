Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 09:30:04

PART2 DEBUGGER COMMANDS                                     Page     1-1
                                                            

       1                                TITLE   PART2 DEBUGGER COMMANDS 
       2                                 
       3                                ; Routines to perform debugger commands
					 except ASSEMble and UASSEMble 
       4                                 
       5                                
					 
debcom2.ASM(7) : error 1: Extra characters on line 
       6                                .list 
       7                                 
       8 0000                           CODE    SEGMENT PUBLIC BYTE 'CODE' 
       9 0000                           CODE    ENDS 
      10                                 
      11 0000                           CONST   SEGMENT PUBLIC BYTE 
      12                                 
      13                                        EXTRN   NOTFND:BYTE,NOROOM:BYTE
					,DRVLET:BYTE,NOSPACE:BYTE,NAMBAD:BYTE 
      14                                        EXTRN   TOOBIG:BYTE,ERRMES:BYTE
					 
      15                                        EXTRN   EXEBAD:BYTE,HEXERR:BYTE
					,EXEWRT:BYTE,HEXWRT:BYTE 
      16                                        EXTRN   EXECEMES:BYTE,WRTMES1:B
					YTE,WRTMES2:BYTE,ACCMES:BYTE 
      17                                 
      18                                        EXTRN   FLAGTAB:WORD,EXEC_BLOCK
					:BYTE,COM_LINE:DWORD,COM_FCB1:DWORD 
      19                                        EXTRN   COM_FCB2:DWORD,COM_SSSP
					:DWORD,COM_CSIP:DWORD,RETSAVE:WORD 
      20                                        EXTRN   NEWEXEC:BYTE,HEADSAVE:W
					ORD 
      21                                        EXTRN   REGTAB:BYTE,TOTREG:BYTE
					,NOREGL:BYTE 
      22                                        EXTRN   USER_PROC_PDB:WORD,STAC
					K:BYTE,RSTACK:WORD,AXSAVE:WORD 
      23                                        EXTRN   BXSAVE:WORD,DSSAVE:WORD
					,ESSAVE:WORD,CSSAVE:WORD,IPSAVE:WORD 
      24                                        EXTRN   SSSAVE:WORD,CXSAVE:WORD
					,SPSAVE:WORD,FSAVE:WORD 
      25                                        EXTRN   SREG:BYTE,SEGTAB:WORD,R
					EGDIF:WORD,RDFLG:BYTE 
      26                                 
      27 0000                           CONST   ENDS 
      28                                 
      29 0000                           DATA    SEGMENT PUBLIC BYTE 
      30                                 
      31                                        EXTRN   DEFDUMP:BYTE,TRANSADD:D
					WORD,INDEX:WORD,BUFFER:BYTE 
      32                                        EXTRN   ASMADD:BYTE,DISADD:BYTE
					,NSEG:WORD,BPTAB:BYTE 
      33                                        EXTRN   BRKCNT:WORD,TCOUNT:WORD
					,SWITCHAR:BYTE,XNXCMD:BYTE,XNXOPT:BYTE 
      34                                        EXTRN   AWORD:BYTE,EXTPTR:WORD,
					HANDLE:WORD,PARSERR:BYTE 
      35                                 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 09:30:04

PART2 DEBUGGER COMMANDS                                     Page     1-2
                                                            

      36 0000                           DATA    ENDS 
      37                                 
      38                                DG      GROUP   CODE,CONST,DATA 
      39                                 
      40                                 
      41 0000                           CODE    SEGMENT PUBLIC BYTE 'CODE' 
      42                                ASSUME  CS:DG,DS:DG,ES:DG,SS:DG 
      43                                 
      44                                        PUBLIC  DEFIO,SKIP_FILE,PREPNAM
					E,DEBUG_FOUND 
      45                                        PUBLIC  REG,COMPARE,GO,INPUT,LO
					AD 
      46                                        PUBLIC  NAME,OUTPUT,TRACE,ZTRAC
					E,DWRITE 
      47                                        endif 
      48                                 
      49                                        EXTRN   GETHEX:NEAR,GETEOL:NEAR
					 
      50                                        EXTRN   CRLF:NEAR,BLANK:NEAR,OU
					T:NEAR 
      51                                        EXTRN   OUTSI:NEAR,OUTDI:NEAR,I
					NBUF:NEAR,SCANB:NEAR,SCANP:NEAR 
      52                                        EXTRN   RPRBUF:NEAR,HEX:NEAR,OU
					T16:NEAR,DIGIT:NEAR 
      53                                        EXTRN   COMMAND:NEAR,DISASLN:NE
					AR,SET_TERMINATE_VECTOR:NEAR 
      54                                        EXTRN   RESTART:NEAR,DABORT:NEA
					R,TERMINATE:NEAR,DRVERR:NEAR 
      55                                        EXTRN   FIND_DEBUG:NEAR,NMIInt:
					NEAR,NMIIntEnd:NEAR 
      56                                        EXTRN   HEXCHK:NEAR,GETHEX1:NEA
					R,PRINT:NEAR,DSRANGE:NEAR 
      57                                        EXTRN   ADDRESS:NEAR,HEXIN:NEAR
					,PERROR:NEAR 
      58                                 
      59                                 
      60 0000                           DEBCOM2: 
      61 0000                           DISPREG: 
      62 0000  BE 0000 E                        MOV     SI,OFFSET DG:REGTAB 
      63 0003  BB 0000 E                        MOV     BX,OFFSET DG:AXSAVE 
      64 0006  C6 06 0000 E 0D                  MOV     BYTE PTR TOTREG,13 
      65 000B  B5 00                            MOV     CH,0 
      66 000D  8A 0E 0000 E                     MOV     CL,NOREGL 
      67 0011                           REPDISP: 
      68 0011  28 0E 0000 E                     SUB     TOTREG,CL 
      69 0015  E8 015E R                        CALL    DISPREGLINE 
      70 0018  E8 0000 E                        CALL    CRLF 
      71 001B  B5 00                            MOV     CH,0 
      72 001D  8A 0E 0000 E                     MOV     CL,NOREGL 
      73 0021  3A 0E 0000 E                     CMP     CL,TOTREG 
      74 0025  7C EA                            JL      REPDISP 
      75 0027  8A 0E 0000 E                     MOV     CL,TOTREG 
      76 002B  E8 015E R                        CALL    DISPREGLINE 
      77 002E  E8 0000 E                        CALL    BLANK 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 09:30:04

PART2 DEBUGGER COMMANDS                                     Page     1-3
                                                            

      78 0031  E8 019B R                        CALL    DISPFLAGS 
      79 0034  E8 0000 E                        CALL    CRLF 
      80 0037  A1 0000 E                        MOV     AX,[IPSAVE] 
      81 003A  A3 0000 E                        MOV     WORD PTR [DISADD],AX 
      82 003D  50                               PUSH    AX 
      83 003E  A1 0000 E                        MOV     AX,[CSSAVE] 
      84 0041  A3 0002 E                        MOV     WORD PTR [DISADD+2],AX 
      85 0044  50                               PUSH    AX 
      86 0045  C7 06 0000 E FFFF                MOV     [NSEG],-1 
      87 004B  E8 0000 E                        CALL    DISASLN 
      88 004E  8F 06 0002 E                     POP     WORD PTR DISADD+2 
      89 0052  8F 06 0000 E                     POP     WORD PTR DISADD 
      90 0056  A1 0000 E                        MOV     AX,[NSEG] 
      91 0059  3C FF                            CMP     AL,-1 
      92 005B  74 3F                            JZ      CRLFJ 
      93 005D  80 FC FF                         CMP     AH,-1 
      94 0060  74 02                            JZ      NOOVER 
      95 0062  86 C4                            XCHG    AL,AH 
      96 0064                           NOOVER: 
      97 0064  98                               CBW 
      98 0065  8B D8                            MOV     BX,AX 
      99 0067  D1 E3                            SHL     BX,1 
     100 0069  8B 87 0000 E                     MOV     AX,WORD PTR [BX+SREG] 
     101 006D  E8 0000 E                        CALL    OUT 
     102 0070  86 C4                            XCHG    AL,AH 
     103 0072  E8 0000 E                        CALL    OUT 
     104 0075  B0 3A                            MOV     AL,":" 
     105 0077  E8 0000 E                        CALL    OUT 
     106 007A  8B 16 0000 E                     MOV     DX,[INDEX] 
     107 007E  E8 0000 E                        CALL    OUT16 
     108 0081  B0 3D                            MOV     AL,"=" 
     109 0083  E8 0000 E                        CALL    OUT 
     110 0086  8B 9F 0000 E                     MOV     BX,[BX+SEGTAB] 
     111 008A  1E                               PUSH    DS 
     112 008B  8E 1F                            MOV     DS,[BX] 
     113 008D  8B DA                            MOV     BX,DX 
     114 008F  8B 17                            MOV     DX,[BX] 
     115 0091  1F                               POP     DS 
     116 0092  F6 06 0000 E FF                  TEST    BYTE PTR [AWORD],-1 
     117 0097  74 06                            JZ      OUT8 
     118 0099  E8 0000 E                        CALL    OUT16 
     119 009C                           CRLFJ: 
     120 009C  E9 0000 E                        JMP     CRLF 
     121 009F                           OUT8: 
     122 009F  8A C2                            MOV     AL,DL 
     123 00A1  E8 0000 E                        CALL    HEX 
     124 00A4  E9 0000 E                        JMP     CRLF 
     125                                 
     126 00A7  E9 0000 R                DISPREGJ:JMP    DISPREG 
     127                                 
     128                                ; Perform register dump if no parameter
					s or set register if a 
     129                                ; register designation is a parameter. 
     130                                 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 09:30:04

PART2 DEBUGGER COMMANDS                                     Page     1-4
                                                            

     131 00AA                           REG: 
     132 00AA  E8 0000 E                        CALL    SCANP 
     133 00AD  74 F8                            JZ      DISPREGJ 
     134 00AF  8A 14                            MOV     DL,[SI] 
     135 00B1  46                               INC     SI 
     136 00B2  8A 34                            MOV     DH,[SI] 
     137 00B4  80 FE 0D                         CMP     DH,13 
     138 00B7  74 58                            JZ      FLAG 
     139 00B9  46                               INC     SI 
     140 00BA  E8 0000 E                        CALL    GETEOL 
     141 00BD  80 FE 20                         CMP     DH," " 
     142 00C0  74 4F                            JZ      FLAG 
     143 00C2  BF 0000 E                        MOV     DI,OFFSET DG:REGTAB 
     144 00C5  92                               XCHG    AX,DX 
     145 00C6  0E                               PUSH    CS 
     146 00C7  07                               POP     ES 
     147 00C8  B9 000E                          MOV     CX,REGTABLEN 
     148 00CB  F2/ AF                           REPNZ   SCASW 
     149 00CD  75 3C                            JNZ     BADREG 
     150 00CF  0B C9                            OR      CX,CX 
     151 00D1  75 06                            JNZ     NOTPC 
     152 00D3  4F                               DEC     DI 
     153 00D4  4F                               DEC     DI 
     154 00D5  2E: 8B 45 FE                     MOV     AX,CS:[DI-2] 
     155 00D9                           NOTPC: 
     156 00D9  E8 0000 E                        CALL    OUT 
     157 00DC  8A C4                            MOV     AL,AH 
     158 00DE  E8 0000 E                        CALL    OUT 
     159 00E1  E8 0000 E                        CALL    BLANK 
     160 00E4  1E                               PUSH    DS 
     161 00E5  07                               POP     ES 
     162 00E6  8D 9D FFFE E                     LEA     BX,[DI+REGDIF-2] 
     163 00EA  8B 17                            MOV     DX,[BX] 
     164 00EC  E8 0000 E                        CALL    OUT16 
     165 00EF  E8 0000 E                        CALL    CRLF 
     166 00F2  B0 3A                            MOV     AL,":" 
     167 00F4  E8 0000 E                        CALL    OUT 
     168 00F7  E8 0000 E                        CALL    INBUF 
     169 00FA  E8 0000 E                        CALL    SCANB 
     170 00FD  74 0B                            JZ      RET4 
     171 00FF  B9 0004                          MOV     CX,4 
     172 0102  E8 0000 E                        CALL    GETHEX1 
     173 0105  E8 0000 E                        CALL    GETEOL 
     174 0108  89 17                            MOV     [BX],DX 
     175 010A  C3                       RET4:   RET 
     176 010B                           BADREG: 
     177 010B  B8 5242                          MOV     AX,5200H+"B"           
					 ; BR ERROR 
     178 010E  EB 73 90                         JMP     ERR 
     179 0111                           FLAG: 
     180 0111  80 FA 46                         CMP     DL,"F" 
     181 0114  75 F5                            JNZ     BADREG 
     182 0116  E8 019B R                        CALL    DISPFLAGS 
     183 0119  B0 2D                            MOV     AL,"-" 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 09:30:04

PART2 DEBUGGER COMMANDS                                     Page     1-5
                                                            

     184 011B  E8 0000 E                        CALL    OUT 
     185 011E  E8 0000 E                        CALL    INBUF 
     186 0121  E8 0000 E                        CALL    SCANB 
     187 0124  33 DB                            XOR     BX,BX 
     188 0126  8B 16 0000 E                     MOV     DX,[FSAVE] 
     189 012A                           GETFLG: 
     190 012A  AD                               LODSW 
     191 012B  3C 0D                            CMP     AL,13 
     192 012D  74 62                            JZ      SAVCHG 
     193 012F  80 FC 0D                         CMP     AH,13 
     194 0132  74 62                            JZ      FLGERR 
     195 0134  BF 0000 E                        MOV     DI,OFFSET DG:FLAGTAB 
     196 0137  B9 0020                          MOV     CX,32 
     197 013A  0E                               PUSH    CS 
     198 013B  07                               POP     ES 
     199 013C  F2/ AF                           REPNE   SCASW 
     200 013E  75 56                            JNZ     FLGERR 
     201 0140  8A E9                            MOV     CH,CL 
     202 0142  80 E1 0F                         AND     CL,0FH 
     203 0145  B8 0001                          MOV     AX,1 
     204 0148  D3 C0                            ROL     AX,CL 
     205 014A  85 C3                            TEST    AX,BX 
     206 014C  75 2F                            JNZ     REPFLG 
     207 014E  0B D8                            OR      BX,AX 
     208 0150  0B D0                            OR      DX,AX 
     209 0152  F6 C5 10                         TEST    CH,16 
     210 0155  75 02                            JNZ     NEXFLG 
     211 0157  33 D0                            XOR     DX,AX 
     212 0159                           NEXFLG: 
     213 0159  E8 0000 E                        CALL    SCANP 
     214 015C  EB CC                            JMP     SHORT GETFLG 
     215 015E                           DISPREGLINE: 
     216 015E  2E: AD                           LODS    CS:WORD PTR [SI] 
     217 0160  E8 0000 E                        CALL    OUT 
     218 0163  8A C4                            MOV     AL,AH 
     219 0165  E8 0000 E                        CALL    OUT 
     220 0168  B0 3D                            MOV     AL,"=" 
     221 016A  E8 0000 E                        CALL    OUT 
     222 016D  8B 17                            MOV     DX,[BX] 
     223 016F  43                               INC     BX 
     224 0170  43                               INC     BX 
     225 0171  E8 0000 E                        CALL    OUT16 
     226 0174  E8 0000 E                        CALL    BLANK 
     227 0177  E8 0000 E                        CALL    BLANK 
     228 017A  E2 E2                            LOOP    DISPREGLINE 
     229 017C  C3                               RET 
     230 017D                           REPFLG: 
     231 017D  B8 4644                          MOV     AX,4600H+"D"           
					 ; DF ERROR 
     232 0180                           FERR: 
     233 0180  E8 0191 R                        CALL    SAVCHG 
     234 0183                           ERR: 
     235 0183  E8 0000 E                        CALL    OUT 
     236 0186  8A C4                            MOV     AL,AH 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 09:30:04

PART2 DEBUGGER COMMANDS                                     Page     1-6
                                                            

     237 0188  E8 0000 E                        CALL    OUT 
     238 018B  BE 0000 E                        MOV     SI,OFFSET DG:ERRMES 
     239 018E  E9 0000 E                        JMP     PRINT 
     240 0191                           SAVCHG: 
     241 0191  89 16 0000 E                     MOV     [FSAVE],DX 
     242 0195  C3                               RET 
     243 0196                           FLGERR: 
     244 0196  B8 4642                          MOV     AX,4600H+"B"           
					 ; BF ERROR 
     245 0199  EB E5                            JMP     SHORT FERR 
     246 019B                           DISPFLAGS: 
     247 019B  BE 0000 E                        MOV     SI,OFFSET DG:FLAGTAB 
     248 019E  B9 0010                          MOV     CX,16 
     249 01A1  8B 16 0000 E                     MOV     DX,[FSAVE] 
     250 01A5                           DFLAGS: 
     251 01A5  2E: AD                           LODS    CS:WORD PTR [SI] 
     252 01A7  D1 E2                            SHL     DX,1 
     253 01A9  72 04                            JC      FLAGSET 
     254 01AB  2E: 8B 44 1E                     MOV     AX,CS:[SI+30] 
     255 01AF                           FLAGSET: 
     256 01AF  0B C0                            OR      AX,AX 
     257 01B1  74 0B                            JZ      NEXTFLG 
     258 01B3  E8 0000 E                        CALL    OUT 
     259 01B6  8A C4                            MOV     AL,AH 
     260 01B8  E8 0000 E                        CALL    OUT 
     261 01BB  E8 0000 E                        CALL    BLANK 
     262 01BE                           NEXTFLG: 
     263 01BE  E2 E5                            LOOP    DFLAGS 
     264 01C0  C3                               RET 
     265                                 
     266                                ; Input from the specified port and dis
					play result 
     267                                 
     268 01C1                           INPUT: 
     269 01C1  B9 0004                          MOV     CX,4                   
					 ; Port may have 4 digits 
     270 01C4  E8 0000 E                        CALL    GETHEX                 
					 ; Get port number in DX 
     271 01C7  E8 0000 E                        CALL    GETEOL 
     272 01CA  EC                               IN      AL,DX                  
					 ; Variable port input 
     273 01CB  E8 0000 E                        CALL    HEX                    
					 ; And display 
     274 01CE  E9 0000 E                        JMP     CRLF 
     275                                 
     276                                ; Output a value to specified port. 
     277                                 
     278 01D1                           OUTPUT: 
     279 01D1  B9 0004                          MOV     CX,4                   
					 ; Port may have 4 digits 
     280 01D4  E8 0000 E                        CALL    GETHEX                 
					 ; Get port number 
     281 01D7  52                               PUSH    DX                     
					 ; Save while we get data 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 09:30:04

PART2 DEBUGGER COMMANDS                                     Page     1-7
                                                            

     282 01D8  B9 0002                          MOV     CX,2                   
					 ; Byte output only 
     283 01DB  E8 0000 E                        CALL    GETHEX                 
					 ; Get data to output 
     284 01DE  E8 0000 E                        CALL    GETEOL 
     285 01E1  92                               XCHG    AX,DX                  
					 ; Output data in AL 
     286 01E2  5A                               POP     DX                     
					 ; Port in DX 
     287 01E3  EE                               OUT     DX,AL                  
					 ; Variable port output 
     288 01E4  C3                       RET5:   RET 
     289 01E5                           COMPARE: 
     290 01E5  E8 0000 E                        CALL    DSRANGE 
     291 01E8  51                               PUSH    CX 
     292 01E9  50                               PUSH    AX 
     293 01EA  52                               PUSH    DX 
     294 01EB  E8 0000 E                        CALL    ADDRESS                
					 ; Same segment 
     295 01EE  E8 0000 E                        CALL    GETEOL 
     296 01F1  5E                               POP     SI 
     297 01F2  8B FA                            MOV     DI,DX 
     298 01F4  8E C0                            MOV     ES,AX 
     299 01F6  1F                               POP     DS 
     300 01F7  59                               POP     CX                     
					 ; Length 
     301 01F8  49                               DEC     CX 
     302 01F9  E8 01FD R                        CALL    COMP                   
					 ; Do one less than total 
     303 01FC  41                               INC     CX                     
					 ; CX=1 (do last one) 
     304 01FD                           COMP: 
     305 01FD  F3/ A6                           REPE    CMPSB 
     306 01FF  74 E3                            JZ      RET5 
     307                                ; Compare error. Print address, value; 
					value, address. 
     308 0201  4E                               DEC     SI 
     309 0202  E8 0000 E                        CALL    OUTSI 
     310 0205  E8 0000 E                        CALL    BLANK 
     311 0208  E8 0000 E                        CALL    BLANK 
     312 020B  AC                               LODSB 
     313 020C  E8 0000 E                        CALL    HEX 
     314 020F  E8 0000 E                        CALL    BLANK 
     315 0212  E8 0000 E                        CALL    BLANK 
     316 0215  4F                               DEC     DI 
     317 0216  26: 8A 05                        MOV     AL,ES:[DI] 
     318 0219  E8 0000 E                        CALL    HEX 
     319 021C  E8 0000 E                        CALL    BLANK 
     320 021F  E8 0000 E                        CALL    BLANK 
     321 0222  E8 0000 E                        CALL    OUTDI 
     322 0225  47                               INC     DI 
     323 0226  E8 0000 E                        CALL    CRLF 
     324 0229  32 C0                            XOR     AL,AL 
     325 022B  EB D0                            JMP     SHORT COMP 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 09:30:04

PART2 DEBUGGER COMMANDS                                     Page     1-8
                                                            

     326                                 
     327 022D                           ZTRACE: 
     328                                IF ZIBO 
     329                                ; just like trace except skips OVER nex
					t INT or CALL. 
     330 022D  E8 0425 R                        CALL    SETADD                 
					 ; get potential starting point 
     331 0230  E8 0000 E                        CALL    GETEOL                 
					 ; check for end of line 
     332 0233  C7 06 0000 E 0001                MOV     [TCOUNT],1             
					 ; only a single go at it 
     333 0239  8E 06 0000 E                     MOV     ES,[CSSAVE]            
					 ; point to instruction to execute 
     334 023D  8B 3E 0000 E                     MOV     DI,[IPSAVE]            
					 ; include offset in segment 
     335 0241  33 D2                            XOR     DX,DX                  
					 ; where to place breakpoint 
     336 0243  26: 8A 05                        MOV     AL,ES:[DI]             
					 ; get the opcode 
     337 0246  3C E8                            CMP     AL,11101000B           
					 ; direct intra call 
     338 0248  74 5A                            JZ      ZTrace3                
					 ; yes, 3 bytes 
     339 024A  3C 9A                            CMP     AL,10011010B           
					 ; direct inter call 
     340 024C  74 54                            JZ      ZTrace5                
					 ; yes, 5 bytes 
     341 024E  3C FF                            CMP     AL,11111111B           
					 ; indirect? 
     342 0250  74 37                            JZ      ZTraceModRM            
					 ; yes, go figure length 
     343 0252  3C CC                            CMP     AL,11001100B           
					 ; short interrupt? 
     344 0254  74 50                            JZ      ZTrace1                
					 ; yes, 1 byte 
     345 0256  3C CD                            CMP     AL,11001101B           
					 ; long interrupt? 
     346 0258  74 4B                            JZ      ZTrace2                
					 ; yes, 2 bytes 
     347 025A  3C E2                            CMP     AL,11100010B           
					 ; loop 
     348 025C  74 47                            JZ      ZTrace2                
					 ; 2 byter 
     349 025E  3C E1                            CMP     AL,11100001B           
					 ; loopz/loope 
     350 0260  74 43                            JZ      ZTrace2                
					 ; 2 byter 
     351 0262  3C E0                            CMP     AL,11100000B           
					 ; loopnz/loopne 
     352 0264  74 3F                            JZ      ZTrace2                
					 ; 2 byter 
     353 0266  24 FE                            AND     AL,11111110B           
					 ; check for rep 
     354 0268  3C F2                            CMP     AL,11110010B           
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 09:30:04

PART2 DEBUGGER COMMANDS                                     Page     1-9
                                                            

					 ; perhaps? 
     355 026A  75 73                            JNZ     Step                   
					 ; can't do anything special, step 
     356 026C  26: 8A 45 01                     MOV     AL,ES:[DI+1]           
					 ; next instruction 
     357 0270  24 FE                            AND     AL,11111110B           
					 ; ignore w bit 
     358 0272  3C A4                            CMP     AL,10100100B           
					 ; MOVS 
     359 0274  74 2F                            JZ      ZTrace2                
					 ; two byte 
     360 0276  3C A6                            CMP     AL,10100110B           
					 ; CMPS 
     361 0278  74 2B                            JZ      ZTrace2                
					 ; two byte 
     362 027A  3C AE                            CMP     AL,10101110B           
					 ; SCAS 
     363 027C  74 27                            JZ      ZTrace2                
					 ; two byte 
     364 027E  3C AC                            CMP     AL,10101100B           
					 ; LODS 
     365 0280  74 23                            JZ      ZTrace2                
					 ; two byte 
     366 0282  3C AA                            CMP     AL,10101010B           
					 ; STOS 
     367 0284  74 1F                            JZ      ZTrace2                
					 ; two byte 
     368 0286  EB 57 90                         JMP     Step                   
					 ; bogus, do single step 
     369                                 
     370 0289                           ZTraceModRM: 
     371 0289  26: 8A 45 01                     MOV     AL,ES:[DI+1]           
					 ; get next byte 
     372 028D  24 F8                            AND     AL,11111000B           
					 ; get mod and type 
     373 028F  3C 50                            CMP     AL,01010000B           
					 ; indirect intra 8 bit offset? 
     374 0291  74 11                            JZ      ZTrace3                
					 ; yes, three byte whammy 
     375 0293  3C 58                            CMP     AL,01011000B           
					 ; indirect inter 8 bit offset 
     376 0295  74 0D                            JZ      ZTrace3                
					 ; yes, three byte guy 
     377 0297  3C 90                            CMP     AL,10010000B           
					 ; indirect intra 16 bit offset? 
     378 0299  74 08                            JZ      ZTrace4                
					 ; four byte offset 
     379 029B  3C 98                            CMP     AL,10011000B           
					 ; indirect inter 16 bit offset? 
     380 029D  74 04                            JZ      ZTrace4                
					 ; four bytes 
     381 029F  EB 3E 90                         JMP     Step                   
					 ; can't figger out what this is! 
     382 02A2  42                       ZTrace5:INC     DX 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 09:30:04

PART2 DEBUGGER COMMANDS                                     Page     1-10
                                                            

     383 02A3  42                       ZTrace4:INC     DX 
     384 02A4  42                       ZTrace3:INC     DX 
     385 02A5  42                       ZTrace2:INC     DX 
     386 02A6  42                       ZTrace1:INC     DX 
     387 02A7  03 FA                            ADD     DI,DX                  
					 ; offset to breakpoint instruction 
     388 02A9  89 3E 0000 E                     MOV     WORD PTR [BPTab],DI    
					 ; save offset 
     389 02AD  8C 06 0002 E                     MOV     WORD PTR [BPTab+2],ES  
					 ; save segment 
     390 02B1  26: 8A 05                        MOV     AL,ES:[DI]             
					 ; get next opcode byte 
     391 02B4  A2 0004 E                        MOV     BYTE PTR [BPTab+4],AL  
					 ; save it 
     392 02B7  26: C6 05 CC                     MOV     BYTE PTR ES:[DI],0CCh  
					 ; break point it 
     393 02BB  C7 06 0000 E 0001                MOV     [BrkCnt],1             
					 ; only this breakpoint 
     394 02C1  EB 27 90                         JMP     DExit                  
					 ; start the operation! 
     395                                        ENDIF 
     396                                 
     397                                ; Trace 1 instruction or the number of 
					instruction specified 
     398                                ; by the parameter using 8086 trace mod
					e. Registers are all 
     399                                ; set according to values in save area 
     400                                 
     401 02C4                           TRACE: 
     402 02C4  E8 0425 R                        CALL    SETADD 
     403 02C7  E8 0000 E                        CALL    SCANP 
     404 02CA  E8 0000 E                        CALL    HEXIN 
     405 02CD  BA 0001                          MOV     DX,1 
     406 02D0  72 06                            JC      STOCNT 
     407 02D2  B9 0004                          MOV     CX,4 
     408 02D5  E8 0000 E                        CALL    GETHEX 
     409 02D8                           STOCNT: 
     410 02D8  89 16 0000 E                     MOV     [TCOUNT],DX 
     411 02DC  E8 0000 E                        CALL    GETEOL 
     412 02DF                           STEP: 
     413 02DF  C7 06 0000 E 0000                MOV     [BRKCNT],0 
     414 02E5  80 0E 0001 E 01                  OR      BYTE PTR [FSAVE+1],1 
     415 02EA                           DEXIT: 
     416                                IF  NOT SYSVER 
     417 02EA  8B 1E 0000 E                     MOV     BX,[USER_PROC_PDB] 
     418 02EE  B4 50                            MOV     AH,SET_CURRENT_PDB 
     419 02F0  CD 21                            INT     21H 
     420                                ENDIF 
     421 02F2  1E                               PUSH    DS 
     422 02F3  33 C0                            XOR     AX,AX 
     423 02F5  8E D8                            MOV     DS,AX 
     424 02F7  C7 06 000C 0347 R                MOV     WORD PTR DS:[12],OFFSET
					 DG:BREAKFIX ; Set vector 3--breakpoint
					 instruction 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 09:30:04

PART2 DEBUGGER COMMANDS                                     Page     1-11
                                                            

     425 02FD  8C 0E 000E                       MOV     WORD PTR DS:[14],CS 
     426 0301  C7 06 0004 0352 R                MOV     WORD PTR DS:[4],OFFSET 
					DG:REENTER   ; Set vector 1--Single ste
					p 
     427 0307  8C 0E 0006                       MOV     WORD PTR DS:[6],CS 
     428 030B  FA                               CLI 
     429                                 
     430                                        IF      SETCNTC 
     431 030C  C7 06 008C 0342 R                MOV     WORD PTR DS:[8CH],OFFSE
					T DG:CONTC   ; Set vector 23H (CTRL-C) 
     432 0312  8C 0E 008E                       MOV     WORD PTR DS:[8EH],CS 
     433                                        ENDIF 
     434                                 
     435 0316  1F                               POP     DS 
     436 0317  BC 0000 E                        MOV     SP,OFFSET DG:STACK 
     437 031A  58                               POP     AX 
     438 031B  5B                               POP     BX 
     439 031C  59                               POP     CX 
     440 031D  5A                               POP     DX 
     441 031E  5D                               POP     BP 
     442 031F  5D                               POP     BP 
     443 0320  5E                               POP     SI 
     444 0321  5F                               POP     DI 
     445 0322  07                               POP     ES 
     446 0323  07                               POP     ES 
     447 0324  17                               POP     SS 
     448 0325  8B 26 0000 E                     MOV     SP,[SPSAVE] 
     449 0329  FF 36 0000 E                     PUSH    [FSAVE] 
     450 032D  FF 36 0000 E                     PUSH    [CSSAVE] 
     451 0331  FF 36 0000 E                     PUSH    [IPSAVE] 
     452 0335  8E 1E 0000 E                     MOV     DS,[DSSAVE] 
     453 0339  CF                               IRET 
     454 033A                           STEP1: 
     455 033A  E8 0000 E                        CALL    CRLF 
     456 033D  E8 0000 R                        CALL    DISPREG 
     457 0340  EB 9D                            JMP     SHORT STEP 
     458                                 
     459                                ; Re-entry point from CTRL-C. Top of st
					ack has address in 86-DOS for 
     460                                ; continuing, so we must pop that off. 
     461                                 
     462 0342                           CONTC: 
     463 0342  83 C4 06                         ADD     SP,6 
     464 0345  EB 53                            JMP     SHORT ReEnterReal 
     465                                 
     466                                ; Re-entry point from breakpoint. Need 
					to decrement instruction 
     467                                ; pointer so it points to location wher
					e breakpoint actually 
     468                                ; occured. 
     469                                 
     470 0347                           BREAKFIX: 
     471 0347  55                               PUSH    BP 
     472 0348  8B EC                            MOV     BP,SP 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 09:30:04

PART2 DEBUGGER COMMANDS                                     Page     1-12
                                                            

     473 034A  FF 8E 0002                       DEC     WORD PTR [BP].OldIP 
     474 034E  5D                               POP     BP 
     475 034F  EB 49 90                         JMP     ReenterReal 
     476                                 
     477                                ; Re-entry point from trace mode or int
					errupt during 
     478                                ; execution. All registers are saved so
					 they can be 
     479                                ; displayed or modified. 
     480                                 
     481                                Interrupt_Frame STRUC 
     482 0000  ????                     OldBP   DW  ? 
     483 0002  ????                     OldIP   DW  ? 
     484 0004  ????                     OldCS   DW  ? 
     485 0006  ????                     OldF    DW  ? 
     486 0008  ????                     OlderIP DW  ? 
     487 000A  ????                     OlderCS DW  ? 
     488 000C  ????                     OlderF  DW  ? 
     489 000E                           Interrupt_Frame ENDS 
     490                                 
     491 0352                           REENTER: 
     492 0352  55                               PUSH    BP 
     493 0353  8B EC                            MOV     BP,SP                  
					 ; get a frame to address from 
     494 0355  50                               PUSH    AX 
     495 0356  8C C8                            MOV     AX,CS 
     496 0358  3B 46 04                         CMP     AX,[BP].OldCS          
					 ; Did we interrupt ourselves? 
     497 035B  75 3B                            JNZ     GoReEnter              
					 ; no, go reenter 
     498 035D  8B 46 02                         MOV     AX,[BP].OldIP 
     499 0360  3D 0000 E                        CMP     AX,OFFSET DG:NMIInt    
					 ; interrupt below NMI interrupt? 
     500 0363  72 33                            JB      GoReEnter              
					 ; yes, go reenter 
     501 0365  81 7E 02 0000 E                  CMP     [BP].OLDIP,OFFSET DG:NM
					IIntEnd 
     502 036A  73 2C                            JAE     GoReEnter              
					 ; interrupt above NMI interrupt? 
     503 036C  58                               POP     AX                     
					 ; restore state 
     504 036D  5D                               POP     BP 
     505 036E  83 EC 06                         SUB     SP,6                   
					 ; switch TRACE and NMI stack frames 
     506 0371  55                               PUSH    BP 
     507 0372  8B EC                            MOV     BP,SP                  
					 ; set up frame 
     508 0374  50                               PUSH    AX                     
					 ; get temp variable 
     509 0375  8B 46 08                         MOV     AX,[BP].OlderIP        
					 ; get NMI Vector 
     510 0378  89 46 02                         MOV     [BP].OldIP,AX          
					 ; stuff in new NMI vector 
     511 037B  8B 46 0A                         MOV     AX,[BP].OlderCS        
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 09:30:04

PART2 DEBUGGER COMMANDS                                     Page     1-13
                                                            

					 ; get NMI Vector 
     512 037E  89 46 04                         MOV     [BP].OldCS,AX          
					 ; stuff in new NMI vector 
     513 0381  8B 46 0C                         MOV     AX,[BP].OlderF         
					 ; get NMI Vector 
     514 0384  80 E4 FE                         AND     AH,0FEh                
					 ; turn off Trace if present 
     515 0387  89 46 06                         MOV     [BP].OldF,AX           
					 ; stuff in new NMI vector 
     516 038A  89 46 0C                         MOV     [BP].OlderF,AX 
     517 038D  C7 46 08 0352 R                  MOV     [BP].OlderIP,OFFSET DG:
					ReEnter  ; offset of routine 
     518 0392  8C 4E 0A                         MOV     [BP].OlderCS,CS        
					 ; and CS 
     519 0395  58                               POP     AX 
     520 0396  5D                               POP     BP 
     521 0397  CF                               IRET                           
					 ; go try again 
     522 0398                           GoReEnter: 
     523 0398  58                               POP     AX 
     524 0399  5D                               POP     BP 
     525 039A                           ReEnterReal: 
     526 039A  2E: 89 26 0000 E                 MOV     CS:[SPSAVE+SEGDIF],SP 
     527 039F  2E: 8C 16 0000 E                 MOV     CS:[SSSAVE+SEGDIF],SS 
     528 03A4  2E: 8C 0E 0000 E                 MOV     CS:[FSAVE],CS 
     529 03A9  2E: 8E 16 0000 E                 MOV     SS,CS:[FSAVE] 
     530 03AE  BC 0000 E                        MOV     SP,OFFSET DG:RSTACK 
     531 03B1  06                               PUSH    ES 
     532 03B2  1E                               PUSH    DS 
     533 03B3  57                               PUSH    DI 
     534 03B4  56                               PUSH    SI 
     535 03B5  55                               PUSH    BP 
     536 03B6  4C                               DEC     SP 
     537 03B7  4C                               DEC     SP 
     538 03B8  52                               PUSH    DX 
     539 03B9  51                               PUSH    CX 
     540 03BA  53                               PUSH    BX 
     541 03BB  50                               PUSH    AX 
     542 03BC  16                               PUSH    SS 
     543 03BD  1F                               POP     DS 
     544 03BE  8E 16 0000 E                     MOV     SS,[SSSAVE] 
     545 03C2  8B 26 0000 E                     MOV     SP,[SPSAVE] 
     546 03C6  8F 06 0000 E                     POP     [IPSAVE] 
     547 03CA  8F 06 0000 E                     POP     [CSSAVE] 
     548 03CE  58                               POP     AX 
     549 03CF  80 E4 FE                         AND     AH,0FEH                
					 ; turn off trace mode bit 
     550 03D2  A3 0000 E                        MOV     [FSAVE],AX 
     551 03D5  89 26 0000 E                     MOV     [SPSAVE],SP 
     552 03D9  1E                               PUSH    DS 
     553 03DA  07                               POP     ES 
     554 03DB  1E                               PUSH    DS 
     555 03DC  17                               POP     SS 
     556 03DD  BC 0000 E                        MOV     SP,OFFSET DG:STACK 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 09:30:04

PART2 DEBUGGER COMMANDS                                     Page     1-14
                                                            

     557 03E0  1E                               PUSH    DS 
     558 03E1  33 C0                            XOR     AX,AX 
     559 03E3  8E D8                            MOV     DS,AX 
     560                                 
     561                                        IF      SETCNTC 
     562 03E5  C7 06 008C 0000 E                MOV     WORD PTR DS:[8CH],OFFSE
					T DG:DABORT  ; Set Ctrl-C vector 
     563 03EB  8C 0E 008E                       MOV     WORD PTR DS:[8EH],CS 
     564                                        ENDIF 
     565                                 
     566 03EF  1F                               POP     DS 
     567 03F0  FB                               STI 
     568 03F1  FC                               CLD 
     569                                IF  NOT SYSVER 
     570 03F2  B4 51                            MOV     AH,GET_CURRENT_PDB 
     571 03F4  CD 21                            INT     21H 
     572 03F6  89 1E 0000 E                     MOV     [USER_PROC_PDB],BX 
     573 03FA  8C DB                            MOV     BX,DS 
     574 03FC  B4 50                            MOV     AH,SET_CURRENT_PDB 
     575 03FE  CD 21                            INT     21H 
     576                                ENDIF 
     577 0400  FF 0E 0000 E                     DEC     [TCOUNT] 
     578 0404  74 03                            JZ      CheckDisp 
     579 0406  E9 033A R                        JMP     Step1 
     580 0409                           CheckDisp: 
     581 0409  BE 0000 E                        MOV     SI,OFFSET DG:BPTAB 
     582 040C  8B 0E 0000 E                     MOV     CX,[BRKCNT] 
     583 0410  E3 0A                            JCXZ    SHOREG 
     584 0412  06                               PUSH    ES 
     585 0413                           CLEARBP: 
     586 0413  C4 3C                            LES     DI,DWORD PTR [SI] 
     587 0415  83 C6 04                         ADD     SI,4 
     588 0418  A4                               MOVSB 
     589 0419  E2 F8                            LOOP    CLEARBP 
     590 041B  07                               POP     ES 
     591 041C                           SHOREG: 
     592 041C  E8 0000 E                        CALL    CRLF 
     593 041F  E8 0000 R                        CALL    DISPREG 
     594 0422  E9 0000 E                        JMP     COMMAND 
     595                                 
     596 0425                           SETADD: 
     597 0425  8B 2E 0000 E                     MOV     BP,[CSSAVE] 
     598 0429  E8 0000 E                        CALL    SCANP 
     599 042C  80 3C 3D                         CMP     BYTE PTR [SI],"=" 
     600 042F  75 0B                            JNZ     RET$5 
     601 0431  46                               INC     SI 
     602 0432  E8 0000 E                        CALL    ADDRESS 
     603 0435  A3 0000 E                        MOV     [CSSAVE],AX 
     604 0438  89 16 0000 E                     MOV     [IPSAVE],DX 
     605 043C  C3                       RET$5:  RET 
     606                                 
     607                                ; Jump to program, setting up registers
					 according to the 
     608                                ; save area. up to 10 breakpoint addres
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 09:30:04

PART2 DEBUGGER COMMANDS                                     Page     1-15
                                                            

					ses may be specified. 
     609                                 
     610 043D                           GO: 
     611 043D  E8 0425 R                        CALL    SETADD 
     612 0440  33 DB                            XOR     BX,BX 
     613 0442  BF 0000 E                        MOV     DI,OFFSET DG:BPTAB 
     614 0445                           GO1: 
     615 0445  E8 0000 E                        CALL    SCANP 
     616 0448  74 1B                            JZ      DEXEC 
     617 044A  8B 2E 0000 E                     MOV     BP,[CSSAVE] 
     618 044E  E8 0000 E                        CALL    ADDRESS 
     619 0451  89 15                            MOV     [DI],DX                
					 ; Save offset 
     620 0453  89 45 02                         MOV     [DI+2],AX              
					 ; Save segment 
     621 0456  83 C7 05                         ADD     DI,5                   
					 ; Leave a little room 
     622 0459  43                               INC     BX 
     623 045A  83 FB 0B                         CMP     BX,1+BPMAX 
     624 045D  75 E6                            JNZ     GO1 
     625 045F  B8 5042                          MOV     AX,5000H+"B"           
					 ; BP ERROR 
     626 0462  E9 0183 R                        JMP     ERR 
     627 0465                           DEXEC: 
     628 0465  89 1E 0000 E                     MOV     [BRKCNT],BX 
     629 0469  8B CB                            MOV     CX,BX 
     630 046B  E3 12                            JCXZ    NOBP 
     631 046D  BF 0000 E                        MOV     DI,OFFSET DG:BPTAB 
     632 0470  1E                               PUSH    DS 
     633 0471                           SETBP: 
     634 0471  26: C5 35                        LDS     SI,ES:DWORD PTR [DI] 
     635 0474  83 C7 04                         ADD     DI,4 
     636 0477  A4                               MOVSB 
     637 0478  C6 44 FF CC                      MOV     BYTE PTR [SI-1],0CCH 
     638 047C  E2 F3                            LOOP    SETBP 
     639 047E  1F                               POP     DS 
     640 047F                           NOBP: 
     641 047F  C7 06 0000 E 0001                MOV     [TCOUNT],1 
     642 0485  E9 02EA R                        JMP     DEXIT 
     643                                 
     644 0488                           SKIP_FILE: 
     645 0488  B4 37                            MOV     AH,CHAR_OPER 
     646 048A  CD 21                            INT     21H 
     647 048C  88 16 0000 E                     MOV     [SWITCHAR],DL          
					 ; GET THE CURRENT SWITCH CHARACTER 
     648 0490                           FIND_DELIM: 
     649 0490  AC                               LODSB 
     650 0491  E8 057E R                        CALL    DELIM1 
     651 0494  74 05                            JZ      GOTDELIM 
     652 0496  E8 0592 R                        CALL    DELIM2 
     653 0499  75 F5                            JNZ     FIND_DELIM 
     654 049B                           GOTDELIM: 
     655 049B  4E                               DEC     SI 
     656 049C  C3                               RET 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 09:30:04

PART2 DEBUGGER COMMANDS                                     Page     1-16
                                                            

     657                                 
     658 049D                           PREPNAME: 
     659 049D  8E 06 0000 E                     MOV     ES,DSSAVE 
     660 04A1  56                               PUSH    SI 
     661 04A2  BF 0081                          MOV     DI,81H 
     662 04A5                           COMTAIL: 
     663 04A5  AC                               LODSB 
     664 04A6  AA                               STOSB 
     665 04A7  3C 0D                            CMP     AL,13 
     666 04A9  75 FA                            JNZ     COMTAIL 
     667 04AB  81 EF 0082                       SUB     DI,82H 
     668 04AF  97                               XCHG    AX,DI 
     669 04B0  26: A2 0080                      MOV     ES:(BYTE PTR [80H]),AL 
     670 04B4  5E                               POP     SI 
     671 04B5  BF 005C                          MOV     DI,FCB 
     672 04B8  B8 2901                          MOV     AX,(PARSE_FILE_DESCRIPT
					OR SHL 8) OR 01H 
     673 04BB  CD 21                            INT     21H 
     674 04BD  A2 0000 E                        MOV     BYTE PTR [AXSAVE],AL   
					 ; Indicate analysis of first parm 
     675 04C0  E8 0488 R                        CALL    SKIP_FILE 
     676 04C3  BF 006C                          MOV     DI,6CH 
     677 04C6  B8 2901                          MOV     AX,(PARSE_FILE_DESCRIPT
					OR SHL 8) OR 01H 
     678 04C9  CD 21                            INT     21H 
     679 04CB  A2 0001 E                        MOV     BYTE PTR [AXSAVE+1],AL 
					 ; Indicate analysis of second parm 
     680 04CE  C3                       RET23:  RET 
     681                                 
     682                                 
     683                                ;  OPENS A XENIX PATHNAME SPECIFIED IN 
					THE UNFORMATTED PARAMETERS 
     684                                ;  VARIABLE [XNXCMD] SPECIFIES WHICH CO
					MMAND TO OPEN IT WITH 
     685                                ; 
     686                                ;  VARIABLE [HANDLE] CONTAINS THE HANDL
					E 
     687                                ;  VARIABLE [EXTPTR] POINTS TO THE FILE
					S EXTENSION 
     688                                 
     689 04CF                           DELETE_A_FILE: 
     690 04CF  C6 06 0000 E 41                  MOV     BYTE PTR [XNXCMD],UNLIN
					K 
     691 04D4  EB 33                            JMP     SHORT OC_FILE 
     692                                 
     693 04D6                           PARSE_A_FILE: 
     694 04D6  C6 06 0000 E 00                  MOV     BYTE PTR [XNXCMD],0 
     695 04DB  EB 2C                            JMP     SHORT OC_FILE 
     696                                 
     697 04DD                           EXEC_A_FILE: 
     698 04DD  C6 06 0000 E 4B                  MOV     BYTE PTR [XNXCMD],EXEC 
     699 04E2  C6 06 0000 E 01                  MOV     BYTE PTR [XNXOPT],1 
     700 04E7  EB 20                            JMP     SHORT OC_FILE 
     701                                 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 09:30:04

PART2 DEBUGGER COMMANDS                                     Page     1-17
                                                            

     702 04E9                           OPEN_A_FILE: 
     703 04E9  C6 06 0000 E 3D                  MOV     BYTE PTR [XNXCMD],OPEN 
     704 04EE  C6 06 0000 E 02                  MOV     BYTE PTR [XNXOPT],2    
					 ; Try read write 
     705 04F3  E8 0509 R                        CALL    OC_FILE 
     706 04F6  73 D6                            JNC     RET23 
     707 04F8  C6 06 0000 E 3D                  MOV     BYTE PTR [XNXCMD],OPEN 
     708 04FD  C6 06 0000 E 00                  MOV     BYTE PTR [XNXOPT],0    
					 ; Try read only 
     709 0502  EB 05                            JMP     SHORT OC_FILE 
     710                                 
     711 0504                           CREATE_A_FILE: 
     712 0504  C6 06 0000 E 3C                  MOV     BYTE PTR [XNXCMD],CREAT
					 
     713                                 
     714 0509                           OC_FILE: 
     715 0509  1E                               PUSH    DS 
     716 050A  06                               PUSH    ES 
     717 050B  50                               PUSH    AX 
     718 050C  53                               PUSH    BX 
     719 050D  51                               PUSH    CX 
     720 050E  52                               PUSH    DX 
     721 050F  56                               PUSH    SI 
     722 0510  33 C0                            XOR     AX,AX 
     723 0512  A3 0000 E                        MOV     [EXTPTR],AX            
					 ; INITIALIZE POINTER TO EXTENSIONS 
     724 0515  B4 37                            MOV     AH,CHAR_OPER 
     725 0517  CD 21                            INT     21H 
     726 0519  88 16 0000 E                     MOV     [SWITCHAR],DL          
					 ; GET THE CURRENT SWITCH CHARACTER 
     727                                 
     728 051D  BE 0081                          MOV     SI,81H 
     729                                 
     730 0520  E8 056B R                OPEN1:  CALL    GETCHRUP 
     731 0523  E8 0592 R                        CALL    DELIM2                 
					 ; END OF LINE? 
     732 0526  74 1D                            JZ      OPEN4 
     733 0528  E8 057E R                        CALL    DELIM1                 
					 ; SKIP LEADING DELIMITERS 
     734 052B  74 F3                            JZ      OPEN1 
     735                                 
     736 052D  8B D6                            MOV     DX,SI                  
					 ; SAVE POINTER TO BEGINNING 
     737 052F  4A                               DEC     DX 
     738 0530  3C 2E                    OPEN2:  CMP     AL,"."                 
					 ; LAST CHAR A "."? 
     739 0532  75 04                            JNZ     OPEN3 
     740 0534  89 36 0000 E                     MOV     [EXTPTR],SI            
					 ; SAVE POINTER TO THE EXTENSION 
     741 0538  E8 056B R                OPEN3:  CALL    GETCHRUP 
     742 053B  E8 057E R                        CALL    DELIM1                 
					 ; LOOK FOR END OF PATHNAME 
     743 053E  74 05                            JZ      OPEN4 
     744 0540  E8 0592 R                        CALL    DELIM2 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 09:30:04

PART2 DEBUGGER COMMANDS                                     Page     1-18
                                                            

     745 0543  75 EB                            JNZ     OPEN2 
     746                                 
     747 0545  4E                       OPEN4:  DEC     SI                     
					 ; POINT BACK TO LAST CHAR 
     748 0546  FF 34                            PUSH    [SI]                   
					 ; SAVE TERMINATION CHAR 
     749 0548  C6 04 00                         MOV     BYTE PTR [SI],0        
					 ; NULL TERMINATE THE STRING 
     750                                 
     751 054B  A0 0000 E                        MOV     AL,[XNXOPT] 
     752 054E  8A 26 0000 E                     MOV     AH,[XNXCMD]            
					 ; OPEN OR CREATE FILE 
     753 0552  0A E4                            OR      AH,AH 
     754 0554  74 0B                            JZ      OPNRET 
     755 0556  BB 0000 E                        MOV     BX,OFFSET DG:EXEC_BLOCK
					 
     756 0559  33 C9                            XOR     CX,CX 
     757 055B  CD 21                            INT     21H 
     758 055D  2E: A3 0000 E                    MOV     CS:[HANDLE],AX         
					 ; SAVE ERROR CODE OR HANDLE 
     759                                 
     760 0561  8F 04                    OPNRET: POP     [SI] 
     761                                 
     762 0563  5E                               POP     SI 
     763 0564  5A                               POP     DX 
     764 0565  59                               POP     CX 
     765 0566  5B                               POP     BX 
     766 0567  58                               POP     AX 
     767 0568  07                               POP     ES 
     768 0569  1F                               POP     DS 
     769 056A  C3                               RET 
     770                                 
     771 056B                           GETCHRUP: 
     772 056B  AC                               LODSB 
     773 056C  3C 61                            CMP     AL,"a" 
     774 056E  72 09                            JB      GCUR 
     775 0570  3C 7A                            CMP     AL,"z" 
     776 0572  77 05                            JA      GCUR 
     777 0574  2C 20                            SUB     AL,32 
     778 0576  88 44 FF                         MOV     [SI-1],AL 
     779 0579  C3                       GCUR:   RET 
     780                                 
     781 057A  3C 5B                    DELIM0: CMP     AL,"[" 
     782 057C  74 1C                            JZ      LIMRET 
     783 057E  3C 20                    DELIM1: CMP     AL," "                 
					 ; SKIP THESE GUYS 
     784 0580  74 18                            JZ      LIMRET 
     785 0582  3C 3B                            CMP     AL,";" 
     786 0584  74 14                            JZ      LIMRET 
     787 0586  3C 3D                            CMP     AL,"=" 
     788 0588  74 10                            JZ      LIMRET 
     789 058A  3C 09                            CMP     AL,9 
     790 058C  74 0C                            JZ      LIMRET 
     791 058E  3C 2C                            CMP     AL,"," 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 09:30:04

PART2 DEBUGGER COMMANDS                                     Page     1-19
                                                            

     792 0590  EB 08                            JMP     SHORT LIMRET 
     793                                 
     794 0592  3A 06 0000 E             DELIM2: CMP     AL,[SWITCHAR]          
					 ; STOP ON THESE GUYS 
     795 0596  74 02                            JZ      LIMRET 
     796 0598  3C 0D                            CMP     AL,13 
     797 059A  C3                       LIMRET: RET 
     798                                 
     799 059B                           NAME: 
     800 059B  E8 049D R                        CALL    PREPNAME 
     801 059E  A0 0000 E                        MOV     AL,BYTE PTR AXSAVE 
     802 05A1  A2 0000 E                        MOV     PARSERR,AL 
     803 05A4  06                               PUSH    ES 
     804 05A5  1F                               POP     DS 
     805 05A6  0E                               PUSH    CS 
     806 05A7  07                               POP     ES 
     807 05A8  BE 005C                          MOV     SI,FCB                 
					 ; DS:SI points to user FCB 
     808 05AB  8B FE                            MOV     DI,SI                  
					 ; ES:DI points to DEBUG FCB 
     809 05AD  B9 0052                          MOV     CX,82 
     810 05B0  F3/ A5                           REP     MOVSW 
     811 05B2  C3                       RET6:   RET 
     812                                 
     813 05B3                           BADNAM: 
     814 05B3  BA 0000 E                        MOV     DX,OFFSET DG:NAMBAD 
     815 05B6  E9 0000 E                        JMP     RESTART 
     816                                 
     817 05B9                           IFHEX: 
     818 05B9  80 3E 0000 E FF                  CMP     BYTE PTR [PARSERR],-1  
					 ; Invalid drive specification? 
     819 05BE  74 F3                            JZ      BADNAM 
     820 05C0  E8 04D6 R                        CALL    PARSE_A_FILE 
     821 05C3  8B 1E 0000 E                     MOV     BX,[EXTPTR] 
     822 05C7  81 3F 4548                       CMP     WORD PTR DS:[BX],"EH"  
					 ; "HE" 
     823 05CB  75 E5                            JNZ     RET6 
     824 05CD  80 7F 02 58                      CMP     BYTE PTR DS:[BX+2],"X" 
     825 05D1  C3                               RET 
     826                                 
     827 05D2                           IFEXE: 
     828 05D2  53                               PUSH    BX 
     829 05D3  8B 1E 0000 E                     MOV     BX,[EXTPTR] 
     830 05D7  81 3F 5845                       CMP     WORD PTR DS:[BX],"XE"  
					 ; "EX" 
     831 05DB  75 04                            JNZ     RETIF 
     832 05DD  80 7F 02 45                      CMP     BYTE PTR DS:[BX+2],"E" 
     833 05E1  5B                       RETIF:  POP     BX 
     834 05E2  C3                               RET 
     835                                 
     836 05E3                           LOAD: 
     837 05E3  C6 06 0000 E 3F                  MOV     BYTE PTR [RDFLG],READ 
     838 05E8  EB 05                            JMP     SHORT DSKIO 
     839                                 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 09:30:04

PART2 DEBUGGER COMMANDS                                     Page     1-20
                                                            

     840 05EA                           DWRITE: 
     841 05EA  C6 06 0000 E 40                  MOV     BYTE PTR [RDFLG],WRITE 
     842 05EF                           DSKIO: 
     843 05EF  8B 2E 0000 E                     MOV     BP,[CSSAVE] 
     844 05F3  E8 0000 E                        CALL    SCANB 
     845 05F6  75 03                            JNZ     PRIMIO 
     846 05F8  EB 56 90                         JMP     DEFIO 
     847 05FB  E8 0000 E                PRIMIO: CALL    ADDRESS 
     848 05FE  E8 0000 E                        CALL    SCANB 
     849 0601  75 03                            JNZ     PRMIO 
     850 0603  EB 5B 90                         JMP     FILEIO 
     851 0606  50                       PRMIO:  PUSH    AX                     
					 ; Save segment 
     852 0607  8B DA                            MOV     BX,DX                  
					 ; Put displacement in proper register 
     853 0609  B9 0001                          MOV     CX,1 
     854 060C  E8 0000 E                        CALL    GETHEX                 
					 ; Drive number must be 1 digit 
     855 060F  52                               PUSH    DX 
     856 0610  B9 0004                          MOV     CX,4 
     857 0613  E8 0000 E                        CALL    GETHEX                 
					 ; Logical record number 
     858 0616  52                               PUSH    DX 
     859 0617  B9 0003                          MOV     CX,3 
     860 061A  E8 0000 E                        CALL    GETHEX                 
					 ; Number of records 
     861 061D  E8 0000 E                        CALL    GETEOL 
     862 0620  8B CA                            MOV     CX,DX 
     863 0622  5A                               POP     DX                     
					 ; Logical record number 
     864 0623  58                               POP     AX                     
					 ; Drive number 
     865 0624  98                               CBW                            
					 ; Turn off verify after write 
     866 0625  A2 0000 E                        MOV     BYTE PTR DRVLET,AL     
					 ; Save drive in case of error 
     867 0628  50                               PUSH    AX 
     868 0629  53                               PUSH    BX 
     869 062A  52                               PUSH    DX 
     870 062B  8A D0                            MOV     DL,AL 
     871 062D  FE C2                            INC     DL 
     872 062F  B4 32                            MOV     AH,GET_DPB 
     873 0631  CD 21                            INT     21H 
     874 0633  5A                               POP     DX 
     875 0634  5B                               POP     BX 
     876 0635  0A C0                            OR      AL,AL 
     877 0637  58                               POP     AX 
     878 0638  1F                               POP     DS                     
					 ; Segment of transfer 
     879 0639  75 10                            JNZ     DRVERRJ 
     880 063B  2E: 80 3E 0000 E 40              CMP     CS:BYTE PTR [RDFLG],WRI
					TE 
     881 0641  74 04                            JZ      ABSWRT 
     882 0643  CD 25                            INT     25H                    
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 09:30:04

PART2 DEBUGGER COMMANDS                                     Page     1-21
                                                            

					 ; Primitive disk read 
     883 0645  EB 02                            JMP     SHORT ENDABS 
     884                                 
     885 0647                           ABSWRT: 
     886 0647  CD 26                            INT     26H                    
					 ; Primitive disk write 
     887 0649                           ENDABS: 
     888 0649  73 03                            JNC     RET0 
     889 064B  E9 0000 E                DRVERRJ: JMP    DRVERR 
     890                                 
     891 064E                           RET0: 
     892 064E  9D                               POPF 
     893 064F  C3                               RET 
     894                                 
     895 0650                           DEFIO: 
     896 0650  A1 0000 E                        MOV     AX,[CSSAVE]            
					 ; Default segment 
     897 0653  BA 0100                          MOV     DX,100H                
					 ; Default file I/O offset 
     898 0656  E8 05B9 R                        CALL    IFHEX 
     899 0659  75 0A                            JNZ     EXECHK 
     900 065B  33 D2                            XOR     DX,DX                  
					 ; If HEX file, default OFFSET is zero 
     901 065D  E9 08AE R                HEX2BINJ:JMP    HEX2BIN 
     902                                 
     903 0660                           FILEIO: 
     904                                ; AX and DX have segment and offset of 
					transfer, respectively 
     905 0660  E8 05B9 R                        CALL    IFHEX 
     906 0663  74 F8                            JZ      HEX2BINJ 
     907 0665                           EXECHK: 
     908 0665  E8 05D2 R                        CALL    IFEXE 
     909 0668  75 0D                            JNZ     BINFIL 
     910 066A  80 3E 0000 E 3F                  CMP     BYTE PTR [RDFLG],READ 
     911 066F  74 19                            JZ      EXELJ 
     912 0671  BA 0000 E                        MOV     DX,OFFSET DG:EXEWRT 
     913 0674  E9 0000 E                        JMP     RESTART                
					 ; Can't write .EXE files 
     914                                 
     915 0677                           BINFIL: 
     916 0677  80 3E 0000 E 40                  CMP     BYTE PTR [RDFLG],WRITE 
     917 067C  74 5B                            JZ      BINLOAD 
     918 067E  81 3F 4F43                       CMP     WORD PTR DS:[BX],4F00H 
					+ "C"    ; "CO" 
     919 0682  75 55                            JNZ     BINLOAD 
     920 0684  80 7F 02 4D                      CMP     BYTE PTR DS:[BX+2],"M" 
     921 0688  75 4F                            JNZ     BINLOAD 
     922 068A                           EXELJ: 
     923 068A  4E                               DEC     SI 
     924 068B  81 FA 0100                       CMP     DX,100H 
     925 068F  75 06                            JNZ     PRER 
     926 0691  3B 06 0000 E                     CMP     AX,[CSSAVE] 
     927 0695  74 03                            JZ      OAF 
     928 0697  E9 0000 E                PRER:   JMP     PERROR 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 09:30:04

PART2 DEBUGGER COMMANDS                                     Page     1-22
                                                            

     929 069A  E8 04E9 R                OAF:    CALL    OPEN_A_FILE 
     930 069D  73 06                            JNC     GDOPEN 
     931 069F  B8 0002                          MOV     AX,exec_file_not_found 
     932 06A2  E9 0884 R                        JMP     EXECERR 
     933                                 
     934 06A5  33 D2                    GDOPEN: XOR     DX,DX 
     935 06A7  33 C9                            XOR     CX,CX 
     936 06A9  8B 1E 0000 E                     MOV     BX,[HANDLE] 
     937 06AD  B0 02                            MOV     AL,2 
     938 06AF  B4 42                            MOV     AH,LSEEK 
     939 06B1  CD 21                            INT     21H 
     940 06B3  E8 05D2 R                        CALL    IFEXE                  
					 ; SUBTRACT 512 BYTES FOR EXE 
     941 06B6  75 03                            JNZ     BIN2                   
					 ; FILE LENGTH BECAUSE OF 
     942 06B8  2D 0200                          SUB     AX,512                 
					 ; THE HEADER 
     943 06BB  89 16 0000 E             BIN2:   MOV     [BXSAVE],DX            
					 ; SET UP FILE SIZE IN DX:AX 
     944 06BF  A3 0000 E                        MOV     [CXSAVE],AX 
     945 06C2  B4 3E                            MOV     AH,CLOSE 
     946 06C4  CD 21                            INT     21H 
     947 06C6  E9 07E1 R                        JMP     EXELOAD 
     948                                 
     949 06C9                           NO_MEM_ERR: 
     950 06C9  BA 0000 E                        MOV     DX,OFFSET DG:TOOBIG 
     951 06CC  B4 09                            MOV     AH,STD_CON_STRING_OUTPU
					T 
     952 06CE  CD 21                            INT     21H 
     953 06D0  E9 0000 E                        JMP     COMMAND 
     954                                 
     955 06D3  E9 078F R                WRTFILEJ: JMP   WRTFILE 
     956 06D6  E9 0789 R                NOFILEJ: JMP    NOFILE 
     957                                 
     958 06D9                           BINLOAD: 
     959 06D9  50                               PUSH    AX 
     960 06DA  52                               PUSH    DX 
     961 06DB  80 3E 0000 E 40                  CMP     BYTE PTR [RDFLG],WRITE 
     962 06E0  74 F1                            JZ      WRTFILEJ 
     963 06E2  E8 04E9 R                        CALL    OPEN_A_FILE 
     964 06E5  72 EF                            JC      NOFILEJ 
     965 06E7  8B 1E 0000 E                     MOV     BX,[HANDLE] 
     966 06EB  B8 4202                          MOV     AX,(LSEEK SHL 8) OR 2 
     967 06EE  33 D2                            XOR     DX,DX 
     968 06F0  8B CA                            MOV     CX,DX 
     969 06F2  CD 21                            INT     21H                    
					 ; GET SIZE OF FILE 
     970 06F4  8B F2                            MOV     SI,DX 
     971 06F6  8B F8                            MOV     DI,AX                  
					 ; SIZE TO SI:DI 
     972 06F8  B8 4200                          MOV     AX,(LSEEK SHL 8) OR 0 
     973 06FB  33 D2                            XOR     DX,DX 
     974 06FD  8B CA                            MOV     CX,DX 
     975 06FF  CD 21                            INT     21H                    
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 09:30:04

PART2 DEBUGGER COMMANDS                                     Page     1-23
                                                            

					 ; RESET POINTER BACK TO BEGINNING 
     976 0701  58                               POP     AX 
     977 0702  5B                               POP     BX 
     978 0703  53                               PUSH    BX 
     979 0704  50                               PUSH    AX                     
					 ; TRANS ADDR TO BX:AX 
     980 0705  05 000F                          ADD     AX,15 
     981 0708  B1 04                            MOV     CL,4 
     982 070A  D3 E8                            SHR     AX,CL 
     983 070C  03 D8                            ADD     BX,AX                  
					 ; Start of transfer rounded up to seg 
     984 070E  8B D6                            MOV     DX,SI 
     985 0710  8B C7                            MOV     AX,DI                  
					 ; DX:AX is size 
     986 0712  B9 0010                          MOV     CX,16 
     987 0715  F7 F1                            DIV     CX 
     988 0717  0B D2                            OR      DX,DX 
     989 0719  74 01                            JZ      NOREM 
     990 071B  40                               INC     AX 
     991 071C                           NOREM:                                 
					 ; AX is number of paras in transfer 
     992 071C  03 C3                            ADD     AX,BX                  
					 ; AX is first seg that need not exist 
     993 071E  2E: 3B 06 0002                   CMP     AX,CS:[PDB_block_len] 
     994 0723  77 A4                            JA      NO_MEM_ERR 
     995 0725  89 3E 0000 E                     MOV     CXSAVE,DI 
     996 0729  89 36 0000 E                     MOV     BXSAVE,SI 
     997 072D  5A                               POP     DX 
     998 072E  58                               POP     AX 
     999                                 
    1000 072F                           RDWR: 
    1001                                ; AX:DX is disk transfer address (segme
					nt:offset) 
    1002                                ; SI:DI is length (32-bit number) 
    1003                                 
    1004 072F                           RDWRLOOP: 
    1005 072F  8B DA                            MOV     BX,DX                  
					 ; Make a copy of the offset 
    1006 0731  81 E2 000F                       AND     DX,000FH               
					 ; Establish the offset in 0H-FH range 
    1007 0735  B1 04                            MOV     CL,4 
    1008 0737  D3 EB                            SHR     BX,CL                  
					 ; Shift offset and 
    1009 0739  03 C3                            ADD     AX,BX                  
					 ; Add to segment register to get new S
					eg:offset 
    1010 073B  50                               PUSH    AX 
    1011 073C  52                               PUSH    DX                     
					 ; Save AX,DX register pair 
    1012 073D  89 16 0000 E                     MOV     WORD PTR [TRANSADD],DX 
    1013 0741  A3 0002 E                        MOV     WORD PTR [TRANSADD+2],A
					X 
    1014 0744  B9 FFF0                          MOV     CX,0FFF0H              
					 ; Keep request in segment 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 09:30:04

PART2 DEBUGGER COMMANDS                                     Page     1-24
                                                            

    1015 0747  0B F6                            OR      SI,SI                  
					 ; Need > 64K? 
    1016 0749  75 02                            JNZ     BIGRDWR 
    1017 074B  8B CF                            MOV     CX,DI                  
					 ; Limit to amount requested 
    1018 074D                           BIGRDWR: 
    1019 074D  1E                               PUSH    DS 
    1020 074E  53                               PUSH    BX 
    1021 074F  8B 1E 0000 E                     MOV     BX,[HANDLE] 
    1022 0753  8A 26 0000 E                     MOV     AH,[RDFLG] 
    1023 0757  C5 16 0000 E                     LDS     DX,[TRANSADD] 
    1024 075B  CD 21                            INT     21H                    
					 ; Perform read or write 
    1025 075D  5B                               POP     BX 
    1026 075E  1F                               POP     DS 
    1027 075F  72 0B                            JC      BADWR 
    1028 0761  80 3E 0000 E 40                  CMP     BYTE PTR [RDFLG],WRITE 
    1029 0766  75 0A                            JNZ     GOODR 
    1030 0768  3B C8                            CMP     CX,AX 
    1031 076A  74 06                            JZ      GOODR 
    1032 076C  8B C8                    BADWR:  MOV     CX,AX 
    1033 076E  F9                               STC 
    1034 076F  5A                               POP     DX                     
					 ; READ OR WRITE BOMBED OUT 
    1035 0770  58                               POP     AX 
    1036 0771  C3                               RET 
    1037                                 
    1038 0772                           GOODR: 
    1039 0772  8B C8                            MOV     CX,AX 
    1040 0774  2B F9                            SUB     DI,CX                  
					 ; Request minus amount transferred 
    1041 0776  83 DE 00                         SBB     SI,0                   
					 ; Ripple carry 
    1042 0779  0B C9                            OR      CX,CX                  
					 ; End-of-file? 
    1043 077B  5A                               POP     DX                     
					 ; Restore DMA address 
    1044 077C  58                               POP     AX 
    1045 077D  74 08                            JZ      RET8 
    1046 077F  03 D1                            ADD     DX,CX                  
					 ; Bump DMA address by transfer length 
    1047 0781  8B DE                            MOV     BX,SI 
    1048 0783  0B DF                            OR      BX,DI                  
					 ; Finished with request 
    1049 0785  75 A8                            JNZ     RDWRLOOP 
    1050 0787  F8                       RET8:   CLC                            
					 ; End-of-file not reached 
    1051 0788  C3                               RET 
    1052                                 
    1053 0789                           NOFILE: 
    1054 0789  BA 0000 E                        MOV     DX,OFFSET DG:NOTFND 
    1055 078C                           RESTARTJMP: 
    1056 078C  E9 0000 E                        JMP     RESTART 
    1057                                 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 09:30:04

PART2 DEBUGGER COMMANDS                                     Page     1-25
                                                            

    1058 078F                           WRTFILE: 
    1059 078F  E8 0504 R                        CALL    CREATE_A_FILE          
					 ; Create file we want to write to 
    1060 0792  BA 0000 E                        MOV     DX,OFFSET DG:NOROOM    
					 ; Creation error - report error 
    1061 0795  72 F5                            JC      RESTARTJMP 
    1062 0797  8B 36 0000 E                     MOV     SI,BXSAVE              
					 ; Get high order number of bytes to tr
					ansfer 
    1063 079B  83 FE 0F                         CMP     SI,000FH 
    1064 079E  7E 02                            JLE     WRTSIZE                
					 ; Is bx less than or equal to FH 
    1065 07A0  33 F6                            XOR     SI,SI                  
					 ; Ignore BX if greater than FH - set t
					o zero 
    1066 07A2                           WRTSIZE: 
    1067 07A2  BA 0000 E                        MOV     DX,OFFSET DG:WRTMES1   
					 ; Print number bytes we are writing 
    1068 07A5  E8 0000 E                        CALL    RPRBUF 
    1069 07A8  0B F6                            OR      SI,SI 
    1070 07AA  74 05                            JZ      NXTBYT 
    1071 07AC  8B C6                            MOV     AX,SI 
    1072 07AE  E8 0000 E                        CALL    DIGIT 
    1073 07B1                           NXTBYT: 
    1074 07B1  8B 16 0000 E                     MOV     DX,CXSAVE 
    1075 07B5  8B FA                            MOV     DI,DX 
    1076 07B7  E8 0000 E                        CALL    OUT16                  
					 ; Amount to write is SI:DI 
    1077 07BA  BA 0000 E                        MOV     DX,OFFSET DG:WRTMES2 
    1078 07BD  E8 0000 E                        CALL    RPRBUF 
    1079 07C0  5A                               POP     DX 
    1080 07C1  58                               POP     AX 
    1081 07C2  E8 072F R                        CALL    RDWR 
    1082 07C5  73 11                            JNC     CLSFLE 
    1083 07C7  E8 07D8 R                        CALL    CLSFLE 
    1084 07CA  E8 04CF R                        CALL    DELETE_A_FILE 
    1085 07CD  BA 0000 E                        MOV     DX,OFFSET DG:NOSPACE 
    1086 07D0  EB BA                            JMP     RESTARTJMP 
    1087 07D2  E8 07D8 R                        CALL    CLSFLE 
    1088 07D5  E9 0000 E                        JMP     COMMAND 
    1089                                 
    1090 07D8                           CLSFLE: 
    1091 07D8  B4 3E                            MOV     AH,CLOSE 
    1092 07DA  8B 1E 0000 E                     MOV     BX,[HANDLE] 
    1093 07DE  CD 21                            INT     21H 
    1094 07E0  C3                               RET 
    1095                                 
    1096 07E1                           EXELOAD: 
    1097 07E1  8F 06 0000 E                     POP     [RETSAVE]              
					 ; Suck up return addr 
    1098 07E5  FE 06 0000 E                     INC     BYTE PTR [NEWEXEC] 
    1099 07E9  8B 1E 0000 E                     MOV     BX,[USER_PROC_PDB] 
    1100 07ED  8C D8                            MOV     AX,DS 
    1101 07EF  3B C3                            CMP     AX,BX 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 09:30:04

PART2 DEBUGGER COMMANDS                                     Page     1-26
                                                            

    1102 07F1  74 03                            JZ      DEBUG_CURRENT 
    1103 07F3  E9 0000 E                        JMP     FIND_DEBUG 
    1104                                 
    1105 07F6                           DEBUG_CURRENT: 
    1106 07F6  A1 0000 E                        MOV     AX,[DSSAVE] 
    1107 07F9                           DEBUG_FOUND: 
    1108 07F9  C6 06 0000 E 00                  MOV     BYTE PTR [NEWEXEC],0 
    1109 07FE  A3 0000 E                        MOV     [HEADSAVE],AX 
    1110 0801  FF 36 0000 E                     PUSH    [RETSAVE]              
					 ; Get the return address back 
    1111 0805  50                               PUSH    AX 
    1112 0806  8C CB                            MOV     BX,CS 
    1113 0808  2B C3                            SUB     AX,BX 
    1114 080A  0E                               PUSH    CS 
    1115 080B  07                               POP     ES 
    1116 080C  8B D8                            MOV     BX,AX 
    1117 080E  83 C3 10                         ADD     BX,10H                 
					 ; RESERVE HEADER 
    1118 0811  B4 4A                            MOV     AH,SETBLOCK 
    1119 0813  CD 21                            INT     21H 
    1120 0815  58                               POP     AX 
    1121 0816  A3 0002 E                        MOV     WORD PTR [COM_LINE+2],A
					X 
    1122 0819  A3 0002 E                        MOV     WORD PTR [COM_FCB1+2],A
					X 
    1123 081C  A3 0002 E                        MOV     WORD PTR [COM_FCB2+2],A
					X 
    1124                                 
    1125 081F  E8 04DD R                        CALL    EXEC_A_FILE 
    1126 0822  72 60                            JC      EXECERR 
    1127 0824  E8 0000 E                        CALL    SET_TERMINATE_VECTOR   
					 ; Reset int 22 
    1128 0827  B4 51                            MOV     AH,GET_CURRENT_PDB 
    1129 0829  CD 21                            INT     21H 
    1130 082B  89 1E 0000 E                     MOV     [USER_PROC_PDB],BX 
    1131 082F  89 1E 0000 E                     MOV     [DSSAVE],BX 
    1132 0833  89 1E 0000 E                     MOV     [ESSAVE],BX 
    1133 0837  8E C3                            MOV     ES,BX 
    1134 0839  26: C7 06 000A 0000              MOV     WORD PTR ES:[PDB_exit],
					OFFSET DG:TERMINATE 
    1135        E                               MOV     WORD PTR ES:[PDB_exit],
					OFFSET DG:TERMINATE 
    1136 0840  26: 8C 1E 000C                   MOV     WORD PTR ES:[PDB_exit+2
					],DS 
    1137 0845  C4 3E 0000 E                     LES     DI,[COM_CSIP] 
    1138 0849  8C 06 0000 E                     MOV     [CSSAVE],ES 
    1139 084D  89 3E 0000 E                     MOV     [IPSAVE],DI 
    1140 0851  8C 06 0002 E                     MOV     WORD PTR [DISADD+2],ES 
    1141 0855  89 3E 0000 E                     MOV     WORD PTR [DISADD],DI 
    1142 0859  8C 06 0002 E                     MOV     WORD PTR [ASMADD+2],ES 
    1143 085D  89 3E 0000 E                     MOV     WORD PTR [ASMADD],DI 
    1144 0861  8C 06 0002 E                     MOV     WORD PTR [DEFDUMP+2],ES
					 
    1145 0865  89 3E 0000 E                     MOV     WORD PTR [DEFDUMP],DI 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 09:30:04

PART2 DEBUGGER COMMANDS                                     Page     1-27
                                                            

    1146 0869  8C DB                            MOV     BX,DS 
    1147 086B  B4 50                            MOV     AH,SET_CURRENT_PDB 
    1148 086D  CD 21                            INT     21H 
    1149 086F  C4 3E 0000 E                     LES     DI,[COM_SSSP] 
    1150 0873  26: 8B 05                        MOV     AX,ES:[DI] 
    1151 0876  47                               INC     DI 
    1152 0877  47                               INC     DI 
    1153 0878  A3 0000 E                        MOV     [AXSAVE],AX 
    1154 087B  8C 06 0000 E                     MOV     [SSSAVE],ES 
    1155 087F  89 3E 0000 E                     MOV     [SPSAVE],DI 
    1156 0883  C3                               RET 
    1157                                 
    1158 0884                           EXECERR: 
    1159 0884  BA 0000 E                        MOV     DX,OFFSET DG:NOTFND 
    1160 0887  3D 0002                          CMP     AX,exec_file_not_found 
    1161 088A  74 1B                            JZ      GOTEXECEMES 
    1162 088C  BA 0000 E                        MOV     DX,OFFSET DG:ACCMES 
    1163 088F  3D 0005                          CMP     AX,error_access_denied 
    1164 0892  74 13                            JZ      GOTEXECEMES 
    1165 0894  BA 0000 E                        MOV     DX,OFFSET DG:TOOBIG 
    1166 0897  3D 0008                          CMP     AX,exec_not_enough_memo
					ry 
    1167 089A  74 0B                            JZ      GOTEXECEMES 
    1168 089C  BA 0000 E                        MOV     DX,OFFSET DG:EXEBAD 
    1169 089F  3D 000B                          CMP     AX,exec_bad_format 
    1170 08A2  74 03                            JZ      GOTEXECEMES 
    1171 08A4  BA 0000 E                        MOV     DX,OFFSET DG:EXECEMES 
    1172 08A7                           GOTEXECEMES: 
    1173 08A7  B4 09                            MOV     AH,STD_CON_STRING_OUTPU
					T 
    1174 08A9  CD 21                            INT     21H 
    1175 08AB  E9 0000 E                        JMP     COMMAND 
    1176                                 
    1177 08AE                           HEX2BIN: 
    1178 08AE  89 16 0000 E                     MOV     [INDEX],DX 
    1179 08B2  BA 0000 E                        MOV     DX,OFFSET DG:HEXWRT 
    1180 08B5  80 3E 0000 E 40                  CMP     BYTE PTR [RDFLG],WRITE 
    1181 08BA  75 03                            JNZ     RDHEX 
    1182 08BC  E9 093F R                        JMP     RESTARTJ2 
    1183 08BF                           RDHEX: 
    1184 08BF  8E C0                            MOV     ES,AX 
    1185 08C1  E8 04E9 R                        CALL    OPEN_A_FILE 
    1186 08C4  BA 0000 E                        MOV     DX,OFFSET DG:NOTFND 
    1187 08C7  73 03                            JNC     HEXFND 
    1188 08C9  E9 0000 E                        JMP     RESTART 
    1189 08CC                           HEXFND: 
    1190 08CC  33 ED                            XOR     BP,BP 
    1191 08CE  BE 0200 E                        MOV     SI,OFFSET DG:(BUFFER+BU
					FSIZ)    ; Flag input buffer as empty 
    1192 08D1                           READHEX: 
    1193 08D1  E8 0902 R                        CALL    GETCH 
    1194 08D4  3C 3A                            CMP     AL,":"                 
					 ; Search for : to start line 
    1195 08D6  75 F9                            JNZ     READHEX 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 09:30:04

PART2 DEBUGGER COMMANDS                                     Page     1-28
                                                            

    1196 08D8  E8 0942 R                        CALL    GETBYT                 
					 ; Get byte count 
    1197 08DB  8A C8                            MOV     CL,AL 
    1198 08DD  B5 00                            MOV     CH,0 
    1199 08DF  E3 48                            JCXZ    HEXDONE 
    1200 08E1  E8 0942 R                        CALL    GETBYT                 
					 ; Get high byte of load address 
    1201 08E4  8A F8                            MOV     BH,AL 
    1202 08E6  E8 0942 R                        CALL    GETBYT                 
					 ; Get low byte of load address 
    1203 08E9  8A D8                            MOV     BL,AL 
    1204 08EB  03 1E 0000 E                     ADD     BX,[INDEX]             
					 ; Add in offset 
    1205 08EF  8B FB                            MOV     DI,BX 
    1206 08F1  E8 0942 R                        CALL    GETBYT                 
					 ; Throw away type byte 
    1207 08F4                           READLN: 
    1208 08F4  E8 0942 R                        CALL    GETBYT                 
					 ; Get data byte 
    1209 08F7  AA                               STOSB 
    1210 08F8  3B FD                            CMP     DI,BP                  
					 ; Check if this is the largest address
					 so far 
    1211 08FA  76 02                            JBE     HAVBIG 
    1212 08FC  8B EF                            MOV     BP,DI                  
					 ; Save new largest 
    1213 08FE                           HAVBIG: 
    1214 08FE  E2 F4                            LOOP    READLN 
    1215 0900  EB CF                            JMP     SHORT READHEX 
    1216                                 
    1217 0902                           GETCH: 
    1218 0902  81 FE 0200 E                     CMP     SI,OFFSET DG:(BUFFER+BU
					FSIZ) 
    1219 0906  75 18                            JNZ     NOREAD 
    1220 0908  BA 0000 E                        MOV     DX,OFFSET DG:BUFFER 
    1221 090B  8B F2                            MOV     SI,DX 
    1222 090D  B4 3F                            MOV     AH,READ 
    1223 090F  53                               PUSH    BX 
    1224 0910  51                               PUSH    CX 
    1225 0911  B9 0200                          MOV     CX,BUFSIZ 
    1226 0914  8B 1E 0000 E                     MOV     BX,[HANDLE] 
    1227 0918  CD 21                            INT     21H 
    1228 091A  59                               POP     CX 
    1229 091B  5B                               POP     BX 
    1230 091C  0B C0                            OR      AX,AX 
    1231 091E  74 09                            JZ      HEXDONE 
    1232 0920                           NOREAD: 
    1233 0920  AC                               LODSB 
    1234 0921  3C 1A                            CMP     AL,1AH 
    1235 0923  74 04                            JZ      HEXDONE 
    1236 0925  0A C0                            OR      AL,AL 
    1237 0927  75 2B                            JNZ     RET7 
    1238 0929                           HEXDONE: 
    1239 0929  89 2E 0000 E                     MOV     [CXSAVE],BP 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 09:30:04

PART2 DEBUGGER COMMANDS                                     Page     1-29
                                                            

    1240 092D  C7 06 0000 E 0000                MOV     BXSAVE,0 
    1241 0933  C3                               RET 
    1242                                 
    1243 0934                           HEXDIG: 
    1244 0934  E8 0902 R                        CALL    GETCH 
    1245 0937  E8 0000 E                        CALL    HEXCHK 
    1246 093A  73 18                            JNC     RET7 
    1247 093C  BA 0000 E                        MOV     DX,OFFSET DG:HEXERR 
    1248 093F                           RESTARTJ2: 
    1249 093F  E9 0000 E                        JMP     RESTART 
    1250                                 
    1251 0942                           GETBYT: 
    1252 0942  E8 0934 R                        CALL    HEXDIG 
    1253 0945  8A D8                            MOV     BL,AL 
    1254 0947  E8 0934 R                        CALL    HEXDIG 
    1255 094A  D0 E3                            SHL     BL,1 
    1256 094C  D0 E3                            SHL     BL,1 
    1257 094E  D0 E3                            SHL     BL,1 
    1258 0950  D0 E3                            SHL     BL,1 
    1259 0952  0A C3                            OR      AL,BL 
    1260 0954  C3                       RET7:   RET 
    1261                                 
    1262                                 
    1263 0955                           CODE    ENDS 
    1264                                        END     DEBCOM2 

Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 09:30:04

PART2 DEBUGGER COMMANDS                                     Symbols-1
                                                             

Macros:

		N a m e			Lines

BREAK  . . . . . . . . . . . . .  	   2
CONDRET  . . . . . . . . . . . .  	  19
CONTEXT  . . . . . . . . . . . .  	   3
DO_EXT . . . . . . . . . . . . .  	   0
ENTRY  . . . . . . . . . . . . .  	   2
ERROR  . . . . . . . . . . . . .  	   4
INVOKE . . . . . . . . . . . . .  	   8
I_AM . . . . . . . . . . . . . .  	  14
I_NEED . . . . . . . . . . . . .  	  11
JUMP . . . . . . . . . . . . . .  	  17
LONG_ADDR  . . . . . . . . . . .  	   7
MAKELAB  . . . . . . . . . . . .  	   4
PROCEDURE  . . . . . . . . . . .  	   2
RETC . . . . . . . . . . . . . .  	   1
RETNC  . . . . . . . . . . . . .  	   1
RETNZ  . . . . . . . . . . . . .  	   1
RETURN . . . . . . . . . . . . .  	   5
RETZ . . . . . . . . . . . . . .  	   1
SHORT_ADDR . . . . . . . . . . .  	  12
TRANSFER . . . . . . . . . . . .  	   8

Structures and Records:

                N a m e                 Width   # fields
                                        Shift   Width   Mask    Initial

ARENA  . . . . . . . . . . . . .  	0005	0003
  ARENA_SIGNATURE  . . . . . . .  	0000
  ARENA_OWNER  . . . . . . . . .  	0001
  ARENA_SIZE . . . . . . . . . .  	0003
BPBLOCK  . . . . . . . . . . . .  	000D	0008
  BPSECSZ  . . . . . . . . . . .  	0000
  BPCLUS . . . . . . . . . . . .  	0002
  BPRES  . . . . . . . . . . . .  	0003
  BPFTCNT  . . . . . . . . . . .  	0005
  BPDRCNT  . . . . . . . . . . .  	0006
  BPSCCNT  . . . . . . . . . . .  	0008
  BPMEDIA  . . . . . . . . . . .  	000A
  BPFTSEC  . . . . . . . . . . .  	000B
BUFFINFO . . . . . . . . . . . .  	0010	0009
  NEXTBUF  . . . . . . . . . . .  	0000
  BUFDRV . . . . . . . . . . . .  	0004
  BUFDIRTY . . . . . . . . . . .  	0005
  BUFPRI . . . . . . . . . . . .  	0006
  VISIT  . . . . . . . . . . . .  	0007
  BUFSECNO . . . . . . . . . . .  	0008
  BUFWRTCNT  . . . . . . . . . .  	000A
  BUFWRTINC  . . . . . . . . . .  	000B
  BUFDRVDP . . . . . . . . . . .  	000C
DIR_ENTRY  . . . . . . . . . . .  	0020	0008
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 09:30:04

PART2 DEBUGGER COMMANDS                                     Symbols-2
                                                             

  DIR_NAME . . . . . . . . . . .  	0000
  DIR_ATTR . . . . . . . . . . .  	000B
  DIR_PAD  . . . . . . . . . . .  	000C
  DIR_TIME . . . . . . . . . . .  	0016
  DIR_DATE . . . . . . . . . . .  	0018
  DIR_FIRST  . . . . . . . . . .  	001A
  DIR_SIZE_L . . . . . . . . . .  	001C
  DIR_SIZE_H . . . . . . . . . .  	001E
DPB  . . . . . . . . . . . . . .  	005E	0012
  DPB_DRIVE  . . . . . . . . . .  	0000
  DPB_UNIT . . . . . . . . . . .  	0001
  DPB_SECTOR_SIZE  . . . . . . .  	0002
  DPB_CLUSTER_MASK . . . . . . .  	0004
  DPB_CLUSTER_SHIFT  . . . . . .  	0005
  DPB_FIRST_FAT  . . . . . . . .  	0006
  DPB_FAT_COUNT  . . . . . . . .  	0008
  DPB_ROOT_ENTRIES . . . . . . .  	0009
  DPB_FIRST_SECTOR . . . . . . .  	000B
  DPB_MAX_CLUSTER  . . . . . . .  	000D
  DPB_FAT_SIZE . . . . . . . . .  	000F
  DPB_DIR_SECTOR . . . . . . . .  	0010
  DPB_DRIVER_ADDR  . . . . . . .  	0012
  DPB_MEDIA  . . . . . . . . . .  	0016
  DPB_FIRST_ACCESS . . . . . . .  	0017
  DPB_NEXT_DPB . . . . . . . . .  	0018
  DPB_CURRENT_DIR  . . . . . . .  	001C
  DPB_DIR_TEXT . . . . . . . . .  	001E
EXEC0  . . . . . . . . . . . . .  	000E	0004
  EXEC0_ENVIRON  . . . . . . . .  	0000
  EXEC0_COM_LINE . . . . . . . .  	0002
  EXEC0_5C_FCB . . . . . . . . .  	0006
  EXEC0_6C_FCB . . . . . . . . .  	000A
EXEC1  . . . . . . . . . . . . .  	0016	0008
  EXEC1_ENVIRON  . . . . . . . .  	0000
  EXEC1_COM_LINE . . . . . . . .  	0002
  EXEC1_5C_FCB . . . . . . . . .  	0006
  EXEC1_6C_FCB . . . . . . . . .  	000A
  EXEC1_SP . . . . . . . . . . .  	000E
  EXEC1_SS . . . . . . . . . . .  	0010
  EXEC1_IP . . . . . . . . . . .  	0012
  EXEC1_CS . . . . . . . . . . .  	0014
EXEC3  . . . . . . . . . . . . .  	0004	0002
  EXEC3_LOAD_ADDR  . . . . . . .  	0000
  EXEC3_RELOC_FAC  . . . . . . .  	0002
EXE_FILE . . . . . . . . . . . .  	0020	000F
  EXE_SIGNATURE  . . . . . . . .  	0000
  EXE_LEN_MOD_512  . . . . . . .  	0002
  EXE_PAGES  . . . . . . . . . .  	0004
  EXE_RLE_COUNT  . . . . . . . .  	0006
  EXE_PAR_DIR  . . . . . . . . .  	0008
  EXE_MIN_BSS  . . . . . . . . .  	000A
  EXE_MAX_BSS  . . . . . . . . .  	000C
  EXE_SS . . . . . . . . . . . .  	000E
  EXE_SP . . . . . . . . . . . .  	0010
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 09:30:04

PART2 DEBUGGER COMMANDS                                     Symbols-3
                                                             

  EXE_CHKSUM . . . . . . . . . .  	0012
  EXE_IP . . . . . . . . . . . .  	0014
  EXE_CS . . . . . . . . . . . .  	0016
  EXE_RLE_TABLE  . . . . . . . .  	0018
  EXE_IOV  . . . . . . . . . . .  	001A
  EXE_SYM_TAB  . . . . . . . . .  	001C
FIND_BUF . . . . . . . . . . . .  	002B	000C
  FIND_BUF_SATTR . . . . . . . .  	0000
  FIND_BUF_DRIVE . . . . . . . .  	0001
  FIND_BUF_NAME  . . . . . . . .  	0002
  FIND_BUF_LASTENT . . . . . . .  	000D
  FIND_BUF_THISDPB . . . . . . .  	000F
  FIND_BUF_DIRSTART  . . . . . .  	0013
  FIND_BUF_ATTR  . . . . . . . .  	0015
  FIND_BUF_TIME  . . . . . . . .  	0016
  FIND_BUF_DATE  . . . . . . . .  	0018
  FIND_BUF_SIZE_L  . . . . . . .  	001A
  FIND_BUF_SIZE_H  . . . . . . .  	001C
  FIND_BUF_PNAME . . . . . . . .  	001E
INTERNAT_BLOCK . . . . . . . . .  	0018	0015
  DATE_TIM_FORMAT  . . . . . . .  	0000
  CURRENCY_SYM . . . . . . . . .  	0002
  THOUS_SEP  . . . . . . . . . .  	0007
  DECIMAL_SEP  . . . . . . . . .  	0009
  DATE_SEP . . . . . . . . . . .  	000B
  TIME_SEP . . . . . . . . . . .  	000D
  BIT_FEILD  . . . . . . . . . .  	000F
  CURRENCY_CENTS . . . . . . . .  	0010
  TIME_24  . . . . . . . . . . .  	0011
  MAP_CALL . . . . . . . . . . .  	0012
  DATA_SEP . . . . . . . . . . .  	0016
INTERRUPT_FRAME  . . . . . . . .  	000E	0007
  OLDBP  . . . . . . . . . . . .  	0000
  OLDIP  . . . . . . . . . . . .  	0002
  OLDCS  . . . . . . . . . . . .  	0004
  OLDF . . . . . . . . . . . . .  	0006
  OLDERIP  . . . . . . . . . . .  	0008
  OLDERCS  . . . . . . . . . . .  	000A
  OLDERF . . . . . . . . . . . .  	000C
PROCESS_DATA_BLOCK . . . . . . .  	005B	000E
  PDB_EXIT_CALL  . . . . . . . .  	0000
  PDB_BLOCK_LEN  . . . . . . . .  	0002
  PDB_CPM_CALL . . . . . . . . .  	0005
  PDB_EXIT . . . . . . . . . . .  	000A
  PDB_CTRL_C . . . . . . . . . .  	000E
  PDB_FATAL_ABORT  . . . . . . .  	0012
  PDB_PARENT_PID . . . . . . . .  	0016
  PDB_JFN_TABLE  . . . . . . . .  	0018
  PDB_ENVIRON  . . . . . . . . .  	002C
  PDB_USER_STACK . . . . . . . .  	002E
  PDB_PAD1 . . . . . . . . . . .  	0032
  PDB_CALL_SYSTEM  . . . . . . .  	0050
  PDB_PAD2 . . . . . . . . . . .  	0055
SFT  . . . . . . . . . . . . . .  	0008	0003
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 09:30:04

PART2 DEBUGGER COMMANDS                                     Symbols-4
                                                             

  SFT_LINK . . . . . . . . . . .  	0000
  SFT_COUNT  . . . . . . . . . .  	0004
  SFT_TABLE  . . . . . . . . . .  	0006
SF_ENTRY . . . . . . . . . . . .  	0028	0004
  SF_REF_COUNT . . . . . . . . .  	0000
  SF_MODE  . . . . . . . . . . .  	0001
  SF_ATTR  . . . . . . . . . . .  	0002
  SF_FCB . . . . . . . . . . . .  	0003
SYMBOL_ENTRY . . . . . . . . . .  	0106	0004
  SYM_VALUE  . . . . . . . . . .  	0000
  SYM_TYPE . . . . . . . . . . .  	0004
  SYM_LEN  . . . . . . . . . . .  	0006
  SYM_NAME . . . . . . . . . . .  	0007
SYS_FCB  . . . . . . . . . . . .  	0025	0010
  FCB_DRIVE  . . . . . . . . . .  	0000
  FCB_NAME . . . . . . . . . . .  	0001
  FCB_EXT  . . . . . . . . . . .  	0009
  FCB_EXTENT . . . . . . . . . .  	000C
  FCB_RECSIZ . . . . . . . . . .  	000E
  FCB_FILSIZ . . . . . . . . . .  	0010
  FCB_DRVBP  . . . . . . . . . .  	0012
  FCB_FDATE  . . . . . . . . . .  	0014
  FCB_FTIME  . . . . . . . . . .  	0016
  FCB_DEVID  . . . . . . . . . .  	0018
  FCB_FIRCLUS  . . . . . . . . .  	0019
  FCB_CLUSPOS  . . . . . . . . .  	001B
  FCB_LSTCLUS  . . . . . . . . .  	001D
  FCB_NR . . . . . . . . . . . .  	0020
  FCB_RR . . . . . . . . . . . .  	0021
USER_ENVIRON . . . . . . . . . .  	0018	000C
  USER_AX  . . . . . . . . . . .  	0000
  USER_BX  . . . . . . . . . . .  	0002
  USER_CX  . . . . . . . . . . .  	0004
  USER_DX  . . . . . . . . . . .  	0006
  USER_SI  . . . . . . . . . . .  	0008
  USER_DI  . . . . . . . . . . .  	000A
  USER_BP  . . . . . . . . . . .  	000C
  USER_DS  . . . . . . . . . . .  	000E
  USER_ES  . . . . . . . . . . .  	0010
  USER_IP  . . . . . . . . . . .  	0012
  USER_CS  . . . . . . . . . . .  	0014
  USER_F . . . . . . . . . . . .  	0016

Segments and Groups:

                N a m e         	Size	Align	Combine Class

DG . . . . . . . . . . . . . . .  	GROUP
  CODE . . . . . . . . . . . . .  	0955	BYTE	PUBLIC	'CODE'
  CONST  . . . . . . . . . . . .  	0000	BYTE	PUBLIC	
  DATA . . . . . . . . . . . . .  	0000	BYTE	PUBLIC	
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 09:30:04

PART2 DEBUGGER COMMANDS                                     Symbols-5
                                                             

Symbols:            

                N a m e         	Type	Value	Attr         

ABORT  . . . . . . . . . . . . .  	Number	0000	
ABSWRT . . . . . . . . . . . . .  	L NEAR	0647	CODE
ACCMES . . . . . . . . . . . . .  	V BYTE 	0000	CONST	External
ADDRESS  . . . . . . . . . . . .  	L NEAR	0000	CODE	External
ADDR_INT_ABORT . . . . . . . . .  	Number	0080	
ADDR_INT_COMMAND . . . . . . . .  	Number	0084	
ADDR_INT_CTRL_C  . . . . . . . .  	Number	008C	
ADDR_INT_DISK_READ . . . . . . .  	Number	0094	
ADDR_INT_DISK_WRITE  . . . . . .  	Number	0098	
ADDR_INT_FASTCON . . . . . . . .  	Number	00A4	
ADDR_INT_FATAL_ABORT . . . . . .  	Number	0090	
ADDR_INT_KEEP_PROCESS  . . . . .  	Number	009C	
ADDR_INT_SPOOLER . . . . . . . .  	Number	00A0	
ADDR_INT_TERMINATE . . . . . . .  	Number	0088	
ALLOC  . . . . . . . . . . . . .  	Number	0048	
ALLOCOPER  . . . . . . . . . . .  	Number	0058	
ALLOC_ARENA_TRASHED  . . . . . .  	Alias	 ERROR_ARENA_TRASHED		
ALLOC_NOT_ENOUGH_MEMORY  . . . .  	Alias	 ERROR_NOT_ENOUGH_MEMORY		
ALTVECT  . . . . . . . . . . . .  	Number	0000	
ARENA_OWNER_SYSTEM . . . . . . .  	Number	0000	
ARENA_SIGNATURE_END  . . . . . .  	Number	005A	
ARENA_SIGNATURE_NORMAL . . . . .  	Number	004D	
ASMADD . . . . . . . . . . . . .  	V BYTE 	0000	DATA	External
ASSIGNOPER . . . . . . . . . . .  	Number	005F	
ATTR_ALL . . . . . . . . . . . .  	Number	0016	
ATTR_ARCHIVE . . . . . . . . . .  	Number	0020	
ATTR_CHANGEABLE  . . . . . . . .  	Number	0027	
ATTR_DIRECTORY . . . . . . . . .  	Number	0010	
ATTR_HIDDEN  . . . . . . . . . .  	Number	0002	
ATTR_IGNORE  . . . . . . . . . .  	Number	0021	
ATTR_READ_ONLY . . . . . . . . .  	Number	0001	
ATTR_SYSTEM  . . . . . . . . . .  	Number	0004	
ATTR_VOLUME_ID . . . . . . . . .  	Number	0008	
AWORD  . . . . . . . . . . . . .  	V BYTE 	0000	DATA	External
AXSAVE . . . . . . . . . . . . .  	V WORD 	0000	CONST	External

BADNAM . . . . . . . . . . . . .  	L NEAR	05B3	CODE
BADREG . . . . . . . . . . . . .  	L NEAR	010B	CODE
BADWR  . . . . . . . . . . . . .  	L NEAR	076C	CODE
BIGRDWR  . . . . . . . . . . . .  	L NEAR	074D	CODE
BIN2 . . . . . . . . . . . . . .  	L NEAR	06BB	CODE
BINFIL . . . . . . . . . . . . .  	L NEAR	0677	CODE
BINLOAD  . . . . . . . . . . . .  	L NEAR	06D9	CODE
BLANK  . . . . . . . . . . . . .  	L NEAR	0000	CODE	External
BPLEN  . . . . . . . . . . . . .  	Number	0032	
BPMAX  . . . . . . . . . . . . .  	Number	000A	
BPREG  . . . . . . . . . . . . .  	Number	5042	
BPTAB  . . . . . . . . . . . . .  	V BYTE 	0000	DATA	External
BREAKFIX . . . . . . . . . . . .  	L NEAR	0347	CODE
BRKCNT . . . . . . . . . . . . .  	V WORD 	0000	DATA	External
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 09:30:04

PART2 DEBUGGER COMMANDS                                     Symbols-6
                                                             

BUFFER . . . . . . . . . . . . .  	V BYTE 	0000	DATA	External
BUFINSIZ . . . . . . . . . . . .  	Number	0010	
BUFLEN . . . . . . . . . . . . .  	Number	0050	
BUFSIZ . . . . . . . . . . . . .  	Number	0200	
BXREG  . . . . . . . . . . . . .  	Number	5842	
BXSAVE . . . . . . . . . . . . .  	V WORD 	0000	CONST	External

CHAR_OPER  . . . . . . . . . . .  	Number	0037	
CHDIR  . . . . . . . . . . . . .  	Number	003B	
CHDIR_PATH_NOT_FOUND . . . . . .  	Alias	 ERROR_PATH_NOT_FOUND		
CHECKDISP  . . . . . . . . . . .  	L NEAR	0409	CODE
CHMOD  . . . . . . . . . . . . .  	Number	0043	
CHMOD_ACCESS_DENIED  . . . . . .  	Alias	 ERROR_ACCESS_DENIED		
CHMOD_INVALID_FUNCTION . . . . .  	Alias	 ERROR_INVALID_FUNCTION		
CHMOD_PATH_NOT_FOUND . . . . . .  	Alias	 ERROR_PATH_NOT_FOUND		
CLEARBP  . . . . . . . . . . . .  	L NEAR	0413	CODE
CLOSE  . . . . . . . . . . . . .  	Number	003E	
CLOSE_INVALID_FUNCTION . . . . .  	Alias	 ERROR_INVALID_FUNCTION		
CLOSE_INVALID_HANDLE . . . . . .  	Alias	 ERROR_INVALID_HANDLE		
CLSFLE . . . . . . . . . . . . .  	L NEAR	07D8	CODE
COMMA  . . . . . . . . . . . . .  	Number	2C00	
COMMAND  . . . . . . . . . . . .  	L NEAR	0000	CODE	External
COMP . . . . . . . . . . . . . .  	L NEAR	01FD	CODE
COMPARE  . . . . . . . . . . . .  	L NEAR	01E5	CODE	Global
COMTAIL  . . . . . . . . . . . .  	L NEAR	04A5	CODE
COM_CSIP . . . . . . . . . . . .  	V DWORD	0000	CONST	External
COM_FCB1 . . . . . . . . . . . .  	V DWORD	0000	CONST	External
COM_FCB2 . . . . . . . . . . . .  	V DWORD	0000	CONST	External
COM_LINE . . . . . . . . . . . .  	V DWORD	0000	CONST	External
COM_SSSP . . . . . . . . . . . .  	V DWORD	0000	CONST	External
CONTC  . . . . . . . . . . . . .  	L NEAR	0342	CODE
COUNTRY_NOT_FOUND  . . . . . . .  	Alias	 ERROR_FILE_NOT_FOUND		
CREAT  . . . . . . . . . . . . .  	Number	003C	
CREATENEWFILE  . . . . . . . . .  	Number	005B	
CREATETEMPFILE . . . . . . . . .  	Number	005A	
CREATE_A_FILE  . . . . . . . . .  	L NEAR	0504	CODE
CREATE_PROCESS_DATA_BLOCK  . . .  	Number	0026	
CREAT_ACCESS_DENIED  . . . . . .  	Alias	 ERROR_ACCESS_DENIED		
CREAT_PATH_NOT_FOUND . . . . . .  	Alias	 ERROR_PATH_NOT_FOUND		
CREAT_TOO_MANY_OPEN_FILES  . . .  	Alias	 ERROR_TOO_MANY_OPEN_FILES		
CRLF . . . . . . . . . . . . . .  	L NEAR	0000	CODE	External
CRLFJ  . . . . . . . . . . . . .  	L NEAR	009C	CODE
CSSAVE . . . . . . . . . . . . .  	V WORD 	0000	CONST	External
CURDIR_INVALID_DRIVE . . . . . .  	Alias	 ERROR_INVALID_DRIVE		
CURRENT_DIR  . . . . . . . . . .  	Number	0047	
CXSAVE . . . . . . . . . . . . .  	V WORD 	0000	CONST	External
C_BS . . . . . . . . . . . . . .  	Number	0008	
C_CR . . . . . . . . . . . . . .  	Number	000D	
C_DEL  . . . . . . . . . . . . .  	Number	007F	
C_ETB  . . . . . . . . . . . . .  	Number	0017	
C_ETX  . . . . . . . . . . . . .  	Number	0003	
C_HT . . . . . . . . . . . . . .  	Number	0009	
C_LF . . . . . . . . . . . . . .  	Number	000A	
C_NAK  . . . . . . . . . . . . .  	Number	0015	
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 09:30:04

PART2 DEBUGGER COMMANDS                                     Symbols-7
                                                             


DABORT . . . . . . . . . . . . .  	L NEAR	0000	CODE	External
DEALLOC  . . . . . . . . . . . .  	Number	0049	
DEALLOC_ARENA_TRASHED  . . . . .  	Alias	 ERROR_ARENA_TRASHED		
DEALLOC_INVALID_BLOCK  . . . . .  	Alias	 ERROR_INVALID_BLOCK		
DEBCOM2  . . . . . . . . . . . .  	L NEAR	0000	CODE
DEBUG_CURRENT  . . . . . . . . .  	L NEAR	07F6	CODE
DEBUG_FOUND  . . . . . . . . . .  	L NEAR	07F9	CODE	Global
DEFDUMP  . . . . . . . . . . . .  	V BYTE 	0000	DATA	External
DEFIO  . . . . . . . . . . . . .  	L NEAR	0650	CODE	Global
DELETE_A_FILE  . . . . . . . . .  	L NEAR	04CF	CODE
DELIM0 . . . . . . . . . . . . .  	L NEAR	057A	CODE
DELIM1 . . . . . . . . . . . . .  	L NEAR	057E	CODE
DELIM2 . . . . . . . . . . . . .  	L NEAR	0592	CODE
DEVID_BLOCK_DEV  . . . . . . . .  	Number	001F	
DEVID_DEVICE . . . . . . . . . .  	Number	0080	
DEVID_DEVICE_CLOCK . . . . . . .  	Number	0008	
DEVID_DEVICE_CON_IN  . . . . . .  	Number	0001	
DEVID_DEVICE_CON_OUT . . . . . .  	Number	0002	
DEVID_DEVICE_EOF . . . . . . . .  	Number	0040	
DEVID_DEVICE_NULL  . . . . . . .  	Number	0004	
DEVID_DEVICE_RAW . . . . . . . .  	Number	0020	
DEVID_DEVICE_SPECIAL . . . . . .  	Number	0010	
DEVID_EOF  . . . . . . . . . . .  	Number	0040	
DEVID_FILE_CLEAN . . . . . . . .  	Number	0040	
DEVID_FILE_MASK_DRIVE  . . . . .  	Number	003F	
DEVID_ISCIN  . . . . . . . . . .  	Number	0001	
DEVID_ISCLK  . . . . . . . . . .  	Number	0008	
DEVID_ISCOT  . . . . . . . . . .  	Number	0002	
DEVID_ISDEV  . . . . . . . . . .  	Number	0080	
DEVID_ISNUL  . . . . . . . . . .  	Number	0004	
DEVID_RAW  . . . . . . . . . . .  	Number	0020	
DEVID_SPECIAL  . . . . . . . . .  	Number	0010	
DEXEC  . . . . . . . . . . . . .  	L NEAR	0465	CODE
DEXIT  . . . . . . . . . . . . .  	L NEAR	02EA	CODE
DFLAGS . . . . . . . . . . . . .  	L NEAR	01A5	CODE
DIGIT  . . . . . . . . . . . . .  	L NEAR	0000	CODE	External
DIREG  . . . . . . . . . . . . .  	Number	4944	
DIRPRI . . . . . . . . . . . . .  	Number	000F	
DIRSTRLEN  . . . . . . . . . . .  	Number	0040	
DIR_SEARCH_FIRST . . . . . . . .  	Number	0011	
DIR_SEARCH_NEXT  . . . . . . . .  	Number	0012	
DISADD . . . . . . . . . . . . .  	V BYTE 	0000	DATA	External
DISASLN  . . . . . . . . . . . .  	L NEAR	0000	CODE	External
DISK_RESET . . . . . . . . . . .  	Number	000D	
DISPFLAGS  . . . . . . . . . . .  	L NEAR	019B	CODE
DISPREG  . . . . . . . . . . . .  	L NEAR	0000	CODE
DISPREGJ . . . . . . . . . . . .  	L NEAR	00A7	CODE
DISPREGLINE  . . . . . . . . . .  	L NEAR	015E	CODE
DOS_MAJOR_VERSION  . . . . . . .  	Number	0002	
DOS_MINOR_VERSION  . . . . . . .  	Number	000B	
DPBSIZ . . . . . . . . . . . . .  	Number	005E	
DRVERR . . . . . . . . . . . . .  	L NEAR	0000	CODE	External
DRVERRJ  . . . . . . . . . . . .  	L NEAR	064B	CODE
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 09:30:04

PART2 DEBUGGER COMMANDS                                     Symbols-8
                                                             

DRVLET . . . . . . . . . . . . .  	V BYTE 	0000	CONST	External
DSKIO  . . . . . . . . . . . . .  	L NEAR	05EF	CODE
DSKSIZ . . . . . . . . . . . . .  	Number	000D	
DSRANGE  . . . . . . . . . . . .  	L NEAR	0000	CODE	External
DSSAVE . . . . . . . . . . . . .  	V WORD 	0000	CONST	External
DUP2_INVALID_HANDLE  . . . . . .  	Alias	 ERROR_INVALID_HANDLE		
DUP_INVALID_HANDLE . . . . . . .  	Alias	 ERROR_INVALID_HANDLE		
DUP_PDB  . . . . . . . . . . . .  	Number	0055	
DUP_TOO_MANY_OPEN_FILES  . . . .  	Alias	 ERROR_TOO_MANY_OPEN_FILES		
DWRITE . . . . . . . . . . . . .  	L NEAR	05EA	CODE	Global

ENDABS . . . . . . . . . . . . .  	L NEAR	0649	CODE
ENTRYPOINT . . . . . . . . . . .  	Number	00C0	
ERR  . . . . . . . . . . . . . .  	L NEAR	0183	CODE
ERRMES . . . . . . . . . . . . .  	V BYTE 	0000	CONST	External
ERROR_ACCESS_DENIED  . . . . . .  	Number	0005	
ERROR_ARENA_TRASHED  . . . . . .  	Number	0007	
ERROR_BAD_ENVIRONMENT  . . . . .  	Number	000A	
ERROR_BAD_FORMAT . . . . . . . .  	Number	000B	
ERROR_CURRENT_DIRECTORY  . . . .  	Number	0010	
ERROR_FILE_NOT_FOUND . . . . . .  	Number	0002	
ERROR_INVALID_ACCESS . . . . . .  	Number	000C	
ERROR_INVALID_BLOCK  . . . . . .  	Number	0009	
ERROR_INVALID_DATA . . . . . . .  	Number	000D	
ERROR_INVALID_DRIVE  . . . . . .  	Number	000F	
ERROR_INVALID_FUNCTION . . . . .  	Number	0001	
ERROR_INVALID_HANDLE . . . . . .  	Number	0006	
ERROR_NOT_ENOUGH_MEMORY  . . . .  	Number	0008	
ERROR_NOT_SAME_DEVICE  . . . . .  	Number	0011	
ERROR_NO_MORE_FILES  . . . . . .  	Number	0012	
ERROR_PATH_NOT_FOUND . . . . . .  	Number	0003	
ERROR_TOO_MANY_OPEN_FILES  . . .  	Number	0004	
ESSAVE . . . . . . . . . . . . .  	V WORD 	0000	CONST	External
EXEBAD . . . . . . . . . . . . .  	V BYTE 	0000	CONST	External
EXEC . . . . . . . . . . . . . .  	Number	004B	
EXECEMES . . . . . . . . . . . .  	V BYTE 	0000	CONST	External
EXECERR  . . . . . . . . . . . .  	L NEAR	0884	CODE
EXECHK . . . . . . . . . . . . .  	L NEAR	0665	CODE
EXEC_A_FILE  . . . . . . . . . .  	L NEAR	04DD	CODE
EXEC_BAD_ENVIRONMENT . . . . . .  	Alias	 ERROR_BAD_ENVIRONMENT		
EXEC_BAD_FORMAT  . . . . . . . .  	Alias	 ERROR_BAD_FORMAT		
EXEC_BLOCK . . . . . . . . . . .  	V BYTE 	0000	CONST	External
EXEC_FILE_NOT_FOUND  . . . . . .  	Alias	 ERROR_FILE_NOT_FOUND		
EXEC_FUNC_NO_EXECUTE . . . . . .  	Number	0001	
EXEC_FUNC_OVERLAY  . . . . . . .  	Number	0002	
EXEC_INVALID_FUNCTION  . . . . .  	Alias	 ERROR_INVALID_FUNCTION		
EXEC_NOT_ENOUGH_MEMORY . . . . .  	Alias	 ERROR_NOT_ENOUGH_MEMORY		
EXEFCB . . . . . . . . . . . . .  	Alias	 FCB		
EXELJ  . . . . . . . . . . . . .  	L NEAR	068A	CODE
EXELOAD  . . . . . . . . . . . .  	L NEAR	07E1	CODE
EXEWRT . . . . . . . . . . . . .  	V BYTE 	0000	CONST	External
EXE_VALID_OLD_SIGNATURE  . . . .  	Number	4D5A	
EXE_VALID_SIGNATURE  . . . . . .  	Number	5A4D	
EXIT . . . . . . . . . . . . . .  	Number	004C	
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 09:30:04

PART2 DEBUGGER COMMANDS                                     Symbols-9
                                                             

EXIT_ABORT . . . . . . . . . . .  	Number	0000	
EXIT_CTRL_C  . . . . . . . . . .  	Number	0001	
EXIT_HARD_ERROR  . . . . . . . .  	Number	0002	
EXIT_KEEP_PROCESS  . . . . . . .  	Number	0003	
EXIT_TERMINATE . . . . . . . . .  	Number	0000	
EXTPTR . . . . . . . . . . . . .  	V WORD 	0000	DATA	External

FALSE  . . . . . . . . . . . . .  	Number	0000	
FATPRI . . . . . . . . . . . . .  	Number	001E	
FCB  . . . . . . . . . . . . . .  	Number	005C	
FCB_CLOSE  . . . . . . . . . . .  	Number	0010	
FCB_CREATE . . . . . . . . . . .  	Number	0016	
FCB_DELETE . . . . . . . . . . .  	Number	0013	
FCB_OPEN . . . . . . . . . . . .  	Number	000F	
FCB_RANDOM_READ  . . . . . . . .  	Number	0021	
FCB_RANDOM_READ_BLOCK  . . . . .  	Number	0027	
FCB_RANDOM_WRITE . . . . . . . .  	Number	0022	
FCB_RANDOM_WRITE_BLOCK . . . . .  	Number	0028	
FCB_RENAME . . . . . . . . . . .  	Number	0017	
FCB_SEQ_READ . . . . . . . . . .  	Number	0014	
FCB_SEQ_WRITE  . . . . . . . . .  	Number	0015	
FERR . . . . . . . . . . . . . .  	L NEAR	0180	CODE
FILDIRENT  . . . . . . . . . . .  	Number	0010	
FILEIO . . . . . . . . . . . . .  	L NEAR	0660	CODE
FILETIMES_INVALID_FUNCTION . . .  	Alias	 ERROR_INVALID_FUNCTION		
FILETIMES_INVALID_HANDLE . . . .  	Alias	 ERROR_INVALID_HANDLE		
FILE_TIMES . . . . . . . . . . .  	Number	0057	
FILPERPROC . . . . . . . . . . .  	Number	0014	
FINDFIRST_FILE_NOT_FOUND . . . .  	Alias	 ERROR_FILE_NOT_FOUND		
FINDFIRST_NO_MORE_FILES  . . . .  	Alias	 ERROR_NO_MORE_FILES		
FINDNEXT_NO_MORE_FILES . . . . .  	Alias	 ERROR_NO_MORE_FILES		
FIND_DEBUG . . . . . . . . . . .  	L NEAR	0000	CODE	External
FIND_DELIM . . . . . . . . . . .  	L NEAR	0490	CODE
FIND_FIRST . . . . . . . . . . .  	Number	004E	
FIND_NEXT  . . . . . . . . . . .  	Number	004F	
FLAG . . . . . . . . . . . . . .  	L NEAR	0111	CODE
FLAGSET  . . . . . . . . . . . .  	L NEAR	01AF	CODE
FLAGTAB  . . . . . . . . . . . .  	V WORD 	0000	CONST	External
FLGERR . . . . . . . . . . . . .  	L NEAR	0196	CODE
FREEPRI  . . . . . . . . . . . .  	Number	0000	
FSAVE  . . . . . . . . . . . . .  	V WORD 	0000	CONST	External

GCUR . . . . . . . . . . . . . .  	L NEAR	0579	CODE
GDOPEN . . . . . . . . . . . . .  	L NEAR	06A5	CODE
GETBYT . . . . . . . . . . . . .  	L NEAR	0942	CODE
GETCH  . . . . . . . . . . . . .  	L NEAR	0902	CODE
GETCHRUP . . . . . . . . . . . .  	L NEAR	056B	CODE
GETEOL . . . . . . . . . . . . .  	L NEAR	0000	CODE	External
GETEXTENDEDERROR . . . . . . . .  	Number	0059	
GETFLG . . . . . . . . . . . . .  	L NEAR	012A	CODE
GETHEX . . . . . . . . . . . . .  	L NEAR	0000	CODE	External
GETHEX1  . . . . . . . . . . . .  	L NEAR	0000	CODE	External
GET_CURRENT_PDB  . . . . . . . .  	Number	0051	
GET_DATE . . . . . . . . . . . .  	Number	002A	
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 09:30:04

PART2 DEBUGGER COMMANDS                                     Symbols-10
                                                             

GET_DEFAULT_DPB  . . . . . . . .  	Number	001F	
GET_DEFAULT_DRIVE  . . . . . . .  	Number	0019	
GET_DMA  . . . . . . . . . . . .  	Number	002F	
GET_DPB  . . . . . . . . . . . .  	Number	0032	
GET_DRIVE_FREESPACE  . . . . . .  	Number	0036	
GET_FCB_FILE_LENGTH  . . . . . .  	Number	0023	
GET_FCB_POSITION . . . . . . . .  	Number	0024	
GET_INDOS_FLAG . . . . . . . . .  	Number	0034	
GET_INTERRUPT_VECTOR . . . . . .  	Number	0035	
GET_IN_VARS  . . . . . . . . . .  	Number	0052	
GET_TIME . . . . . . . . . . . .  	Number	002C	
GET_VERIFY_ON_WRITE  . . . . . .  	Number	0054	
GET_VERSION  . . . . . . . . . .  	Number	0030	
GO . . . . . . . . . . . . . . .  	L NEAR	043D	CODE	Global
GO1  . . . . . . . . . . . . . .  	L NEAR	0445	CODE
GOODR  . . . . . . . . . . . . .  	L NEAR	0772	CODE
GOREENTER  . . . . . . . . . . .  	L NEAR	0398	CODE
GOTDELIM . . . . . . . . . . . .  	L NEAR	049B	CODE
GOTEXECEMES  . . . . . . . . . .  	L NEAR	08A7	CODE

HANDLE . . . . . . . . . . . . .  	V WORD 	0000	DATA	External
HAVBIG . . . . . . . . . . . . .  	L NEAR	08FE	CODE
HEADSAVE . . . . . . . . . . . .  	V WORD 	0000	CONST	External
HEX  . . . . . . . . . . . . . .  	L NEAR	0000	CODE	External
HEX2BIN  . . . . . . . . . . . .  	L NEAR	08AE	CODE
HEX2BINJ . . . . . . . . . . . .  	L NEAR	065D	CODE
HEXCHK . . . . . . . . . . . . .  	L NEAR	0000	CODE	External
HEXDIG . . . . . . . . . . . . .  	L NEAR	0934	CODE
HEXDONE  . . . . . . . . . . . .  	L NEAR	0929	CODE
HEXERR . . . . . . . . . . . . .  	V BYTE 	0000	CONST	External
HEXFND . . . . . . . . . . . . .  	L NEAR	08CC	CODE
HEXIN  . . . . . . . . . . . . .  	L NEAR	0000	CODE	External
HEXWRT . . . . . . . . . . . . .  	V BYTE 	0000	CONST	External

IBMJAPAN . . . . . . . . . . . .  	Alias	 FALSE		
IBMVER . . . . . . . . . . . . .  	Alias	 TRUE		
IFEXE  . . . . . . . . . . . . .  	L NEAR	05D2	CODE
IFHEX  . . . . . . . . . . . . .  	L NEAR	05B9	CODE
INBUF  . . . . . . . . . . . . .  	L NEAR	0000	CODE	External
INDEX  . . . . . . . . . . . . .  	V WORD 	0000	DATA	External
INPUT  . . . . . . . . . . . . .  	L NEAR	01C1	CODE	Global
INTBASE  . . . . . . . . . . . .  	Number	0080	
INTERNATIONAL  . . . . . . . . .  	Number	0038	
INTERNATIONAL_INVALID_FUNCTION .  	Alias	 ERROR_INVALID_FUNCTION		
INTERNAT_BLOCK_MAX . . . . . . .  	Number	0020	
INTTAB . . . . . . . . . . . . .  	Number	0020	
INT_ABORT  . . . . . . . . . . .  	Alias	 INTTAB		
INT_COMMAND  . . . . . . . . . .  	Number	0021	
INT_CTRL_C . . . . . . . . . . .  	Number	0023	
INT_DISK_READ  . . . . . . . . .  	Number	0025	
INT_DISK_WRITE . . . . . . . . .  	Number	0026	
INT_FASTCON  . . . . . . . . . .  	Number	0029	
INT_FATAL_ABORT  . . . . . . . .  	Number	0024	
INT_KEEP_PROCESS . . . . . . . .  	Number	0027	
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 09:30:04

PART2 DEBUGGER COMMANDS                                     Symbols-11
                                                             

INT_SPOOLER  . . . . . . . . . .  	Number	0028	
INT_TERMINATE  . . . . . . . . .  	Number	0022	
IOCTL  . . . . . . . . . . . . .  	Number	0044	
IOCTL_INVALID_DATA . . . . . . .  	Alias	 ERROR_INVALID_DATA		
IOCTL_INVALID_FUNCTION . . . . .  	Alias	 ERROR_INVALID_FUNCTION		
IOCTL_INVALID_HANDLE . . . . . .  	Alias	 ERROR_INVALID_HANDLE		
IPSAVE . . . . . . . . . . . . .  	V WORD 	0000	CONST	External

KEEP_PROCESS . . . . . . . . . .  	Number	0031	

LBRPRI . . . . . . . . . . . . .  	Number	0002	
LBWPRI . . . . . . . . . . . . .  	Number	0004	
LIMRET . . . . . . . . . . . . .  	L NEAR	059A	CODE
LOAD . . . . . . . . . . . . . .  	L NEAR	05E3	CODE	Global
LOCKOPER . . . . . . . . . . . .  	Number	005C	
LSEEK  . . . . . . . . . . . . .  	Number	0042	
LSEEK_INVALID_FUNCTION . . . . .  	Alias	 ERROR_INVALID_FUNCTION		
LSEEK_INVALID_HANDLE . . . . . .  	Alias	 ERROR_INVALID_HANDLE		

MI_INT . . . . . . . . . . . . .  	Number	00CD	
MI_LONG_CALL . . . . . . . . . .  	Number	009A	
MI_LONG_JMP  . . . . . . . . . .  	Number	00EA	
MI_LONG_RET  . . . . . . . . . .  	Number	00CB	
MKDIR  . . . . . . . . . . . . .  	Number	0039	
MKDIR_ACCESS_DENIED  . . . . . .  	Alias	 ERROR_ACCESS_DENIED		
MKDIR_PATH_NOT_FOUND . . . . . .  	Alias	 ERROR_PATH_NOT_FOUND		
MSVER  . . . . . . . . . . . . .  	Alias	 FALSE		

NAMBAD . . . . . . . . . . . . .  	V BYTE 	0000	CONST	External
NAME . . . . . . . . . . . . . .  	L NEAR	059B	CODE	Global
NEWEXEC  . . . . . . . . . . . .  	V BYTE 	0000	CONST	External
NEXFLG . . . . . . . . . . . . .  	L NEAR	0159	CODE
NEXTFLG  . . . . . . . . . . . .  	L NEAR	01BE	CODE
NMIINT . . . . . . . . . . . . .  	L NEAR	0000	CODE	External
NMIINTEND  . . . . . . . . . . .  	L NEAR	0000	CODE	External
NOBP . . . . . . . . . . . . . .  	L NEAR	047F	CODE
NOFILE . . . . . . . . . . . . .  	L NEAR	0789	CODE
NOFILEJ  . . . . . . . . . . . .  	L NEAR	06D6	CODE
NOOVER . . . . . . . . . . . . .  	L NEAR	0064	CODE
NOREAD . . . . . . . . . . . . .  	L NEAR	0920	CODE
NOREGL . . . . . . . . . . . . .  	V BYTE 	0000	CONST	External
NOREM  . . . . . . . . . . . . .  	L NEAR	071C	CODE
NOROOM . . . . . . . . . . . . .  	V BYTE 	0000	CONST	External
NOSPACE  . . . . . . . . . . . .  	V BYTE 	0000	CONST	External
NOTFND . . . . . . . . . . . . .  	V BYTE 	0000	CONST	External
NOTPC  . . . . . . . . . . . . .  	L NEAR	00D9	CODE
NO_ERROR_OCCURRED  . . . . . . .  	Text  0                                                              ?		
NO_MEM_ERR . . . . . . . . . . .  	L NEAR	06C9	CODE
NSEG . . . . . . . . . . . . . .  	V WORD 	0000	DATA	External
NXTBYT . . . . . . . . . . . . .  	L NEAR	07B1	CODE

OAF  . . . . . . . . . . . . . .  	L NEAR	069A	CODE
OC_FILE  . . . . . . . . . . . .  	L NEAR	0509	CODE
OEM_C1 . . . . . . . . . . . . .  	Number	00F9	
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 09:30:04

PART2 DEBUGGER COMMANDS                                     Symbols-12
                                                             

OEM_C2 . . . . . . . . . . . . .  	Number	00FA	
OEM_C3 . . . . . . . . . . . . .  	Number	00FB	
OEM_C4 . . . . . . . . . . . . .  	Number	00FC	
OEM_C5 . . . . . . . . . . . . .  	Number	00FD	
OEM_C6 . . . . . . . . . . . . .  	Number	00FE	
OEM_C7 . . . . . . . . . . . . .  	Number	00FF	
OPBUFLEN . . . . . . . . . . . .  	Number	0023	
OPEN . . . . . . . . . . . . . .  	Number	003D	
OPEN1  . . . . . . . . . . . . .  	L NEAR	0520	CODE
OPEN2  . . . . . . . . . . . . .  	L NEAR	0530	CODE
OPEN3  . . . . . . . . . . . . .  	L NEAR	0538	CODE
OPEN4  . . . . . . . . . . . . .  	L NEAR	0545	CODE
OPEN_ACCESS_DENIED . . . . . . .  	Alias	 ERROR_ACCESS_DENIED		
OPEN_A_FILE  . . . . . . . . . .  	L NEAR	04E9	CODE
OPEN_FILE_NOT_FOUND  . . . . . .  	Alias	 ERROR_FILE_NOT_FOUND		
OPEN_FOR_BOTH  . . . . . . . . .  	Number	0002	
OPEN_FOR_READ  . . . . . . . . .  	Number	0000	
OPEN_FOR_WRITE . . . . . . . . .  	Number	0001	
OPEN_INVALID_ACCESS  . . . . . .  	Alias	 ERROR_INVALID_ACCESS		
OPEN_TOO_MANY_OPEN_FILES . . . .  	Alias	 ERROR_TOO_MANY_OPEN_FILES		
OPNRET . . . . . . . . . . . . .  	L NEAR	0561	CODE
OUT  . . . . . . . . . . . . . .  	L NEAR	0000	CODE	External
OUT16  . . . . . . . . . . . . .  	L NEAR	0000	CODE	External
OUT8 . . . . . . . . . . . . . .  	L NEAR	009F	CODE
OUTDI  . . . . . . . . . . . . .  	L NEAR	0000	CODE	External
OUTPUT . . . . . . . . . . . . .  	L NEAR	01D1	CODE	Global
OUTSI  . . . . . . . . . . . . .  	L NEAR	0000	CODE	External

PARSERR  . . . . . . . . . . . .  	V BYTE 	0000	DATA	External
PARSE_A_FILE . . . . . . . . . .  	L NEAR	04D6	CODE
PARSE_FILE_DESCRIPTOR  . . . . .  	Number	0029	
PERROR . . . . . . . . . . . . .  	L NEAR	0000	CODE	External
PREPNAME . . . . . . . . . . . .  	L NEAR	049D	CODE	Global
PRER . . . . . . . . . . . . . .  	L NEAR	0697	CODE
PRIMIO . . . . . . . . . . . . .  	L NEAR	05FB	CODE
PRINT  . . . . . . . . . . . . .  	L NEAR	0000	CODE	External
PRMIO  . . . . . . . . . . . . .  	L NEAR	0606	CODE
PROMPT . . . . . . . . . . . . .  	Number	002D	

RAW_CON_INPUT  . . . . . . . . .  	Number	0007	
RAW_CON_IO . . . . . . . . . . .  	Number	0006	
RDFLG  . . . . . . . . . . . . .  	V BYTE 	0000	CONST	External
RDHEX  . . . . . . . . . . . . .  	L NEAR	08BF	CODE
RDWR . . . . . . . . . . . . . .  	L NEAR	072F	CODE
RDWRLOOP . . . . . . . . . . . .  	L NEAR	072F	CODE
READ . . . . . . . . . . . . . .  	Number	003F	
READHEX  . . . . . . . . . . . .  	L NEAR	08D1	CODE
READLN . . . . . . . . . . . . .  	L NEAR	08F4	CODE
READ_ACCESS_DENIED . . . . . . .  	Alias	 ERROR_ACCESS_DENIED		
READ_INVALID_HANDLE  . . . . . .  	Alias	 ERROR_INVALID_HANDLE		
REENTER  . . . . . . . . . . . .  	L NEAR	0352	CODE
REENTERREAL  . . . . . . . . . .  	L NEAR	039A	CODE
REG  . . . . . . . . . . . . . .  	L NEAR	00AA	CODE	Global
REGDIF . . . . . . . . . . . . .  	V WORD 	0000	CONST	External
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 09:30:04

PART2 DEBUGGER COMMANDS                                     Symbols-13
                                                             

REGTAB . . . . . . . . . . . . .  	V BYTE 	0000	CONST	External
REGTABLEN  . . . . . . . . . . .  	Number	000E	
RENAME . . . . . . . . . . . . .  	Number	0056	
RENAME_ACCESS_DENIED . . . . . .  	Alias	 ERROR_ACCESS_DENIED		
RENAME_FILE_NOT_FOUND  . . . . .  	Alias	 ERROR_FILE_NOT_FOUND		
RENAME_NOT_SAME_DEVICE . . . . .  	Alias	 ERROR_NOT_SAME_DEVICE		
REPDISP  . . . . . . . . . . . .  	L NEAR	0011	CODE
REPFLG . . . . . . . . . . . . .  	L NEAR	017D	CODE
RESTART  . . . . . . . . . . . .  	L NEAR	0000	CODE	External
RESTARTJ2  . . . . . . . . . . .  	L NEAR	093F	CODE
RESTARTJMP . . . . . . . . . . .  	L NEAR	078C	CODE
RET$5  . . . . . . . . . . . . .  	L NEAR	043C	CODE
RET0 . . . . . . . . . . . . . .  	L NEAR	064E	CODE
RET23  . . . . . . . . . . . . .  	L NEAR	04CE	CODE
RET4 . . . . . . . . . . . . . .  	L NEAR	010A	CODE
RET5 . . . . . . . . . . . . . .  	L NEAR	01E4	CODE
RET6 . . . . . . . . . . . . . .  	L NEAR	05B2	CODE
RET7 . . . . . . . . . . . . . .  	L NEAR	0954	CODE
RET8 . . . . . . . . . . . . . .  	L NEAR	0787	CODE
RETIF  . . . . . . . . . . . . .  	L NEAR	05E1	CODE
RETSAVE  . . . . . . . . . . . .  	V WORD 	0000	CONST	External
RMDIR  . . . . . . . . . . . . .  	Number	003A	
RMDIR_ACCESS_DENIED  . . . . . .  	Alias	 ERROR_ACCESS_DENIED		
RMDIR_CURRENT_DIRECTORY  . . . .  	Alias	 ERROR_CURRENT_DIRECTORY		
RMDIR_PATH_NOT_FOUND . . . . . .  	Alias	 ERROR_PATH_NOT_FOUND		
RPRBUF . . . . . . . . . . . . .  	L NEAR	0000	CODE	External
RPRI . . . . . . . . . . . . . .  	Number	0006	
RSTACK . . . . . . . . . . . . .  	V WORD 	0000	CONST	External

SAVCHG . . . . . . . . . . . . .  	L NEAR	0191	CODE
SCANB  . . . . . . . . . . . . .  	L NEAR	0000	CODE	External
SCANP  . . . . . . . . . . . . .  	L NEAR	0000	CODE	External
SEGDIF . . . . . . . . . . . . .  	Number	0000	
SEGTAB . . . . . . . . . . . . .  	V WORD 	0000	CONST	External
SERVERCALL . . . . . . . . . . .  	Number	005D	
SETADD . . . . . . . . . . . . .  	L NEAR	0425	CODE
SETBLOCK . . . . . . . . . . . .  	Number	004A	
SETBLOCK_ARENA_TRASHED . . . . .  	Alias	 ERROR_ARENA_TRASHED		
SETBLOCK_INVALID_BLOCK . . . . .  	Alias	 ERROR_INVALID_BLOCK		
SETBLOCK_INVALID_FUNCTION  . . .  	Alias	 ERROR_INVALID_FUNCTION		
SETBLOCK_NOT_ENOUGH_MEMORY . . .  	Alias	 ERROR_NOT_ENOUGH_MEMORY		
SETBP  . . . . . . . . . . . . .  	L NEAR	0471	CODE
SETCNTC  . . . . . . . . . . . .  	Alias	 TRUE		
SETDPB . . . . . . . . . . . . .  	Number	0053	
SET_CTRL_C_TRAPPING  . . . . . .  	Number	0033	
SET_CURRENT_PDB  . . . . . . . .  	Number	0050	
SET_DATE . . . . . . . . . . . .  	Number	002B	
SET_DEFAULT_DRIVE  . . . . . . .  	Number	000E	
SET_DMA  . . . . . . . . . . . .  	Number	001A	
SET_INTERRUPT_VECTOR . . . . . .  	Number	0025	
SET_OEM_HANDLER  . . . . . . . .  	Number	00F8	
SET_TERMINATE_VECTOR . . . . . .  	L NEAR	0000	CODE	External
SET_TIME . . . . . . . . . . . .  	Number	002D	
SET_VERIFY_ON_WRITE  . . . . . .  	Number	002E	
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 09:30:04

PART2 DEBUGGER COMMANDS                                     Symbols-14
                                                             

SF_DEFAULT_NUMBER  . . . . . . .  	Number	0005	
SHOREG . . . . . . . . . . . . .  	L NEAR	041C	CODE
SIREG  . . . . . . . . . . . . .  	Number	4953	
SKIP_FILE  . . . . . . . . . . .  	L NEAR	0488	CODE	Global
SPSAVE . . . . . . . . . . . . .  	V WORD 	0000	CONST	External
SREG . . . . . . . . . . . . . .  	V BYTE 	0000	CONST	External
SSSAVE . . . . . . . . . . . . .  	V WORD 	0000	CONST	External
STACK  . . . . . . . . . . . . .  	V BYTE 	0000	CONST	External
STDAUX . . . . . . . . . . . . .  	Number	0003	
STDERR . . . . . . . . . . . . .  	Number	0002	
STDIN  . . . . . . . . . . . . .  	Number	0000	
STDOUT . . . . . . . . . . . . .  	Number	0001	
STDPRN . . . . . . . . . . . . .  	Number	0004	
STD_AUX_INPUT  . . . . . . . . .  	Number	0003	
STD_AUX_OUTPUT . . . . . . . . .  	Number	0004	
STD_CON_INPUT  . . . . . . . . .  	Number	0001	
STD_CON_INPUT_FLUSH  . . . . . .  	Number	000C	
STD_CON_INPUT_NO_ECHO  . . . . .  	Number	0008	
STD_CON_INPUT_STATUS . . . . . .  	Number	000B	
STD_CON_OUTPUT . . . . . . . . .  	Number	0002	
STD_CON_STRING_INPUT . . . . . .  	Number	000A	
STD_CON_STRING_OUTPUT  . . . . .  	Number	0009	
STD_PRINTER_OUTPUT . . . . . . .  	Number	0005	
STEP . . . . . . . . . . . . . .  	L NEAR	02DF	CODE
STEP1  . . . . . . . . . . . . .  	L NEAR	033A	CODE
STOCNT . . . . . . . . . . . . .  	L NEAR	02D8	CODE
SWITCHAR . . . . . . . . . . . .  	V BYTE 	0000	DATA	External
SYSVER . . . . . . . . . . . . .  	Alias	 FALSE		

TCOUNT . . . . . . . . . . . . .  	V WORD 	0000	DATA	External
TERMINATE  . . . . . . . . . . .  	L NEAR	0000	CODE	External
TOOBIG . . . . . . . . . . . . .  	V BYTE 	0000	CONST	External
TOTREG . . . . . . . . . . . . .  	V BYTE 	0000	CONST	External
TRACE  . . . . . . . . . . . . .  	L NEAR	02C4	CODE	Global
TRANSADD . . . . . . . . . . . .  	V DWORD	0000	DATA	External
TRUE . . . . . . . . . . . . . .  	Number	FFFF	

UNLINK . . . . . . . . . . . . .  	Number	0041	
UNLINK_ACCESS_DENIED . . . . . .  	Alias	 ERROR_ACCESS_DENIED		
UNLINK_FILE_NOT_FOUND  . . . . .  	Alias	 ERROR_FILE_NOT_FOUND		
USERIDOPER . . . . . . . . . . .  	Number	005E	
USER_PROC_PDB  . . . . . . . . .  	V WORD 	0000	CONST	External

WAIT . . . . . . . . . . . . . .  	Number	004D	
WPRI . . . . . . . . . . . . . .  	Number	0008	
WRITE  . . . . . . . . . . . . .  	Number	0040	
WRITE_ACCESS_DENIED  . . . . . .  	Alias	 ERROR_ACCESS_DENIED		
WRITE_INVALID_HANDLE . . . . . .  	Alias	 ERROR_INVALID_HANDLE		
WRTFILE  . . . . . . . . . . . .  	L NEAR	078F	CODE
WRTFILEJ . . . . . . . . . . . .  	L NEAR	06D3	CODE
WRTMES1  . . . . . . . . . . . .  	V BYTE 	0000	CONST	External
WRTMES2  . . . . . . . . . . . .  	V BYTE 	0000	CONST	External
WRTSIZE  . . . . . . . . . . . .  	L NEAR	07A2	CODE

Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 09:30:04

PART2 DEBUGGER COMMANDS                                     Symbols-15
                                                             

XDUP . . . . . . . . . . . . . .  	Number	0045	
XDUP2  . . . . . . . . . . . . .  	Number	0046	
XNXCMD . . . . . . . . . . . . .  	V BYTE 	0000	DATA	External
XNXOPT . . . . . . . . . . . . .  	V BYTE 	0000	DATA	External

ZIBO . . . . . . . . . . . . . .  	Alias	 TRUE		
ZTRACE . . . . . . . . . . . . .  	L NEAR	022D	CODE	Global
ZTRACE1  . . . . . . . . . . . .  	L NEAR	02A6	CODE
ZTRACE2  . . . . . . . . . . . .  	L NEAR	02A5	CODE
ZTRACE3  . . . . . . . . . . . .  	L NEAR	02A4	CODE
ZTRACE4  . . . . . . . . . . . .  	L NEAR	02A3	CODE
ZTRACE5  . . . . . . . . . . . .  	L NEAR	02A2	CODE
ZTRACEMODRM  . . . . . . . . . .  	L NEAR	0289	CODE


   2537 Source  Lines
   2600 Total   Lines
    747 Symbols

  14764 Bytes symbol space free

      1 Warning Errors
      0 Severe  Errors
