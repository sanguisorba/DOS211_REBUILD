Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 09:28:03

DEBUGger for MS-DOS                                         Page     1-1
                                                            

       1                                TITLE   DEBUGger for MS-DOS 
       2                                ; DEBUG-86 8086 debugger runs under 86-
					DOS       version 2.30 
       3                                ; 
       4                                ; Modified 5/4/82 by AaronR to do all I
					/O direct to devices 
       5                                ; Runs on MS-DOS 1.28 and above 
       6                                ; REV 1.20 
       7                                ;       Tab expansion 
       8                                ;       New device interface (1.29 and 
					above) 
       9                                ; REV 2.0 
      10                                ;       line by line assembler added by
					 C. Peters 
      11                                ; REV 2.1 
      12                                ;       Uses EXEC system call 
      13                                ; REV 2.2 
      14                                ;       Ztrace mode by zibo. 
      15                                ;       Fix dump display to indent prop
					erly 
      16                                ;       Parity nonsense by zibo 
      17                                ; 
      18                                ; REV 2.3 
      19                                ;       Split into seperate modules to 
					allow for 
      20                                ;       assembly on an IBM PC 
      21                                ; 
      22                                 
      23                                 
      24                                 
      25                                
					 
debug.ASM(27) : error 1: Extra characters on line 
      26                                .list 
      27                                 
      28                                        ENDIF 
      29                                 
      30                                 
      31 0000                           CODE    SEGMENT PUBLIC 'CODE' 
      32 0000                           CODE    ENDS 
      33                                 
      34 0000                           CONST   SEGMENT PUBLIC BYTE 
      35                                 
      36                                        EXTRN   USER_PROC_PDB:WORD,STAC
					K:BYTE,CSSAVE:WORD,DSSAVE:WORD 
      37                                        EXTRN   SPSAVE:WORD,IPSAVE:WORD
					,LINEBUF:BYTE,QFLAG:BYTE 
      38                                        EXTRN   NEWEXEC:BYTE,HEADSAVE:W
					ORD,LBUFSIZ:BYTE,BACMES:BYTE 
      39                                        EXTRN   BADVER:BYTE,ENDMES:BYTE
					,CARRET:BYTE,ParityMes:BYTE 
      40                                 
      41                                        IF  IBMVER 
      42                                        EXTRN   DSIZ:BYTE,NOREGL:BYTE,D
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 09:28:03

DEBUGger for MS-DOS                                         Page     1-2
                                                            

					ISPB:WORD 
      43                                        ENDIF 
      44                                 
      45                                        ENDIF 
      46                                 
      47 0000                           CONST   ENDS 
      48                                 
      49 0000                           DATA    SEGMENT PUBLIC BYTE 
      50                                 
      51                                        EXTRN   PARSERR:BYTE,DATAEND:WO
					RD,ParityFlag:BYTE,DISADD:BYTE 
      52                                        EXTRN   ASMADD:BYTE,DEFDUMP:BYT
					E,BYTEBUF:BYTE 
      53                                 
      54 0000                           DATA    ENDS 
      55                                 
      56                                DG      GROUP   CODE,CONST,DATA 
      57                                 
      58                                 
      59 0000                           CODE    SEGMENT PUBLIC 'CODE' 
      60                                ASSUME  CS:DG,DS:DG,ES:DG,SS:DG 
      61                                 
      62                                        PUBLIC  RESTART,SET_TERMINATE_V
					ECTOR,DABORT,TERMINATE,COMMAND 
      63                                        PUBLIC  FIND_DEBUG,CRLF,BLANK,T
					AB,OUT,INBUF,SCANB,SCANP 
      64                                        PUBLIC  PRINTMES,RPRBUF,HEX,OUT
					SI,OUTDI,OUT16,DIGIT,BACKUP,RBUFIN 
      65                                 
      66                                        ENDIF 
      67                                 
      68                                        EXTRN   PERR:NEAR,COMPARE:NEAR,
					DUMP:NEAR,ENTER:NEAR,FILL:NEAR 
      69                                        EXTRN   GO:NEAR,INPUT:NEAR,LOAD
					:NEAR,MOVE:NEAR,NAME:NEAR 
      70                                        EXTRN   REG:NEAR,SEARCH:NEAR,DW
					RITE:NEAR,UNASSEM:NEAR,ASSEM:NEAR 
      71                                        EXTRN   OUTPUT:NEAR,ZTRACE:NEAR
					,TRACE:NEAR,GETHEX:NEAR,GETEOL:NEAR 
      72                                 
      73                                        EXTRN   PREPNAME:NEAR,DEFIO:NEA
					R,SKIP_FILE:NEAR,DEBUG_FOUND:NEAR 
      74                                        EXTRN   TrapParity:NEAR,Release
					Parity:NEAR 
      75                                 
      76 0100                                   ORG     100H 
      77                                 
      78 0100                           START: 
      79 0100                           DEBUG: 
      80 0100  EB 09                            JMP     SHORT DSTRT 
      81                                 
      82 0102  56 65 72 73 20 32 2E     HEADER DB       "Vers 2.30" 
      83       33 30                    
      84                                 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 09:28:03

DEBUGger for MS-DOS                                         Page     1-3
                                                            

      85 010B                           DSTRT: 
      86 = 0200                         DOSVER_HIGH     EQU  0200H             
					 ; 2.00 in hex 
      87 010B  B4 30                            MOV     AH,GET_VERSION 
      88 010D  CD 21                            INT     21H 
      89 010F  86 E0                            XCHG    AH,AL                  
					 ; Turn it around to AH.AL 
      90 0111  3D 0200                          CMP     AX,DOSVER_HIGH 
      91 0114  73 09                            JAE     OKDOS 
      92 0116                           GOTBADDOS: 
      93 0116  BA 0000 E                        MOV     DX,OFFSET DG:BADVER 
      94 0119  B4 09                            MOV     AH,STD_CON_STRING_OUTPU
					T 
      95 011B  CD 21                            INT     21H 
      96 011D  CD 20                            INT     20H 
      97                                 
      98 011F                           OKDOS: 
      99 011F  E8 0000 E                        CALL    TrapParity             
					 ; scarf up those parity guys 
     100 0122  B4 51                            MOV     AH,GET_CURRENT_PDB 
     101 0124  CD 21                            INT     21H 
     102 0126  89 1E 0000 E                     MOV     [USER_PROC_PDB],BX     
					 ; Initially set to DEBUG 
     103                                 
     104                                        ENDIF 
     105                                 
     106 012A  BC 0000 E                        MOV     SP,OFFSET DG:STACK 
     107 012D  A2 0000 E                        MOV     [PARSERR],AL 
     108 0130  B4 52                            MOV     AH,GET_IN_VARS 
     109 0132  CD 21                            INT     21H 
     110                                 
     111                                 
     112                                        ENDIF 
     113                                 
     114 0134                           GOTLIST: 
     115                                        ENDIF 
     116 0134                           NOLIST: 
     117 0134  8C C8                            MOV     AX,CS 
     118 0136  8E D8                            MOV     DS,AX 
     119 0138  8E C0                            MOV     ES,AX 
     120                                 
     121                                ; Code to print header 
     122                                ;       MOV     DX,OFFSET DG:HEADER 
     123                                ;       CALL    RPRBUF 
     124                                 
     125 013A  E8 025A R                        CALL    SET_TERMINATE_VECTOR 
     126                                 
     127                                        IF      SETCNTC 
     128 013D  B0 23                            MOV     AL,23H                 
					 ; Set vector 23H 
     129 013F  BA 0291 R                        MOV     DX,OFFSET DG:DABORT 
     130 0142  CD 21                            INT     21H 
     131                                        ENDIF 
     132                                 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 09:28:03

DEBUGger for MS-DOS                                         Page     1-4
                                                            

     133 0144  8C CA                            MOV     DX,CS                  
					 ; Get DEBUG's segment 
     134 0146  B8 000F E                        MOV     AX,OFFSET DG:DATAEND + 
					15   ; End of debug 
     135 0149  D1 E8                            SHR     AX,1                   
					 ; Convert to segments 
     136 014B  D1 E8                            SHR     AX,1 
     137 014D  D1 E8                            SHR     AX,1 
     138 014F  D1 E8                            SHR     AX,1 
     139 0151  03 D0                            ADD     DX,AX                  
					 ; Add siz of debug in paragraphs 
     140 0153  B4 26                            MOV     AH,CREATE_PROCESS_DATA_
					BLOCK    ; create program segment just 
					after DEBUG 
     141 0155  CD 21                            INT     21H 
     142 0157  8B C2                            MOV     AX,DX 
     143 0159  BF 0000 E                        MOV     DI,OFFSET DG:DSSAVE 
     144 015C  FC                               CLD 
     145 015D  AB                               STOSW 
     146 015E  AB                               STOSW 
     147 015F  AB                               STOSW 
     148 0160  AB                               STOSW 
     149 0161  A3 0002 E                        MOV     WORD PTR [DISADD+2],AX 
     150 0164  A3 0002 E                        MOV     WORD PTR [ASMADD+2],AX 
     151 0167  A3 0002 E                        MOV     WORD PTR [DEFDUMP+2],AX
					 
     152 016A  B8 0100                          MOV     AX,100H 
     153 016D  A3 0000 E                        MOV     WORD PTR[DISADD],AX 
     154 0170  A3 0000 E                        MOV     WORD PTR[ASMADD],AX 
     155 0173  A3 0000 E                        MOV     WORD PTR [DEFDUMP],AX 
     156 0176  8E DA                            MOV     DS,DX 
     157 0178  8E C2                            MOV     ES,DX 
     158 017A  BA 0080                          MOV     DX,80H 
     159 017D  B4 1A                            MOV     AH,SET_DMA 
     160 017F  CD 21                            INT     21H                    
					 ; Set default DMA address to 80H 
     161 0181  A1 0006                          MOV     AX,WORD PTR DS:[6] 
     162 0184  8B D8                            MOV     BX,AX 
     163 0186  3D FFF0                          CMP     AX,0FFF0H 
     164 0189  0E                               PUSH    CS 
     165 018A  1F                               POP     DS 
     166 018B  73 0E                            JAE     SAVSTK 
     167 018D  A1 0006                          MOV     AX,WORD PTR DS:[6] 
     168 0190  53                               PUSH    BX 
     169 0191  BB 000F E                        MOV     BX,OFFSET DG:DATAEND + 
					15 
     170 0194  81 E3 FFF0                       AND     BX,0FFF0H              
					 ; Size of DEBUG in bytes (rounded up t
					o PARA) 
     171 0198  2B C3                            SUB     AX,BX 
     172 019A  5B                               POP     BX 
     173 019B                           SAVSTK: 
     174 019B  53                               PUSH    BX 
     175 019C  48                               DEC     AX 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 09:28:03

DEBUGger for MS-DOS                                         Page     1-5
                                                            

     176 019D  48                               DEC     AX 
     177 019E  8B D8                            MOV     BX,AX 
     178 01A0  C7 07 0000                       MOV     WORD PTR [BX],0 
     179 01A4  5B                               POP     BX 
     180 01A5  A3 0000 E                        MOV     SPSAVE,AX 
     181 01A8  FE CC                            DEC     AH 
     182 01AA  26: A3 0006                      MOV     ES:WORD PTR [6],AX 
     183 01AE  2B D8                            SUB     BX,AX 
     184 01B0  B1 04                            MOV     CL,4 
     185 01B2  D3 EB                            SHR     BX,CL 
     186 01B4  26: 01 1E 0008                   ADD     ES:WORD PTR [8],BX 
     187                                 
     188                                        IF IBMVER 
     189                                        ; Get screen size and initializ
					e display related variables 
     190 01B9  B4 0F                            MOV     AH,15 
     191 01BB  CD 10                            INT     10H 
     192 01BD  80 FC 28                         CMP     AH,40 
     193 01C0  75 10                            JNZ     PARSCHK 
     194 01C2  C6 06 0000 E 07                  MOV     BYTE PTR DSIZ,7 
     195 01C7  C6 06 0000 E 04                  MOV     BYTE PTR NOREGL,4 
     196 01CC  C7 06 0000 E 0040                MOV     DISPB,64 
     197                                        ENDIF 
     198                                 
     199 01D2                           PARSCHK: 
     200                                ; Copy rest of command line to test pro
					gram's parameter area 
     201 01D2  BF 005C                          MOV     DI,FCB 
     202 01D5  BE 0081                          MOV     SI,81H 
     203 01D8  B8 2901                          MOV     AX,(PARSE_FILE_DESCRIPT
					OR SHL 8) OR 01H 
     204 01DB  CD 21                            INT     21H 
     205 01DD  E8 0000 E                        CALL    SKIP_FILE              
					 ; Make sure si points to delimiter 
     206 01E0  E8 0000 E                        CALL    PREPNAME 
     207 01E3  0E                               PUSH    CS 
     208 01E4  07                               POP     ES 
     209 01E5                           FILECHK: 
     210 01E5  BF 0080                          MOV     DI,80H 
     211 01E8  26: 80 3D 00                     CMP     BYTE PTR ES:[DI],0     
					 ; ANY STUFF FOUND? 
     212 01EC  74 28                            JZ      COMMAND                
					 ; NOPE 
     213 01EE  47                       FILOOP: INC     DI 
     214 01EF  26: 80 3D 0D                     CMP     BYTE PTR ES:[DI],13    
					 ; COMMAND LINE JUST SPACES? 
     215 01F3  74 21                            JZ      COMMAND 
     216 01F5  26: 80 3D 20                     CMP     BYTE PTR ES:[DI]," " 
     217 01F9  74 F3                            JZ      FILOOP 
     218 01FB  26: 80 3D 09                     CMP     BYTE PTR ES:[DI],9 
     219 01FF  74 ED                            JZ      FILOOP 
     220                                 
     221 0201  E8 0000 E                        CALL    DEFIO                  
					 ; WELL READ IT IN 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 09:28:03

DEBUGger for MS-DOS                                         Page     1-6
                                                            

     222 0204  A1 0000 E                        MOV     AX,CSSAVE 
     223 0207  A3 0002 E                        MOV     WORD PTR DISADD+2,AX 
     224 020A  A3 0002 E                        MOV     WORD PTR ASMADD+2,AX 
     225 020D  A1 0000 E                        MOV     AX,IPSAVE 
     226 0210  A3 0000 E                        MOV     WORD PTR DISADD,AX 
     227 0213  A3 0000 E                        MOV     WORD PTR ASMADD,AX 
     228 0216                           COMMAND: 
     229 0216  FC                               CLD 
     230 0217  8C C8                            MOV     AX,CS 
     231 0219  8E D8                            MOV     DS,AX 
     232 021B  8E C0                            MOV     ES,AX 
     233 021D  8E D0                            MOV     SS,AX 
     234 021F  BC 0000 E                        MOV     SP,OFFSET DG:STACK 
     235 0222  FB                               STI 
     236 0223  80 3E 0000 E 00                  CMP     [ParityFlag],0         
					 ; did we detect a parity error? 
     237 0228  74 0C                            JZ      GoPrompt               
					 ; nope, go prompt 
     238 022A  C6 06 0000 E 00                  MOV     [ParityFlag],0         
					 ; reset flag 
     239 022F  BA 0000 E                        MOV     DX,OFFSET DG:ParityMes 
					 ; message to print 
     240 0232  B4 09                            MOV     AH,STD_CON_STRING_OUTPU
					T; easy way out 
     241 0234  CD 21                            INT     21h                    
					 ; blam 
     242 0236                           GoPrompt: 
     243 0236  B0 2D                            MOV     AL,PROMPT 
     244 0238  E8 0362 R                        CALL    OUT 
     245 023B  E8 02A3 R                        CALL    INBUF                  
					 ; Get command line 
     246                                ; From now and throughout command line 
					processing, DI points 
     247                                ; to next character in command line to 
					be processed. 
     248 023E  E8 02F5 R                        CALL    SCANB                  
					 ; Scan off leading blanks 
     249 0241  74 D3                            JZ      COMMAND                
					 ; Null command? 
     250 0243  AC                               LODSB                          
					 ; AL=first non-blank character 
     251                                ; Prepare command letter for table look
					up 
     252 0244  2C 41                            SUB     AL,"A"                 
					 ; Low end range check 
     253 0246  72 0F                            JB      ERR1 
     254 0248  3C 19                            CMP     AL,"Z"-"A"             
					 ; Upper end range check 
     255 024A  77 0B                            JA      ERR1 
     256 024C  D0 E0                            SHL     AL,1                   
					 ; Times two 
     257 024E  98                               CBW                            
					 ; Now a 16-bit quantity 
     258 024F  93                               XCHG    BX,AX                  
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 09:28:03

DEBUGger for MS-DOS                                         Page     1-7
                                                            

					 ; In BX we can address with it 
     259 0250  2E: FF 97 038A R                 CALL    CS:[BX+COMTAB]         
					 ; Execute command 
     260 0255  EB BF                            JMP     SHORT COMMAND          
					 ; Get next command 
     261 0257  E9 0000 E                ERR1:   JMP     PERR 
     262                                 
     263 025A                           SET_TERMINATE_VECTOR: 
     264 025A  B8 2522                          MOV     AX,(SET_INTERRUPT_VECTO
					R SHL 8) OR 22H  ; Set vector 22H 
     265 025D  BA 0263 R                        MOV     DX,OFFSET DG:TERMINATE 
     266 0260  CD 21                            INT     21H 
     267 0262  C3                               RET 
     268                                 
     269 0263                           TERMINATE: 
     270 0263  2E: 80 3E 0000 E 00              CMP     BYTE PTR CS:[QFLAG],0 
     271 0269  75 21                            JNZ     QUITING 
     272 026B  2E: 8C 0E 0000 E                 MOV     CS:[USER_PROC_PDB],CS 
     273 0270  2E: 80 3E 0000 E 00              CMP     BYTE PTR CS:[NEWEXEC],0
					 
     274 0276  74 0F                            JZ      NORMTERM 
     275 0278  8C C8                            MOV     AX,CS 
     276 027A  8E D8                            MOV     DS,AX 
     277 027C  8E D0                            MOV     SS,AX 
     278 027E  BC 0000 E                        MOV     SP,OFFSET DG:STACK 
     279 0281  A1 0000 E                        MOV     AX,[HEADSAVE] 
     280 0284  E9 0000 E                        JMP     DEBUG_FOUND 
     281                                 
     282 0287                           NORMTERM: 
     283 0287  BA 0000 E                        MOV     DX,OFFSET DG:ENDMES 
     284 028A  EB 08                            JMP     SHORT RESTART 
     285                                 
     286 028C                           QUITING: 
     287 028C  B8 4C00                          MOV     AX,(EXIT SHL 8) 
     288 028F  CD 21                            INT     21H 
     289                                 
     290 0291                           DABORT: 
     291 0291  BA 0000 E                        MOV     DX,OFFSET DG:CARRET 
     292 0294                           RESTART: 
     293 0294  8C C8                            MOV     AX,CS 
     294 0296  8E D8                            MOV     DS,AX 
     295 0298  8E D0                            MOV     SS,AX 
     296 029A  BC 0000 E                        MOV     SP,OFFSET DG:STACK 
     297 029D  E8 037B R                        CALL    RPRBUF 
     298 02A0  E9 0216 R                        JMP     COMMAND 
     299                                 
     300                                        ENDIF 
     301                                 
     302                                ; Get input line. Convert all character
					s NOT in quotes to upper case. 
     303                                 
     304 02A3                           INBUF: 
     305 02A3  E8 036F R                        CALL    RBUFIN 
     306 02A6  BE 0000 E                        MOV     SI,OFFSET DG:LINEBUF 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 09:28:03

DEBUGger for MS-DOS                                         Page     1-8
                                                            

     307 02A9  BF 0000 E                        MOV     DI,OFFSET DG:BYTEBUF 
     308 02AC                           CASECHK: 
     309 02AC  AC                               LODSB 
     310 02AD  3C 61                            CMP     AL,'a' 
     311 02AF  72 06                            JB      NOCONV 
     312 02B1  3C 7A                            CMP     AL,'z' 
     313 02B3  77 02                            JA      NOCONV 
     314 02B5  04 E0                            ADD     AL,"A"-"a"             
					 ; Convert to upper case 
     315 02B7                           NOCONV: 
     316 02B7  AA                               STOSB 
     317 02B8  3C 0D                            CMP     AL,13 
     318 02BA  74 16                            JZ      INDONE 
     319 02BC  3C 22                            CMP     AL,'"' 
     320 02BE  74 04                            JZ      QUOTSCAN 
     321 02C0  3C 27                            CMP     AL,"'" 
     322 02C2  75 E8                            JNZ     CASECHK 
     323 02C4                           QUOTSCAN: 
     324 02C4  8A E0                            MOV     AH,AL 
     325 02C6                           KILLSTR: 
     326 02C6  AC                               LODSB 
     327 02C7  AA                               STOSB 
     328 02C8  3C 0D                            CMP     AL,13 
     329 02CA  74 06                            JZ      INDONE 
     330 02CC  3A C4                            CMP     AL,AH 
     331 02CE  75 F6                            JNZ     KILLSTR 
     332 02D0  EB DA                            JMP     SHORT CASECHK 
     333                                 
     334 02D2                           INDONE: 
     335 02D2  BE 0000 E                        MOV     SI,OFFSET DG:BYTEBUF 
     336                                 
     337                                ; Output CR/LF sequence 
     338                                 
     339 02D5                           CRLF: 
     340 02D5  B0 0D                            MOV     AL,13 
     341 02D7  E8 0362 R                        CALL    OUT 
     342 02DA  B0 0A                            MOV     AL,10 
     343 02DC  E9 0362 R                        JMP     OUT 
     344                                 
     345                                ; Physical backspace - blank, backspace
					, blank 
     346                                 
     347 02DF                           BACKUP: 
     348 02DF  BE 0000 E                        MOV     SI,OFFSET DG:BACMES 
     349                                 
     350                                ; Print ASCII message. Last char has bi
					t 7 set 
     351                                 
     352 02E2                           PRINTMES: 
     353 02E2  2E: AC                           LODS    CS:BYTE PTR [SI]       
					 ; Get char to print 
     354 02E4  E8 0362 R                        CALL    OUT 
     355 02E7  D0 E0                            SHL     AL,1                   
					 ; High bit set? 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 09:28:03

DEBUGger for MS-DOS                                         Page     1-9
                                                            

     356 02E9  73 F7                            JNC     PRINTMES 
     357 02EB  C3                               RET 
     358                                 
     359                                ; Scan for parameters of a command 
     360                                 
     361 02EC                           SCANP: 
     362 02EC  E8 02F5 R                        CALL    SCANB                  
					 ; Get first non-blank 
     363 02EF  80 3C 2C                         CMP     BYTE PTR [SI],","      
					 ; One comma between params OK 
     364 02F2  75 0D                            JNE     EOLCHK                 
					 ; If not comma, we found param 
     365 02F4  46                               INC     SI                     
					 ; Skip over comma 
     366                                 
     367                                ; Scan command line for next non-blank 
					character 
     368                                 
     369 02F5                           SCANB: 
     370 02F5  50                               PUSH    AX 
     371 02F6                           SCANNEXT: 
     372 02F6  AC                               LODSB 
     373 02F7  3C 20                            CMP     AL," " 
     374 02F9  74 FB                            JZ      SCANNEXT 
     375 02FB  3C 09                            CMP     AL,9 
     376 02FD  74 F7                            JZ      SCANNEXT 
     377 02FF  4E                               DEC     SI                     
					 ; Back to first non-blank 
     378 0300  58                               POP     AX 
     379 0301                           EOLCHK: 
     380 0301  80 3C 0D                         CMP     BYTE PTR [SI],13 
     381 0304  C3                               RET 
     382                                 
     383                                ; Hex addition and subtraction 
     384                                 
     385 0305                           HEXADD: 
     386 0305  B9 0004                          MOV     CX,4 
     387 0308  E8 0000 E                        CALL    GETHEX 
     388 030B  8B FA                            MOV     DI,DX 
     389 030D  B9 0004                          MOV     CX,4 
     390 0310  E8 0000 E                        CALL    GETHEX 
     391 0313  E8 0000 E                        CALL    GETEOL 
     392 0316  52                               PUSH    DX 
     393 0317  03 D7                            ADD     DX,DI 
     394 0319  E8 0346 R                        CALL    OUT16 
     395 031C  E8 0380 R                        CALL    BLANK 
     396 031F  E8 0380 R                        CALL    BLANK 
     397 0322  5A                               POP     DX 
     398 0323  2B FA                            SUB     DI,DX 
     399 0325  8B D7                            MOV     DX,DI 
     400 0327  E8 0346 R                        CALL    OUT16 
     401 032A  EB A9                            JMP     SHORT CRLF 
     402                                 
     403                                ; Print the hex address of DS:SI 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 09:28:03

DEBUGger for MS-DOS                                         Page     1-10
                                                            

     404                                 
     405 032C                           OUTSI: 
     406 032C  8C DA                            MOV     DX,DS                  
					 ; Put DS where we can work with it 
     407 032E  E8 0346 R                        CALL    OUT16                  
					 ; Display segment 
     408 0331  B0 3A                            MOV     AL,":" 
     409 0333  E8 0362 R                        CALL    OUT 
     410 0336  8B D6                            MOV     DX,SI 
     411 0338  EB 0C                            JMP     SHORT OUT16            
					 ; Output displacement 
     412                                 
     413                                ; Print hex address of ES:DI 
     414                                ; Same as OUTSI above 
     415                                 
     416 033A                           OUTDI: 
     417 033A  8C C2                            MOV     DX,ES 
     418 033C  E8 0346 R                        CALL    OUT16 
     419 033F  B0 3A                            MOV     AL,":" 
     420 0341  E8 0362 R                        CALL    OUT 
     421 0344  8B D7                            MOV     DX,DI 
     422                                 
     423                                ; Print out 16-bit value in DX in hex 
     424                                 
     425 0346                           OUT16: 
     426 0346  8A C6                            MOV     AL,DH                  
					 ; High-order byte first 
     427 0348  E8 034D R                        CALL    HEX 
     428 034B  8A C2                            MOV     AL,DL                  
					 ; Then low-order byte 
     429                                 
     430                                ; Output byte in AL as two hex digits 
     431                                 
     432 034D                           HEX: 
     433 034D  8A E0                            MOV     AH,AL                  
					 ; Save for second digit 
     434                                ; Shift high digit into low 4 bits 
     435 034F  51                               PUSH    CX 
     436 0350  B1 04                            MOV     CL,4 
     437 0352  D2 E8                            SHR     AL,CL 
     438 0354  59                               POP     CX 
     439                                 
     440 0355  E8 035A R                        CALL    DIGIT                  
					 ; Output first digit 
     441 0358  8A C4                            MOV     AL,AH                  
					 ; Now do digit saved in AH 
     442 035A                           DIGIT: 
     443 035A  24 0F                            AND     AL,0FH                 
					 ; Mask to 4 bits 
     444                                ; Trick 6-byte hex conversion works on 
					8086 too. 
     445 035C  04 90                            ADD     AL,90H 
     446 035E  27                               DAA 
     447 035F  14 40                            ADC     AL,40H 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 09:28:03

DEBUGger for MS-DOS                                         Page     1-11
                                                            

     448 0361  27                               DAA 
     449                                 
     450                                ; Console output of character in AL. No
					 registers affected but bit 7 
     451                                ; is reset before output. 
     452                                 
     453                                        ELSE 
     454                                 
     455 0362                           OUT: 
     456 0362  52                               PUSH    DX 
     457 0363  50                               PUSH    AX 
     458 0364  24 7F                            AND     AL,7FH 
     459 0366  8A D0                            MOV     DL,AL 
     460 0368  B4 02                            MOV     AH,2 
     461 036A  CD 21                            INT     21H 
     462 036C  58                               POP     AX 
     463 036D  5A                               POP     DX 
     464 036E  C3                               RET 
     465                                        ENDIF 
     466                                 
     467                                 
     468                                        ELSE 
     469                                 
     470 036F                           RBUFIN: 
     471 036F  50                               PUSH    AX 
     472 0370  52                               PUSH    DX 
     473 0371  B4 0A                            MOV     AH,10 
     474 0373  BA 0000 E                        MOV     DX,OFFSET DG:LBUFSIZ 
     475 0376  CD 21                            INT     21H 
     476 0378  5A                               POP     DX 
     477 0379  58                               POP     AX 
     478 037A  C3                               RET 
     479                                        ENDIF 
     480                                 
     481                                 
     482                                        ELSE 
     483                                 
     484 037B                           RPRBUF: 
     485 037B  B4 09                            MOV     AH,9 
     486 037D  CD 21                            INT     21H 
     487 037F  C3                               RET 
     488                                        ENDIF 
     489                                 
     490                                ; Output one space 
     491                                 
     492 0380                           BLANK: 
     493 0380  B0 20                            MOV     AL," " 
     494 0382  EB DE                            JMP     OUT 
     495                                 
     496                                ; Output the number of blanks in CX 
     497                                 
     498 0384                           TAB: 
     499 0384  E8 0380 R                        CALL    BLANK 
     500 0387  E2 FB                            LOOP    TAB 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 09:28:03

DEBUGger for MS-DOS                                         Page     1-12
                                                            

     501 0389  C3                               RET 
     502                                 
     503                                ; Command Table. Command letter indexes
					 into table to get 
     504                                ; address of command. PERR prints error
					 for no such command. 
     505                                 
     506 038A  0000 E                   COMTAB  DW      ASSEM                  
					 ; A 
     507 038C  0000 E                           DW      PERR                   
					 ; B 
     508 038E  0000 E                           DW      COMPARE                
					 ; C 
     509 0390  0000 E                           DW      DUMP                   
					 ; D 
     510 0392  0000 E                           DW      ENTER                  
					 ; E 
     511 0394  0000 E                           DW      FILL                   
					 ; F 
     512 0396  0000 E                           DW      GO                     
					 ; G 
     513 0398  0305 R                           DW      HEXADD                 
					 ; H 
     514 039A  0000 E                           DW      INPUT                  
					 ; I 
     515 039C  0000 E                           DW      PERR                   
					 ; J 
     516 039E  0000 E                           DW      PERR                   
					 ; K 
     517 03A0  0000 E                           DW      LOAD                   
					 ; L 
     518 03A2  0000 E                           DW      MOVE                   
					 ; M 
     519 03A4  0000 E                           DW      NAME                   
					 ; N 
     520 03A6  0000 E                           DW      OUTPUT                 
					 ; O 
     521                                        IF      ZIBO 
     522 03A8  0000 E                           DW      ZTRACE 
     523                                        ENDIF 
     524 03AA  03BE R                           DW      QUIT                   
					 ; Q (QUIT) 
     525 03AC  0000 E                           DW      REG                    
					 ; R 
     526 03AE  0000 E                           DW      SEARCH                 
					 ; S 
     527 03B0  0000 E                           DW      TRACE                  
					 ; T 
     528 03B2  0000 E                           DW      UNASSEM                
					 ; U 
     529 03B4  0000 E                           DW      PERR                   
					 ; V 
     530 03B6  0000 E                           DW      DWRITE                 
					 ; W 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 09:28:03

DEBUGger for MS-DOS                                         Page     1-13
                                                            

     531                                        ELSE 
     532 03B8  0000 E                           DW      PERR 
     533                                        ENDIF 
     534 03BA  0000 E                           DW      PERR                   
					 ; Y 
     535 03BC  0000 E                           DW      PERR                   
					 ; Z 
     536                                 
     537 03BE                           QUIT: 
     538 03BE  FE 06 0000 E                     INC     BYTE PTR [QFLAG] 
     539 03C2  8B 1E 0000 E                     MOV     BX,[USER_PROC_PDB] 
     540 03C6                           FIND_DEBUG: 
     541                                IF  NOT SYSVER 
     542 03C6  B4 50                            MOV     AH,SET_CURRENT_PDB 
     543 03C8  CD 21                            INT     21H 
     544                                ENDIF 
     545 03CA  E8 0000 E                        CALL    ReleaseParity          
					 ; let system do normal parity stuff 
     546 03CD  B8 4C00                          MOV     AX,(EXIT SHL 8) 
     547 03D0  CD 21                            INT     21H 
     548                                 
     549 03D2                           CODE    ENDS 
     550                                        END START 

Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 09:28:03

DEBUGger for MS-DOS                                         Symbols-1
                                                             

Macros:

		N a m e			Lines

BREAK  . . . . . . . . . . . . .  	   2
CONDRET  . . . . . . . . . . . .  	  19
CONTEXT  . . . . . . . . . . . .  	   3
DO_EXT . . . . . . . . . . . . .  	   0
ENTRY  . . . . . . . . . . . . .  	   2
ERROR  . . . . . . . . . . . . .  	   4
INVOKE . . . . . . . . . . . . .  	   8
I_AM . . . . . . . . . . . . . .  	  14
I_NEED . . . . . . . . . . . . .  	  11
JUMP . . . . . . . . . . . . . .  	  17
LONG_ADDR  . . . . . . . . . . .  	   7
MAKELAB  . . . . . . . . . . . .  	   4
PROCEDURE  . . . . . . . . . . .  	   2
RETC . . . . . . . . . . . . . .  	   1
RETNC  . . . . . . . . . . . . .  	   1
RETNZ  . . . . . . . . . . . . .  	   1
RETURN . . . . . . . . . . . . .  	   5
RETZ . . . . . . . . . . . . . .  	   1
SHORT_ADDR . . . . . . . . . . .  	  12
TRANSFER . . . . . . . . . . . .  	   8

Structures and Records:

                N a m e                 Width   # fields
                                        Shift   Width   Mask    Initial

ARENA  . . . . . . . . . . . . .  	0005	0003
  ARENA_SIGNATURE  . . . . . . .  	0000
  ARENA_OWNER  . . . . . . . . .  	0001
  ARENA_SIZE . . . . . . . . . .  	0003
BPBLOCK  . . . . . . . . . . . .  	000D	0008
  BPSECSZ  . . . . . . . . . . .  	0000
  BPCLUS . . . . . . . . . . . .  	0002
  BPRES  . . . . . . . . . . . .  	0003
  BPFTCNT  . . . . . . . . . . .  	0005
  BPDRCNT  . . . . . . . . . . .  	0006
  BPSCCNT  . . . . . . . . . . .  	0008
  BPMEDIA  . . . . . . . . . . .  	000A
  BPFTSEC  . . . . . . . . . . .  	000B
BUFFINFO . . . . . . . . . . . .  	0010	0009
  NEXTBUF  . . . . . . . . . . .  	0000
  BUFDRV . . . . . . . . . . . .  	0004
  BUFDIRTY . . . . . . . . . . .  	0005
  BUFPRI . . . . . . . . . . . .  	0006
  VISIT  . . . . . . . . . . . .  	0007
  BUFSECNO . . . . . . . . . . .  	0008
  BUFWRTCNT  . . . . . . . . . .  	000A
  BUFWRTINC  . . . . . . . . . .  	000B
  BUFDRVDP . . . . . . . . . . .  	000C
DIR_ENTRY  . . . . . . . . . . .  	0020	0008
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 09:28:03

DEBUGger for MS-DOS                                         Symbols-2
                                                             

  DIR_NAME . . . . . . . . . . .  	0000
  DIR_ATTR . . . . . . . . . . .  	000B
  DIR_PAD  . . . . . . . . . . .  	000C
  DIR_TIME . . . . . . . . . . .  	0016
  DIR_DATE . . . . . . . . . . .  	0018
  DIR_FIRST  . . . . . . . . . .  	001A
  DIR_SIZE_L . . . . . . . . . .  	001C
  DIR_SIZE_H . . . . . . . . . .  	001E
DPB  . . . . . . . . . . . . . .  	005E	0012
  DPB_DRIVE  . . . . . . . . . .  	0000
  DPB_UNIT . . . . . . . . . . .  	0001
  DPB_SECTOR_SIZE  . . . . . . .  	0002
  DPB_CLUSTER_MASK . . . . . . .  	0004
  DPB_CLUSTER_SHIFT  . . . . . .  	0005
  DPB_FIRST_FAT  . . . . . . . .  	0006
  DPB_FAT_COUNT  . . . . . . . .  	0008
  DPB_ROOT_ENTRIES . . . . . . .  	0009
  DPB_FIRST_SECTOR . . . . . . .  	000B
  DPB_MAX_CLUSTER  . . . . . . .  	000D
  DPB_FAT_SIZE . . . . . . . . .  	000F
  DPB_DIR_SECTOR . . . . . . . .  	0010
  DPB_DRIVER_ADDR  . . . . . . .  	0012
  DPB_MEDIA  . . . . . . . . . .  	0016
  DPB_FIRST_ACCESS . . . . . . .  	0017
  DPB_NEXT_DPB . . . . . . . . .  	0018
  DPB_CURRENT_DIR  . . . . . . .  	001C
  DPB_DIR_TEXT . . . . . . . . .  	001E
EXEC0  . . . . . . . . . . . . .  	000E	0004
  EXEC0_ENVIRON  . . . . . . . .  	0000
  EXEC0_COM_LINE . . . . . . . .  	0002
  EXEC0_5C_FCB . . . . . . . . .  	0006
  EXEC0_6C_FCB . . . . . . . . .  	000A
EXEC1  . . . . . . . . . . . . .  	0016	0008
  EXEC1_ENVIRON  . . . . . . . .  	0000
  EXEC1_COM_LINE . . . . . . . .  	0002
  EXEC1_5C_FCB . . . . . . . . .  	0006
  EXEC1_6C_FCB . . . . . . . . .  	000A
  EXEC1_SP . . . . . . . . . . .  	000E
  EXEC1_SS . . . . . . . . . . .  	0010
  EXEC1_IP . . . . . . . . . . .  	0012
  EXEC1_CS . . . . . . . . . . .  	0014
EXEC3  . . . . . . . . . . . . .  	0004	0002
  EXEC3_LOAD_ADDR  . . . . . . .  	0000
  EXEC3_RELOC_FAC  . . . . . . .  	0002
EXE_FILE . . . . . . . . . . . .  	0020	000F
  EXE_SIGNATURE  . . . . . . . .  	0000
  EXE_LEN_MOD_512  . . . . . . .  	0002
  EXE_PAGES  . . . . . . . . . .  	0004
  EXE_RLE_COUNT  . . . . . . . .  	0006
  EXE_PAR_DIR  . . . . . . . . .  	0008
  EXE_MIN_BSS  . . . . . . . . .  	000A
  EXE_MAX_BSS  . . . . . . . . .  	000C
  EXE_SS . . . . . . . . . . . .  	000E
  EXE_SP . . . . . . . . . . . .  	0010
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 09:28:03

DEBUGger for MS-DOS                                         Symbols-3
                                                             

  EXE_CHKSUM . . . . . . . . . .  	0012
  EXE_IP . . . . . . . . . . . .  	0014
  EXE_CS . . . . . . . . . . . .  	0016
  EXE_RLE_TABLE  . . . . . . . .  	0018
  EXE_IOV  . . . . . . . . . . .  	001A
  EXE_SYM_TAB  . . . . . . . . .  	001C
FIND_BUF . . . . . . . . . . . .  	002B	000C
  FIND_BUF_SATTR . . . . . . . .  	0000
  FIND_BUF_DRIVE . . . . . . . .  	0001
  FIND_BUF_NAME  . . . . . . . .  	0002
  FIND_BUF_LASTENT . . . . . . .  	000D
  FIND_BUF_THISDPB . . . . . . .  	000F
  FIND_BUF_DIRSTART  . . . . . .  	0013
  FIND_BUF_ATTR  . . . . . . . .  	0015
  FIND_BUF_TIME  . . . . . . . .  	0016
  FIND_BUF_DATE  . . . . . . . .  	0018
  FIND_BUF_SIZE_L  . . . . . . .  	001A
  FIND_BUF_SIZE_H  . . . . . . .  	001C
  FIND_BUF_PNAME . . . . . . . .  	001E
INTERNAT_BLOCK . . . . . . . . .  	0018	0015
  DATE_TIM_FORMAT  . . . . . . .  	0000
  CURRENCY_SYM . . . . . . . . .  	0002
  THOUS_SEP  . . . . . . . . . .  	0007
  DECIMAL_SEP  . . . . . . . . .  	0009
  DATE_SEP . . . . . . . . . . .  	000B
  TIME_SEP . . . . . . . . . . .  	000D
  BIT_FEILD  . . . . . . . . . .  	000F
  CURRENCY_CENTS . . . . . . . .  	0010
  TIME_24  . . . . . . . . . . .  	0011
  MAP_CALL . . . . . . . . . . .  	0012
  DATA_SEP . . . . . . . . . . .  	0016
PROCESS_DATA_BLOCK . . . . . . .  	005B	000E
  PDB_EXIT_CALL  . . . . . . . .  	0000
  PDB_BLOCK_LEN  . . . . . . . .  	0002
  PDB_CPM_CALL . . . . . . . . .  	0005
  PDB_EXIT . . . . . . . . . . .  	000A
  PDB_CTRL_C . . . . . . . . . .  	000E
  PDB_FATAL_ABORT  . . . . . . .  	0012
  PDB_PARENT_PID . . . . . . . .  	0016
  PDB_JFN_TABLE  . . . . . . . .  	0018
  PDB_ENVIRON  . . . . . . . . .  	002C
  PDB_USER_STACK . . . . . . . .  	002E
  PDB_PAD1 . . . . . . . . . . .  	0032
  PDB_CALL_SYSTEM  . . . . . . .  	0050
  PDB_PAD2 . . . . . . . . . . .  	0055
SFT  . . . . . . . . . . . . . .  	0008	0003
  SFT_LINK . . . . . . . . . . .  	0000
  SFT_COUNT  . . . . . . . . . .  	0004
  SFT_TABLE  . . . . . . . . . .  	0006
SF_ENTRY . . . . . . . . . . . .  	0028	0004
  SF_REF_COUNT . . . . . . . . .  	0000
  SF_MODE  . . . . . . . . . . .  	0001
  SF_ATTR  . . . . . . . . . . .  	0002
  SF_FCB . . . . . . . . . . . .  	0003
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 09:28:03

DEBUGger for MS-DOS                                         Symbols-4
                                                             

SYMBOL_ENTRY . . . . . . . . . .  	0106	0004
  SYM_VALUE  . . . . . . . . . .  	0000
  SYM_TYPE . . . . . . . . . . .  	0004
  SYM_LEN  . . . . . . . . . . .  	0006
  SYM_NAME . . . . . . . . . . .  	0007
SYS_FCB  . . . . . . . . . . . .  	0025	0010
  FCB_DRIVE  . . . . . . . . . .  	0000
  FCB_NAME . . . . . . . . . . .  	0001
  FCB_EXT  . . . . . . . . . . .  	0009
  FCB_EXTENT . . . . . . . . . .  	000C
  FCB_RECSIZ . . . . . . . . . .  	000E
  FCB_FILSIZ . . . . . . . . . .  	0010
  FCB_DRVBP  . . . . . . . . . .  	0012
  FCB_FDATE  . . . . . . . . . .  	0014
  FCB_FTIME  . . . . . . . . . .  	0016
  FCB_DEVID  . . . . . . . . . .  	0018
  FCB_FIRCLUS  . . . . . . . . .  	0019
  FCB_CLUSPOS  . . . . . . . . .  	001B
  FCB_LSTCLUS  . . . . . . . . .  	001D
  FCB_NR . . . . . . . . . . . .  	0020
  FCB_RR . . . . . . . . . . . .  	0021
USER_ENVIRON . . . . . . . . . .  	0018	000C
  USER_AX  . . . . . . . . . . .  	0000
  USER_BX  . . . . . . . . . . .  	0002
  USER_CX  . . . . . . . . . . .  	0004
  USER_DX  . . . . . . . . . . .  	0006
  USER_SI  . . . . . . . . . . .  	0008
  USER_DI  . . . . . . . . . . .  	000A
  USER_BP  . . . . . . . . . . .  	000C
  USER_DS  . . . . . . . . . . .  	000E
  USER_ES  . . . . . . . . . . .  	0010
  USER_IP  . . . . . . . . . . .  	0012
  USER_CS  . . . . . . . . . . .  	0014
  USER_F . . . . . . . . . . . .  	0016

Segments and Groups:

                N a m e         	Size	Align	Combine Class

DG . . . . . . . . . . . . . . .  	GROUP
  CODE . . . . . . . . . . . . .  	03D2	PARA	PUBLIC	'CODE'
  CONST  . . . . . . . . . . . .  	0000	BYTE	PUBLIC	
  DATA . . . . . . . . . . . . .  	0000	BYTE	PUBLIC	

Symbols:            

                N a m e         	Type	Value	Attr         

ABORT  . . . . . . . . . . . . .  	Number	0000	
ADDR_INT_ABORT . . . . . . . . .  	Number	0080	
ADDR_INT_COMMAND . . . . . . . .  	Number	0084	
ADDR_INT_CTRL_C  . . . . . . . .  	Number	008C	
ADDR_INT_DISK_READ . . . . . . .  	Number	0094	
ADDR_INT_DISK_WRITE  . . . . . .  	Number	0098	
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 09:28:03

DEBUGger for MS-DOS                                         Symbols-5
                                                             

ADDR_INT_FASTCON . . . . . . . .  	Number	00A4	
ADDR_INT_FATAL_ABORT . . . . . .  	Number	0090	
ADDR_INT_KEEP_PROCESS  . . . . .  	Number	009C	
ADDR_INT_SPOOLER . . . . . . . .  	Number	00A0	
ADDR_INT_TERMINATE . . . . . . .  	Number	0088	
ALLOC  . . . . . . . . . . . . .  	Number	0048	
ALLOCOPER  . . . . . . . . . . .  	Number	0058	
ALLOC_ARENA_TRASHED  . . . . . .  	Alias	 ERROR_ARENA_TRASHED		
ALLOC_NOT_ENOUGH_MEMORY  . . . .  	Alias	 ERROR_NOT_ENOUGH_MEMORY		
ALTVECT  . . . . . . . . . . . .  	Number	0000	
ARENA_OWNER_SYSTEM . . . . . . .  	Number	0000	
ARENA_SIGNATURE_END  . . . . . .  	Number	005A	
ARENA_SIGNATURE_NORMAL . . . . .  	Number	004D	
ASMADD . . . . . . . . . . . . .  	V BYTE 	0000	DATA	External
ASSEM  . . . . . . . . . . . . .  	L NEAR	0000	CODE	External
ASSIGNOPER . . . . . . . . . . .  	Number	005F	
ATTR_ALL . . . . . . . . . . . .  	Number	0016	
ATTR_ARCHIVE . . . . . . . . . .  	Number	0020	
ATTR_CHANGEABLE  . . . . . . . .  	Number	0027	
ATTR_DIRECTORY . . . . . . . . .  	Number	0010	
ATTR_HIDDEN  . . . . . . . . . .  	Number	0002	
ATTR_IGNORE  . . . . . . . . . .  	Number	0021	
ATTR_READ_ONLY . . . . . . . . .  	Number	0001	
ATTR_SYSTEM  . . . . . . . . . .  	Number	0004	
ATTR_VOLUME_ID . . . . . . . . .  	Number	0008	

BACKUP . . . . . . . . . . . . .  	L NEAR	02DF	CODE	Global
BACMES . . . . . . . . . . . . .  	V BYTE 	0000	CONST	External
BADVER . . . . . . . . . . . . .  	V BYTE 	0000	CONST	External
BLANK  . . . . . . . . . . . . .  	L NEAR	0380	CODE	Global
BPLEN  . . . . . . . . . . . . .  	Number	0032	
BPMAX  . . . . . . . . . . . . .  	Number	000A	
BPREG  . . . . . . . . . . . . .  	Number	5042	
BUFINSIZ . . . . . . . . . . . .  	Number	0010	
BUFLEN . . . . . . . . . . . . .  	Number	0050	
BUFSIZ . . . . . . . . . . . . .  	Number	0200	
BXREG  . . . . . . . . . . . . .  	Number	5842	
BYTEBUF  . . . . . . . . . . . .  	V BYTE 	0000	DATA	External

CARRET . . . . . . . . . . . . .  	V BYTE 	0000	CONST	External
CASECHK  . . . . . . . . . . . .  	L NEAR	02AC	CODE
CHAR_OPER  . . . . . . . . . . .  	Number	0037	
CHDIR  . . . . . . . . . . . . .  	Number	003B	
CHDIR_PATH_NOT_FOUND . . . . . .  	Alias	 ERROR_PATH_NOT_FOUND		
CHMOD  . . . . . . . . . . . . .  	Number	0043	
CHMOD_ACCESS_DENIED  . . . . . .  	Alias	 ERROR_ACCESS_DENIED		
CHMOD_INVALID_FUNCTION . . . . .  	Alias	 ERROR_INVALID_FUNCTION		
CHMOD_PATH_NOT_FOUND . . . . . .  	Alias	 ERROR_PATH_NOT_FOUND		
CLOSE  . . . . . . . . . . . . .  	Number	003E	
CLOSE_INVALID_FUNCTION . . . . .  	Alias	 ERROR_INVALID_FUNCTION		
CLOSE_INVALID_HANDLE . . . . . .  	Alias	 ERROR_INVALID_HANDLE		
COMMA  . . . . . . . . . . . . .  	Number	2C00	
COMMAND  . . . . . . . . . . . .  	L NEAR	0216	CODE	Global
COMPARE  . . . . . . . . . . . .  	L NEAR	0000	CODE	External
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 09:28:03

DEBUGger for MS-DOS                                         Symbols-6
                                                             

COMTAB . . . . . . . . . . . . .  	L WORD 	038A	CODE
COUNTRY_NOT_FOUND  . . . . . . .  	Alias	 ERROR_FILE_NOT_FOUND		
CREAT  . . . . . . . . . . . . .  	Number	003C	
CREATENEWFILE  . . . . . . . . .  	Number	005B	
CREATETEMPFILE . . . . . . . . .  	Number	005A	
CREATE_PROCESS_DATA_BLOCK  . . .  	Number	0026	
CREAT_ACCESS_DENIED  . . . . . .  	Alias	 ERROR_ACCESS_DENIED		
CREAT_PATH_NOT_FOUND . . . . . .  	Alias	 ERROR_PATH_NOT_FOUND		
CREAT_TOO_MANY_OPEN_FILES  . . .  	Alias	 ERROR_TOO_MANY_OPEN_FILES		
CRLF . . . . . . . . . . . . . .  	L NEAR	02D5	CODE	Global
CSSAVE . . . . . . . . . . . . .  	V WORD 	0000	CONST	External
CURDIR_INVALID_DRIVE . . . . . .  	Alias	 ERROR_INVALID_DRIVE		
CURRENT_DIR  . . . . . . . . . .  	Number	0047	
C_BS . . . . . . . . . . . . . .  	Number	0008	
C_CR . . . . . . . . . . . . . .  	Number	000D	
C_DEL  . . . . . . . . . . . . .  	Number	007F	
C_ETB  . . . . . . . . . . . . .  	Number	0017	
C_ETX  . . . . . . . . . . . . .  	Number	0003	
C_HT . . . . . . . . . . . . . .  	Number	0009	
C_LF . . . . . . . . . . . . . .  	Number	000A	
C_NAK  . . . . . . . . . . . . .  	Number	0015	

DABORT . . . . . . . . . . . . .  	L NEAR	0291	CODE	Global
DATAEND  . . . . . . . . . . . .  	V WORD 	0000	DATA	External
DEALLOC  . . . . . . . . . . . .  	Number	0049	
DEALLOC_ARENA_TRASHED  . . . . .  	Alias	 ERROR_ARENA_TRASHED		
DEALLOC_INVALID_BLOCK  . . . . .  	Alias	 ERROR_INVALID_BLOCK		
DEBUG  . . . . . . . . . . . . .  	L NEAR	0100	CODE
DEBUG_FOUND  . . . . . . . . . .  	L NEAR	0000	CODE	External
DEFDUMP  . . . . . . . . . . . .  	V BYTE 	0000	DATA	External
DEFIO  . . . . . . . . . . . . .  	L NEAR	0000	CODE	External
DEVID_BLOCK_DEV  . . . . . . . .  	Number	001F	
DEVID_DEVICE . . . . . . . . . .  	Number	0080	
DEVID_DEVICE_CLOCK . . . . . . .  	Number	0008	
DEVID_DEVICE_CON_IN  . . . . . .  	Number	0001	
DEVID_DEVICE_CON_OUT . . . . . .  	Number	0002	
DEVID_DEVICE_EOF . . . . . . . .  	Number	0040	
DEVID_DEVICE_NULL  . . . . . . .  	Number	0004	
DEVID_DEVICE_RAW . . . . . . . .  	Number	0020	
DEVID_DEVICE_SPECIAL . . . . . .  	Number	0010	
DEVID_EOF  . . . . . . . . . . .  	Number	0040	
DEVID_FILE_CLEAN . . . . . . . .  	Number	0040	
DEVID_FILE_MASK_DRIVE  . . . . .  	Number	003F	
DEVID_ISCIN  . . . . . . . . . .  	Number	0001	
DEVID_ISCLK  . . . . . . . . . .  	Number	0008	
DEVID_ISCOT  . . . . . . . . . .  	Number	0002	
DEVID_ISDEV  . . . . . . . . . .  	Number	0080	
DEVID_ISNUL  . . . . . . . . . .  	Number	0004	
DEVID_RAW  . . . . . . . . . . .  	Number	0020	
DEVID_SPECIAL  . . . . . . . . .  	Number	0010	
DIGIT  . . . . . . . . . . . . .  	L NEAR	035A	CODE	Global
DIREG  . . . . . . . . . . . . .  	Number	4944	
DIRPRI . . . . . . . . . . . . .  	Number	000F	
DIRSTRLEN  . . . . . . . . . . .  	Number	0040	
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 09:28:03

DEBUGger for MS-DOS                                         Symbols-7
                                                             

DIR_SEARCH_FIRST . . . . . . . .  	Number	0011	
DIR_SEARCH_NEXT  . . . . . . . .  	Number	0012	
DISADD . . . . . . . . . . . . .  	V BYTE 	0000	DATA	External
DISK_RESET . . . . . . . . . . .  	Number	000D	
DISPB  . . . . . . . . . . . . .  	V WORD 	0000	CONST	External
DOSVER_HIGH  . . . . . . . . . .  	Number	0200	
DOS_MAJOR_VERSION  . . . . . . .  	Number	0002	
DOS_MINOR_VERSION  . . . . . . .  	Number	000B	
DPBSIZ . . . . . . . . . . . . .  	Number	005E	
DSIZ . . . . . . . . . . . . . .  	V BYTE 	0000	CONST	External
DSKSIZ . . . . . . . . . . . . .  	Number	000D	
DSSAVE . . . . . . . . . . . . .  	V WORD 	0000	CONST	External
DSTRT  . . . . . . . . . . . . .  	L NEAR	010B	CODE
DUMP . . . . . . . . . . . . . .  	L NEAR	0000	CODE	External
DUP2_INVALID_HANDLE  . . . . . .  	Alias	 ERROR_INVALID_HANDLE		
DUP_INVALID_HANDLE . . . . . . .  	Alias	 ERROR_INVALID_HANDLE		
DUP_PDB  . . . . . . . . . . . .  	Number	0055	
DUP_TOO_MANY_OPEN_FILES  . . . .  	Alias	 ERROR_TOO_MANY_OPEN_FILES		
DWRITE . . . . . . . . . . . . .  	L NEAR	0000	CODE	External

ENDMES . . . . . . . . . . . . .  	V BYTE 	0000	CONST	External
ENTER  . . . . . . . . . . . . .  	L NEAR	0000	CODE	External
ENTRYPOINT . . . . . . . . . . .  	Number	00C0	
EOLCHK . . . . . . . . . . . . .  	L NEAR	0301	CODE
ERR1 . . . . . . . . . . . . . .  	L NEAR	0257	CODE
ERROR_ACCESS_DENIED  . . . . . .  	Number	0005	
ERROR_ARENA_TRASHED  . . . . . .  	Number	0007	
ERROR_BAD_ENVIRONMENT  . . . . .  	Number	000A	
ERROR_BAD_FORMAT . . . . . . . .  	Number	000B	
ERROR_CURRENT_DIRECTORY  . . . .  	Number	0010	
ERROR_FILE_NOT_FOUND . . . . . .  	Number	0002	
ERROR_INVALID_ACCESS . . . . . .  	Number	000C	
ERROR_INVALID_BLOCK  . . . . . .  	Number	0009	
ERROR_INVALID_DATA . . . . . . .  	Number	000D	
ERROR_INVALID_DRIVE  . . . . . .  	Number	000F	
ERROR_INVALID_FUNCTION . . . . .  	Number	0001	
ERROR_INVALID_HANDLE . . . . . .  	Number	0006	
ERROR_NOT_ENOUGH_MEMORY  . . . .  	Number	0008	
ERROR_NOT_SAME_DEVICE  . . . . .  	Number	0011	
ERROR_NO_MORE_FILES  . . . . . .  	Number	0012	
ERROR_PATH_NOT_FOUND . . . . . .  	Number	0003	
ERROR_TOO_MANY_OPEN_FILES  . . .  	Number	0004	
EXEC . . . . . . . . . . . . . .  	Number	004B	
EXEC_BAD_ENVIRONMENT . . . . . .  	Alias	 ERROR_BAD_ENVIRONMENT		
EXEC_BAD_FORMAT  . . . . . . . .  	Alias	 ERROR_BAD_FORMAT		
EXEC_FILE_NOT_FOUND  . . . . . .  	Alias	 ERROR_FILE_NOT_FOUND		
EXEC_FUNC_NO_EXECUTE . . . . . .  	Number	0001	
EXEC_FUNC_OVERLAY  . . . . . . .  	Number	0002	
EXEC_INVALID_FUNCTION  . . . . .  	Alias	 ERROR_INVALID_FUNCTION		
EXEC_NOT_ENOUGH_MEMORY . . . . .  	Alias	 ERROR_NOT_ENOUGH_MEMORY		
EXEFCB . . . . . . . . . . . . .  	Alias	 FCB		
EXE_VALID_OLD_SIGNATURE  . . . .  	Number	4D5A	
EXE_VALID_SIGNATURE  . . . . . .  	Number	5A4D	
EXIT . . . . . . . . . . . . . .  	Number	004C	
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 09:28:03

DEBUGger for MS-DOS                                         Symbols-8
                                                             

EXIT_ABORT . . . . . . . . . . .  	Number	0000	
EXIT_CTRL_C  . . . . . . . . . .  	Number	0001	
EXIT_HARD_ERROR  . . . . . . . .  	Number	0002	
EXIT_KEEP_PROCESS  . . . . . . .  	Number	0003	
EXIT_TERMINATE . . . . . . . . .  	Number	0000	

FALSE  . . . . . . . . . . . . .  	Number	0000	
FATPRI . . . . . . . . . . . . .  	Number	001E	
FCB  . . . . . . . . . . . . . .  	Number	005C	
FCB_CLOSE  . . . . . . . . . . .  	Number	0010	
FCB_CREATE . . . . . . . . . . .  	Number	0016	
FCB_DELETE . . . . . . . . . . .  	Number	0013	
FCB_OPEN . . . . . . . . . . . .  	Number	000F	
FCB_RANDOM_READ  . . . . . . . .  	Number	0021	
FCB_RANDOM_READ_BLOCK  . . . . .  	Number	0027	
FCB_RANDOM_WRITE . . . . . . . .  	Number	0022	
FCB_RANDOM_WRITE_BLOCK . . . . .  	Number	0028	
FCB_RENAME . . . . . . . . . . .  	Number	0017	
FCB_SEQ_READ . . . . . . . . . .  	Number	0014	
FCB_SEQ_WRITE  . . . . . . . . .  	Number	0015	
FILDIRENT  . . . . . . . . . . .  	Number	0010	
FILECHK  . . . . . . . . . . . .  	L NEAR	01E5	CODE
FILETIMES_INVALID_FUNCTION . . .  	Alias	 ERROR_INVALID_FUNCTION		
FILETIMES_INVALID_HANDLE . . . .  	Alias	 ERROR_INVALID_HANDLE		
FILE_TIMES . . . . . . . . . . .  	Number	0057	
FILL . . . . . . . . . . . . . .  	L NEAR	0000	CODE	External
FILOOP . . . . . . . . . . . . .  	L NEAR	01EE	CODE
FILPERPROC . . . . . . . . . . .  	Number	0014	
FINDFIRST_FILE_NOT_FOUND . . . .  	Alias	 ERROR_FILE_NOT_FOUND		
FINDFIRST_NO_MORE_FILES  . . . .  	Alias	 ERROR_NO_MORE_FILES		
FINDNEXT_NO_MORE_FILES . . . . .  	Alias	 ERROR_NO_MORE_FILES		
FIND_DEBUG . . . . . . . . . . .  	L NEAR	03C6	CODE	Global
FIND_FIRST . . . . . . . . . . .  	Number	004E	
FIND_NEXT  . . . . . . . . . . .  	Number	004F	
FREEPRI  . . . . . . . . . . . .  	Number	0000	

GETEOL . . . . . . . . . . . . .  	L NEAR	0000	CODE	External
GETEXTENDEDERROR . . . . . . . .  	Number	0059	
GETHEX . . . . . . . . . . . . .  	L NEAR	0000	CODE	External
GET_CURRENT_PDB  . . . . . . . .  	Number	0051	
GET_DATE . . . . . . . . . . . .  	Number	002A	
GET_DEFAULT_DPB  . . . . . . . .  	Number	001F	
GET_DEFAULT_DRIVE  . . . . . . .  	Number	0019	
GET_DMA  . . . . . . . . . . . .  	Number	002F	
GET_DPB  . . . . . . . . . . . .  	Number	0032	
GET_DRIVE_FREESPACE  . . . . . .  	Number	0036	
GET_FCB_FILE_LENGTH  . . . . . .  	Number	0023	
GET_FCB_POSITION . . . . . . . .  	Number	0024	
GET_INDOS_FLAG . . . . . . . . .  	Number	0034	
GET_INTERRUPT_VECTOR . . . . . .  	Number	0035	
GET_IN_VARS  . . . . . . . . . .  	Number	0052	
GET_TIME . . . . . . . . . . . .  	Number	002C	
GET_VERIFY_ON_WRITE  . . . . . .  	Number	0054	
GET_VERSION  . . . . . . . . . .  	Number	0030	
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 09:28:03

DEBUGger for MS-DOS                                         Symbols-9
                                                             

GO . . . . . . . . . . . . . . .  	L NEAR	0000	CODE	External
GOPROMPT . . . . . . . . . . . .  	L NEAR	0236	CODE
GOTBADDOS  . . . . . . . . . . .  	L NEAR	0116	CODE
GOTLIST  . . . . . . . . . . . .  	L NEAR	0134	CODE

HEADER . . . . . . . . . . . . .  	L BYTE 	0102	CODE
HEADSAVE . . . . . . . . . . . .  	V WORD 	0000	CONST	External
HEX  . . . . . . . . . . . . . .  	L NEAR	034D	CODE	Global
HEXADD . . . . . . . . . . . . .  	L NEAR	0305	CODE

IBMJAPAN . . . . . . . . . . . .  	Alias	 FALSE		
IBMVER . . . . . . . . . . . . .  	Alias	 TRUE		
INBUF  . . . . . . . . . . . . .  	L NEAR	02A3	CODE	Global
INDONE . . . . . . . . . . . . .  	L NEAR	02D2	CODE
INPUT  . . . . . . . . . . . . .  	L NEAR	0000	CODE	External
INTBASE  . . . . . . . . . . . .  	Number	0080	
INTERNATIONAL  . . . . . . . . .  	Number	0038	
INTERNATIONAL_INVALID_FUNCTION .  	Alias	 ERROR_INVALID_FUNCTION		
INTERNAT_BLOCK_MAX . . . . . . .  	Number	0020	
INTTAB . . . . . . . . . . . . .  	Number	0020	
INT_ABORT  . . . . . . . . . . .  	Alias	 INTTAB		
INT_COMMAND  . . . . . . . . . .  	Number	0021	
INT_CTRL_C . . . . . . . . . . .  	Number	0023	
INT_DISK_READ  . . . . . . . . .  	Number	0025	
INT_DISK_WRITE . . . . . . . . .  	Number	0026	
INT_FASTCON  . . . . . . . . . .  	Number	0029	
INT_FATAL_ABORT  . . . . . . . .  	Number	0024	
INT_KEEP_PROCESS . . . . . . . .  	Number	0027	
INT_SPOOLER  . . . . . . . . . .  	Number	0028	
INT_TERMINATE  . . . . . . . . .  	Number	0022	
IOCTL  . . . . . . . . . . . . .  	Number	0044	
IOCTL_INVALID_DATA . . . . . . .  	Alias	 ERROR_INVALID_DATA		
IOCTL_INVALID_FUNCTION . . . . .  	Alias	 ERROR_INVALID_FUNCTION		
IOCTL_INVALID_HANDLE . . . . . .  	Alias	 ERROR_INVALID_HANDLE		
IPSAVE . . . . . . . . . . . . .  	V WORD 	0000	CONST	External

KEEP_PROCESS . . . . . . . . . .  	Number	0031	
KILLSTR  . . . . . . . . . . . .  	L NEAR	02C6	CODE

LBRPRI . . . . . . . . . . . . .  	Number	0002	
LBUFSIZ  . . . . . . . . . . . .  	V BYTE 	0000	CONST	External
LBWPRI . . . . . . . . . . . . .  	Number	0004	
LINEBUF  . . . . . . . . . . . .  	V BYTE 	0000	CONST	External
LOAD . . . . . . . . . . . . . .  	L NEAR	0000	CODE	External
LOCKOPER . . . . . . . . . . . .  	Number	005C	
LSEEK  . . . . . . . . . . . . .  	Number	0042	
LSEEK_INVALID_FUNCTION . . . . .  	Alias	 ERROR_INVALID_FUNCTION		
LSEEK_INVALID_HANDLE . . . . . .  	Alias	 ERROR_INVALID_HANDLE		

MI_INT . . . . . . . . . . . . .  	Number	00CD	
MI_LONG_CALL . . . . . . . . . .  	Number	009A	
MI_LONG_JMP  . . . . . . . . . .  	Number	00EA	
MI_LONG_RET  . . . . . . . . . .  	Number	00CB	
MKDIR  . . . . . . . . . . . . .  	Number	0039	
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 09:28:03

DEBUGger for MS-DOS                                         Symbols-10
                                                             

MKDIR_ACCESS_DENIED  . . . . . .  	Alias	 ERROR_ACCESS_DENIED		
MKDIR_PATH_NOT_FOUND . . . . . .  	Alias	 ERROR_PATH_NOT_FOUND		
MOVE . . . . . . . . . . . . . .  	L NEAR	0000	CODE	External
MSVER  . . . . . . . . . . . . .  	Alias	 FALSE		

NAME . . . . . . . . . . . . . .  	L NEAR	0000	CODE	External
NEWEXEC  . . . . . . . . . . . .  	V BYTE 	0000	CONST	External
NOCONV . . . . . . . . . . . . .  	L NEAR	02B7	CODE
NOLIST . . . . . . . . . . . . .  	L NEAR	0134	CODE
NOREGL . . . . . . . . . . . . .  	V BYTE 	0000	CONST	External
NORMTERM . . . . . . . . . . . .  	L NEAR	0287	CODE
NO_ERROR_OCCURRED  . . . . . . .  	Text  0                                                              ?		

OEM_C1 . . . . . . . . . . . . .  	Number	00F9	
OEM_C2 . . . . . . . . . . . . .  	Number	00FA	
OEM_C3 . . . . . . . . . . . . .  	Number	00FB	
OEM_C4 . . . . . . . . . . . . .  	Number	00FC	
OEM_C5 . . . . . . . . . . . . .  	Number	00FD	
OEM_C6 . . . . . . . . . . . . .  	Number	00FE	
OEM_C7 . . . . . . . . . . . . .  	Number	00FF	
OKDOS  . . . . . . . . . . . . .  	L NEAR	011F	CODE
OPBUFLEN . . . . . . . . . . . .  	Number	0023	
OPEN . . . . . . . . . . . . . .  	Number	003D	
OPEN_ACCESS_DENIED . . . . . . .  	Alias	 ERROR_ACCESS_DENIED		
OPEN_FILE_NOT_FOUND  . . . . . .  	Alias	 ERROR_FILE_NOT_FOUND		
OPEN_FOR_BOTH  . . . . . . . . .  	Number	0002	
OPEN_FOR_READ  . . . . . . . . .  	Number	0000	
OPEN_FOR_WRITE . . . . . . . . .  	Number	0001	
OPEN_INVALID_ACCESS  . . . . . .  	Alias	 ERROR_INVALID_ACCESS		
OPEN_TOO_MANY_OPEN_FILES . . . .  	Alias	 ERROR_TOO_MANY_OPEN_FILES		
OUT  . . . . . . . . . . . . . .  	L NEAR	0362	CODE	Global
OUT16  . . . . . . . . . . . . .  	L NEAR	0346	CODE	Global
OUTDI  . . . . . . . . . . . . .  	L NEAR	033A	CODE	Global
OUTPUT . . . . . . . . . . . . .  	L NEAR	0000	CODE	External
OUTSI  . . . . . . . . . . . . .  	L NEAR	032C	CODE	Global

PARITYFLAG . . . . . . . . . . .  	V BYTE 	0000	DATA	External
PARITYMES  . . . . . . . . . . .  	V BYTE 	0000	CONST	External
PARSCHK  . . . . . . . . . . . .  	L NEAR	01D2	CODE
PARSERR  . . . . . . . . . . . .  	V BYTE 	0000	DATA	External
PARSE_FILE_DESCRIPTOR  . . . . .  	Number	0029	
PERR . . . . . . . . . . . . . .  	L NEAR	0000	CODE	External
PREPNAME . . . . . . . . . . . .  	L NEAR	0000	CODE	External
PRINTMES . . . . . . . . . . . .  	L NEAR	02E2	CODE	Global
PROMPT . . . . . . . . . . . . .  	Number	002D	

QFLAG  . . . . . . . . . . . . .  	V BYTE 	0000	CONST	External
QUIT . . . . . . . . . . . . . .  	L NEAR	03BE	CODE
QUITING  . . . . . . . . . . . .  	L NEAR	028C	CODE
QUOTSCAN . . . . . . . . . . . .  	L NEAR	02C4	CODE

RAW_CON_INPUT  . . . . . . . . .  	Number	0007	
RAW_CON_IO . . . . . . . . . . .  	Number	0006	
RBUFIN . . . . . . . . . . . . .  	L NEAR	036F	CODE	Global
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 09:28:03

DEBUGger for MS-DOS                                         Symbols-11
                                                             

READ . . . . . . . . . . . . . .  	Number	003F	
READ_ACCESS_DENIED . . . . . . .  	Alias	 ERROR_ACCESS_DENIED		
READ_INVALID_HANDLE  . . . . . .  	Alias	 ERROR_INVALID_HANDLE		
REG  . . . . . . . . . . . . . .  	L NEAR	0000	CODE	External
REGTABLEN  . . . . . . . . . . .  	Number	000E	
RELEASEPARITY  . . . . . . . . .  	L NEAR	0000	CODE	External
RENAME . . . . . . . . . . . . .  	Number	0056	
RENAME_ACCESS_DENIED . . . . . .  	Alias	 ERROR_ACCESS_DENIED		
RENAME_FILE_NOT_FOUND  . . . . .  	Alias	 ERROR_FILE_NOT_FOUND		
RENAME_NOT_SAME_DEVICE . . . . .  	Alias	 ERROR_NOT_SAME_DEVICE		
RESTART  . . . . . . . . . . . .  	L NEAR	0294	CODE	Global
RMDIR  . . . . . . . . . . . . .  	Number	003A	
RMDIR_ACCESS_DENIED  . . . . . .  	Alias	 ERROR_ACCESS_DENIED		
RMDIR_CURRENT_DIRECTORY  . . . .  	Alias	 ERROR_CURRENT_DIRECTORY		
RMDIR_PATH_NOT_FOUND . . . . . .  	Alias	 ERROR_PATH_NOT_FOUND		
RPRBUF . . . . . . . . . . . . .  	L NEAR	037B	CODE	Global
RPRI . . . . . . . . . . . . . .  	Number	0006	

SAVSTK . . . . . . . . . . . . .  	L NEAR	019B	CODE
SCANB  . . . . . . . . . . . . .  	L NEAR	02F5	CODE	Global
SCANNEXT . . . . . . . . . . . .  	L NEAR	02F6	CODE
SCANP  . . . . . . . . . . . . .  	L NEAR	02EC	CODE	Global
SEARCH . . . . . . . . . . . . .  	L NEAR	0000	CODE	External
SEGDIF . . . . . . . . . . . . .  	Number	0000	
SERVERCALL . . . . . . . . . . .  	Number	005D	
SETBLOCK . . . . . . . . . . . .  	Number	004A	
SETBLOCK_ARENA_TRASHED . . . . .  	Alias	 ERROR_ARENA_TRASHED		
SETBLOCK_INVALID_BLOCK . . . . .  	Alias	 ERROR_INVALID_BLOCK		
SETBLOCK_INVALID_FUNCTION  . . .  	Alias	 ERROR_INVALID_FUNCTION		
SETBLOCK_NOT_ENOUGH_MEMORY . . .  	Alias	 ERROR_NOT_ENOUGH_MEMORY		
SETCNTC  . . . . . . . . . . . .  	Alias	 TRUE		
SETDPB . . . . . . . . . . . . .  	Number	0053	
SET_CTRL_C_TRAPPING  . . . . . .  	Number	0033	
SET_CURRENT_PDB  . . . . . . . .  	Number	0050	
SET_DATE . . . . . . . . . . . .  	Number	002B	
SET_DEFAULT_DRIVE  . . . . . . .  	Number	000E	
SET_DMA  . . . . . . . . . . . .  	Number	001A	
SET_INTERRUPT_VECTOR . . . . . .  	Number	0025	
SET_OEM_HANDLER  . . . . . . . .  	Number	00F8	
SET_TERMINATE_VECTOR . . . . . .  	L NEAR	025A	CODE	Global
SET_TIME . . . . . . . . . . . .  	Number	002D	
SET_VERIFY_ON_WRITE  . . . . . .  	Number	002E	
SF_DEFAULT_NUMBER  . . . . . . .  	Number	0005	
SIREG  . . . . . . . . . . . . .  	Number	4953	
SKIP_FILE  . . . . . . . . . . .  	L NEAR	0000	CODE	External
SPSAVE . . . . . . . . . . . . .  	V WORD 	0000	CONST	External
STACK  . . . . . . . . . . . . .  	V BYTE 	0000	CONST	External
START  . . . . . . . . . . . . .  	L NEAR	0100	CODE
STDAUX . . . . . . . . . . . . .  	Number	0003	
STDERR . . . . . . . . . . . . .  	Number	0002	
STDIN  . . . . . . . . . . . . .  	Number	0000	
STDOUT . . . . . . . . . . . . .  	Number	0001	
STDPRN . . . . . . . . . . . . .  	Number	0004	
STD_AUX_INPUT  . . . . . . . . .  	Number	0003	
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 09:28:03

DEBUGger for MS-DOS                                         Symbols-12
                                                             

STD_AUX_OUTPUT . . . . . . . . .  	Number	0004	
STD_CON_INPUT  . . . . . . . . .  	Number	0001	
STD_CON_INPUT_FLUSH  . . . . . .  	Number	000C	
STD_CON_INPUT_NO_ECHO  . . . . .  	Number	0008	
STD_CON_INPUT_STATUS . . . . . .  	Number	000B	
STD_CON_OUTPUT . . . . . . . . .  	Number	0002	
STD_CON_STRING_INPUT . . . . . .  	Number	000A	
STD_CON_STRING_OUTPUT  . . . . .  	Number	0009	
STD_PRINTER_OUTPUT . . . . . . .  	Number	0005	
SYSVER . . . . . . . . . . . . .  	Alias	 FALSE		

TAB  . . . . . . . . . . . . . .  	L NEAR	0384	CODE	Global
TERMINATE  . . . . . . . . . . .  	L NEAR	0263	CODE	Global
TRACE  . . . . . . . . . . . . .  	L NEAR	0000	CODE	External
TRAPPARITY . . . . . . . . . . .  	L NEAR	0000	CODE	External
TRUE . . . . . . . . . . . . . .  	Number	FFFF	

UNASSEM  . . . . . . . . . . . .  	L NEAR	0000	CODE	External
UNLINK . . . . . . . . . . . . .  	Number	0041	
UNLINK_ACCESS_DENIED . . . . . .  	Alias	 ERROR_ACCESS_DENIED		
UNLINK_FILE_NOT_FOUND  . . . . .  	Alias	 ERROR_FILE_NOT_FOUND		
USERIDOPER . . . . . . . . . . .  	Number	005E	
USER_PROC_PDB  . . . . . . . . .  	V WORD 	0000	CONST	External

WAIT . . . . . . . . . . . . . .  	Number	004D	
WPRI . . . . . . . . . . . . . .  	Number	0008	
WRITE  . . . . . . . . . . . . .  	Number	0040	
WRITE_ACCESS_DENIED  . . . . . .  	Alias	 ERROR_ACCESS_DENIED		
WRITE_INVALID_HANDLE . . . . . .  	Alias	 ERROR_INVALID_HANDLE		

XDUP . . . . . . . . . . . . . .  	Number	0045	
XDUP2  . . . . . . . . . . . . .  	Number	0046	

ZIBO . . . . . . . . . . . . . .  	Alias	 TRUE		
ZTRACE . . . . . . . . . . . . .  	L NEAR	0000	CODE	External


   2105 Source  Lines
   2168 Total   Lines
    608 Symbols

  19378 Bytes symbol space free

      1 Warning Errors
      0 Severe  Errors
