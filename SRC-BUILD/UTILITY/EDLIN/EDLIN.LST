Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 16:04:08

EDLIN for MSDOS 2.0                                         Page     1-1
                                                            

       1                                        title   EDLIN for MSDOS 2.0 
       2                                 
       3                                ;--------------------------------------
					---------------------------------; 
       4                                ;               REVISION HISTORY:      
					                                 ; 
       5                                ;                                      
					                                 ; 
       6                                ;       V1.02                          
					                                 ; 
       7                                ;                                      
					                                 ; 
       8                                ;       V2.00   9/13/82  M.A. Ulloa    
					                                 ; 
       9                                ;                  Modified to use Path
					names in command line file       ; 
      10                                ;               specification, modified
					 REPLACE to use an empty         ; 
      11                                ;               string intead of the ol
					d replace string when this       ; 
      12                                ;               is missing, and search 
					and replace now start from       ; 
      13                                ;               first line of buffer (l
					ike old version of EDLIN)        ; 
      14                                ;               instead than current+1 
					line. Also added the U and       ; 
      15                                ;               V commands that search 
					(replace) starting from the      ; 
      16                                ;               current+1 line.        
					                                 ; 
      17                                ;                                      
					                                 ; 
      18                                ;               9/15/82  M.A. Ulloa    
					                                 ; 
      19                                ;                  Added the quote char
					acter (^V).                      ; 
      20                                ;                                      
					                                 ; 
      21                                ;               9/16/82  M.A. Ulloa    
					                                 ; 
      22                                ;                  Corrected bug about 
					use of quote char when going     ; 
      23                                ;               into default insert mod
					e. Also corrected the problem    ; 
      24                                ;               with ^Z being the end o
					f file marker. End of file is    ; 
      25                                ;               reached when an attempt
					 to read returns less chars      ; 
      26                                ;               than requested.        
					                                 ; 
      27                                ;                                      
					                                 ; 
      28                                ;               9/17/82  M.A. Ulloa    
					                                 ; 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 16:04:08

EDLIN for MSDOS 2.0                                         Page     1-2
                                                            

      29                                ;                  Corrected bug about 
					boundaries for Copy              ; 
      30                                ;                                      
					                                 ; 
      31                                ;               10/4/82  Rev. 1        
					 M.A. Ulloa                      ; 
      32                                ;                  The IBM version now 
					does NOT have the U and V        ; 
      33                                ;               commands. The MSDOS ver
					sion HAS the U and V commands.   ; 
      34                                ;                  Added the B switch, 
					and modified the effect of       ; 
      35                                ;               the quote char.        
					                                 ; 
      36                                ;                                      
					                                 ; 
      37                                ;               10/7/82  Rev. 2        
					 M.A. Ulloa                      ; 
      38                                ;                  Changed the S and R 
					commands to start from the       ; 
      39                                ;               current line+1 (as U an
					d V did). Took away U and V in   ; 
      40                                ;               all versions.          
					                                 ; 
      41                                ;                                      
					                                 ; 
      42                                ;               10/13/82 Rev. 3        
					 M.A. Ulloa                      ; 
      43                                ;                  Now if parameter1 < 
					1 then parameter1 = 1            ; 
      44                                ;                                      
					                                 ; 
      45                                ;               10/15/82 Rev. 4        
					 M.A. Ulloa                      ; 
      46                                ;                  Param4 if specified 
					must be an absolute number that  ; 
      47                                ;               reprecents the count.  
					                                 ; 
      48                                ;                                      
					                                 ; 
      49                                ;               10/18/82 Rev. 5        
					 M.A. Ulloa                      ; 
      50                                ;                  Fixed problem with t
					rying to edit files with the     ; 
      51                                ;               same name as directorie
					s. Also, if the end of file is   ; 
      52                                ;               reached it checks that 
					a LF is the last character,      ; 
      53                                ;               otherwise it inserts a 
					CRLF pair at the end.            ; 
      54                                ;                                      
					                                 ; 
      55                                ;               10/20/82 Rev. 6        
					 M.A.Ulloa                       ; 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 16:04:08

EDLIN for MSDOS 2.0                                         Page     1-3
                                                            

      56                                ;                  Changed the text of 
					some error messages for IBM and  ; 
      57                                ;               rewrite PAGE.          
					                                 ; 
      58                                ;                                      
					                                 ; 
      59                                ;               10/25/82 Rev. 7        
					 M.A.Ulloa                       ; 
      60                                ;                  Made all messages as
					 in the IBM vers.                ; 
      61                                ;                                      
					                                 ; 
      62                                ;               10/28/82 Rev. 8        
					 M.A.Ulloa                       ; 
      63                                ;                  Corrected problem wi
					th parsing for options.          ; 
      64                                ;                                      
					                                 ; 
      65                                ;                        Rev. 9        
					 Aaron Reynolds                  ; 
      66                                ;                  Made error messages 
					external.                        ; 
      67                                ;                                      
					                                 ; 
      68                                ;               12/08/82 Rev. 10       
					 M.A. Ulloa                      ; 
      69                                ;                  Corrected problem ar
					ising with having to restore     ; 
      70                                ;               the old directory in ca
					se of a file name error.         ; 
      71                                ;                                      
					                                 ; 
      72                                ;               12/17/82 Rev. 11       
					 M.A. Ulloa                      ; 
      73                                ;                  Added the ROPROT equ
					ate for R/O file protection.     ; 
      74                                ;               It causes only certain 
					operations (L,P,S,W,A, and Q)    ; 
      75                                ;               to be allowed on read o
					nly files.                       ; 
      76                                ;                                      
					                                 ; 
      77                                ;               12/29/82 Rev. 12       
					 M.A. Ulloa                      : 
      78                                ;                  Added the creation e
					rror message.                    ; 
      79                                ;                                      
					                                 ; 
      80                                ;               4/14/83  Rev. 13       
					 N.Panners                       ; 
      81                                ;                  Fixed bug in Merge w
					hich lost char if not ^Z.        ; 
      82                                ;                  Fixed bug in Copy to
					 correctly check                 ; 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 16:04:08

EDLIN for MSDOS 2.0                                         Page     1-4
                                                            

      83                                ;                  for full buffers.   
					                                 ; 
      84                                ;                                      
					                                 ; 
      85                                ;                                      
					                                 ; 
      86                                ;               7/23/83 Rev. 14        
					 N.Panners                       ; 
      87                                ;                   Split EDLIN into tw
					o seperate modules to            ; 
      88                                ;                   allow assembly of s
					ources on an IBM PC              ; 
      89                                ;                   EDLIN and EDLPROC  
					                                 ; 
      90                                ;                                      
					                                 ; 
      91                                ;--------------------------------------
					---------------------------------; 
      92                                 
      93                                 
      94 = 0000                         FALSE   EQU     0 
      95 = FFFF                         TRUE    EQU     NOT FALSE 
      96                                 
      97 =                              KANJI   EQU     FALSE 
      98                                 
      99 =                              roprot  equ     true            ;set to
					 TRUE if protection to r/o files 
     100                                                                ; desir
					ed. 
     101 = 005C                         FCB     EQU     5CH 
     102                                 
     103 = 0080                         Comand_Line_Length equ 128 
     104 = 0016                         quote_char equ  16h             ;quote 
					character = ^V 
     105                                 
     106                                 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 16:04:08

EDLIN for MSDOS 2.0                                         Page     1-5
                                                            

     107                                PAGE 
     108                                 
     109                                        .list 
     110                                 
     111                                 
     112                                SUBTTL  Contants and Data areas 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 16:04:08

EDLIN for MSDOS 2.0                                         Page     1-6
Contants and Data areas                                     

     113                                PAGE 
     114                                 
     115 = 002A                         PROMPT  EQU     "*" 
     116 = 0080                         STKSIZ  EQU     80H 
     117                                 
     118 0000                           CODE    SEGMENT PUBLIC 
     119 0000                           CODE    ENDS 
     120                                 
     121 0000                           CONST   SEGMENT PUBLIC WORD 
     122 0000                           CONST   ENDS 
     123                                 
     124 0000                           DATA    SEGMENT PUBLIC WORD 
     125 0000                           DATA    ENDS 
     126                                 
     127                                DG      GROUP   CODE,CONST,DATA 
     128                                 
     129 0000                           CONST   SEGMENT PUBLIC WORD 
     130                                 
     131                                        EXTRN   BADDRV:BYTE,NDNAME:BYTE
					,bad_vers_err:BYTE,opt_err:BYTE 
     132                                        EXTRN   NOBAK:BYTE,BADCOM:BYTE,
					NEWFIL:BYTE,DEST:BYTE,MRGERR:BYTE 
     133                                        EXTRN   NODIR:BYTE,DSKFUL:BYTE,
					MEMFUL:BYTE,FILENM:BYTE 
     134                                        EXTRN   NOSUCH:BYTE,TOOLNG:BYTE
					,EOF:BYTE,ro_err:byte,bcreat:byte 
     135                                 
     136                                        PUBLIC  TXT1,TXT2,FUDGE,USERDIR
					,HARDCH 
     137                                 
     138 0000  42 41 4B                 BAK     DB      "BAK" 
     139                                 
     140 0003  2A 2A 2A 4D 41 55 6C     make    db      "***MAUlloa/Microsoft/V
					20***" 
     141       6C 6F 61 2F 4D 69 63     
     142       72 6F 73 6F 66 74 2F     
     143       56 32 30 2A 2A 2A        
     144 001E  31 34                    rev     db      "14" 
     145                                 
     146                                        if      roprot                 
					 ;***** R/O ***** 
     147 0020  00                       roflag  db      0                      
					 ; =1 if file is r/o 
     148                                        endif 
     149                                 
     150 0021  00                       fourth  db      0                      
					 ;fourth parameter flag 
     151                                 
     152 0022  00                       loadmod db      0                      
					 ;Load mode flag, 0 = ^Z marks the 
     153                                                                       
					 ; end of a file, 1 = viceversa. 
     154 0023  ????????                 hardch  dd      ? 
     155                                 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 16:04:08

EDLIN for MSDOS 2.0                                         Page     1-7
Contants and Data areas                                     

     156 0027  00                       the_root db     0                      
					 ;root directory flag 
     157                                 
     158 0028  00                       fudge   db      0                      
					 ;directory changed flag 
     159 0029  00                       user_drive db   0 
     160                                 
     161                                 
     162 002A  2D                       optchar db      "-" 
     163                                 
     164 002B  2F 00                    dirchar db      "/",0 
     165                                 
     166 002D  2F 00                    userdir db      "/",0 
     167 002F  0040[                            db      (dirstrlen) dup(0) 
     168            00                  
     169                         ]      
     170                                
     171                                 
     172 006F  0080[                    fname_buffer db Comand_Line_Length dup(
					0) 
     173            00                  
     174                         ]      
     175                                
     176                                ;--------------------------------------
					---------------------------------; 
     177                                 
     178 00EF  00                       TXT1    DB      0,80H DUP (?) 
     179       0080[                    TXT1    DB      0,80H DUP (?) 
     180            ??                  
     181                         ]      
     182                                
     183 0170  00                       TXT2    DB      0,80H DUP (?) 
     184       0080[                    TXT2    DB      0,80H DUP (?) 
     185            ??                  
     186                         ]      
     187                                
     188 01F1  00                       DELFLG  DB      0 
     189                                 
     190 01F2                           CONST   ENDS 
     191                                 
     192 0000                           DATA    SEGMENT PUBLIC WORD 
     193                                 
     194                                        PUBLIC  QFLG,FCB2,OLDLEN,PARAM1
					,PARAM2,OLDDAT,SRCHFLG 
     195                                        PUBLIC  COMLINE,NEWLEN,SRCHMOD,
					CURRENT,LSTFND,NUMPOS 
     196                                        PUBLIC  LSTNUM,SRCHCNT,POINTER,
					START,ENDTXT,USER_DRIVE 
     197                                 
     198                                ;--------------------------------------
					---------------------------------; 
     199                                ;    Be carefull when adding parameters
					, they have to follow the 
     200                                ; order in which they apperar here. (th
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 16:04:08

EDLIN for MSDOS 2.0                                         Page     1-8
Contants and Data areas                                     

					is is a table, ergo it 
     201                                ; is indexed thru a pointer, and random
					 additions will cause the 
     202                                ; wrong item to be accessed). Also para
					m4 is known to be the 
     203                                ; count parameter, and known to be the 
					fourth entry in the table 
     204                                ; so it receives special treatment. (Se
					e GETNUM) 
     205                                 
     206 0000  0001[                    PARAM1  DW      1 DUP (?) 
     207            ????                
     208                         ]      
     209                                
     210 0002  0001[                    PARAM2  DW      1 DUP (?) 
     211            ????                
     212                         ]      
     213                                
     214 0004  0001[                    PARAM3  DW      1 DUP (?) 
     215            ????                
     216                         ]      
     217                                
     218 0006  0001[                    PARAM4  DW      1 DUP (?) 
     219            ????                
     220                         ]      
     221                                
     222                                 
     223                                ;--------------------------------------
					---------------------------------; 
     224                                 
     225 0008  0001[                    PTR_1   DW      1 DUP (?) 
     226            ????                
     227                         ]      
     228                                
     229 000A  0001[                    PTR_2   DW      1 DUP (?) 
     230            ????                
     231                         ]      
     232                                
     233 000C  0001[                    PTR_3   DW      1 DUP (?) 
     234            ????                
     235                         ]      
     236                                
     237 000E  0001[                    COPYSIZ DW      1 DUP (?) 
     238            ????                
     239                         ]      
     240                                
     241 0010  0001[                    OLDLEN  DW      1 DUP (?) 
     242            ????                
     243                         ]      
     244                                
     245 0012  0001[                    NEWLEN  DW      1 DUP (?) 
     246            ????                
     247                         ]      
     248                                
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 16:04:08

EDLIN for MSDOS 2.0                                         Page     1-9
Contants and Data areas                                     

     249 0014  0001[                    LSTFND  DW      1 DUP (?) 
     250            ????                
     251                         ]      
     252                                
     253 0016  0001[                    LSTNUM  DW      1 DUP (?) 
     254            ????                
     255                         ]      
     256                                
     257 0018  0001[                    NUMPOS  DW      1 DUP (?) 
     258            ????                
     259                         ]      
     260                                
     261 001A  0001[                    SRCHCNT DW      1 DUP (?) 
     262            ????                
     263                         ]      
     264                                
     265 001C  0001[                    CURRENT DW      1 DUP (?) 
     266            ????                
     267                         ]      
     268                                
     269 001E  0001[                    POINTER DW      1 DUP (?) 
     270            ????                
     271                         ]      
     272                                
     273 0020  0001[                    ONE4TH  DW      1 DUP (?) 
     274            ????                
     275                         ]      
     276                                
     277 0022  0001[                    THREE4TH DW     1 DUP (?) 
     278            ????                
     279                         ]      
     280                                
     281 0024  0001[                    LAST    DW      1 DUP (?) 
     282            ????                
     283                         ]      
     284                                
     285 0026  0001[                    ENDTXT  DW      1 DUP (?) 
     286            ????                
     287                         ]      
     288                                
     289 0028  0001[                    COMLINE DW      1 DUP (?) 
     290            ????                
     291                         ]      
     292                                
     293 002A  0001[                    LASTLIN DW      1 DUP (?) 
     294            ????                
     295                         ]      
     296                                
     297 002C  0082[                    COMBUF  DB      82H DUP (?) 
     298            ??                  
     299                         ]      
     300                                
     301 00AE  0102[                    EDITBUF DB      258 DUP (?) 
     302            ??                  
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 16:04:08

EDLIN for MSDOS 2.0                                         Page     1-10
Contants and Data areas                                     

     303                         ]      
     304                                
     305 01B0  0001[                    EOL     DB      1 DUP (?) 
     306            ??                  
     307                         ]      
     308                                
     309 01B1  0025[                    FCB2    DB      37 DUP (?) 
     310            ??                  
     311                         ]      
     312                                
     313 01D6  0025[                    FCB3    DB      37 DUP (?) 
     314            ??                  
     315                         ]      
     316                                
     317 01FB  0025[                    fake_fcb db     37 dup (?)             
					 ;fake for size figuring 
     318            ??                  
     319                         ]      
     320                                
     321 0220  0001[                    QFLG    DB      1 DUP (?) 
     322            ??                  
     323                         ]      
     324                                
     325 0221  0001[                    HAVEOF  DB      1 DUP (?) 
     326            ??                  
     327                         ]      
     328                                
     329 0222  0001[                    ENDING  DB      1 DUP (?) 
     330            ??                  
     331                         ]      
     332                                
     333 0223  0001[                    SRCHFLG DB      1 DUP (?) 
     334            ??                  
     335                         ]      
     336                                
     337 0224  0001[                    amnt_req dw     1 dup (?)              
					 ;ammount of bytes requested to read 
     338            ????                
     339                         ]      
     340                                
     341 0226  0001[                    olddat  db      1 dup (?)              
					 ;Used in replace and search, 
     342            ??                  
     343                         ]      
     344                                
     345                                                                       
					 ; replace by old data flag (1=yes) 
     346 0227  0001[                    srchmod db      1 dup (?)              
					 ;Search mode: 1=from current+1 to 
     347            ??                  
     348                         ]      
     349                                
     350                                                                       
					 ; end of buffer, 0=from beg. of 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 16:04:08

EDLIN for MSDOS 2.0                                         Page     1-11
Contants and Data areas                                     

     351                                                                       
					 ; buffer to the end (old way). 
     352 0228  0001[                    MOVFLG  DB      1 DUP (?) 
     353            ??                  
     354                         ]      
     355                                
     356 0229  0080[                            DB      STKSIZ DUP (?) 
     357            ??                  
     358                         ]      
     359                                
     360                                 
     361 02A9                           STACK   LABEL   BYTE 
     362 02A9                           START   LABEL   WORD 
     363                                 
     364 02A9                           DATA    ENDS 
     365                                 
     366                                SUBTTL  Main Body 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 16:04:08

EDLIN for MSDOS 2.0                                         Page     1-12
Main Body                                                   

     367                                PAGE 
     368                                 
     369 0000                           CODE SEGMENT PUBLIC 
     370                                 
     371                                ASSUME  CS:DG,DS:DG,SS:DG,ES:DG 
     372                                 
     373                                        EXTRN   QUIT:NEAR,QUERY:NEAR,FN
					DFIRST:NEAR,FNDNEXT:NEAR 
     374                                        EXTRN   UNQUOTE:NEAR,LF:NEAR,CR
					LF:NEAR,OUT:NEAR 
     375                                        EXTRN   REST_DIR:NEAR,KILL_BL:N
					EAR,INT_24:NEAR 
     376                                        EXTRN   FINDLIN:NEAR,SHOWNUM:NE
					AR,SCANLN:NEAR 
     377                                 
     378                                        endif 
     379                                 
     380                                        PUBLIC  CHKRANGE 
     381                                 
     382 0100                                   ORG     100H 
     383                                 
     384 0100                           EDLIN: 
     385 0100  E9 0F12 R                        JMP     SIMPED 
     386                                 
     387 0103  0E00[                    edl_pad db      0e00h dup (?) 
     388            ??                  
     389                         ]      
     390                                
     391                                 
     392 0F03  56 65 72 73 20 32 2E     HEADER  DB      "Vers 2.14" 
     393       31 34                    
     394                                 
     395 0F0C                           NONAME: 
     396 0F0C  BA 0000 E                        MOV     DX,OFFSET DG:NDNAME 
     397 0F0F  E9 149A R                ERRJ:   JMP     xERROR 
     398                                 
     399 0F12                           SIMPED: 
     400 0F12  C6 06 0222 R 00                  MOV     BYTE PTR [ENDING],0 
     401 0F17  BC 02A9 R                        MOV     SP,OFFSET DG:STACK 
     402                                 
     403                                ;Code to print header 
     404                                ;       PUSH    AX 
     405                                ;       MOV     DX,OFFSET DG:HEADER 
     406                                ;       MOV     AH,STD_CON_STRING_OUTPU
					T 
     407                                ;       INT     21H 
     408                                ;       POP     AX 
     409                                 
     410                                ;----- Check Version Number -----------
					---------------------------------; 
     411 0F1A  50                               push    ax 
     412 0F1B  B4 30                            mov     ah,Get_Version 
     413 0F1D  CD 21                            int     21h 
     414 0F1F  3C 02                            cmp     al,2 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 16:04:08

EDLIN for MSDOS 2.0                                         Page     1-13
Main Body                                                   

     415 0F21  73 05                            jae     vers_ok                
					         ; version >= 2, enter editor 
     416 0F23  BA 0000 E                        mov     dx,offset dg:bad_vers_e
					rr 
     417 0F26  EB E7                            jmp     short errj 
     418                                ;--------------------------------------
					---------------------------------; 
     419                                 
     420 0F28                           vers_ok: 
     421                                 
     422                                ;----- Process Pathnames --------------
					---------------------------------; 
     423                                 
     424 0F28  B8 3700                          mov     ax,(char_oper shl 8)   
					 ;get switch character 
     425 0F2B  CD 21                            int     21h 
     426 0F2D  80 FA 2F                         cmp     dl,"/" 
     427 0F30  75 0F                            jnz     slashok                
					 ;if not / , then not PC 
     428 0F32  C6 06 002B R 5C                  mov     [dirchar],"\"          
					 ;in PC, dir separator = \ 
     429 0F37  C6 06 002D R 5C                  mov     [userdir],"\" 
     430 0F3C  C6 06 002A R 2F                  mov     [optchar],"/"          
					 ;in PC, option char = / 
     431                                 
     432 0F41                           slashok: 
     433 0F41  BE 0081                          mov     si,81h                 
					 ;point to cammand line 
     434                                 
     435 0F44  E8 0000 E                        call    kill_bl 
     436 0F47  3C 0D                            cmp     al,13                  
					 ;A carriage return? 
     437 0F49  74 C1                            je      noname                 
					 ;yes, file name missing 
     438                                 
     439 0F4B  BF 006F R                        mov     di,offset dg:fname_buff
					er 
     440 0F4E  33 C9                            xor     cx,cx                  
					 ;zero pathname length 
     441                                 
     442 0F50                           next_char: 
     443 0F50  AA                               stosb                          
					 ;put patname in buffer 
     444 0F51  41                               inc     cx 
     445 0F52  AC                               lodsb 
     446 0F53  3C 20                            cmp     al,' ' 
     447 0F55  74 0C                            je      xx1 
     448 0F57  3C 0D                            cmp     al,13                  
					 ; a CR ? 
     449 0F59  74 26                            je      name_copied 
     450 0F5B  3A 06 002A R                     cmp     al,[optchar]           
					 ; an option character? 
     451 0F5F  74 0C                            je      an_option 
     452 0F61  EB ED                            jmp     short next_char 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 16:04:08

EDLIN for MSDOS 2.0                                         Page     1-14
Main Body                                                   

     453                                 
     454 0F63                           xx1: 
     455 0F63  4E                               dec     si 
     456 0F64  E8 0000 E                        call    kill_bl 
     457 0F67  3A 06 002A R                     cmp     al,[optchar] 
     458 0F6B  75 14                            jne     name_copied 
     459                                 
     460 0F6D                           an_option: 
     461 0F6D  AC                               lodsb                          
					 ;get the option 
     462 0F6E  3C 42                            cmp     al,'B' 
     463 0F70  74 0A                            je      b_opt 
     464 0F72  3C 62                            cmp     al,'b' 
     465 0F74  74 06                            je      b_opt 
     466 0F76  BA 0000 E                        mov     dx,offset dg:opt_err   
					 ;bad option specified 
     467 0F79  E9 149A R                        jmp     xerror 
     468                                 
     469 0F7C                           b_opt: 
     470 0F7C  C6 06 0022 R 01                  mov     [loadmod],1 
     471                                 
     472 0F81                           name_copied: 
     473 0F81  C6 05 00                         mov     byte ptr dg:[di],0     
					 ;nul terminate the pathname 
     474                                 
     475                                        if      roprot                 
					 ;***** R/O ***** 
     476                                ;----- Check that file is not R/O -----
					---------------------------------; 
     477 0F84  51                               push    cx                     
					 ;save character count 
     478 0F85  BA 006F R                        mov     dx,offset dg:fname_buff
					er 
     479 0F88  B0 00                            mov     al,0                   
					 ;get attributes 
     480 0F8A  B4 43                            mov     ah,chmod 
     481 0F8C  CD 21                            int     21h 
     482 0F8E  72 0A                            jc      attr_are_ok 
     483 0F90  80 E1 01                         and     cl,00000001b           
					 ;mask all but: r/o 
     484 0F93  74 05                            jz      attr_are_ok            
					 ;if all = 0 then file ok to edit, 
     485 0F95  C6 06 0020 R 01                  mov     dg:[roflag],01h        
					 ;otherwise: Error (GONG!!!) 
     486 0F9A                           attr_are_ok: 
     487 0F9A  59                               pop     cx                     
					 ;restore character count 
     488                                        endif 
     489                                 
     490                                ;----- Scan for directory -------------
					---------------------------------; 
     491 0F9B  4F                               dec     di                     
					 ;adjust to the end of the pathname 
     492                                 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 16:04:08

EDLIN for MSDOS 2.0                                         Page     1-15
Main Body                                                   

     493                                        ELSE 
     494 0F9C  A0 002B R                        mov     al,dg:[dirchar]        
					 ;get directory separator character 
     495 0F9F  FD                               std                            
					 ;scan backwards 
     496 0FA0  F2/ AE                           repnz   scasb                  
					 ;(cx has the pathname length) 
     497 0FA2  FC                               cld                            
					 ;reset direction, just in case 
     498 0FA3  74 03                            jz      sj1 
     499                                        ENDIF 
     500                                 
     501 0FA5  E9 103C R                        jmp     same_dir               
					 ;no dir separator char. found, the 
     502                                                                       
					 ; file is in the current directory 
     503                                                                       
					 ; of the corresponding drive. Ergo, 
     504                                                                       
					 ; the FCB contains the data already. 
     505                                 
     506 0FA8                           sj1: 
     507 0FA8  E3 05                            jcxz    sj2                    
					 ;no more chars left, it refers to root
					 
     508 0FAA  80 3D 3A                         cmp     byte ptr [di],':'      
					 ;is the prvious character a disk def? 
     509 0FAD  75 05                            jne     not_root 
     510 0FAF                           sj2: 
     511 0FAF  C6 06 0027 R 01                  mov     dg:[the_root],01h      
					 ;file is in the root 
     512 0FB4                           not_root: 
     513 0FB4  47                               inc     di                     
					 ;point to dir separator char. 
     514 0FB5  B0 00                            mov     al,0 
     515 0FB7  AA                               stosb                          
					 ;nul terminate directory name 
     516 0FB8  58                               pop     ax 
     517 0FB9  57                               push    di                     
					 ;save pointer to file name 
     518 0FBA  C6 06 0028 R 01                  mov     dg:[fudge],01h         
					 ;remember that the current directory 
     519                                                                       
					 ; has been changed. 
     520                                 
     521                                ;----- Save current directory for exit 
					---------------------------------; 
     522 0FBF  B4 19                            mov     ah,get_default_drive   
					 ;save current drive 
     523 0FC1  CD 21                            int     21h 
     524 0FC3  A2 0029 R                        mov     dg:[user_drive],al 
     525                                 
     526 0FC6  8A 16 005C                       mov     dl,byte ptr ds:[fcb]   
					 ;get specified drive if any 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 16:04:08

EDLIN for MSDOS 2.0                                         Page     1-16
Main Body                                                   

     527 0FCA  0A D2                            or      dl,dl                  
					 ;default disk? 
     528 0FCC  74 10                            jz      same_drive 
     529 0FCE  FE CA                            dec     dl                     
					 ;adjust to real drive (a=0,b=1,...) 
     530 0FD0  B4 0E                            mov     ah,set_default_drive   
					 ;change disks 
     531 0FD2  CD 21                            int     21h 
     532 0FD4  3C FF                            cmp     al,-1                  
					 ;error? 
     533 0FD6  75 06                            jne     same_drive 
     534 0FD8  BA 0000 E                        mov     dx,offset dg:baddrv 
     535 0FDB  E9 149A R                        jmp     xerror 
     536                                 
     537 0FDE                           same_drive: 
     538 0FDE  B4 1F                            mov     ah,get_default_dpb 
     539 0FE0  CD 21                            int     21h 
     540                                 
     541                                assume  ds:nothing 
     542                                 
     543 0FE2  3C FF                            cmp     al,-1                  
					 ;bad drive? (should always be ok) 
     544 0FE4  75 06                            jne     drvisok 
     545 0FE6  BA 0000 E                        mov     dx,offset dg:baddrv 
     546 0FE9  E9 149A R                        jmp     xerror 
     547                                 
     548 0FEC                           drvisok: 
     549 0FEC  83 7F 1C 00                      cmp     [bx.dpb_current_dir],0 
     550 0FF0  74 0E                            je      curr_is_root 
     551 0FF2  8B F3                            mov     si,bx 
     552 0FF4  83 C6 1E                         add     si,dpb_dir_text 
     553 0FF7  BF 002E R                        mov     di,offset dg:userdir + 
					1 
     554                                 
     555 0FFA                           dir_save_loop: 
     556 0FFA  AC                               lodsb 
     557 0FFB  AA                               stosb 
     558 0FFC  0A C0                            or      al,al 
     559 0FFE  75 FA                            jnz     dir_save_loop 
     560                                 
     561 1000                           curr_is_root: 
     562 1000  0E                               push    cs 
     563 1001  1F                               pop     ds 
     564                                 
     565                                assume  ds:dg 
     566                                 
     567                                 
     568                                ;----- Change directories -------------
					---------------------------------; 
     569 1002  80 3E 0027 R 01                  cmp     [the_root],01h 
     570 1007  BA 002B R                        mov     dx,offset dg:[dirchar] 
					        ;assume the root 
     571 100A  74 03                            je      sj3 
     572 100C  BA 006F R                        mov     dx,offset dg:[fname_buf
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 16:04:08

EDLIN for MSDOS 2.0                                         Page     1-17
Main Body                                                   

					fer] 
     573 100F                           sj3: 
     574 100F  B4 3B                            mov     ah,chdir               
					         ;change directory 
     575 1011  CD 21                            int     21h 
     576 1013  BA 0000 E                        mov     dx,offset dg:baddrv 
     577 1016  73 03                            jnc     no_errors 
     578 1018  E9 149A R                        jmp     xerror 
     579 101B                           no_errors: 
     580                                 
     581                                ;----- Set Up int 24 intercept --------
					---------------------------------; 
     582                                 
     583 101B  B8 3524                          mov     ax,(get_interrupt_vecto
					r shl 8) or 24h 
     584 101E  CD 21                            int     21h 
     585 1020  89 1E 0023 R                     mov     word ptr [hardch],bx 
     586 1024  8C 06 0025 R                     mov     word ptr [hardch+2],es 
     587 1028  B8 2524                          mov     ax,(set_interrupt_vecto
					r shl 8) or 24h 
     588 102B  BA 0000 E                        mov     dx,offset dg:int_24 
     589 102E  CD 21                            int     21h 
     590 1030  0E                               push    cs 
     591 1031  07                               pop     es 
     592                                 
     593                                ;----- Parse filename to FCB ----------
					---------------------------------; 
     594 1032  5E                               pop     si 
     595 1033  BF 005C                          mov     di,fcb 
     596 1036  B8 2901                          mov     ax,(parse_file_descript
					or shl 8) or 1 
     597 1039  CD 21                            int     21h 
     598 103B  50                               push    ax 
     599                                 
     600                                ;--------------------------------------
					---------------------------------; 
     601                                 
     602 103C                           same_dir: 
     603 103C  58                               pop     ax 
     604 103D  0A C0                            OR      AL,AL 
     605 103F  BA 0000 E                        MOV     DX,OFFSET DG:BADDRV 
     606 1042  74 03                            jz      sj4 
     607 1044  E9 149A R                        jmp     xerror 
     608 1047                           sj4: 
     609 1047  80 3E 005D 20                    CMP     BYTE PTR DS:[FCB+1]," "
					 
     610 104C  75 03                            jnz     sj5 
     611 104E  E9 0F0C R                        jmp     noname 
     612 1051                           sj5: 
     613 1051  BE 0000 R                        MOV     SI,OFFSET DG:BAK 
     614 1054  BF 0065                          MOV     DI,FCB+9 
     615 1057  B9 0003                          MOV     CX,3 
     616                                        ;File must not have .BAK extens
					ion 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 16:04:08

EDLIN for MSDOS 2.0                                         Page     1-18
Main Body                                                   

     617 105A  F3/ A6                           REPE    CMPSB 
     618 105C  74 61                            JZ      NOTBAK 
     619                                        ;Open input file 
     620 105E  B4 0F                            MOV     AH,FCB_OPEN 
     621 1060  BA 005C                          MOV     DX,FCB 
     622 1063  CD 21                            INT     21H 
     623 1065  A2 0221 R                        MOV     [HAVEOF],AL 
     624 1068  0A C0                            OR      AL,AL 
     625 106A  74 26                            JZ      HAVFIL 
     626                                 
     627                                ;----- Check that file is not a directo
					ry ------------ 
     628 106C  B4 16                            mov     ah,fcb_create 
     629 106E  BA 005C                          mov     dx,fcb 
     630 1071  CD 21                            int     21h 
     631 1073  0A C0                            or      al,al 
     632 1075  74 06                            jz      sj50                   
					 ;no error found 
     633 1077  BA 0000 E                        mov     dx,offset dg:bcreat    
					 ;creation error 
     634 107A  E9 149A R                        jmp     xerror 
     635 107D                           sj50: 
     636 107D  B4 10                            mov     ah,fcb_close           
					 ;no error, close the file 
     637 107F  BA 005C                          mov     dx,fcb 
     638 1082  CD 21                            int     21h 
     639 1084  B4 13                            mov     ah,fcb_delete          
					 ;delete the file 
     640 1086  BA 005C                          mov     dx,fcb 
     641 1089  CD 21                            int     21h 
     642                                 
     643                                ;--------------------------------------
					--------------- 
     644                                 
     645 108B  BA 0000 E                        MOV     DX,OFFSET DG:NEWFIL 
     646 108E  B4 09                            MOV     AH,STD_CON_STRING_OUTPU
					T 
     647 1090  CD 21                            INT     21H 
     648 1092                           HAVFIL: 
     649 1092  BE 005C                          MOV     SI,FCB 
     650 1095  BF 01B1 R                        MOV     DI,OFFSET DG:FCB2 
     651 1098  B9 0009                          MOV     CX,9 
     652 109B  F3/ A4                           REP     MOVSB 
     653 109D  B0 24                            MOV     AL,"$" 
     654 109F  AA                               STOSB 
     655 10A0  AA                               STOSB 
     656 10A1  AA                               STOSB 
     657 10A2                           MAKFIL: 
     658                                        ;Create .$$$ file to make sure 
					directory has room 
     659 10A2  BA 01B1 R                        MOV     DX,OFFSET DG:FCB2 
     660 10A5  B4 16                            MOV     AH,FCB_CREATE 
     661 10A7  CD 21                            INT     21H 
     662 10A9  0A C0                            OR      AL,AL 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 16:04:08

EDLIN for MSDOS 2.0                                         Page     1-19
Main Body                                                   

     663 10AB  74 18                            JZ      SETUP 
     664 10AD  80 3E 01F1 R 00                  CMP     BYTE PTR [DELFLG],0 
     665 10B2  75 05                            JNZ     NOROOM 
     666 10B4  E8 1A74 R                        CALL    DELBAK 
     667 10B7  EB E9                            JMP     MAKFIL 
     668 10B9                           NOROOM: 
     669 10B9  BA 0000 E                        MOV     DX,OFFSET DG:NODIR 
     670 10BC  E9 149A R                        JMP     xERROR 
     671 10BF                           NOTBAK: 
     672 10BF  BA 0000 E                        MOV     DX,OFFSET DG:NOBAK 
     673 10C2  E9 149A R                        JMP     xERROR 
     674 10C5                           SETUP: 
     675 10C5  33 C0                            XOR     AX,AX 
     676 10C7  A3 007D                          MOV     WORD PTR DS:[FCB+fcb_RR
					],AX         ;Set RR field to zero 
     677 10CA  A3 007F                          MOV     WORD PTR DS:[FCB+fcb_RR
					+2],AX 
     678 10CD  A3 01D2 R                        MOV     WORD PTR [FCB2+fcb_RR],
					AX 
     679 10D0  A3 01D4 R                        MOV     WORD PTR [FCB2+fcb_RR+2
					],AX 
     680 10D3  40                               INC     AX 
     681 10D4  A3 006A                          MOV     WORD PTR DS:[FCB+fcb_RE
					CSIZ],AX         ;Set record length to 
					1 
     682 10D7  A3 01BF R                        MOV     WORD PTR [FCB2+fcb_RECS
					IZ],AX 
     683 10DA  BA 02A9 R                        MOV     DX,OFFSET DG:START 
     684 10DD  8B FA                            MOV     DI,DX 
     685 10DF  B4 1A                            MOV     AH,SET_DMA 
     686 10E1  CD 21                            INT     21H 
     687 10E3  8B 0E 0006                       MOV     CX,DS:[6] 
     688 10E7  49                               DEC     CX 
     689 10E8  89 0E 0024 R                     MOV     [LAST],CX 
     690 10EC  F6 06 0221 R FF                  TEST    BYTE PTR [HAVEOF],-1 
     691 10F1  75 2A                            JNZ     SAVEND 
     692 10F3  81 E9 02A9 R                     SUB     CX,OFFSET DG:START     
					 ;Available memory 
     693 10F7  D1 E9                            SHR     CX,1            ;1/2 of
					 available memory 
     694 10F9  8B C1                            MOV     AX,CX 
     695 10FB  D1 E9                            SHR     CX,1            ;1/4 of
					 available memory 
     696 10FD  89 0E 0020 R                     MOV     [ONE4TH],CX     ;Save a
					mount of 1/4 full 
     697 1101  03 C8                            ADD     CX,AX           ;3/4 of
					 available memory 
     698 1103  8B D1                            MOV     DX,CX 
     699 1105  81 C2 02A9 R                     ADD     DX,OFFSET DG:START 
     700 1109  89 16 0022 R                     MOV     [THREE4TH],DX   ;Save p
					ointer to 3/4 full 
     701                                        ;Read in input file 
     702 110D  BA 005C                          MOV     DX,FCB 
     703 1110  B4 27                            MOV     AH,FCB_RANDOM_READ_BLOC
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 16:04:08

EDLIN for MSDOS 2.0                                         Page     1-20
Main Body                                                   

					K 
     704 1112  89 0E 0224 R                     mov     [amnt_req],cx   ;save a
					mmount of chars requested 
     705 1116  CD 21                            INT     21H 
     706 1118  E8 1319 R                        CALL    SCANEOF 
     707 111B  03 F9                            ADD     DI,CX           ;Point 
					to last byte 
     708 111D                           SAVEND: 
     709 111D  FC                               CLD 
     710 111E  C6 05 1A                         MOV     BYTE PTR [DI],1AH 
     711 1121  89 3E 0026 R                     MOV     [ENDTXT],DI 
     712 1125  C6 06 002C R 80                  MOV     BYTE PTR [COMBUF],128 
     713 112A  C6 06 00AE R FF                  MOV     BYTE PTR [EDITBUF],255 
     714 112F  C6 06 01B0 R 0A                  MOV     BYTE PTR [EOL],10 
     715 1134  C7 06 001E R 02A9 R              MOV     [POINTER],OFFSET DG:STA
					RT 
     716 113A  C7 06 001C R 0001                MOV     [CURRENT],1 
     717 1140  C7 06 0000 R 0001                MOV     [PARAM1],1 
     718 1146  F6 06 0221 R FF                  TEST    BYTE PTR [HAVEOF],-1 
     719 114B  75 03                            JNZ     COMMAND 
     720 114D  E8 137B R                        CALL    APPEND 
     721                                 
     722 1150                           COMMAND: 
     723 1150  BC 02A9 R                        MOV     SP, OFFSET DG:STACK 
     724 1153  B8 2523                          MOV     AX,(SET_INTERRUPT_VECTO
					R SHL 8) OR 23H 
     725 1156  BA 1A62 R                        MOV     DX,OFFSET DG:ABORTCOM 
     726 1159  CD 21                            INT     21H 
     727 115B  B0 2A                            MOV     AL,PROMPT 
     728 115D  E8 0000 E                        CALL    OUT 
     729 1160  BA 002C R                        MOV     DX,OFFSET DG:COMBUF 
     730 1163  B4 0A                            MOV     AH,STD_CON_STRING_INPUT
					 
     731 1165  CD 21                            INT     21H 
     732 1167  C7 06 0028 R 002E R              MOV     [COMLINE],OFFSET DG:COM
					BUF + 2 
     733 116D  B0 0A                            MOV     AL,10 
     734 116F  E8 0000 E                        CALL    OUT 
     735 1172                           PARSE: 
     736 1172  C7 06 0002 R 0000                MOV     [PARAM2],0 
     737 1178  C7 06 0004 R 0000                MOV     [PARAM3],0 
     738 117E  C7 06 0006 R 0000                MOV     [PARAM4],0 
     739 1184  C6 06 0021 R 00                  mov     [fourth],0             
					 ;reset the fourth parameter flag 
     740 1189  C6 06 0220 R 00                  MOV     BYTE PTR [QFLG],0 
     741 118E  8B 36 0028 R                     MOV     SI,[COMLINE] 
     742 1192  BD 0000 R                        MOV     BP,OFFSET DG:PARAM1 
     743 1195  33 FF                            XOR     DI,DI 
     744 1197                           CHKLP: 
     745 1197  E8 1232 R                        CALL    GETNUM 
     746 119A  89 13                            MOV     [BP+DI],DX 
     747 119C  47                               INC     DI 
     748 119D  47                               INC     DI 
     749 119E  E8 1216 R                        CALL    SKIP1 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 16:04:08

EDLIN for MSDOS 2.0                                         Page     1-21
Main Body                                                   

     750 11A1  3C 2C                            CMP     AL,"," 
     751 11A3  75 01                            JNZ     CHKNXT 
     752 11A5  46                               INC     SI 
     753 11A6                           CHKNXT: 
     754 11A6  4E                               DEC     SI 
     755 11A7  83 FF 08                         CMP     DI,8 
     756 11AA  72 EB                            JB      CHKLP 
     757 11AC  E8 1215 R                        CALL    SKIP 
     758 11AF  3C 3F                            CMP     AL,"?" 
     759 11B1  75 06                            JNZ     DISPATCH 
     760 11B3  A2 0220 R                        MOV     [QFLG],AL 
     761 11B6  E8 1215 R                        CALL    SKIP 
     762 11B9                           DISPATCH: 
     763 11B9  3C 5F                            CMP     AL,5FH 
     764 11BB  76 02                            JBE     UPCASE 
     765 11BD  24 5F                            AND     AL,5FH 
     766 11BF                           UPCASE: 
     767 11BF  BF 12C3 R                        MOV     DI,OFFSET DG:COMTAB 
     768 11C2  B9 000F 90                       MOV     CX,NUMCOM 
     769 11C6  F2/ AE                           REPNE   SCASB 
     770 11C8  75 5E                            JNZ     COMERR 
     771 11CA  8B D9                            MOV     BX,CX 
     772 11CC  A1 0002 R                        MOV     AX,[PARAM2] 
     773 11CF  0B C0                            OR      AX,AX 
     774 11D1  74 06                            JZ      PARMOK 
     775 11D3  3B 06 0000 R                     CMP     AX,[PARAM1] 
     776 11D7  72 4F                            JB      COMERR          ;Param.
					 2 must be >= param 1 
     777 11D9                           PARMOK: 
     778 11D9  89 36 0028 R                     MOV     [COMLINE],SI 
     779                                 
     780                                        if      roprot                 
					         ;***** R/O ***** 
     781 11DD  80 3E 0020 R 01                  cmp     [roflag],01            
					         ;file r/o? 
     782 11E2  75 0C                            jne     paramok2 
     783 11E4  80 BF 12F0 R 01                  cmp     byte ptr [bx+rotable],0
					1        ;operation allowed? 
     784 11E9  74 05                            je      paramok2 
     785 11EB  BA 0000 E                        mov     dx,offset dg:ro_err    
					         ;error 
     786 11EE  EB 3B                            jmp     short comerr1 
     787 11F0                           paramok2: 
     788                                        endif 
     789                                 
     790 11F0  D1 E3                            SHL     BX,1 
     791 11F2  FF 97 12D2 R                     CALL    [BX+TABLE] 
     792 11F6                           COMOVER: 
     793 11F6  8B 36 0028 R                     MOV     SI,[COMLINE] 
     794 11FA  E8 1215 R                        CALL    SKIP 
     795 11FD  3C 0D                            CMP     AL,0DH 
     796 11FF  74 11                            JZ      COMMANDJ 
     797 1201  3C 1A                            CMP     AL,1AH 
     798 1203  74 04                            JZ      DELIM 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 16:04:08

EDLIN for MSDOS 2.0                                         Page     1-22
Main Body                                                   

     799 1205  3C 3B                            CMP     AL,";" 
     800 1207  75 01                            JNZ     NODELIM 
     801 1209                           DELIM: 
     802 1209  46                               INC     SI 
     803 120A                           NODELIM: 
     804 120A  4E                               DEC     SI 
     805 120B  89 36 0028 R                     MOV     [COMLINE],SI 
     806 120F  E9 1172 R                        JMP     PARSE 
     807                                 
     808 1212                           COMMANDJ: 
     809 1212  E9 1150 R                        JMP     COMMAND 
     810                                 
     811 1215                           SKIP: 
     812 1215  AC                               LODSB 
     813 1216                           SKIP1: 
     814 1216  3C 20                            CMP     AL," " 
     815 1218  74 FB                            JZ      SKIP 
     816 121A  C3                       RET1:   RET 
     817                                 
     818 121B                           CHKRANGE: 
     819 121B  83 3E 0002 R 00                  CMP     [PARAM2],0 
     820 1220  74 F8                            JZ      RET1 
     821 1222  3B 1E 0002 R                     CMP     BX,[PARAM2] 
     822 1226  76 F2                            JBE     RET1 
     823 1228                           COMERR: 
     824 1228  BA 0000 E                        MOV     DX,OFFSET DG:BADCOM 
     825 122B                           COMERR1: 
     826 122B  B4 09                            MOV     AH,STD_CON_STRING_OUTPU
					T 
     827 122D  CD 21                            INT     21H 
     828 122F  E9 1150 R                        JMP     COMMAND 
     829                                 
     830                                 
     831 1232                           GETNUM: 
     832 1232  E8 1215 R                        CALL    SKIP 
     833 1235  83 FF 06                         cmp     di,6            ;Is thi
					s the fourth parameter? 
     834 1238  75 05                            jne     sk1 
     835 123A  C6 06 0021 R 01                  mov     [fourth],1      ;yes, s
					et the flag 
     836 123F                           sk1: 
     837 123F  3C 2E                            CMP     AL,"." 
     838 1241  74 3D                            JZ      CURLIN 
     839 1243  3C 23                            CMP     AL,"#" 
     840 1245  74 46                            JZ      MAXLIN 
     841 1247  3C 2B                            CMP     AL,"+" 
     842 1249  74 4E                            JZ      FORLIN 
     843 124B  3C 2D                            CMP     AL,"-" 
     844 124D  74 59                            JZ      BACKLIN 
     845 124F  BA 0000                          MOV     DX,0 
     846 1252  B1 00                            MOV     CL,0            ;Flag n
					o parameter seen yet 
     847 1254                           NUMLP: 
     848 1254  3C 30                            CMP     AL,"0" 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 16:04:08

EDLIN for MSDOS 2.0                                         Page     1-23
Main Body                                                   

     849 1256  72 1E                            JB      NUMCHK 
     850 1258  3C 39                            CMP     AL,"9" 
     851 125A  77 1A                            JA      NUMCHK 
     852 125C  81 FA 1999                       CMP     DX,6553         ;Max li
					ne/10 
     853 1260  73 C6                            JAE     COMERR          ;Ten ti
					mes this is too big 
     854 1262  B1 01                            MOV     CL,1            ;Parame
					ter digit has been found 
     855 1264  2C 30                            SUB     AL,"0" 
     856 1266  8B DA                            MOV     BX,DX 
     857 1268  D1 E2                            SHL     DX,1 
     858 126A  D1 E2                            SHL     DX,1 
     859 126C  03 D3                            ADD     DX,BX 
     860 126E  D1 E2                            SHL     DX,1 
     861 1270  98                               CBW 
     862 1271  03 D0                            ADD     DX,AX 
     863 1273  AC                               LODSB 
     864 1274  EB DE                            JMP     SHORT NUMLP 
     865 1276                           NUMCHK: 
     866 1276  80 F9 00                         CMP     CL,0 
     867 1279  74 9F                            JZ      RET1 
     868 127B  0B D2                            OR      DX,DX 
     869 127D  74 A9                            JZ      COMERR          ;Don't 
					allow zero as a parameter 
     870 127F  C3                               RET 
     871                                 
     872 1280                           CURLIN: 
     873 1280  80 3E 0021 R 01                  cmp     [fourth],1      ;the fo
					urth parameter? 
     874 1285  74 39                            je      comerra         ;yes, a
					n error 
     875 1287  8B 16 001C R                     MOV     DX,[CURRENT] 
     876 128B  AC                               LODSB 
     877 128C  C3                               RET 
     878 128D                           MAXLIN: 
     879 128D  80 3E 0021 R 01                  cmp     [fourth],1      ;the fo
					urth parameter? 
     880 1292  74 2C                            je      comerra         ;yes, a
					n error 
     881 1294  BA FFFE                          MOV     DX,-2 
     882 1297  AC                               LODSB 
     883 1298  C3                               RET 
     884 1299                           FORLIN: 
     885 1299  80 3E 0021 R 01                  cmp     [fourth],1      ;the fo
					urth parameter? 
     886 129E  74 20                            je      comerra         ;yes, a
					n error 
     887 12A0  E8 1232 R                        CALL    GETNUM 
     888 12A3  03 16 001C R                     ADD     DX,[CURRENT] 
     889 12A7  C3                               RET 
     890 12A8                           BACKLIN: 
     891 12A8  80 3E 0021 R 01                  cmp     [fourth],1      ;the fo
					urth parameter? 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 16:04:08

EDLIN for MSDOS 2.0                                         Page     1-24
Main Body                                                   

     892 12AD  74 11                            je      comerra         ;yes, a
					n error 
     893 12AF  E8 1232 R                        CALL    GETNUM 
     894 12B2  8B 1E 001C R                     MOV     BX,[CURRENT] 
     895 12B6  2B DA                            SUB     BX,DX 
     896 12B8  79 03                            jns     sk2     ;if below beg o
					f buffer then default to the 
     897 12BA  BB 0001                          mov     bx,1    ; beg of buffer
					 (line1) 
     898 12BD                           sk2: 
     899 12BD  8B D3                            MOV     DX,BX 
     900 12BF  C3                               RET 
     901                                 
     902 12C0                           comerra: 
     903 12C0  E9 1228 R                        jmp     comerr 
     904                                 
     905                                 
     906 12C3  51 54 43 4D 57 41 53     COMTAB  DB      "QTCMWASRDLPIE;",13 
     907       52 44 4C 50 49 45 3B     
     908       0D                       
     909                                 
     910 = 000F                         NUMCOM  EQU     $-COMTAB 
     911                                 
     912                                ;--------------------------------------
					---------------------------------; 
     913                                ;       Carefull changing the order of 
					the next two tables. They are 
     914                                ;      linked and chnges should be be t
					o both. 
     915                                 
     916 12D2  16C1 R                   TABLE   DW      NOCOM   ;No command--ed
					it line 
     917 12D4  16C1 R                           DW      NOCOM 
     918 12D6  1A0F R                           DW      ENDED 
     919 12D8  1967 R                           DW      INSERT 
     920 12DA  14A4 R                           DW      PAGE 
     921 12DC  14FC R                           DW      LIST 
     922 12DE  1687 R                           DW      DELETE 
     923 12E0  1584 R                           dw      replac_from_curr       
					 ;replace from current+1 line 
     924 12E2  1625 R                           dw      search_from_curr       
					 ;search from current+1 line 
     925 12E4  137B R                           DW      APPEND 
     926 12E6  1429 R                           DW      EWRITE 
     927 12E8  1763 R                           DW      MOVE 
     928 12EA  176A R                           DW      COPY 
     929 12EC  18BD R                           DW      MERGE 
     930                                 
     931                                        if      roprot                 
					 ;***** R/O ***** 
     932 12EE  12FF R                           DW      QUIT1 
     933                                        endif 
     934                                 
     935                                        if      roprot                 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 16:04:08

EDLIN for MSDOS 2.0                                         Page     1-25
Main Body                                                   

					 ;***** R/O ***** 
     936                                ;--------------------------------------
					---------------------------------; 
     937                                ;       If = 1 then the command can be 
					executed with a file that 
     938                                ;      is r/o. If = 0 the command can n
					ot be executed, and error. 
     939                                 
     940 12F0  00                       ROTABLE db      0               ;NOCOM 
     941 12F1  00                               db      0               ;NOCOM 
     942 12F2  00                               db      0               ;ENDED 
     943 12F3  00                               db      0               ;INSERT
					 
     944 12F4  01                               db      1               ;PAGE 
     945 12F5  01                               db      1               ;LIST 
     946 12F6  00                               db      0               ;DELETE
					 
     947 12F7  00                               db      0               ;replac
					_from_curr 
     948 12F8  01                               db      1               ;search
					_from_curr 
     949 12F9  01                               db      1               ;APPEND
					 
     950 12FA  01                               db      1               ;EWRITE
					 
     951 12FB  00                               db      0               ;MOVE 
     952 12FC  00                               db      0               ;COPY 
     953 12FD  00                               db      0               ;MERGE 
     954 12FE  01                               db      1               ;QUIT 
     955                                 
     956                                ;--------------------------------------
					---------------------------------; 
     957                                        endif 
     958                                 
     959                                        if      roprot                 
					 ;***** R/O ***** 
     960 12FF                           quit1: 
     961 12FF  80 3E 0020 R 01                  cmp     [roflag],01            
					 ;are we in r/o mode? 
     962 1304  75 10                            jne     q3                     
					 ;no query.... 
     963 1306  BA 01B1 R                        MOV     DX,OFFSET DG:FCB2      
					 ;yes, quit without query. 
     964 1309  B4 10                            MOV     AH,FCB_CLOSE 
     965 130B  CD 21                            INT     21H 
     966 130D  B4 13                            MOV     AH,FCB_DELETE 
     967 130F  CD 21                            INT     21H 
     968 1311  E8 0000 E                        call    rest_dir               
					 ;restore directory if needed 
     969 1314  CD 20                            INT     20H 
     970 1316                           q3: 
     971 1316  E8 0000 E                        call    quit 
     972                                        endif 
     973                                 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 16:04:08

EDLIN for MSDOS 2.0                                         Page     1-26
Main Body                                                   

     974 1319                           SCANEOF: 
     975 1319  80 3E 0022 R 00                  cmp     [loadmod],0 
     976 131E  74 1E                            je      sj52 
     977                                 
     978                                ;----- Load till physical end of file 
     979 1320  3B 0E 0224 R                     cmp     cx,word ptr[amnt_req] 
     980 1324  72 05                            jb      sj51 
     981 1326  32 C0                            xor     al,al 
     982 1328  FE C0                            inc     al              ;reset 
					zero flag 
     983 132A  C3                               ret 
     984 132B                           sj51: 
     985 132B  E3 0B                            jcxz    sj51b 
     986 132D  57                               push    di              ;get ri
					d of any ^Z at the end of the file 
     987 132E  03 F9                            add     di,cx 
     988 1330  4F                               dec     di              ;points
					 to last char 
     989 1331  80 3D 1A                         cmp     byte ptr [di],1ah 
     990 1334  5F                               pop     di 
     991 1335  75 01                            jne     sj51b 
     992 1337  49                               dec     cx 
     993 1338                           sj51b: 
     994 1338  32 C0                            xor     al,al           ;set ze
					ro flag 
     995 133A  E8 1359 R                        call    check_end       ;check 
					that we have a CRLF pair at the end 
     996 133D  C3                               ret 
     997                                 
     998                                ;----- Load till first ^Z is found 
     999 133E                           sj52: 
    1000 133E  57                               PUSH    DI 
    1001 133F  51                               PUSH    CX 
    1002 1340  B0 1A                            MOV     AL,1AH 
    1003 1342  0B C9                            or      cx,cx 
    1004 1344  74 07                            jz      not_found       ;skip w
					ith zero flag set 
    1005 1346  F2/ AE                           REPNE   SCASB           ;Scan f
					or end of file mark 
    1006 1348  75 03                            jnz     not_found 
    1007 134A  9F                               LAHF                    ;Save f
					lags momentarily 
    1008 134B  41                               inc     cx              ;includ
					e the ^Z 
    1009 134C  9E                               SAHF                    ;Restor
					e flags 
    1010 134D                           not_found: 
    1011 134D  8B F9                            mov     di,cx           ;not fo
					und at the end 
    1012 134F  59                               POP     CX 
    1013 1350  9F                               LAHF                    ;Save f
					lags momentarily 
    1014 1351  2B CF                            SUB     CX,DI           ;Reduce
					 byte count if EOF found 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 16:04:08

EDLIN for MSDOS 2.0                                         Page     1-27
Main Body                                                   

    1015 1353  9E                               SAHF                    ;Restor
					e flags 
    1016 1354  5F                               POP     DI 
    1017 1355  E8 1359 R                        call    check_end       ;check 
					that we have a CRLF pair at the end 
    1018                                 
    1019 1358  C3                       RET2:   RET 
    1020                                 
    1021                                 
    1022                                ;--------------------------------------
					--------------------------------- 
    1023                                ;       If the end of file was found, t
					hen check that the last character 
    1024                                ; in the file is a LF. If not put a CRL
					F pair in. 
    1025                                 
    1026 1359                           check_end: 
    1027 1359  75 1C                            jnz     not_end                
					 ;end was not reached 
    1028 135B  9C                               pushf                          
					 ;save return flag 
    1029 135C  57                               push    di                     
					 ;save pointer to buffer 
    1030 135D  03 F9                            add     di,cx                  
					 ;points to one past end on text 
    1031 135F  4F                               dec     di                     
					 ;points to last character 
    1032 1360  81 FF 02A9 R                     cmp     di,offset dg:start 
    1033 1364  74 05                            je      check_no 
    1034 1366  80 3D 0A                         cmp     byte ptr[di],0ah       
					 ;is a LF the last character? 
    1035 1369  74 0A                            je      check_done             
					 ;yes, exit 
    1036 136B                           check_no: 
    1037 136B  C6 45 01 0D                      mov     byte ptr[di+1],0dh     
					 ;no, put a CR 
    1038 136F  41                               inc     cx                     
					 ;one more char in text 
    1039 1370  C6 45 02 0A                      mov     byte ptr[di+2],0ah     
					 ;put a LF 
    1040 1374  41                               inc     cx                     
					 ;another character at the end 
    1041 1375                           check_done: 
    1042 1375  5F                               pop     di 
    1043 1376  9D                               popf 
    1044 1377                           not_end: 
    1045 1377  C3                               ret 
    1046                                 
    1047                                 
    1048                                 
    1049 1378  E9 1410 R                NOMOREJ:JMP     NOMORE 
    1050                                 
    1051 137B                           APPEND: 
    1052 137B  F6 06 0221 R FF                  TEST    BYTE PTR [HAVEOF],-1 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 16:04:08

EDLIN for MSDOS 2.0                                         Page     1-28
Main Body                                                   

    1053 1380  75 F6                            JNZ     NOMOREJ 
    1054 1382  8B 16 0026 R                     MOV     DX,[ENDTXT] 
    1055 1386  83 3E 0000 R 00                  CMP     [PARAM1],0      ;See if
					 parameter is missing 
    1056 138B  75 06                            JNZ     PARMAPP 
    1057 138D  3B 16 0022 R                     CMP     DX,[THREE4TH]   ;See if
					 already 3/4ths full 
    1058 1391  73 C5                            JAE     RET2            ;If so,
					 then done already 
    1059 1393                           PARMAPP: 
    1060 1393  8B FA                            MOV     DI,DX 
    1061 1395  B4 1A                            MOV     AH,SET_DMA 
    1062 1397  CD 21                            INT     21H 
    1063 1399  8B 0E 0024 R                     MOV     CX,[LAST] 
    1064 139D  2B CA                            SUB     CX,DX           ;Amount
					 of memory available 
    1065 139F  75 03                            jnz     sj53 
    1066 13A1  E9 1753 R                        jmp     memerr 
    1067 13A4                           sj53: 
    1068 13A4  BA 005C                          MOV     DX,FCB 
    1069 13A7  89 0E 0224 R                     mov     [amnt_req],cx   ;save a
					mmount of chars requested 
    1070 13AB  B4 27                            MOV     AH,FCB_RANDOM_READ_BLOC
					K 
    1071 13AD  CD 21                            INT     21H              ;Fill 
					memory with file data 
    1072 13AF  A2 0221 R                        MOV     [HAVEOF],AL 
    1073 13B2  51                               PUSH    CX              ;Save a
					ctual byte count 
    1074 13B3  E8 1319 R                        CALL    SCANEOF 
    1075 13B6  75 05                            JNZ     NOTEND 
    1076 13B8  C6 06 0221 R 01                  MOV     BYTE PTR [HAVEOF],1    
					 ;Set flag if 1AH found in file 
    1077 13BD                           NOTEND: 
    1078 13BD  33 D2                            XOR     DX,DX 
    1079 13BF  8B 1E 0000 R                     MOV     BX,[PARAM1] 
    1080 13C3  0B DB                            OR      BX,BX 
    1081 13C5  75 15                            JNZ     COUNTLN 
    1082 13C7  8B C7                            MOV     AX,DI 
    1083 13C9  03 C1                            ADD     AX,CX           ;First 
					byte after loaded text 
    1084 13CB  3B 06 0022 R                     CMP     AX,[THREE4TH]   ;See if
					 we made 3/4 full 
    1085 13CF  76 0B                            JBE     COUNTLN 
    1086 13D1  8B 3E 0022 R                     MOV     DI,[THREE4TH] 
    1087 13D5  8B C8                            MOV     CX,AX 
    1088 13D7  2B CF                            SUB     CX,DI           ;Length
					 remaining over 3/4 
    1089 13D9  BB 0001                          MOV     BX,1            ;Look f
					or one more line 
    1090 13DC                           COUNTLN: 
    1091 13DC  E8 0000 E                        CALL    SCANLN          ;Look f
					or BX lines 
    1092 13DF  38 45 FF                         CMP     [DI-1],AL       ;Check 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 16:04:08

EDLIN for MSDOS 2.0                                         Page     1-29
Main Body                                                   

					for full line 
    1093 13E2  74 0C                            JZ      FULLN 
    1094 13E4  FD                               STD 
    1095 13E5  4F                               DEC     DI 
    1096 13E6  8B 0E 0024 R                     MOV     CX,[LAST] 
    1097 13EA  F2/ AE                           REPNE   SCASB                  
					 ;Scan backwards for last line 
    1098 13EC  47                               INC     DI 
    1099 13ED  47                               INC     DI 
    1100 13EE  4A                               DEC     DX 
    1101 13EF  FC                               CLD 
    1102 13F0                           FULLN: 
    1103 13F0  59                               POP     CX                     
					         ;Actual amount read 
    1104 13F1  C7 05 001A                       MOV     WORD PTR [DI],1AH      
					         ;Place EOF after last line 
    1105 13F5  2B CF                            SUB     CX,DI 
    1106 13F7  87 3E 0026 R                     XCHG    DI,[ENDTXT] 
    1107 13FB  03 F9                            ADD     DI,CX                  
					         ;Amount of file read but not u
					sed 
    1108 13FD  29 3E 007D                       SUB     WORD PTR DS:[FCB+fcb_RR
					],DI         ;Adjust RR field in case e
					nd of file 
    1109 1401  83 1E 007F 00                    SBB     WORD PTR DS:[FCB+fcb_RR
					+2],0           ;   was not reached 
    1110 1406  3B DA                            CMP     BX,DX 
    1111 1408  75 0E                            JNZ     EOFCHK 
    1112 140A  C6 06 0221 R 00                  MOV     BYTE PTR [HAVEOF],0 
    1113 140F  C3                               RET 
    1114 1410                           NOMORE: 
    1115 1410  BA 0000 E                        MOV     DX,OFFSET DG:EOF 
    1116 1413  B4 09                            MOV     AH,STD_CON_STRING_OUTPU
					T 
    1117 1415  CD 21                            INT     21H 
    1118 1417  C3                       RET3:   RET 
    1119 1418                           EOFCHK: 
    1120 1418  F6 06 0221 R FF                  TEST    BYTE PTR [HAVEOF],-1 
    1121 141D  75 F1                            JNZ     NOMORE 
    1122 141F  F6 06 0222 R FF                  TEST    BYTE PTR [ENDING],-1 
    1123 1424  75 F1                            JNZ     RET3            ;Suppre
					ss memory error during End 
    1124 1426  E9 1753 R                        JMP     MEMERR 
    1125                                 
    1126 1429                           EWRITE: 
    1127 1429  8B 1E 0000 R                     MOV     BX,[PARAM1] 
    1128 142D  0B DB                            OR      BX,BX 
    1129 142F  75 1C                            JNZ     WRT 
    1130 1431  8B 0E 0020 R                     MOV     CX,[ONE4TH] 
    1131 1435  8B 3E 0026 R                     MOV     DI,[ENDTXT] 
    1132 1439  2B F9                            SUB     DI,CX           ;Write 
					everything in front of here 
    1133 143B  76 DA                            JBE     RET3 
    1134 143D  81 FF 02A9 R                     CMP     DI,OFFSET DG:START     
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 16:04:08

EDLIN for MSDOS 2.0                                         Page     1-30
Main Body                                                   

					 ;See if there's anything to write 
    1135 1441  76 D4                            JBE     RET3 
    1136 1443  33 D2                            XOR     DX,DX 
    1137 1445  BB 0001                          MOV     BX,1            ;Look f
					or one more line 
    1138 1448  E8 0000 E                        CALL    SCANLN 
    1139 144B  EB 04                            JMP     SHORT WRTADD 
    1140 144D                           WRT: 
    1141 144D  43                               INC     BX 
    1142 144E  E8 0000 E                        CALL    FINDLIN 
    1143 1451                           WRTADD: 
    1144 1451  80 3E 01F1 R 00                  CMP     BYTE PTR [DELFLG],0 
    1145 1456  75 05                            JNZ     WRTADD1 
    1146 1458  57                               PUSH    DI 
    1147 1459  E8 1A74 R                        CALL    DELBAK                 
					 ;Want to delete the .BAK file 
    1148                                                                       
					 ;as soon as the first write occurs 
    1149 145C  5F                               POP     DI 
    1150 145D                           WRTADD1: 
    1151 145D  8B CF                            MOV     CX,DI 
    1152 145F  BA 02A9 R                        MOV     DX,OFFSET DG:START 
    1153 1462  2B CA                            SUB     CX,DX                  
					 ;Amount to write 
    1154 1464  74 B1                            JZ      RET3 
    1155 1466  B4 1A                            MOV     AH,SET_DMA 
    1156 1468  CD 21                            INT     21H 
    1157 146A  BA 01B1 R                        MOV     DX,OFFSET DG:FCB2 
    1158 146D  B4 28                            MOV     AH,FCB_RANDOM_WRITE_BLO
					CK 
    1159 146F  CD 21                            INT     21H 
    1160 1471  0A C0                            OR      AL,AL 
    1161 1473  75 1E                            JNZ     WRTERR 
    1162 1475  8B F7                            MOV     SI,DI 
    1163 1477  BF 02A9 R                        MOV     DI,OFFSET DG:START 
    1164 147A  89 3E 001E R                     MOV     [POINTER],DI 
    1165 147E  8B 0E 0026 R                     MOV     CX,[ENDTXT] 
    1166 1482  2B CE                            SUB     CX,SI 
    1167 1484  41                               INC     CX              ;Amount
					 of text remaining 
    1168 1485  F3/ A4                           REP     MOVSB 
    1169 1487  4F                               DEC     DI              ;Point 
					to EOF 
    1170 1488  89 3E 0026 R                     MOV     [ENDTXT],DI 
    1171 148C  C7 06 001C R 0001                MOV     [CURRENT],1 
    1172 1492  C3                               RET 
    1173                                 
    1174 1493                           WRTERR: 
    1175 1493  B4 10                            MOV     AH,FCB_CLOSE 
    1176 1495  CD 21                            INT     21H 
    1177 1497  BA 0000 E                        MOV     DX,OFFSET DG:DSKFUL 
    1178 149A                           xERROR: 
    1179 149A  B4 09                            MOV     AH,STD_CON_STRING_OUTPU
					T 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 16:04:08

EDLIN for MSDOS 2.0                                         Page     1-31
Main Body                                                   

    1180 149C  CD 21                            INT     21H 
    1181                                ;--------------------------------------
					--------------------------------- 
    1182 149E  E8 0000 E                        call    rest_dir               
					 ;restore to the proper directory 
    1183                                ;--------------------------------------
					--------------------------------- 
    1184 14A1  CD 20                            INT     32 
    1185                                 
    1186 14A3  C3                       RET$5:  RET 
    1187                                 
    1188 14A4                           PAGE: 
    1189 14A4  33 DB                            xor     bx,bx           ;get la
					st line in the buffer 
    1190 14A6  E8 0000 E                        call    findlin 
    1191 14A9  89 16 002A R                     mov     [lastlin],dx 
    1192                                 
    1193 14AD  8B 1E 0000 R                     mov     bx,[param1] 
    1194 14B1  0B DB                            or      bx,bx           ;was it
					 specified? 
    1195 14B3  75 0A                            jnz     frstok          ;yes, u
					se it 
    1196 14B5  8B 1E 001C R                     mov     bx,[current] 
    1197 14B9  83 FB 01                         cmp     bx,1            ;if cur
					rent line =1 start from there 
    1198 14BC  74 01                            je      frstok 
    1199 14BE  43                               inc     bx              ;start 
					from current+1 line 
    1200 14BF                           frstok: 
    1201 14BF  3B 1E 002A R                     cmp     bx,[lastlin]    ;check 
					that we are in the buffer 
    1202 14C3  77 DE                            ja      ret$5           ;if not
					 just quit 
    1203 14C5                           infile: 
    1204 14C5  8B 16 0002 R                     mov     dx,[param2] 
    1205 14C9  0B D2                            or      dx,dx           ;was pa
					ram2 specified? 
    1206 14CB  75 05                            jnz     scndok          ;yes,..
					.. 
    1207 14CD  8B D3                            mov     dx,bx           ;no, ta
					ke the end line to be the 
    1208 14CF  83 C2 16                         add     dx,22           ;  star
					t line + 23 
    1209 14D2                           scndok: 
    1210 14D2  42                               inc     dx 
    1211 14D3  3B 16 002A R                     cmp     dx,[lastlin]    ;check 
					that we are in the buffer 
    1212 14D7  76 04                            jbe     infile2 
    1213 14D9  8B 16 002A R                     mov     dx,[lastlin]    ;we are
					 not, take the last line as end 
    1214 14DD                           infile2: 
    1215 14DD  3B D3                            cmp     dx,bx           ;is par
					am1 < param2 ? 
    1216 14DF  76 C2                            jbe     ret$5           ;yes, n
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 16:04:08

EDLIN for MSDOS 2.0                                         Page     1-32
Main Body                                                   

					o backwards listing, quit 
    1217 14E1  52                               push    dx              ;save t
					he end line 
    1218 14E2  53                               push    bx              ;save s
					tart line 
    1219 14E3  8B DA                            mov     bx,dx           ;set th
					e current line 
    1220 14E5  4B                               dec     bx 
    1221 14E6  E8 0000 E                        call    findlin 
    1222 14E9  89 3E 001E R                     mov     [pointer],di 
    1223 14ED  89 16 001C R                     mov     [current],dx 
    1224 14F1  5B                               pop     bx              ;restor
					e start line 
    1225 14F2  E8 0000 E                        call    findlin         ;get po
					inter to start line 
    1226 14F5  8B F7                            mov     si,di           ;save p
					ointer 
    1227 14F7  5F                               pop     di              ;get en
					d line 
    1228 14F8  2B FB                            sub     di,bx           ;number
					 of lines 
    1229 14FA  EB 2C                            jmp     short display 
    1230                                 
    1231                                 
    1232 14FC                           LIST: 
    1233 14FC  8B 1E 0000 R                     MOV     BX,[PARAM1] 
    1234 1500  0B DB                            OR      BX,BX 
    1235 1502  75 0C                            JNZ     CHKP2 
    1236 1504  8B 1E 001C R                     MOV     BX,[CURRENT] 
    1237 1508  83 EB 0B                         SUB     BX,11 
    1238 150B  77 03                            JA      CHKP2 
    1239 150D  BB 0001                          MOV     BX,1 
    1240 1510                           CHKP2: 
    1241 1510  E8 0000 E                        CALL    FINDLIN 
    1242 1513  75 4C                            JNZ     RET7 
    1243 1515  8B F7                            MOV     SI,DI 
    1244 1517  8B 3E 0002 R                     MOV     DI,[PARAM2] 
    1245 151B  47                               INC     DI 
    1246 151C  2B FB                            SUB     DI,BX 
    1247 151E  77 08                            JA      DISPLAY 
    1248 1520  BF 0017                          MOV     DI,23 
    1249 1523  EB 03                            JMP     SHORT DISPLAY 
    1250                                 
    1251                                 
    1252 1525                           DISPONE: 
    1253 1525  BF 0001                          MOV     DI,1 
    1254                                 
    1255 1528                           DISPLAY: 
    1256                                 
    1257                                ; Inputs: 
    1258                                ;       BX = Line number 
    1259                                ;       SI = Pointer to text buffer 
    1260                                ;       DI = No. of lines 
    1261                                ; Function: 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 16:04:08

EDLIN for MSDOS 2.0                                         Page     1-33
Main Body                                                   

    1262                                ;       Ouputs specified no. of line to
					 terminal, each 
    1263                                ;       with leading line number. 
    1264                                ; Outputs: 
    1265                                ;       BX = Last line output. 
    1266                                ; All registers destroyed. 
    1267                                 
    1268 1528  8B 0E 0026 R                     MOV     CX,[ENDTXT] 
    1269 152C  2B CE                            SUB     CX,SI 
    1270 152E  74 31                            JZ      RET7 
    1271 1530  8B 2E 001C R                     MOV     BP,[CURRENT] 
    1272 1534                           DISPLN: 
    1273 1534  51                               PUSH    CX 
    1274 1535  E8 0000 E                        CALL    SHOWNUM 
    1275 1538  59                               POP     CX 
    1276 1539                           OUTLN: 
    1277 1539  AC                               LODSB 
    1278 153A  3C 20                            CMP     AL," " 
    1279 153C  73 15                            JAE     SEND 
    1280 153E  3C 0A                            CMP     AL,10 
    1281 1540  74 11                            JZ      SEND 
    1282 1542  3C 0D                            CMP     AL,13 
    1283 1544  74 0D                            JZ      SEND 
    1284 1546  3C 09                            CMP     AL,9 
    1285 1548  74 09                            JZ      SEND 
    1286 154A  50                               PUSH    AX 
    1287 154B  B0 5E                            MOV     AL,"^" 
    1288 154D  E8 0000 E                        CALL    OUT 
    1289 1550  58                               POP     AX 
    1290 1551  0C 40                            OR      AL,40H 
    1291 1553                           SEND: 
    1292 1553  E8 0000 E                        CALL    OUT 
    1293 1556  3C 0A                            CMP     AL,10 
    1294 1558  E0 DF                            LOOPNZ  OUTLN 
    1295 155A  E3 05                            JCXZ    RET7 
    1296 155C  43                               INC     BX 
    1297 155D  4F                               DEC     DI 
    1298 155E  75 D4                            JNZ     DISPLN 
    1299 1560  4B                               DEC     BX 
    1300 1561  C3                       RET7:   RET 
    1301                                 
    1302 1562                           LOADBUF: 
    1303 1562  BF 00B0 R                        MOV     DI,2 + OFFSET DG:EDITBU
					F 
    1304 1565  B9 00FF                          MOV     CX,255 
    1305 1568  BA FFFF                          MOV     DX,-1 
    1306 156B                           LOADLP: 
    1307 156B  AC                               LODSB 
    1308 156C  AA                               STOSB 
    1309 156D  42                               INC     DX 
    1310 156E  3C 0D                            CMP     AL,13 
    1311 1570  E0 F9                            LOOPNZ  LOADLP 
    1312 1572  88 16 00AF R                     MOV     [EDITBUF+1],DL 
    1313 1576  74 E9                            JZ      RET7 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 16:04:08

EDLIN for MSDOS 2.0                                         Page     1-34
Main Body                                                   

    1314 1578                           TRUNCLP: 
    1315 1578  AC                               LODSB 
    1316 1579  42                               INC     DX 
    1317 157A  3C 0D                            CMP     AL,13 
    1318 157C  75 FA                            JNZ     TRUNCLP 
    1319 157E  4F                               DEC     DI 
    1320 157F  AA                               STOSB 
    1321 1580  C3                               RET 
    1322                                 
    1323 1581  E9 166E R                NOTFNDJ:JMP     NOTFND 
    1324                                 
    1325 1584                           replac_from_curr: 
    1326 1584  C6 06 0227 R 01                  mov     byte ptr [srchmod],1   
					;search from curr+1 line 
    1327 1589  EB 05                            jmp     short sj6 
    1328                                 
    1329 158B                           REPLAC: 
    1330 158B  C6 06 0227 R 00                  mov     byte ptr [srchmod],0   
					;search from beg of buffer 
    1331 1590                           sj6: 
    1332 1590  C6 06 0223 R 00                  MOV     BYTE PTR [SRCHFLG],0 
    1333 1595  E8 0000 E                        CALL    FNDFIRST 
    1334 1598  75 E7                            JNZ     NOTFNDJ 
    1335 159A                           REPLP: 
    1336 159A  8B 36 0018 R                     MOV     SI,[NUMPOS] 
    1337 159E  E8 1562 R                        CALL    LOADBUF         ;Count 
					length of line 
    1338 15A1  2B 16 0010 R                     SUB     DX,[OLDLEN] 
    1339 15A5  8B 0E 0012 R                     MOV     CX,[NEWLEN] 
    1340 15A9  03 D1                            ADD     DX,CX           ;Length
					 of new line 
    1341 15AB  81 FA 00FE                       CMP     DX,254 
    1342 15AF  77 6F                            JA      TOOLONG 
    1343 15B1  8B 1E 0016 R                     MOV     BX,[LSTNUM] 
    1344 15B5  52                               PUSH    DX 
    1345 15B6  E8 0000 E                        CALL    SHOWNUM 
    1346 15B9  5A                               POP     DX 
    1347 15BA  8B 0E 0014 R                     MOV     CX,[LSTFND] 
    1348 15BE  8B 36 0018 R                     MOV     SI,[NUMPOS] 
    1349 15C2  2B CE                            SUB     CX,SI           ;Get no
					. of char on line before change 
    1350 15C4  49                               DEC     CX 
    1351 15C5  E8 1616 R                        CALL    OUTCNT          ;Output
					 first part of line 
    1352 15C8  56                               PUSH    SI 
    1353 15C9  BE 0171 R                        MOV     SI,1+ OFFSET DG:TXT2 
    1354 15CC  8B 0E 0012 R                     MOV     CX,[NEWLEN] 
    1355 15D0  E8 1616 R                        CALL    OUTCNT          ;Output
					 change 
    1356 15D3  5E                               POP     SI 
    1357 15D4  03 36 0010 R                     ADD     SI,[OLDLEN]     ;Skip o
					ver old stuff in line 
    1358 15D8  8B CA                            MOV     CX,DX           ;DX=no.
					 of char left in line 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 16:04:08

EDLIN for MSDOS 2.0                                         Page     1-35
Main Body                                                   

    1359 15DA  83 C1 02                         ADD     CX,2            ;Includ
					e CR/LF 
    1360 15DD  E8 1616 R                        CALL    OUTCNT          ;Output
					 last part of line 
    1361 15E0  E8 0000 E                        CALL    QUERY           ;Check 
					if change OK 
    1362 15E3  75 2A                            JNZ     REPNXT 
    1363 15E5  E8 1676 R                        CALL    PUTCURS 
    1364 15E8  8B 3E 0014 R                     MOV     DI,[LSTFND] 
    1365 15EC  4F                               DEC     DI 
    1366 15ED  BE 0171 R                        MOV     SI,1+ OFFSET DG:TXT2 
    1367 15F0  8B 16 0010 R                     MOV     DX,[OLDLEN] 
    1368 15F4  8B 0E 0012 R                     MOV     CX,[NEWLEN] 
    1369 15F8  49                               DEC     CX 
    1370 15F9  01 0E 0014 R                     ADD     [LSTFND],CX     ;Bump p
					ointer beyond new text 
    1371 15FD  41                               INC     CX 
    1372 15FE  4A                               DEC     DX 
    1373 15FF  29 16 001A R                     SUB     [SRCHCNT],DX    ;Old te
					xt will not be searched 
    1374 1603  73 06                            JAE     SOMELEFT 
    1375 1605  C7 06 001A R 0000                MOV     [SRCHCNT],0 
    1376 160B                           SOMELEFT: 
    1377 160B  42                               INC     DX 
    1378 160C  E8 171E R                        CALL    REPLACE 
    1379 160F                           REPNXT: 
    1380 160F  E8 0000 E                        CALL    FNDNEXT 
    1381 1612  75 0B                            JNZ     RET8 
    1382 1614  EB 84                            JMP     REPLP 
    1383                                 
    1384 1616                           OUTCNT: 
    1385 1616  E3 07                            JCXZ    RET8 
    1386 1618                           OUTLP: 
    1387 1618  AC                               LODSB 
    1388 1619  E8 0000 E                        CALL    OUT 
    1389 161C  4A                               DEC     DX 
    1390 161D  E2 F9                            LOOP    OUTLP 
    1391 161F  C3                       RET8:   RET 
    1392                                 
    1393 1620                           TOOLONG: 
    1394 1620  BA 0000 E                        MOV     DX,OFFSET DG:TOOLNG 
    1395 1623  EB 4C                            JMP     SHORT PERR 
    1396                                 
    1397 1625                           search_from_curr: 
    1398 1625  C6 06 0227 R 01                  mov     byte ptr [srchmod],1   
					;search from curr+1 line 
    1399 162A  EB 05                            jmp     short sj7 
    1400                                 
    1401 162C                           SEARCH: 
    1402 162C  C6 06 0227 R 00                  mov     byte ptr [srchmod],0   
					;search from beg of buffer 
    1403 1631                           sj7: 
    1404 1631  C6 06 0223 R 01                  MOV     BYTE PTR [SRCHFLG],1 
    1405 1636  E8 0000 E                        CALL    FNDFIRST 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 16:04:08

EDLIN for MSDOS 2.0                                         Page     1-36
Main Body                                                   

    1406 1639  75 33                            JNZ     NOTFND 
    1407 163B                           SRCH: 
    1408 163B  8B 1E 0016 R                     MOV     BX,[LSTNUM] 
    1409 163F  8B 36 0018 R                     MOV     SI,[NUMPOS] 
    1410 1643  E8 1525 R                        CALL    DISPONE 
    1411 1646  8B 3E 0014 R                     MOV     DI,[LSTFND] 
    1412 164A  8B 0E 001A R                     MOV     CX,[SRCHCNT] 
    1413 164E  B0 0A                            MOV     AL,10 
    1414 1650  F2/ AE                           REPNE   SCASB 
    1415 1652  75 1A                            JNZ     NOTFND 
    1416 1654  89 3E 0014 R                     MOV     [LSTFND],DI 
    1417 1658  89 3E 0018 R                     MOV     [NUMPOS],DI 
    1418 165C  89 0E 001A R                     MOV     [SRCHCNT],CX 
    1419 1660  FF 06 0016 R                     INC     [LSTNUM] 
    1420 1664  E8 0000 E                        CALL    QUERY 
    1421 1667  74 0D                            JZ      PUTCURS 
    1422 1669  E8 0000 E                        CALL    FNDNEXT 
    1423 166C  74 CD                            JZ      SRCH 
    1424 166E                           NOTFND: 
    1425 166E  BA 0000 E                        MOV     DX,OFFSET DG:NOSUCH 
    1426 1671                           PERR: 
    1427 1671  B4 09                            MOV     AH,STD_CON_STRING_OUTPU
					T 
    1428 1673  CD 21                            INT     21H 
    1429 1675  C3                               RET 
    1430                                 
    1431 1676                           PUTCURS: 
    1432 1676  8B 1E 0016 R                     MOV     BX,[LSTNUM] 
    1433 167A  4B                               DEC     BX                     
					 ;Current <= Last matched line 
    1434 167B  E8 0000 E                        CALL    FINDLIN 
    1435 167E  89 16 001C R                     MOV     [CURRENT],DX 
    1436 1682  89 3E 001E R                     MOV     [POINTER],DI 
    1437 1686  C3                       RET9:   RET 
    1438                                 
    1439 1687                           DELETE: 
    1440 1687  8B 1E 0000 R                     MOV     BX,[PARAM1] 
    1441 168B  0B DB                            OR      BX,BX 
    1442 168D  75 07                            JNZ     DELFIN1 
    1443 168F  8B 1E 001C R                     MOV     BX,[CURRENT] 
    1444 1693  E8 121B R                        CALL    CHKRANGE 
    1445 1696                           DELFIN1: 
    1446 1696  E8 0000 E                        CALL    FINDLIN 
    1447 1699  75 EB                            JNZ     RET9 
    1448 169B  53                               PUSH    BX 
    1449 169C  57                               PUSH    DI 
    1450 169D  8B 1E 0002 R                     MOV     BX,[PARAM2] 
    1451 16A1  0B DB                            OR      BX,BX 
    1452 16A3  75 02                            JNZ     DELFIN2 
    1453 16A5  8B DA                            MOV     BX,DX 
    1454 16A7                           DELFIN2: 
    1455 16A7  43                               INC     BX 
    1456 16A8  E8 0000 E                        CALL    FINDLIN 
    1457 16AB  8B D7                            MOV     DX,DI 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 16:04:08

EDLIN for MSDOS 2.0                                         Page     1-37
Main Body                                                   

    1458 16AD  5F                               POP     DI 
    1459 16AE  2B D7                            SUB     DX,DI 
    1460 16B0  76 0C                            JBE     COMERRJ 
    1461 16B2  8F 06 001C R                     POP     [CURRENT] 
    1462 16B6  89 3E 001E R                     MOV     [POINTER],DI 
    1463 16BA  33 C9                            XOR     CX,CX 
    1464 16BC  EB 60                            JMP     SHORT REPLACE 
    1465                                 
    1466 16BE  E9 1228 R                COMERRJ:JMP     COMERR 
    1467                                 
    1468                                 
    1469 16C1                           NOCOM: 
    1470 16C1  FF 0E 0028 R                     DEC     [COMLINE] 
    1471 16C5  8B 1E 0000 R                     MOV     BX,[PARAM1] 
    1472 16C9  0B DB                            OR      BX,BX 
    1473 16CB  75 08                            JNZ     HAVLIN 
    1474 16CD  8B 1E 001C R                     MOV     BX,[CURRENT] 
    1475 16D1  43                               INC     BX      ;Default is cur
					rent line plus one 
    1476 16D2  E8 121B R                        CALL    CHKRANGE 
    1477 16D5                           HAVLIN: 
    1478 16D5  E8 0000 E                        CALL    FINDLIN 
    1479 16D8  8B F7                            MOV     SI,DI 
    1480 16DA  89 16 001C R                     MOV     [CURRENT],DX 
    1481 16DE  89 36 001E R                     MOV     [POINTER],SI 
    1482 16E2  74 01                            jz      sj12 
    1483 16E4  C3                               ret 
    1484 16E5                           sj12: 
    1485 16E5  3B 36 0026 R                     CMP     SI,[ENDTXT] 
    1486 16E9  74 67                            JZ      RET12 
    1487 16EB  E8 1562 R                        CALL    LOADBUF 
    1488 16EE  89 16 0010 R                     MOV     [OLDLEN],DX 
    1489 16F2  8B 36 001E R                     MOV     SI,[POINTER] 
    1490 16F6  E8 1525 R                        CALL    DISPONE 
    1491 16F9  E8 0000 E                        CALL    SHOWNUM 
    1492 16FC  B4 0A                            MOV     AH,STD_CON_STRING_INPUT
					           ;Get input buffer 
    1493 16FE  BA 00AE R                        MOV     DX,OFFSET DG:EDITBUF 
    1494 1701  CD 21                            INT     21H 
    1495 1703  B0 0A                            MOV     AL,10 
    1496 1705  E8 0000 E                        CALL    OUT 
    1497 1708  8A 0E 00AF R                     MOV     CL,[EDITBUF+1] 
    1498 170C  B5 00                            MOV     CH,0 
    1499 170E  E3 42                            JCXZ    RET12 
    1500 1710  8B 16 0010 R                     MOV     DX,[OLDLEN] 
    1501 1714  BE 00B0 R                        MOV     SI,2 + OFFSET DG:EDITBU
					F 
    1502                                ;--------------------------------------
					--------------------------------- 
    1503 1717  E8 0000 E                        call    unquote                
					 ;scan for quote chars if any 
    1504                                ;--------------------------------------
					--------------------------------- 
    1505 171A  8B 3E 001E R                     MOV     DI,[POINTER] 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 16:04:08

EDLIN for MSDOS 2.0                                         Page     1-38
Main Body                                                   

    1506                                 
    1507 171E                           REPLACE: 
    1508                                 
    1509                                ; Inputs: 
    1510                                ;       CX = Length of new text 
    1511                                ;       DX = Length of original text 
    1512                                ;       SI = Pointer to new text 
    1513                                ;       DI = Pointer to old text in buf
					fer 
    1514                                ; Function: 
    1515                                ;       New text replaces old text in b
					uffer and buffer 
    1516                                ;       size is adjusted. CX or DX may 
					be zero. 
    1517                                ; CX, SI, DI all destroyed. No other re
					gisters affected. 
    1518                                 
    1519 171E  3B CA                            CMP     CX,DX 
    1520 1720  74 2E                            JZ      COPYIN 
    1521 1722  56                               PUSH    SI 
    1522 1723  57                               PUSH    DI 
    1523 1724  51                               PUSH    CX 
    1524 1725  8B F7                            MOV     SI,DI 
    1525 1727  03 F2                            ADD     SI,DX 
    1526 1729  03 F9                            ADD     DI,CX 
    1527 172B  A1 0026 R                        MOV     AX,[ENDTXT] 
    1528 172E  2B C2                            SUB     AX,DX 
    1529 1730  03 C1                            ADD     AX,CX 
    1530 1732  3B 06 0024 R                     CMP     AX,[LAST] 
    1531 1736  73 1B                            JAE     MEMERR 
    1532 1738  87 06 0026 R                     XCHG    AX,[ENDTXT] 
    1533 173C  8B C8                            MOV     CX,AX 
    1534 173E  2B CE                            SUB     CX,SI 
    1535 1740  3B F7                            CMP     SI,DI 
    1536 1742  77 05                            JA      DOMOV 
    1537 1744  03 F1                            ADD     SI,CX 
    1538 1746  03 F9                            ADD     DI,CX 
    1539 1748  FD                               STD 
    1540 1749                           DOMOV: 
    1541 1749  41                               INC     CX 
    1542                                 
    1543 174A  F3/ A4                           REP     MOVSB 
    1544 174C  FC                               CLD 
    1545 174D  59                               POP     CX 
    1546 174E  5F                               POP     DI 
    1547 174F  5E                               POP     SI 
    1548 1750                           COPYIN: 
    1549 1750  F3/ A4                           REP     MOVSB 
    1550 1752  C3                       RET12:  RET 
    1551                                 
    1552 1753                           MEMERR: 
    1553 1753  BA 0000 E                        MOV     DX,OFFSET DG:MEMFUL 
    1554 1756  B4 09                            MOV     AH,STD_CON_STRING_OUTPU
					T 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 16:04:08

EDLIN for MSDOS 2.0                                         Page     1-39
Main Body                                                   

    1555 1758  CD 21                            INT     21H 
    1556 175A  E9 1150 R                        JMP     COMMAND 
    1557                                 
    1558 175D                           MOVERR: 
    1559 175D  BA 0000 E                        MOV     DX,OFFSET DG:BADCOM 
    1560 1760                           ERRORJ: 
    1561 1760  E9 1228 R                        JMP     COMERR 
    1562                                 
    1563 1763                           MOVE: 
    1564 1763  C6 06 0228 R 01                  MOV     BYTE PTR [MOVFLG],1 
    1565 1768  EB 05                            JMP     SHORT BLKMOVE 
    1566 176A                           COPY: 
    1567 176A  C6 06 0228 R 00                  MOV     BYTE PTR [MOVFLG],0 
    1568                                 
    1569 176F                           BLKMOVE: 
    1570 176F  8B 1E 0004 R                     MOV     BX,[PARAM3]            
					 ;Third parameter must be specified 
    1571 1773  0B DB                            OR      BX,BX 
    1572 1775  BA 0000 E                        MOV     DX,OFFSET DG:DEST 
    1573 1778  74 E6                            JZ      ERRORJ 
    1574 177A  8B 1E 0000 R                     MOV     BX,[PARAM1]            
					 ;Get the first parameter 
    1575 177E  0B DB                            OR      BX,BX                  
					 ;Not specified? 
    1576 1780  75 0B                            JNZ     NXTARG 
    1577 1782  8B 1E 001C R                     MOV     BX,[CURRENT]           
					 ;Defaults to the current line 
    1578 1786  E8 121B R                        CALL    CHKRANGE 
    1579 1789  89 1E 0000 R                     MOV     [PARAM1],BX            
					 ;Save it since current line may change
					 
    1580 178D                            NXTARG: 
    1581 178D  E8 0000 E                        CALL    FINDLIN                
					 ;Get a pointer to the line 
    1582 1790  89 3E 0008 R                     MOV     [PTR_1],DI             
					 ;Save it 
    1583 1794  8B 1E 0002 R                     MOV     BX,[PARAM2]            
					 ;Get the second parameter 
    1584 1798  0B DB                            OR      BX,BX                  
					 ;Not specified? 
    1585 179A  75 08                            JNZ     HAVARGS 
    1586 179C  8B 1E 001C R                     MOV     BX,[CURRENT]           
					 ;Defaults to the current line 
    1587 17A0  89 1E 0002 R                     MOV     [PARAM2],BX            
					 ;Save it since current line may change
					 
    1588 17A4                           HAVARGS: 
    1589                                        ;Parameters must not overlap 
    1590 17A4  8B 16 0004 R                     MOV     DX,[PARAM3] 
    1591 17A8  3B 16 0000 R                     CMP     DX,[PARAM1] 
    1592 17AC  76 06                            JBE     NOERROR 
    1593 17AE  3B 16 0002 R                     CMP     DX,[PARAM2] 
    1594 17B2  76 A9                            JBE     MOVERR 
    1595 17B4                           NOERROR: 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 16:04:08

EDLIN for MSDOS 2.0                                         Page     1-40
Main Body                                                   

    1596 17B4  43                               INC     BX                     
					 ;Get pointer to line Param2+1 
    1597 17B5  E8 0000 E                        CALL    FINDLIN 
    1598 17B8  8B F7                            MOV     SI,DI 
    1599 17BA  89 36 000A R                     MOV     [PTR_2],SI             
					 ;Save it 
    1600 17BE  8B CF                            MOV     CX,DI 
    1601 17C0  8B 3E 0008 R                     MOV     DI,[PTR_1]             
					 ;Restore pointer to line Param1 
    1602 17C4  2B CF                            SUB     CX,DI                  
					 ;Calculate number of bytes to copy 
    1603 17C6  89 0E 000E R                     MOV     [COPYSIZ],CX           
					 ;Save in COPYSIZ 
    1604 17CA  51                               PUSH    CX                     
					 ;And on the stack 
    1605 17CB  A1 0006 R                        MOV     AX,[PARAM4]            
					 ;Is count specified? 
    1606 17CE  0B C0                            OR      AX,AX 
    1607 17D0  74 11                            JZ      MEM_CHECK 
    1608 17D2  F7 26 000E R                     MUL     [COPYSIZ] 
    1609 17D6  0B D2                            OR      DX,DX 
    1610 17D8  74 03                            JZ      COPYSIZ_OK 
    1611 17DA  E9 1753 R                        JMP     MEMERR 
    1612 17DD                           COPYSIZ_OK: 
    1613 17DD  8B C8                            MOV     CX,AX 
    1614 17DF  89 0E 000E R                     MOV     [COPYSIZ],CX 
    1615 17E3                           MEM_CHECK: 
    1616 17E3  A1 0026 R                        MOV     AX,[ENDTXT] 
    1617 17E6  8B 3E 0024 R                     MOV     DI,[LAST] 
    1618 17EA  2B F8                            SUB     DI,AX 
    1619 17EC  3B F9                            CMP     DI,CX 
    1620 17EE  73 03                            JAE     HAV_ROOM 
    1621 17F0  E9 1753 R                        JMP     MEMERR 
    1622 17F3                           HAV_ROOM: 
    1623 17F3  8B 1E 0004 R                     MOV     BX,[PARAM3] 
    1624 17F7  53                               PUSH    BX 
    1625 17F8  E8 0000 E                        CALL    FINDLIN 
    1626 17FB  89 3E 000C R                     MOV     [PTR_3],DI 
    1627 17FF  8B 0E 0026 R                     MOV     CX,[ENDTXT] 
    1628 1803  2B CF                            SUB     CX,DI 
    1629 1805  41                               INC     CX 
    1630 1806  8B 36 0026 R                     MOV     SI,[ENDTXT] 
    1631 180A  8B FE                            MOV     DI,SI 
    1632 180C  03 3E 000E R                     ADD     DI,[COPYSIZ] 
    1633 1810  89 3E 0026 R                     MOV     [ENDTXT],DI 
    1634 1814  FD                               STD 
    1635 1815  F3/ A4                           REP     MOVSB 
    1636 1817  FC                               CLD 
    1637 1818  5B                               POP     BX 
    1638 1819  3B 1E 0000 R                     CMP     BX,[PARAM1] 
    1639 181D  72 06                            JB      GET_PTR_2 
    1640 181F  8B 36 0008 R                     MOV     SI,[PTR_1] 
    1641 1823  EB 04                            JMP     SHORT COPY_TEXT 
    1642 1825                           GET_PTR_2: 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 16:04:08

EDLIN for MSDOS 2.0                                         Page     1-41
Main Body                                                   

    1643 1825  8B 36 000A R                     MOV     SI,[PTR_2] 
    1644 1829                           COPY_TEXT: 
    1645 1829  8B 1E 0006 R                     MOV     BX,[PARAM4] 
    1646 182D  8B 3E 000C R                     MOV     DI,[PTR_3] 
    1647 1831  59                               POP     CX 
    1648 1832  89 0E 000E R                     MOV     [COPYSIZ],CX 
    1649 1836                           COPY_TEXT_1: 
    1650 1836  F3/ A4                           REP     MOVSB 
    1651 1838  4B                               DEC     BX 
    1652 1839  83 FB 00                         CMP     BX,0 
    1653 183C  7E 0E                            JLE     MOV_CHK 
    1654 183E  89 1E 0006 R                     MOV     [PARAM4],BX 
    1655 1842  2B 36 000E R                     SUB     SI,[COPYSIZ] 
    1656 1846  8B 0E 000E R                     MOV     CX,[COPYSIZ] 
    1657 184A  EB EA                            JMP     SHORT COPY_TEXT_1 
    1658 184C                           MOV_CHK: 
    1659 184C  80 3E 0228 R 00                  CMP     BYTE PTR[MOVFLG],0 
    1660 1851  74 36                            JZ      COPY_DONE 
    1661 1853  8B 3E 0008 R                     MOV     DI,[PTR_1] 
    1662 1857  8B 36 000A R                     MOV     SI,[PTR_2] 
    1663 185B  8B 1E 0004 R                     MOV     BX,[PARAM3] 
    1664 185F  3B 1E 0000 R                     CMP     BX,[PARAM1] 
    1665 1863  73 08                            JAE     DEL_TEXT 
    1666 1865  03 3E 000E R                     ADD     DI,[COPYSIZ] 
    1667 1869  03 36 000E R                     ADD     SI,[COPYSIZ] 
    1668 186D                           DEL_TEXT: 
    1669 186D  8B 0E 0026 R                     MOV     CX,[ENDTXT] 
    1670 1871  2B CE                            SUB     CX,SI 
    1671 1873  F3/ A4                           REP     MOVSB 
    1672 1875  89 3E 0026 R                     MOV     [ENDTXT],DI 
    1673 1879  8B 0E 0002 R                     MOV     CX,[PARAM2] 
    1674 187D  2B 0E 0000 R                     SUB     CX,[PARAM1] 
    1675 1881  8B 1E 0004 R                     MOV     BX,[PARAM3] 
    1676 1885  2B D9                            SUB     BX,CX 
    1677 1887  73 04                            JNC     MOVE_DONE 
    1678 1889                           COPY_DONE: 
    1679 1889  8B 1E 0004 R                     MOV     BX,[PARAM3] 
    1680 188D                           MOVE_DONE: 
    1681 188D  E8 0000 E                        CALL    FINDLIN 
    1682 1890  89 3E 001E R                     MOV     [POINTER],DI 
    1683 1894  89 1E 001C R                     MOV     [CURRENT],BX 
    1684 1898  C3                               RET 
    1685                                 
    1686                                 
    1687 1899                           MOVEFILE: 
    1688 1899  8B 0E 0026 R                     MOV     CX,[ENDTXT]            
					 ;Get End-of-text marker 
    1689 189D  8B F1                            MOV     SI,CX 
    1690 189F  2B CF                            SUB     CX,DI                  
					 ;Calculate number of bytes to copy 
    1691 18A1  41                               INC     CX 
    1692 18A2  8B FA                            MOV     DI,DX 
    1693 18A4  FD                               STD 
    1694 18A5  F3/ A4                           REP     MOVSB                  
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 16:04:08

EDLIN for MSDOS 2.0                                         Page     1-42
Main Body                                                   

					 ;Copy CX bytes 
    1695 18A7  87 F7                            XCHG    SI,DI 
    1696 18A9  FC                               CLD 
    1697 18AA  47                               INC     DI 
    1698 18AB  8B EE                            MOV     BP,SI 
    1699 18AD                           SETPTS: 
    1700 18AD  89 3E 001E R                     MOV     [POINTER],DI           
					 ;Current line is first free loc 
    1701 18B1  89 1E 001C R                     MOV     [CURRENT],BX           
					 ;   in the file 
    1702 18B5  89 2E 0026 R                     MOV     [ENDTXT],BP            
					 ;End-of-text is last free loc before 
    1703 18B9  C3                               RET 
    1704                                 
    1705 18BA                           NAMERR: 
    1706 18BA  E9 122B R                        JMP     COMERR1 
    1707                                 
    1708                                 
    1709 18BD                           MERGE: 
    1710 18BD  B8 2901                          MOV     AX,(PARSE_FILE_DESCRIPT
					OR SHL 8) OR 1 
    1711 18C0  BF 01D6 R                        MOV     DI,OFFSET DG:FCB3 
    1712 18C3  CD 21                            INT     21H 
    1713 18C5  0A C0                            OR      AL,AL 
    1714 18C7  BA 0000 E                        MOV     DX,OFFSET DG:BADDRV 
    1715 18CA  75 EE                            JNZ     NAMERR 
    1716 18CC  89 36 0028 R                     MOV     [COMLINE],SI 
    1717 18D0  BA 01D6 R                        MOV     DX,OFFSET DG:FCB3 
    1718 18D3  B4 0F                            MOV     AH,FCB_OPEN 
    1719 18D5  CD 21                            INT     21H 
    1720 18D7  0A C0                            OR      AL,AL 
    1721 18D9  BA 0000 E                        MOV     DX,OFFSET DG:FILENM 
    1722 18DC  75 DC                            JNZ     NAMERR 
    1723 18DE  B8 2523                          MOV     AX,(SET_INTERRUPT_VECTO
					R SHL 8) OR 23H 
    1724 18E1  BA 19C5 R                        MOV     DX,OFFSET DG:ABORTMERGE
					 
    1725 18E4  CD 21                            INT     21H 
    1726 18E6  8B 1E 0000 R                     MOV     BX,[PARAM1] 
    1727 18EA  0B DB                            OR      BX,BX 
    1728 18EC  75 07                            JNZ     MRG 
    1729 18EE  8B 1E 001C R                     MOV     BX,[CURRENT] 
    1730 18F2  E8 121B R                        CALL    CHKRANGE 
    1731 18F5                           MRG: 
    1732 18F5  E8 0000 E                        CALL    FINDLIN 
    1733 18F8  8B DA                            MOV     BX,DX 
    1734 18FA  8B 16 0024 R                     MOV     DX,[LAST] 
    1735 18FE  E8 1899 R                        CALL    MOVEFILE 
    1736                                        ;Set DMA address for reading in
					 new file 
    1737 1901  8B 16 001E R                     MOV     DX,[POINTER] 
    1738 1905  B4 1A                            MOV     AH,SET_DMA 
    1739 1907  CD 21                            INT     21H 
    1740 1909  33 C0                            XOR     AX,AX 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 16:04:08

EDLIN for MSDOS 2.0                                         Page     1-43
Main Body                                                   

    1741 190B  A3 01F7 R                        MOV     WORD PTR DS:[FCB3+fcb_R
					R],AX 
    1742 190E  A3 01F9 R                        MOV     WORD PTR DS:[FCB3+fcb_R
					R+2],AX 
    1743 1911  40                               INC     AX 
    1744 1912  A3 01E4 R                        MOV     WORD PTR DS:[FCB3+fcb_R
					ECSIZ],AX 
    1745 1915  BA 01D6 R                        MOV     DX,OFFSET DG:FCB3 
    1746 1918  8B 0E 0026 R                     MOV     CX,[ENDTXT] 
    1747 191C  2B 0E 001E R                     SUB     CX,[POINTER] 
    1748 1920  B4 27                            MOV     AH,FCB_RANDOM_READ_BLOC
					K 
    1749 1922  CD 21                            INT     21H 
    1750 1924  3C 01                            CMP     AL,1 
    1751 1926  74 0D                            JZ      FILEMRG 
    1752 1928  BA 0000 E                        MOV     DX,OFFSET DG:MRGERR 
    1753 192B  B4 09                            MOV     AH,STD_CON_STRING_OUTPU
					T 
    1754 192D  CD 21                            INT     21H 
    1755 192F  8B 0E 001E R                     MOV     CX,[POINTER] 
    1756 1933  EB 0D                            JMP     SHORT RESTORE 
    1757 1935                           FILEMRG: 
    1758 1935  03 0E 001E R                     ADD     CX,[POINTER] 
    1759 1939  8B F1                            MOV     SI,CX 
    1760 193B  4E                               DEC     SI 
    1761 193C  AC                               LODSB 
    1762 193D  3C 1A                            CMP     AL,1AH 
    1763 193F  75 01                            JNZ     RESTORE 
    1764 1941  49                               DEC     CX 
    1765 1942                           RESTORE: 
    1766 1942  8B F9                            MOV     DI,CX 
    1767 1944  8B 36 0026 R                     MOV     SI,[ENDTXT] 
    1768 1948  46                               INC     SI 
    1769 1949  8B 0E 0024 R                     MOV     CX,[LAST] 
    1770 194D  2B CE                            SUB     CX,SI 
    1771 194F  F3/ A4                           REP     MOVSB 
    1772 1951  89 3E 0026 R                     MOV     [ENDTXT],DI 
    1773 1955  C6 05 1A                         MOV     BYTE PTR [DI],1AH 
    1774 1958  BA 01D6 R                        MOV     DX,OFFSET DG:FCB3 
    1775 195B  B4 10                            MOV     AH,FCB_CLOSE 
    1776 195D  CD 21                            INT     21H 
    1777 195F  BA 02A9 R                        MOV     DX,OFFSET DG:START 
    1778 1962  B4 1A                            MOV     AH,SET_DMA 
    1779 1964  CD 21                            INT     21H 
    1780 1966  C3                               RET 
    1781                                 
    1782                                 
    1783 1967                           INSERT: 
    1784 1967  B8 2523                          MOV     AX,(SET_INTERRUPT_VECTO
					R SHL 8) OR 23H        ;Set vector 23H 
    1785 196A  BA 19CC R                        MOV     DX,OFFSET DG:ABORTINS 
    1786 196D  CD 21                            INT     21H 
    1787 196F  8B 1E 0000 R                     MOV     BX,[PARAM1] 
    1788 1973  0B DB                            OR      BX,BX 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 16:04:08

EDLIN for MSDOS 2.0                                         Page     1-44
Main Body                                                   

    1789 1975  75 07                            JNZ     INS 
    1790 1977  8B 1E 001C R                     MOV     BX,[CURRENT] 
    1791 197B  E8 121B R                        CALL    CHKRANGE 
    1792 197E                           INS: 
    1793 197E  E8 0000 E                        CALL    FINDLIN 
    1794 1981  8B DA                            MOV     BX,DX 
    1795 1983  8B 16 0024 R                     MOV     DX,[LAST] 
    1796 1987  E8 1899 R                        CALL    MOVEFILE 
    1797 198A                           INLP: 
    1798 198A  E8 18AD R                        CALL    SETPTS                 
					 ;Update the pointers into file 
    1799 198D  E8 0000 E                        CALL    SHOWNUM 
    1800 1990  BA 00AE R                        MOV     DX,OFFSET DG:EDITBUF 
    1801 1993  B4 0A                            MOV     AH,STD_CON_STRING_INPUT
					 
    1802 1995  CD 21                            INT     21H 
    1803 1997  E8 0000 E                        CALL    LF 
    1804 199A  BE 00B0 R                        MOV     SI,2 + OFFSET DG:EDITBU
					F 
    1805 199D  80 3C 1A                         CMP     BYTE PTR [SI],1AH 
    1806 19A0  74 3F                            JZ      ENDINS 
    1807                                ;--------------------------------------
					--------------------------------- 
    1808 19A2  E8 0000 E                        call    unquote                
					 ;scan for quote chars if any 
    1809                                ;--------------------------------------
					--------------------------------- 
    1810 19A5  8A 4C FF                         MOV     CL,[SI-1] 
    1811 19A8  B5 00                            MOV     CH,0 
    1812 19AA  8B D7                            MOV     DX,DI 
    1813 19AC  41                               INC     CX 
    1814 19AD  03 D1                            ADD     DX,CX 
    1815 19AF  72 06                            JC      MEMERRJ1 
    1816 19B1  74 04                            JZ      MEMERRJ1 
    1817 19B3  3B D5                            CMP     DX,BP 
    1818 19B5  72 06                            JB      MEMOK 
    1819 19B7                           MEMERRJ1: 
    1820 19B7  E8 19E5 R                        CALL    END_INS 
    1821 19BA  E9 1753 R                        JMP     MEMERR 
    1822 19BD                           MEMOK: 
    1823 19BD  F3/ A4                           REP     MOVSB 
    1824 19BF  B0 0A                            MOV     AL,10 
    1825 19C1  AA                               STOSB 
    1826 19C2  43                               INC     BX 
    1827 19C3  EB C5                            JMP     SHORT INLP 
    1828                                 
    1829 19C5                           ABORTMERGE: 
    1830 19C5  BA 02A9 R                        MOV     DX,OFFSET DG:START 
    1831 19C8  B4 1A                            MOV     AH,SET_DMA 
    1832 19CA  CD 21                            INT     21H 
    1833                                 
    1834 19CC                           ABORTINS: 
    1835 19CC  8C C8                            MOV     AX,CS           ;Restor
					e segment registers 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 16:04:08

EDLIN for MSDOS 2.0                                         Page     1-45
Main Body                                                   

    1836 19CE  8E D8                            MOV     DS,AX 
    1837 19D0  8E C0                            MOV     ES,AX 
    1838 19D2  8E D0                            MOV     SS,AX 
    1839 19D4  BC 02A9 R                        MOV     SP,OFFSET DG:STACK 
    1840 19D7  FB                               STI 
    1841 19D8  E8 0000 E                        CALL    CRLF 
    1842 19DB  E8 19E1 R                        CALL    ENDINS 
    1843 19DE  E9 11F6 R                        JMP     COMOVER 
    1844                                 
    1845 19E1                           ENDINS: 
    1846 19E1  E8 19E5 R                        CALL    END_INS 
    1847 19E4  C3                               RET 
    1848                                 
    1849 19E5                           END_INS: 
    1850 19E5  8B 2E 0026 R                     MOV     BP,[ENDTXT] 
    1851 19E9  8B 3E 001E R                     MOV     DI,[POINTER] 
    1852 19ED  8B F5                            MOV     SI,BP 
    1853 19EF  46                               INC     SI 
    1854 19F0  8B 0E 0024 R                     MOV     CX,[LAST] 
    1855 19F4  2B CD                            SUB     CX,BP 
    1856 19F6  F3/ A4                           REP     MOVSB 
    1857 19F8  4F                               DEC     DI 
    1858 19F9  89 3E 0026 R                     MOV     [ENDTXT],DI 
    1859 19FD  B8 2523                          MOV     AX,(SET_INTERRUPT_VECTO
					R SHL 8) OR 23H 
    1860 1A00  BA 1A62 R                        MOV     DX,OFFSET DG:ABORTCOM 
    1861 1A03  CD 21                            INT     21H 
    1862 1A05  C3                               RET 
    1863                                 
    1864 1A06                           FILLBUF: 
    1865 1A06  C7 06 0000 R FFFF                MOV     [PARAM1],-1     ;Read i
					n max. no of lines 
    1866 1A0C  E8 137B R                        CALL    APPEND 
    1867 1A0F                           ENDED: 
    1868                                ;Write text out to .$$$ file 
    1869 1A0F  C6 06 0222 R 01                  MOV     BYTE PTR [ENDING],1    
					 ;Suppress memory errors 
    1870 1A14  BB FFFF                          MOV     BX,-1           ;Write 
					max. no of lines 
    1871 1A17  E8 144D R                        CALL    WRT 
    1872 1A1A  F6 06 0221 R FF                  TEST    BYTE PTR [HAVEOF],-1 
    1873 1A1F  74 E5                            JZ      FILLBUF 
    1874 1A21  8B 16 0026 R                     MOV     DX,[ENDTXT] 
    1875 1A25  B4 1A                            MOV     AH,SET_DMA 
    1876 1A27  CD 21                            INT     21H 
    1877 1A29  B9 0001                          MOV     CX,1 
    1878 1A2C  BA 01B1 R                        MOV     DX,OFFSET DG:FCB2 
    1879 1A2F  B4 28                            MOV     AH,FCB_RANDOM_WRITE_BLO
					CK 
    1880 1A31  CD 21                            INT     21H              ;Write
					 end-of-file byte 
    1881                                ;Close .$$$ file 
    1882 1A33  B4 10                            MOV     AH,FCB_CLOSE 
    1883 1A35  CD 21                            INT     21H 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 16:04:08

EDLIN for MSDOS 2.0                                         Page     1-46
Main Body                                                   

    1884 1A37  BE 005C                          MOV     SI,FCB 
    1885 1A3A  8D 7C 10                         LEA     DI,[SI+fcb_FILSIZ] 
    1886 1A3D  8B D6                            MOV     DX,SI 
    1887 1A3F  B9 0009                          MOV     CX,9 
    1888 1A42  F3/ A4                           REP     MOVSB 
    1889 1A44  BE 0000 R                        MOV     SI,OFFSET DG:BAK 
    1890 1A47  A5                               MOVSW 
    1891 1A48  A4                               MOVSB 
    1892                                ;Rename original file .BAK 
    1893 1A49  B4 17                            MOV     AH,FCB_RENAME 
    1894 1A4B  CD 21                            INT     21H 
    1895 1A4D  BE 005C                          MOV     SI,FCB 
    1896 1A50  BF 01C1 R                        MOV     DI,OFFSET DG:FCB2 + fcb
					_FILSIZ 
    1897 1A53  B9 0006                          MOV     CX,6 
    1898 1A56  F3/ A5                           REP     MOVSW 
    1899                                ;Rename .$$$ file to original name 
    1900 1A58  BA 01B1 R                        MOV     DX,OFFSET DG:FCB2 
    1901 1A5B  CD 21                            INT     21H 
    1902 1A5D  E8 0000 E                        call    rest_dir               
					 ;restore directory if needed 
    1903 1A60  CD 20                            INT     20H 
    1904                                 
    1905 1A62                           ABORTCOM: 
    1906 1A62  8C C8                            MOV     AX,CS 
    1907 1A64  8E D8                            MOV     DS,AX 
    1908 1A66  8E C0                            MOV     ES,AX 
    1909 1A68  8E D0                            MOV     SS,AX 
    1910 1A6A  BC 02A9 R                        MOV     SP,OFFSET DG:STACK 
    1911 1A6D  FB                               STI 
    1912 1A6E  E8 0000 E                        CALL    CRLF 
    1913 1A71  E9 1150 R                        JMP     COMMAND 
    1914                                 
    1915 1A74                           DELBAK: 
    1916 1A74  C6 06 01F1 R 01                  MOV     BYTE PTR [DELFLG],1 
    1917 1A79  BF 01BA R                        MOV     DI,9+OFFSET DG:FCB2 
    1918 1A7C  BE 0000 R                        MOV     SI,OFFSET DG:BAK 
    1919 1A7F  A5                               MOVSW 
    1920 1A80  A4                               MOVSB 
    1921                                        ;Delete old backup file (.BAK) 
    1922 1A81  B4 13                            MOV     AH,FCB_DELETE 
    1923 1A83  BA 01B1 R                        MOV     DX,OFFSET DG:FCB2 
    1924 1A86  CD 21                            INT     21H 
    1925 1A88  BF 01BA R                        MOV     DI,9+OFFSET DG:FCB2 
    1926 1A8B  B0 24                            MOV     AL,"$" 
    1927 1A8D  AA                               STOSB 
    1928 1A8E  AA                               STOSB 
    1929 1A8F  AA                               STOSB 
    1930 1A90  C3                               RET 
    1931                                 
    1932 1A91                           CODE    ENDS 
    1933                                        END     EDLIN 

Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 16:04:08

EDLIN for MSDOS 2.0                                         Symbols-1
                                                             

Macros:

		N a m e			Lines

BREAK  . . . . . . . . . . . . .  	   2
CONDRET  . . . . . . . . . . . .  	  19
CONTEXT  . . . . . . . . . . . .  	   3
DO_EXT . . . . . . . . . . . . .  	   0
ENTRY  . . . . . . . . . . . . .  	   2
ERROR  . . . . . . . . . . . . .  	   4
INVOKE . . . . . . . . . . . . .  	   8
I_AM . . . . . . . . . . . . . .  	  14
I_NEED . . . . . . . . . . . . .  	  11
JUMP . . . . . . . . . . . . . .  	  17
LONG_ADDR  . . . . . . . . . . .  	   7
MAKELAB  . . . . . . . . . . . .  	   4
PROCEDURE  . . . . . . . . . . .  	   2
RETC . . . . . . . . . . . . . .  	   1
RETNC  . . . . . . . . . . . . .  	   1
RETNZ  . . . . . . . . . . . . .  	   1
RETURN . . . . . . . . . . . . .  	   5
RETZ . . . . . . . . . . . . . .  	   1
SHORT_ADDR . . . . . . . . . . .  	  12
TRANSFER . . . . . . . . . . . .  	   8

Structures and Records:

                N a m e                 Width   # fields
                                        Shift   Width   Mask    Initial

ARENA  . . . . . . . . . . . . .  	0005	0003
  ARENA_SIGNATURE  . . . . . . .  	0000
  ARENA_OWNER  . . . . . . . . .  	0001
  ARENA_SIZE . . . . . . . . . .  	0003
BPBLOCK  . . . . . . . . . . . .  	000D	0008
  BPSECSZ  . . . . . . . . . . .  	0000
  BPCLUS . . . . . . . . . . . .  	0002
  BPRES  . . . . . . . . . . . .  	0003
  BPFTCNT  . . . . . . . . . . .  	0005
  BPDRCNT  . . . . . . . . . . .  	0006
  BPSCCNT  . . . . . . . . . . .  	0008
  BPMEDIA  . . . . . . . . . . .  	000A
  BPFTSEC  . . . . . . . . . . .  	000B
BUFFINFO . . . . . . . . . . . .  	0010	0009
  NEXTBUF  . . . . . . . . . . .  	0000
  BUFDRV . . . . . . . . . . . .  	0004
  BUFDIRTY . . . . . . . . . . .  	0005
  BUFPRI . . . . . . . . . . . .  	0006
  VISIT  . . . . . . . . . . . .  	0007
  BUFSECNO . . . . . . . . . . .  	0008
  BUFWRTCNT  . . . . . . . . . .  	000A
  BUFWRTINC  . . . . . . . . . .  	000B
  BUFDRVDP . . . . . . . . . . .  	000C
DIR_ENTRY  . . . . . . . . . . .  	0020	0008
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 16:04:08

EDLIN for MSDOS 2.0                                         Symbols-2
                                                             

  DIR_NAME . . . . . . . . . . .  	0000
  DIR_ATTR . . . . . . . . . . .  	000B
  DIR_PAD  . . . . . . . . . . .  	000C
  DIR_TIME . . . . . . . . . . .  	0016
  DIR_DATE . . . . . . . . . . .  	0018
  DIR_FIRST  . . . . . . . . . .  	001A
  DIR_SIZE_L . . . . . . . . . .  	001C
  DIR_SIZE_H . . . . . . . . . .  	001E
DPB  . . . . . . . . . . . . . .  	005E	0012
  DPB_DRIVE  . . . . . . . . . .  	0000
  DPB_UNIT . . . . . . . . . . .  	0001
  DPB_SECTOR_SIZE  . . . . . . .  	0002
  DPB_CLUSTER_MASK . . . . . . .  	0004
  DPB_CLUSTER_SHIFT  . . . . . .  	0005
  DPB_FIRST_FAT  . . . . . . . .  	0006
  DPB_FAT_COUNT  . . . . . . . .  	0008
  DPB_ROOT_ENTRIES . . . . . . .  	0009
  DPB_FIRST_SECTOR . . . . . . .  	000B
  DPB_MAX_CLUSTER  . . . . . . .  	000D
  DPB_FAT_SIZE . . . . . . . . .  	000F
  DPB_DIR_SECTOR . . . . . . . .  	0010
  DPB_DRIVER_ADDR  . . . . . . .  	0012
  DPB_MEDIA  . . . . . . . . . .  	0016
  DPB_FIRST_ACCESS . . . . . . .  	0017
  DPB_NEXT_DPB . . . . . . . . .  	0018
  DPB_CURRENT_DIR  . . . . . . .  	001C
  DPB_DIR_TEXT . . . . . . . . .  	001E
EXEC0  . . . . . . . . . . . . .  	000E	0004
  EXEC0_ENVIRON  . . . . . . . .  	0000
  EXEC0_COM_LINE . . . . . . . .  	0002
  EXEC0_5C_FCB . . . . . . . . .  	0006
  EXEC0_6C_FCB . . . . . . . . .  	000A
EXEC1  . . . . . . . . . . . . .  	0016	0008
  EXEC1_ENVIRON  . . . . . . . .  	0000
  EXEC1_COM_LINE . . . . . . . .  	0002
  EXEC1_5C_FCB . . . . . . . . .  	0006
  EXEC1_6C_FCB . . . . . . . . .  	000A
  EXEC1_SP . . . . . . . . . . .  	000E
  EXEC1_SS . . . . . . . . . . .  	0010
  EXEC1_IP . . . . . . . . . . .  	0012
  EXEC1_CS . . . . . . . . . . .  	0014
EXEC3  . . . . . . . . . . . . .  	0004	0002
  EXEC3_LOAD_ADDR  . . . . . . .  	0000
  EXEC3_RELOC_FAC  . . . . . . .  	0002
EXE_FILE . . . . . . . . . . . .  	0020	000F
  EXE_SIGNATURE  . . . . . . . .  	0000
  EXE_LEN_MOD_512  . . . . . . .  	0002
  EXE_PAGES  . . . . . . . . . .  	0004
  EXE_RLE_COUNT  . . . . . . . .  	0006
  EXE_PAR_DIR  . . . . . . . . .  	0008
  EXE_MIN_BSS  . . . . . . . . .  	000A
  EXE_MAX_BSS  . . . . . . . . .  	000C
  EXE_SS . . . . . . . . . . . .  	000E
  EXE_SP . . . . . . . . . . . .  	0010
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 16:04:08

EDLIN for MSDOS 2.0                                         Symbols-3
                                                             

  EXE_CHKSUM . . . . . . . . . .  	0012
  EXE_IP . . . . . . . . . . . .  	0014
  EXE_CS . . . . . . . . . . . .  	0016
  EXE_RLE_TABLE  . . . . . . . .  	0018
  EXE_IOV  . . . . . . . . . . .  	001A
  EXE_SYM_TAB  . . . . . . . . .  	001C
FIND_BUF . . . . . . . . . . . .  	002B	000C
  FIND_BUF_SATTR . . . . . . . .  	0000
  FIND_BUF_DRIVE . . . . . . . .  	0001
  FIND_BUF_NAME  . . . . . . . .  	0002
  FIND_BUF_LASTENT . . . . . . .  	000D
  FIND_BUF_THISDPB . . . . . . .  	000F
  FIND_BUF_DIRSTART  . . . . . .  	0013
  FIND_BUF_ATTR  . . . . . . . .  	0015
  FIND_BUF_TIME  . . . . . . . .  	0016
  FIND_BUF_DATE  . . . . . . . .  	0018
  FIND_BUF_SIZE_L  . . . . . . .  	001A
  FIND_BUF_SIZE_H  . . . . . . .  	001C
  FIND_BUF_PNAME . . . . . . . .  	001E
INTERNAT_BLOCK . . . . . . . . .  	0018	0015
  DATE_TIM_FORMAT  . . . . . . .  	0000
  CURRENCY_SYM . . . . . . . . .  	0002
  THOUS_SEP  . . . . . . . . . .  	0007
  DECIMAL_SEP  . . . . . . . . .  	0009
  DATE_SEP . . . . . . . . . . .  	000B
  TIME_SEP . . . . . . . . . . .  	000D
  BIT_FEILD  . . . . . . . . . .  	000F
  CURRENCY_CENTS . . . . . . . .  	0010
  TIME_24  . . . . . . . . . . .  	0011
  MAP_CALL . . . . . . . . . . .  	0012
  DATA_SEP . . . . . . . . . . .  	0016
PROCESS_DATA_BLOCK . . . . . . .  	005B	000E
  PDB_EXIT_CALL  . . . . . . . .  	0000
  PDB_BLOCK_LEN  . . . . . . . .  	0002
  PDB_CPM_CALL . . . . . . . . .  	0005
  PDB_EXIT . . . . . . . . . . .  	000A
  PDB_CTRL_C . . . . . . . . . .  	000E
  PDB_FATAL_ABORT  . . . . . . .  	0012
  PDB_PARENT_PID . . . . . . . .  	0016
  PDB_JFN_TABLE  . . . . . . . .  	0018
  PDB_ENVIRON  . . . . . . . . .  	002C
  PDB_USER_STACK . . . . . . . .  	002E
  PDB_PAD1 . . . . . . . . . . .  	0032
  PDB_CALL_SYSTEM  . . . . . . .  	0050
  PDB_PAD2 . . . . . . . . . . .  	0055
SFT  . . . . . . . . . . . . . .  	0008	0003
  SFT_LINK . . . . . . . . . . .  	0000
  SFT_COUNT  . . . . . . . . . .  	0004
  SFT_TABLE  . . . . . . . . . .  	0006
SF_ENTRY . . . . . . . . . . . .  	0028	0004
  SF_REF_COUNT . . . . . . . . .  	0000
  SF_MODE  . . . . . . . . . . .  	0001
  SF_ATTR  . . . . . . . . . . .  	0002
  SF_FCB . . . . . . . . . . . .  	0003
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 16:04:08

EDLIN for MSDOS 2.0                                         Symbols-4
                                                             

SYMBOL_ENTRY . . . . . . . . . .  	0106	0004
  SYM_VALUE  . . . . . . . . . .  	0000
  SYM_TYPE . . . . . . . . . . .  	0004
  SYM_LEN  . . . . . . . . . . .  	0006
  SYM_NAME . . . . . . . . . . .  	0007
SYS_FCB  . . . . . . . . . . . .  	0025	0010
  FCB_DRIVE  . . . . . . . . . .  	0000
  FCB_NAME . . . . . . . . . . .  	0001
  FCB_EXT  . . . . . . . . . . .  	0009
  FCB_EXTENT . . . . . . . . . .  	000C
  FCB_RECSIZ . . . . . . . . . .  	000E
  FCB_FILSIZ . . . . . . . . . .  	0010
  FCB_DRVBP  . . . . . . . . . .  	0012
  FCB_FDATE  . . . . . . . . . .  	0014
  FCB_FTIME  . . . . . . . . . .  	0016
  FCB_DEVID  . . . . . . . . . .  	0018
  FCB_FIRCLUS  . . . . . . . . .  	0019
  FCB_CLUSPOS  . . . . . . . . .  	001B
  FCB_LSTCLUS  . . . . . . . . .  	001D
  FCB_NR . . . . . . . . . . . .  	0020
  FCB_RR . . . . . . . . . . . .  	0021
USER_ENVIRON . . . . . . . . . .  	0018	000C
  USER_AX  . . . . . . . . . . .  	0000
  USER_BX  . . . . . . . . . . .  	0002
  USER_CX  . . . . . . . . . . .  	0004
  USER_DX  . . . . . . . . . . .  	0006
  USER_SI  . . . . . . . . . . .  	0008
  USER_DI  . . . . . . . . . . .  	000A
  USER_BP  . . . . . . . . . . .  	000C
  USER_DS  . . . . . . . . . . .  	000E
  USER_ES  . . . . . . . . . . .  	0010
  USER_IP  . . . . . . . . . . .  	0012
  USER_CS  . . . . . . . . . . .  	0014
  USER_F . . . . . . . . . . . .  	0016

Segments and Groups:

                N a m e         	Size	Align	Combine Class

DG . . . . . . . . . . . . . . .  	GROUP
  CODE . . . . . . . . . . . . .  	1A91	PARA	PUBLIC	
  CONST  . . . . . . . . . . . .  	01F2	WORD	PUBLIC	
  DATA . . . . . . . . . . . . .  	02A9	WORD	PUBLIC	

Symbols:            

                N a m e         	Type	Value	Attr         

ABORT  . . . . . . . . . . . . .  	Number	0000	
ABORTCOM . . . . . . . . . . . .  	L NEAR	1A62	CODE
ABORTINS . . . . . . . . . . . .  	L NEAR	19CC	CODE
ABORTMERGE . . . . . . . . . . .  	L NEAR	19C5	CODE
ADDR_INT_ABORT . . . . . . . . .  	Number	0080	
ADDR_INT_COMMAND . . . . . . . .  	Number	0084	
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 16:04:08

EDLIN for MSDOS 2.0                                         Symbols-5
                                                             

ADDR_INT_CTRL_C  . . . . . . . .  	Number	008C	
ADDR_INT_DISK_READ . . . . . . .  	Number	0094	
ADDR_INT_DISK_WRITE  . . . . . .  	Number	0098	
ADDR_INT_FASTCON . . . . . . . .  	Number	00A4	
ADDR_INT_FATAL_ABORT . . . . . .  	Number	0090	
ADDR_INT_KEEP_PROCESS  . . . . .  	Number	009C	
ADDR_INT_SPOOLER . . . . . . . .  	Number	00A0	
ADDR_INT_TERMINATE . . . . . . .  	Number	0088	
ALLOC  . . . . . . . . . . . . .  	Number	0048	
ALLOCOPER  . . . . . . . . . . .  	Number	0058	
ALLOC_ARENA_TRASHED  . . . . . .  	Alias	 ERROR_ARENA_TRASHED		
ALLOC_NOT_ENOUGH_MEMORY  . . . .  	Alias	 ERROR_NOT_ENOUGH_MEMORY		
ALTVECT  . . . . . . . . . . . .  	Number	0000	
AMNT_REQ . . . . . . . . . . . .  	L WORD 	0224	DATA
AN_OPTION  . . . . . . . . . . .  	L NEAR	0F6D	CODE
APPEND . . . . . . . . . . . . .  	L NEAR	137B	CODE
ARENA_OWNER_SYSTEM . . . . . . .  	Number	0000	
ARENA_SIGNATURE_END  . . . . . .  	Number	005A	
ARENA_SIGNATURE_NORMAL . . . . .  	Number	004D	
ASSIGNOPER . . . . . . . . . . .  	Number	005F	
ATTR_ALL . . . . . . . . . . . .  	Number	0016	
ATTR_ARCHIVE . . . . . . . . . .  	Number	0020	
ATTR_ARE_OK  . . . . . . . . . .  	L NEAR	0F9A	CODE
ATTR_CHANGEABLE  . . . . . . . .  	Number	0027	
ATTR_DIRECTORY . . . . . . . . .  	Number	0010	
ATTR_HIDDEN  . . . . . . . . . .  	Number	0002	
ATTR_IGNORE  . . . . . . . . . .  	Number	0021	
ATTR_READ_ONLY . . . . . . . . .  	Number	0001	
ATTR_SYSTEM  . . . . . . . . . .  	Number	0004	
ATTR_VOLUME_ID . . . . . . . . .  	Number	0008	

BACKLIN  . . . . . . . . . . . .  	L NEAR	12A8	CODE
BADCOM . . . . . . . . . . . . .  	V BYTE 	0000	CONST	External
BADDRV . . . . . . . . . . . . .  	V BYTE 	0000	CONST	External
BAD_VERS_ERR . . . . . . . . . .  	V BYTE 	0000	CONST	External
BAK  . . . . . . . . . . . . . .  	L BYTE 	0000	CONST
BCREAT . . . . . . . . . . . . .  	V BYTE 	0000	CONST	External
BLKMOVE  . . . . . . . . . . . .  	L NEAR	176F	CODE
BUFINSIZ . . . . . . . . . . . .  	Number	0010	
B_OPT  . . . . . . . . . . . . .  	L NEAR	0F7C	CODE

CHAR_OPER  . . . . . . . . . . .  	Number	0037	
CHDIR  . . . . . . . . . . . . .  	Number	003B	
CHDIR_PATH_NOT_FOUND . . . . . .  	Alias	 ERROR_PATH_NOT_FOUND		
CHECK_DONE . . . . . . . . . . .  	L NEAR	1375	CODE
CHECK_END  . . . . . . . . . . .  	L NEAR	1359	CODE
CHECK_NO . . . . . . . . . . . .  	L NEAR	136B	CODE
CHKLP  . . . . . . . . . . . . .  	L NEAR	1197	CODE
CHKNXT . . . . . . . . . . . . .  	L NEAR	11A6	CODE
CHKP2  . . . . . . . . . . . . .  	L NEAR	1510	CODE
CHKRANGE . . . . . . . . . . . .  	L NEAR	121B	CODE	Global
CHMOD  . . . . . . . . . . . . .  	Number	0043	
CHMOD_ACCESS_DENIED  . . . . . .  	Alias	 ERROR_ACCESS_DENIED		
CHMOD_INVALID_FUNCTION . . . . .  	Alias	 ERROR_INVALID_FUNCTION		
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 16:04:08

EDLIN for MSDOS 2.0                                         Symbols-6
                                                             

CHMOD_PATH_NOT_FOUND . . . . . .  	Alias	 ERROR_PATH_NOT_FOUND		
CLOSE  . . . . . . . . . . . . .  	Number	003E	
CLOSE_INVALID_FUNCTION . . . . .  	Alias	 ERROR_INVALID_FUNCTION		
CLOSE_INVALID_HANDLE . . . . . .  	Alias	 ERROR_INVALID_HANDLE		
COMAND_LINE_LENGTH . . . . . . .  	Number	0080	
COMBUF . . . . . . . . . . . . .  	L BYTE 	002C	DATA	Length = 0082
COMERR . . . . . . . . . . . . .  	L NEAR	1228	CODE
COMERR1  . . . . . . . . . . . .  	L NEAR	122B	CODE
COMERRA  . . . . . . . . . . . .  	L NEAR	12C0	CODE
COMERRJ  . . . . . . . . . . . .  	L NEAR	16BE	CODE
COMLINE  . . . . . . . . . . . .  	L WORD 	0028	DATA	Global
COMMAND  . . . . . . . . . . . .  	L NEAR	1150	CODE
COMMANDJ . . . . . . . . . . . .  	L NEAR	1212	CODE
COMOVER  . . . . . . . . . . . .  	L NEAR	11F6	CODE
COMTAB . . . . . . . . . . . . .  	L BYTE 	12C3	CODE
COPY . . . . . . . . . . . . . .  	L NEAR	176A	CODE
COPYIN . . . . . . . . . . . . .  	L NEAR	1750	CODE
COPYSIZ  . . . . . . . . . . . .  	L WORD 	000E	DATA
COPYSIZ_OK . . . . . . . . . . .  	L NEAR	17DD	CODE
COPY_DONE  . . . . . . . . . . .  	L NEAR	1889	CODE
COPY_TEXT  . . . . . . . . . . .  	L NEAR	1829	CODE
COPY_TEXT_1  . . . . . . . . . .  	L NEAR	1836	CODE
COUNTLN  . . . . . . . . . . . .  	L NEAR	13DC	CODE
COUNTRY_NOT_FOUND  . . . . . . .  	Alias	 ERROR_FILE_NOT_FOUND		
CREAT  . . . . . . . . . . . . .  	Number	003C	
CREATENEWFILE  . . . . . . . . .  	Number	005B	
CREATETEMPFILE . . . . . . . . .  	Number	005A	
CREATE_PROCESS_DATA_BLOCK  . . .  	Number	0026	
CREAT_ACCESS_DENIED  . . . . . .  	Alias	 ERROR_ACCESS_DENIED		
CREAT_PATH_NOT_FOUND . . . . . .  	Alias	 ERROR_PATH_NOT_FOUND		
CREAT_TOO_MANY_OPEN_FILES  . . .  	Alias	 ERROR_TOO_MANY_OPEN_FILES		
CRLF . . . . . . . . . . . . . .  	L NEAR	0000	CODE	External
CURDIR_INVALID_DRIVE . . . . . .  	Alias	 ERROR_INVALID_DRIVE		
CURLIN . . . . . . . . . . . . .  	L NEAR	1280	CODE
CURRENT  . . . . . . . . . . . .  	L WORD 	001C	DATA	Global
CURRENT_DIR  . . . . . . . . . .  	Number	0047	
CURR_IS_ROOT . . . . . . . . . .  	L NEAR	1000	CODE
C_BS . . . . . . . . . . . . . .  	Number	0008	
C_CR . . . . . . . . . . . . . .  	Number	000D	
C_DEL  . . . . . . . . . . . . .  	Number	007F	
C_ETB  . . . . . . . . . . . . .  	Number	0017	
C_ETX  . . . . . . . . . . . . .  	Number	0003	
C_HT . . . . . . . . . . . . . .  	Number	0009	
C_LF . . . . . . . . . . . . . .  	Number	000A	
C_NAK  . . . . . . . . . . . . .  	Number	0015	

DEALLOC  . . . . . . . . . . . .  	Number	0049	
DEALLOC_ARENA_TRASHED  . . . . .  	Alias	 ERROR_ARENA_TRASHED		
DEALLOC_INVALID_BLOCK  . . . . .  	Alias	 ERROR_INVALID_BLOCK		
DELBAK . . . . . . . . . . . . .  	L NEAR	1A74	CODE
DELETE . . . . . . . . . . . . .  	L NEAR	1687	CODE
DELFIN1  . . . . . . . . . . . .  	L NEAR	1696	CODE
DELFIN2  . . . . . . . . . . . .  	L NEAR	16A7	CODE
DELFLG . . . . . . . . . . . . .  	L BYTE 	01F1	CONST
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 16:04:08

EDLIN for MSDOS 2.0                                         Symbols-7
                                                             

DELIM  . . . . . . . . . . . . .  	L NEAR	1209	CODE
DEL_TEXT . . . . . . . . . . . .  	L NEAR	186D	CODE
DEST . . . . . . . . . . . . . .  	V BYTE 	0000	CONST	External
DEVID_BLOCK_DEV  . . . . . . . .  	Number	001F	
DEVID_DEVICE . . . . . . . . . .  	Number	0080	
DEVID_DEVICE_CLOCK . . . . . . .  	Number	0008	
DEVID_DEVICE_CON_IN  . . . . . .  	Number	0001	
DEVID_DEVICE_CON_OUT . . . . . .  	Number	0002	
DEVID_DEVICE_EOF . . . . . . . .  	Number	0040	
DEVID_DEVICE_NULL  . . . . . . .  	Number	0004	
DEVID_DEVICE_RAW . . . . . . . .  	Number	0020	
DEVID_DEVICE_SPECIAL . . . . . .  	Number	0010	
DEVID_EOF  . . . . . . . . . . .  	Number	0040	
DEVID_FILE_CLEAN . . . . . . . .  	Number	0040	
DEVID_FILE_MASK_DRIVE  . . . . .  	Number	003F	
DEVID_ISCIN  . . . . . . . . . .  	Number	0001	
DEVID_ISCLK  . . . . . . . . . .  	Number	0008	
DEVID_ISCOT  . . . . . . . . . .  	Number	0002	
DEVID_ISDEV  . . . . . . . . . .  	Number	0080	
DEVID_ISNUL  . . . . . . . . . .  	Number	0004	
DEVID_RAW  . . . . . . . . . . .  	Number	0020	
DEVID_SPECIAL  . . . . . . . . .  	Number	0010	
DIRCHAR  . . . . . . . . . . . .  	L BYTE 	002B	CONST
DIRPRI . . . . . . . . . . . . .  	Number	000F	
DIRSTRLEN  . . . . . . . . . . .  	Number	0040	
DIR_SAVE_LOOP  . . . . . . . . .  	L NEAR	0FFA	CODE
DIR_SEARCH_FIRST . . . . . . . .  	Number	0011	
DIR_SEARCH_NEXT  . . . . . . . .  	Number	0012	
DISK_RESET . . . . . . . . . . .  	Number	000D	
DISPATCH . . . . . . . . . . . .  	L NEAR	11B9	CODE
DISPLAY  . . . . . . . . . . . .  	L NEAR	1528	CODE
DISPLN . . . . . . . . . . . . .  	L NEAR	1534	CODE
DISPONE  . . . . . . . . . . . .  	L NEAR	1525	CODE
DOMOV  . . . . . . . . . . . . .  	L NEAR	1749	CODE
DOS_MAJOR_VERSION  . . . . . . .  	Number	0002	
DOS_MINOR_VERSION  . . . . . . .  	Number	000B	
DPBSIZ . . . . . . . . . . . . .  	Number	005E	
DRVISOK  . . . . . . . . . . . .  	L NEAR	0FEC	CODE
DSKFUL . . . . . . . . . . . . .  	V BYTE 	0000	CONST	External
DSKSIZ . . . . . . . . . . . . .  	Number	000D	
DUP2_INVALID_HANDLE  . . . . . .  	Alias	 ERROR_INVALID_HANDLE		
DUP_INVALID_HANDLE . . . . . . .  	Alias	 ERROR_INVALID_HANDLE		
DUP_PDB  . . . . . . . . . . . .  	Number	0055	
DUP_TOO_MANY_OPEN_FILES  . . . .  	Alias	 ERROR_TOO_MANY_OPEN_FILES		

EDITBUF  . . . . . . . . . . . .  	L BYTE 	00AE	DATA	Length = 0102
EDLIN  . . . . . . . . . . . . .  	L NEAR	0100	CODE
EDL_PAD  . . . . . . . . . . . .  	L BYTE 	0103	CODE	Length = 0E00
ENDED  . . . . . . . . . . . . .  	L NEAR	1A0F	CODE
ENDING . . . . . . . . . . . . .  	L BYTE 	0222	DATA
ENDINS . . . . . . . . . . . . .  	L NEAR	19E1	CODE
ENDTXT . . . . . . . . . . . . .  	L WORD 	0026	DATA	Global
END_INS  . . . . . . . . . . . .  	L NEAR	19E5	CODE
ENTRYPOINT . . . . . . . . . . .  	Number	00C0	
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 16:04:08

EDLIN for MSDOS 2.0                                         Symbols-8
                                                             

EOF  . . . . . . . . . . . . . .  	V BYTE 	0000	CONST	External
EOFCHK . . . . . . . . . . . . .  	L NEAR	1418	CODE
EOL  . . . . . . . . . . . . . .  	L BYTE 	01B0	DATA
ERRJ . . . . . . . . . . . . . .  	L NEAR	0F0F	CODE
ERRORJ . . . . . . . . . . . . .  	L NEAR	1760	CODE
ERROR_ACCESS_DENIED  . . . . . .  	Number	0005	
ERROR_ARENA_TRASHED  . . . . . .  	Number	0007	
ERROR_BAD_ENVIRONMENT  . . . . .  	Number	000A	
ERROR_BAD_FORMAT . . . . . . . .  	Number	000B	
ERROR_CURRENT_DIRECTORY  . . . .  	Number	0010	
ERROR_FILE_NOT_FOUND . . . . . .  	Number	0002	
ERROR_INVALID_ACCESS . . . . . .  	Number	000C	
ERROR_INVALID_BLOCK  . . . . . .  	Number	0009	
ERROR_INVALID_DATA . . . . . . .  	Number	000D	
ERROR_INVALID_DRIVE  . . . . . .  	Number	000F	
ERROR_INVALID_FUNCTION . . . . .  	Number	0001	
ERROR_INVALID_HANDLE . . . . . .  	Number	0006	
ERROR_NOT_ENOUGH_MEMORY  . . . .  	Number	0008	
ERROR_NOT_SAME_DEVICE  . . . . .  	Number	0011	
ERROR_NO_MORE_FILES  . . . . . .  	Number	0012	
ERROR_PATH_NOT_FOUND . . . . . .  	Number	0003	
ERROR_TOO_MANY_OPEN_FILES  . . .  	Number	0004	
EWRITE . . . . . . . . . . . . .  	L NEAR	1429	CODE
EXEC . . . . . . . . . . . . . .  	Number	004B	
EXEC_BAD_ENVIRONMENT . . . . . .  	Alias	 ERROR_BAD_ENVIRONMENT		
EXEC_BAD_FORMAT  . . . . . . . .  	Alias	 ERROR_BAD_FORMAT		
EXEC_FILE_NOT_FOUND  . . . . . .  	Alias	 ERROR_FILE_NOT_FOUND		
EXEC_FUNC_NO_EXECUTE . . . . . .  	Number	0001	
EXEC_FUNC_OVERLAY  . . . . . . .  	Number	0002	
EXEC_INVALID_FUNCTION  . . . . .  	Alias	 ERROR_INVALID_FUNCTION		
EXEC_NOT_ENOUGH_MEMORY . . . . .  	Alias	 ERROR_NOT_ENOUGH_MEMORY		
EXE_VALID_OLD_SIGNATURE  . . . .  	Number	4D5A	
EXE_VALID_SIGNATURE  . . . . . .  	Number	5A4D	
EXIT . . . . . . . . . . . . . .  	Number	004C	
EXIT_ABORT . . . . . . . . . . .  	Number	0000	
EXIT_CTRL_C  . . . . . . . . . .  	Number	0001	
EXIT_HARD_ERROR  . . . . . . . .  	Number	0002	
EXIT_KEEP_PROCESS  . . . . . . .  	Number	0003	
EXIT_TERMINATE . . . . . . . . .  	Number	0000	

FAKE_FCB . . . . . . . . . . . .  	L BYTE 	01FB	DATA	Length = 0025
FALSE  . . . . . . . . . . . . .  	Number	0000	
FATPRI . . . . . . . . . . . . .  	Number	001E	
FCB  . . . . . . . . . . . . . .  	Number	005C	
FCB2 . . . . . . . . . . . . . .  	L BYTE 	01B1	DATA	Global	Length = 0025
FCB3 . . . . . . . . . . . . . .  	L BYTE 	01D6	DATA	Length = 0025
FCB_CLOSE  . . . . . . . . . . .  	Number	0010	
FCB_CREATE . . . . . . . . . . .  	Number	0016	
FCB_DELETE . . . . . . . . . . .  	Number	0013	
FCB_OPEN . . . . . . . . . . . .  	Number	000F	
FCB_RANDOM_READ  . . . . . . . .  	Number	0021	
FCB_RANDOM_READ_BLOCK  . . . . .  	Number	0027	
FCB_RANDOM_WRITE . . . . . . . .  	Number	0022	
FCB_RANDOM_WRITE_BLOCK . . . . .  	Number	0028	
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 16:04:08

EDLIN for MSDOS 2.0                                         Symbols-9
                                                             

FCB_RENAME . . . . . . . . . . .  	Number	0017	
FCB_SEQ_READ . . . . . . . . . .  	Number	0014	
FCB_SEQ_WRITE  . . . . . . . . .  	Number	0015	
FILDIRENT  . . . . . . . . . . .  	Number	0010	
FILEMRG  . . . . . . . . . . . .  	L NEAR	1935	CODE
FILENM . . . . . . . . . . . . .  	V BYTE 	0000	CONST	External
FILETIMES_INVALID_FUNCTION . . .  	Alias	 ERROR_INVALID_FUNCTION		
FILETIMES_INVALID_HANDLE . . . .  	Alias	 ERROR_INVALID_HANDLE		
FILE_TIMES . . . . . . . . . . .  	Number	0057	
FILLBUF  . . . . . . . . . . . .  	L NEAR	1A06	CODE
FILPERPROC . . . . . . . . . . .  	Number	0014	
FINDFIRST_FILE_NOT_FOUND . . . .  	Alias	 ERROR_FILE_NOT_FOUND		
FINDFIRST_NO_MORE_FILES  . . . .  	Alias	 ERROR_NO_MORE_FILES		
FINDLIN  . . . . . . . . . . . .  	L NEAR	0000	CODE	External
FINDNEXT_NO_MORE_FILES . . . . .  	Alias	 ERROR_NO_MORE_FILES		
FIND_FIRST . . . . . . . . . . .  	Number	004E	
FIND_NEXT  . . . . . . . . . . .  	Number	004F	
FNAME_BUFFER . . . . . . . . . .  	L BYTE 	006F	CONST	Length = 0080
FNDFIRST . . . . . . . . . . . .  	L NEAR	0000	CODE	External
FNDNEXT  . . . . . . . . . . . .  	L NEAR	0000	CODE	External
FORLIN . . . . . . . . . . . . .  	L NEAR	1299	CODE
FOURTH . . . . . . . . . . . . .  	L BYTE 	0021	CONST
FREEPRI  . . . . . . . . . . . .  	Number	0000	
FRSTOK . . . . . . . . . . . . .  	L NEAR	14BF	CODE
FUDGE  . . . . . . . . . . . . .  	L BYTE 	0028	CONST	Global
FULLN  . . . . . . . . . . . . .  	L NEAR	13F0	CODE

GETEXTENDEDERROR . . . . . . . .  	Number	0059	
GETNUM . . . . . . . . . . . . .  	L NEAR	1232	CODE
GET_CURRENT_PDB  . . . . . . . .  	Number	0051	
GET_DATE . . . . . . . . . . . .  	Number	002A	
GET_DEFAULT_DPB  . . . . . . . .  	Number	001F	
GET_DEFAULT_DRIVE  . . . . . . .  	Number	0019	
GET_DMA  . . . . . . . . . . . .  	Number	002F	
GET_DPB  . . . . . . . . . . . .  	Number	0032	
GET_DRIVE_FREESPACE  . . . . . .  	Number	0036	
GET_FCB_FILE_LENGTH  . . . . . .  	Number	0023	
GET_FCB_POSITION . . . . . . . .  	Number	0024	
GET_INDOS_FLAG . . . . . . . . .  	Number	0034	
GET_INTERRUPT_VECTOR . . . . . .  	Number	0035	
GET_IN_VARS  . . . . . . . . . .  	Number	0052	
GET_PTR_2  . . . . . . . . . . .  	L NEAR	1825	CODE
GET_TIME . . . . . . . . . . . .  	Number	002C	
GET_VERIFY_ON_WRITE  . . . . . .  	Number	0054	
GET_VERSION  . . . . . . . . . .  	Number	0030	

HARDCH . . . . . . . . . . . . .  	L DWORD	0023	CONST	Global
HAVARGS  . . . . . . . . . . . .  	L NEAR	17A4	CODE
HAVEOF . . . . . . . . . . . . .  	L BYTE 	0221	DATA
HAVFIL . . . . . . . . . . . . .  	L NEAR	1092	CODE
HAVLIN . . . . . . . . . . . . .  	L NEAR	16D5	CODE
HAV_ROOM . . . . . . . . . . . .  	L NEAR	17F3	CODE
HEADER . . . . . . . . . . . . .  	L BYTE 	0F03	CODE

Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 16:04:08

EDLIN for MSDOS 2.0                                         Symbols-10
                                                             

INFILE . . . . . . . . . . . . .  	L NEAR	14C5	CODE
INFILE2  . . . . . . . . . . . .  	L NEAR	14DD	CODE
INLP . . . . . . . . . . . . . .  	L NEAR	198A	CODE
INS  . . . . . . . . . . . . . .  	L NEAR	197E	CODE
INSERT . . . . . . . . . . . . .  	L NEAR	1967	CODE
INTBASE  . . . . . . . . . . . .  	Number	0080	
INTERNATIONAL  . . . . . . . . .  	Number	0038	
INTERNATIONAL_INVALID_FUNCTION .  	Alias	 ERROR_INVALID_FUNCTION		
INTERNAT_BLOCK_MAX . . . . . . .  	Number	0020	
INTTAB . . . . . . . . . . . . .  	Number	0020	
INT_24 . . . . . . . . . . . . .  	L NEAR	0000	CODE	External
INT_ABORT  . . . . . . . . . . .  	Alias	 INTTAB		
INT_COMMAND  . . . . . . . . . .  	Number	0021	
INT_CTRL_C . . . . . . . . . . .  	Number	0023	
INT_DISK_READ  . . . . . . . . .  	Number	0025	
INT_DISK_WRITE . . . . . . . . .  	Number	0026	
INT_FASTCON  . . . . . . . . . .  	Number	0029	
INT_FATAL_ABORT  . . . . . . . .  	Number	0024	
INT_KEEP_PROCESS . . . . . . . .  	Number	0027	
INT_SPOOLER  . . . . . . . . . .  	Number	0028	
INT_TERMINATE  . . . . . . . . .  	Number	0022	
IOCTL  . . . . . . . . . . . . .  	Number	0044	
IOCTL_INVALID_DATA . . . . . . .  	Alias	 ERROR_INVALID_DATA		
IOCTL_INVALID_FUNCTION . . . . .  	Alias	 ERROR_INVALID_FUNCTION		
IOCTL_INVALID_HANDLE . . . . . .  	Alias	 ERROR_INVALID_HANDLE		

KANJI  . . . . . . . . . . . . .  	Alias	 FALSE		
KEEP_PROCESS . . . . . . . . . .  	Number	0031	
KILL_BL  . . . . . . . . . . . .  	L NEAR	0000	CODE	External

LAST . . . . . . . . . . . . . .  	L WORD 	0024	DATA
LASTLIN  . . . . . . . . . . . .  	L WORD 	002A	DATA
LBRPRI . . . . . . . . . . . . .  	Number	0002	
LBWPRI . . . . . . . . . . . . .  	Number	0004	
LF . . . . . . . . . . . . . . .  	L NEAR	0000	CODE	External
LIST . . . . . . . . . . . . . .  	L NEAR	14FC	CODE
LOADBUF  . . . . . . . . . . . .  	L NEAR	1562	CODE
LOADLP . . . . . . . . . . . . .  	L NEAR	156B	CODE
LOADMOD  . . . . . . . . . . . .  	L BYTE 	0022	CONST
LOCKOPER . . . . . . . . . . . .  	Number	005C	
LSEEK  . . . . . . . . . . . . .  	Number	0042	
LSEEK_INVALID_FUNCTION . . . . .  	Alias	 ERROR_INVALID_FUNCTION		
LSEEK_INVALID_HANDLE . . . . . .  	Alias	 ERROR_INVALID_HANDLE		
LSTFND . . . . . . . . . . . . .  	L WORD 	0014	DATA	Global
LSTNUM . . . . . . . . . . . . .  	L WORD 	0016	DATA	Global

MAKE . . . . . . . . . . . . . .  	L BYTE 	0003	CONST
MAKFIL . . . . . . . . . . . . .  	L NEAR	10A2	CODE
MAXLIN . . . . . . . . . . . . .  	L NEAR	128D	CODE
MEMERR . . . . . . . . . . . . .  	L NEAR	1753	CODE
MEMERRJ1 . . . . . . . . . . . .  	L NEAR	19B7	CODE
MEMFUL . . . . . . . . . . . . .  	V BYTE 	0000	CONST	External
MEMOK  . . . . . . . . . . . . .  	L NEAR	19BD	CODE
MEM_CHECK  . . . . . . . . . . .  	L NEAR	17E3	CODE
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 16:04:08

EDLIN for MSDOS 2.0                                         Symbols-11
                                                             

MERGE  . . . . . . . . . . . . .  	L NEAR	18BD	CODE
MI_INT . . . . . . . . . . . . .  	Number	00CD	
MI_LONG_CALL . . . . . . . . . .  	Number	009A	
MI_LONG_JMP  . . . . . . . . . .  	Number	00EA	
MI_LONG_RET  . . . . . . . . . .  	Number	00CB	
MKDIR  . . . . . . . . . . . . .  	Number	0039	
MKDIR_ACCESS_DENIED  . . . . . .  	Alias	 ERROR_ACCESS_DENIED		
MKDIR_PATH_NOT_FOUND . . . . . .  	Alias	 ERROR_PATH_NOT_FOUND		
MOVE . . . . . . . . . . . . . .  	L NEAR	1763	CODE
MOVEFILE . . . . . . . . . . . .  	L NEAR	1899	CODE
MOVERR . . . . . . . . . . . . .  	L NEAR	175D	CODE
MOVE_DONE  . . . . . . . . . . .  	L NEAR	188D	CODE
MOVFLG . . . . . . . . . . . . .  	L BYTE 	0228	DATA
MOV_CHK  . . . . . . . . . . . .  	L NEAR	184C	CODE
MRG  . . . . . . . . . . . . . .  	L NEAR	18F5	CODE
MRGERR . . . . . . . . . . . . .  	V BYTE 	0000	CONST	External

NAMERR . . . . . . . . . . . . .  	L NEAR	18BA	CODE
NAME_COPIED  . . . . . . . . . .  	L NEAR	0F81	CODE
NDNAME . . . . . . . . . . . . .  	V BYTE 	0000	CONST	External
NEWFIL . . . . . . . . . . . . .  	V BYTE 	0000	CONST	External
NEWLEN . . . . . . . . . . . . .  	L WORD 	0012	DATA	Global
NEXT_CHAR  . . . . . . . . . . .  	L NEAR	0F50	CODE
NOBAK  . . . . . . . . . . . . .  	V BYTE 	0000	CONST	External
NOCOM  . . . . . . . . . . . . .  	L NEAR	16C1	CODE
NODELIM  . . . . . . . . . . . .  	L NEAR	120A	CODE
NODIR  . . . . . . . . . . . . .  	V BYTE 	0000	CONST	External
NOERROR  . . . . . . . . . . . .  	L NEAR	17B4	CODE
NOMORE . . . . . . . . . . . . .  	L NEAR	1410	CODE
NOMOREJ  . . . . . . . . . . . .  	L NEAR	1378	CODE
NONAME . . . . . . . . . . . . .  	L NEAR	0F0C	CODE
NOROOM . . . . . . . . . . . . .  	L NEAR	10B9	CODE
NOSUCH . . . . . . . . . . . . .  	V BYTE 	0000	CONST	External
NOTBAK . . . . . . . . . . . . .  	L NEAR	10BF	CODE
NOTEND . . . . . . . . . . . . .  	L NEAR	13BD	CODE
NOTFND . . . . . . . . . . . . .  	L NEAR	166E	CODE
NOTFNDJ  . . . . . . . . . . . .  	L NEAR	1581	CODE
NOT_END  . . . . . . . . . . . .  	L NEAR	1377	CODE
NOT_FOUND  . . . . . . . . . . .  	L NEAR	134D	CODE
NOT_ROOT . . . . . . . . . . . .  	L NEAR	0FB4	CODE
NO_ERRORS  . . . . . . . . . . .  	L NEAR	101B	CODE
NO_ERROR_OCCURRED  . . . . . . .  	Text  0                                                              ?		
NUMCHK . . . . . . . . . . . . .  	L NEAR	1276	CODE
NUMCOM . . . . . . . . . . . . .  	Number	000F	
NUMLP  . . . . . . . . . . . . .  	L NEAR	1254	CODE
NUMPOS . . . . . . . . . . . . .  	L WORD 	0018	DATA	Global
NXTARG . . . . . . . . . . . . .  	L NEAR	178D	CODE

OEM_C1 . . . . . . . . . . . . .  	Number	00F9	
OEM_C2 . . . . . . . . . . . . .  	Number	00FA	
OEM_C3 . . . . . . . . . . . . .  	Number	00FB	
OEM_C4 . . . . . . . . . . . . .  	Number	00FC	
OEM_C5 . . . . . . . . . . . . .  	Number	00FD	
OEM_C6 . . . . . . . . . . . . .  	Number	00FE	
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 16:04:08

EDLIN for MSDOS 2.0                                         Symbols-12
                                                             

OEM_C7 . . . . . . . . . . . . .  	Number	00FF	
OLDDAT . . . . . . . . . . . . .  	L BYTE 	0226	DATA	Global
OLDLEN . . . . . . . . . . . . .  	L WORD 	0010	DATA	Global
ONE4TH . . . . . . . . . . . . .  	L WORD 	0020	DATA
OPEN . . . . . . . . . . . . . .  	Number	003D	
OPEN_ACCESS_DENIED . . . . . . .  	Alias	 ERROR_ACCESS_DENIED		
OPEN_FILE_NOT_FOUND  . . . . . .  	Alias	 ERROR_FILE_NOT_FOUND		
OPEN_FOR_BOTH  . . . . . . . . .  	Number	0002	
OPEN_FOR_READ  . . . . . . . . .  	Number	0000	
OPEN_FOR_WRITE . . . . . . . . .  	Number	0001	
OPEN_INVALID_ACCESS  . . . . . .  	Alias	 ERROR_INVALID_ACCESS		
OPEN_TOO_MANY_OPEN_FILES . . . .  	Alias	 ERROR_TOO_MANY_OPEN_FILES		
OPTCHAR  . . . . . . . . . . . .  	L BYTE 	002A	CONST
OPT_ERR  . . . . . . . . . . . .  	V BYTE 	0000	CONST	External
OUT  . . . . . . . . . . . . . .  	L NEAR	0000	CODE	External
OUTCNT . . . . . . . . . . . . .  	L NEAR	1616	CODE
OUTLN  . . . . . . . . . . . . .  	L NEAR	1539	CODE
OUTLP  . . . . . . . . . . . . .  	L NEAR	1618	CODE

PAGE . . . . . . . . . . . . . .  	L NEAR	14A4	CODE
PARAM1 . . . . . . . . . . . . .  	L WORD 	0000	DATA	Global
PARAM2 . . . . . . . . . . . . .  	L WORD 	0002	DATA	Global
PARAM3 . . . . . . . . . . . . .  	L WORD 	0004	DATA
PARAM4 . . . . . . . . . . . . .  	L WORD 	0006	DATA
PARAMOK2 . . . . . . . . . . . .  	L NEAR	11F0	CODE
PARMAPP  . . . . . . . . . . . .  	L NEAR	1393	CODE
PARMOK . . . . . . . . . . . . .  	L NEAR	11D9	CODE
PARSE  . . . . . . . . . . . . .  	L NEAR	1172	CODE
PARSE_FILE_DESCRIPTOR  . . . . .  	Number	0029	
PERR . . . . . . . . . . . . . .  	L NEAR	1671	CODE
POINTER  . . . . . . . . . . . .  	L WORD 	001E	DATA	Global
PROMPT . . . . . . . . . . . . .  	Number	002A	
PTR_1  . . . . . . . . . . . . .  	L WORD 	0008	DATA
PTR_2  . . . . . . . . . . . . .  	L WORD 	000A	DATA
PTR_3  . . . . . . . . . . . . .  	L WORD 	000C	DATA
PUTCURS  . . . . . . . . . . . .  	L NEAR	1676	CODE

Q3 . . . . . . . . . . . . . . .  	L NEAR	1316	CODE
QFLG . . . . . . . . . . . . . .  	L BYTE 	0220	DATA	Global
QUERY  . . . . . . . . . . . . .  	L NEAR	0000	CODE	External
QUIT . . . . . . . . . . . . . .  	L NEAR	0000	CODE	External
QUIT1  . . . . . . . . . . . . .  	L NEAR	12FF	CODE
QUOTE_CHAR . . . . . . . . . . .  	Number	0016	

RAW_CON_INPUT  . . . . . . . . .  	Number	0007	
RAW_CON_IO . . . . . . . . . . .  	Number	0006	
READ . . . . . . . . . . . . . .  	Number	003F	
READ_ACCESS_DENIED . . . . . . .  	Alias	 ERROR_ACCESS_DENIED		
READ_INVALID_HANDLE  . . . . . .  	Alias	 ERROR_INVALID_HANDLE		
RENAME . . . . . . . . . . . . .  	Number	0056	
RENAME_ACCESS_DENIED . . . . . .  	Alias	 ERROR_ACCESS_DENIED		
RENAME_FILE_NOT_FOUND  . . . . .  	Alias	 ERROR_FILE_NOT_FOUND		
RENAME_NOT_SAME_DEVICE . . . . .  	Alias	 ERROR_NOT_SAME_DEVICE		
REPLAC . . . . . . . . . . . . .  	L NEAR	158B	CODE
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 16:04:08

EDLIN for MSDOS 2.0                                         Symbols-13
                                                             

REPLACE  . . . . . . . . . . . .  	L NEAR	171E	CODE
REPLAC_FROM_CURR . . . . . . . .  	L NEAR	1584	CODE
REPLP  . . . . . . . . . . . . .  	L NEAR	159A	CODE
REPNXT . . . . . . . . . . . . .  	L NEAR	160F	CODE
RESTORE  . . . . . . . . . . . .  	L NEAR	1942	CODE
REST_DIR . . . . . . . . . . . .  	L NEAR	0000	CODE	External
RET$5  . . . . . . . . . . . . .  	L NEAR	14A3	CODE
RET1 . . . . . . . . . . . . . .  	L NEAR	121A	CODE
RET12  . . . . . . . . . . . . .  	L NEAR	1752	CODE
RET2 . . . . . . . . . . . . . .  	L NEAR	1358	CODE
RET3 . . . . . . . . . . . . . .  	L NEAR	1417	CODE
RET7 . . . . . . . . . . . . . .  	L NEAR	1561	CODE
RET8 . . . . . . . . . . . . . .  	L NEAR	161F	CODE
RET9 . . . . . . . . . . . . . .  	L NEAR	1686	CODE
REV  . . . . . . . . . . . . . .  	L BYTE 	001E	CONST
RMDIR  . . . . . . . . . . . . .  	Number	003A	
RMDIR_ACCESS_DENIED  . . . . . .  	Alias	 ERROR_ACCESS_DENIED		
RMDIR_CURRENT_DIRECTORY  . . . .  	Alias	 ERROR_CURRENT_DIRECTORY		
RMDIR_PATH_NOT_FOUND . . . . . .  	Alias	 ERROR_PATH_NOT_FOUND		
ROFLAG . . . . . . . . . . . . .  	L BYTE 	0020	CONST
ROPROT . . . . . . . . . . . . .  	Alias	 TRUE		
ROTABLE  . . . . . . . . . . . .  	L BYTE 	12F0	CODE
RO_ERR . . . . . . . . . . . . .  	V BYTE 	0000	CONST	External
RPRI . . . . . . . . . . . . . .  	Number	0006	

SAME_DIR . . . . . . . . . . . .  	L NEAR	103C	CODE
SAME_DRIVE . . . . . . . . . . .  	L NEAR	0FDE	CODE
SAVEND . . . . . . . . . . . . .  	L NEAR	111D	CODE
SCANEOF  . . . . . . . . . . . .  	L NEAR	1319	CODE
SCANLN . . . . . . . . . . . . .  	L NEAR	0000	CODE	External
SCNDOK . . . . . . . . . . . . .  	L NEAR	14D2	CODE
SEARCH . . . . . . . . . . . . .  	L NEAR	162C	CODE
SEARCH_FROM_CURR . . . . . . . .  	L NEAR	1625	CODE
SEND . . . . . . . . . . . . . .  	L NEAR	1553	CODE
SERVERCALL . . . . . . . . . . .  	Number	005D	
SETBLOCK . . . . . . . . . . . .  	Number	004A	
SETBLOCK_ARENA_TRASHED . . . . .  	Alias	 ERROR_ARENA_TRASHED		
SETBLOCK_INVALID_BLOCK . . . . .  	Alias	 ERROR_INVALID_BLOCK		
SETBLOCK_INVALID_FUNCTION  . . .  	Alias	 ERROR_INVALID_FUNCTION		
SETBLOCK_NOT_ENOUGH_MEMORY . . .  	Alias	 ERROR_NOT_ENOUGH_MEMORY		
SETDPB . . . . . . . . . . . . .  	Number	0053	
SETPTS . . . . . . . . . . . . .  	L NEAR	18AD	CODE
SETUP  . . . . . . . . . . . . .  	L NEAR	10C5	CODE
SET_CTRL_C_TRAPPING  . . . . . .  	Number	0033	
SET_CURRENT_PDB  . . . . . . . .  	Number	0050	
SET_DATE . . . . . . . . . . . .  	Number	002B	
SET_DEFAULT_DRIVE  . . . . . . .  	Number	000E	
SET_DMA  . . . . . . . . . . . .  	Number	001A	
SET_INTERRUPT_VECTOR . . . . . .  	Number	0025	
SET_OEM_HANDLER  . . . . . . . .  	Number	00F8	
SET_TIME . . . . . . . . . . . .  	Number	002D	
SET_VERIFY_ON_WRITE  . . . . . .  	Number	002E	
SF_DEFAULT_NUMBER  . . . . . . .  	Number	0005	
SHOWNUM  . . . . . . . . . . . .  	L NEAR	0000	CODE	External
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 16:04:08

EDLIN for MSDOS 2.0                                         Symbols-14
                                                             

SIMPED . . . . . . . . . . . . .  	L NEAR	0F12	CODE
SJ1  . . . . . . . . . . . . . .  	L NEAR	0FA8	CODE
SJ12 . . . . . . . . . . . . . .  	L NEAR	16E5	CODE
SJ2  . . . . . . . . . . . . . .  	L NEAR	0FAF	CODE
SJ3  . . . . . . . . . . . . . .  	L NEAR	100F	CODE
SJ4  . . . . . . . . . . . . . .  	L NEAR	1047	CODE
SJ5  . . . . . . . . . . . . . .  	L NEAR	1051	CODE
SJ50 . . . . . . . . . . . . . .  	L NEAR	107D	CODE
SJ51 . . . . . . . . . . . . . .  	L NEAR	132B	CODE
SJ51B  . . . . . . . . . . . . .  	L NEAR	1338	CODE
SJ52 . . . . . . . . . . . . . .  	L NEAR	133E	CODE
SJ53 . . . . . . . . . . . . . .  	L NEAR	13A4	CODE
SJ6  . . . . . . . . . . . . . .  	L NEAR	1590	CODE
SJ7  . . . . . . . . . . . . . .  	L NEAR	1631	CODE
SK1  . . . . . . . . . . . . . .  	L NEAR	123F	CODE
SK2  . . . . . . . . . . . . . .  	L NEAR	12BD	CODE
SKIP . . . . . . . . . . . . . .  	L NEAR	1215	CODE
SKIP1  . . . . . . . . . . . . .  	L NEAR	1216	CODE
SLASHOK  . . . . . . . . . . . .  	L NEAR	0F41	CODE
SOMELEFT . . . . . . . . . . . .  	L NEAR	160B	CODE
SRCH . . . . . . . . . . . . . .  	L NEAR	163B	CODE
SRCHCNT  . . . . . . . . . . . .  	L WORD 	001A	DATA	Global
SRCHFLG  . . . . . . . . . . . .  	L BYTE 	0223	DATA	Global
SRCHMOD  . . . . . . . . . . . .  	L BYTE 	0227	DATA	Global
STACK  . . . . . . . . . . . . .  	L BYTE 	02A9	DATA
START  . . . . . . . . . . . . .  	L WORD 	02A9	DATA	Global
STDAUX . . . . . . . . . . . . .  	Number	0003	
STDERR . . . . . . . . . . . . .  	Number	0002	
STDIN  . . . . . . . . . . . . .  	Number	0000	
STDOUT . . . . . . . . . . . . .  	Number	0001	
STDPRN . . . . . . . . . . . . .  	Number	0004	
STD_AUX_INPUT  . . . . . . . . .  	Number	0003	
STD_AUX_OUTPUT . . . . . . . . .  	Number	0004	
STD_CON_INPUT  . . . . . . . . .  	Number	0001	
STD_CON_INPUT_FLUSH  . . . . . .  	Number	000C	
STD_CON_INPUT_NO_ECHO  . . . . .  	Number	0008	
STD_CON_INPUT_STATUS . . . . . .  	Number	000B	
STD_CON_OUTPUT . . . . . . . . .  	Number	0002	
STD_CON_STRING_INPUT . . . . . .  	Number	000A	
STD_CON_STRING_OUTPUT  . . . . .  	Number	0009	
STD_PRINTER_OUTPUT . . . . . . .  	Number	0005	
STKSIZ . . . . . . . . . . . . .  	Number	0080	

TABLE  . . . . . . . . . . . . .  	L WORD 	12D2	CODE
THE_ROOT . . . . . . . . . . . .  	L BYTE 	0027	CONST
THREE4TH . . . . . . . . . . . .  	L WORD 	0022	DATA
TOOLNG . . . . . . . . . . . . .  	V BYTE 	0000	CONST	External
TOOLONG  . . . . . . . . . . . .  	L NEAR	1620	CODE
TRUE . . . . . . . . . . . . . .  	Number	FFFF	
TRUNCLP  . . . . . . . . . . . .  	L NEAR	1578	CODE
TXT1 . . . . . . . . . . . . . .  	L BYTE 	00EF	CONST	Global
TXT2 . . . . . . . . . . . . . .  	L BYTE 	0170	CONST	Global

UNLINK . . . . . . . . . . . . .  	Number	0041	
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 16:04:08

EDLIN for MSDOS 2.0                                         Symbols-15
                                                             

UNLINK_ACCESS_DENIED . . . . . .  	Alias	 ERROR_ACCESS_DENIED		
UNLINK_FILE_NOT_FOUND  . . . . .  	Alias	 ERROR_FILE_NOT_FOUND		
UNQUOTE  . . . . . . . . . . . .  	L NEAR	0000	CODE	External
UPCASE . . . . . . . . . . . . .  	L NEAR	11BF	CODE
USERDIR  . . . . . . . . . . . .  	L BYTE 	002D	CONST	Global
USERIDOPER . . . . . . . . . . .  	Number	005E	
USER_DRIVE . . . . . . . . . . .  	L BYTE 	0029	CONST	Global

VERS_OK  . . . . . . . . . . . .  	L NEAR	0F28	CODE

WAIT . . . . . . . . . . . . . .  	Number	004D	
WPRI . . . . . . . . . . . . . .  	Number	0008	
WRITE  . . . . . . . . . . . . .  	Number	0040	
WRITE_ACCESS_DENIED  . . . . . .  	Alias	 ERROR_ACCESS_DENIED		
WRITE_INVALID_HANDLE . . . . . .  	Alias	 ERROR_INVALID_HANDLE		
WRT  . . . . . . . . . . . . . .  	L NEAR	144D	CODE
WRTADD . . . . . . . . . . . . .  	L NEAR	1451	CODE
WRTADD1  . . . . . . . . . . . .  	L NEAR	145D	CODE
WRTERR . . . . . . . . . . . . .  	L NEAR	1493	CODE

XDUP . . . . . . . . . . . . . .  	Number	0045	
XDUP2  . . . . . . . . . . . . .  	Number	0046	
XERROR . . . . . . . . . . . . .  	L NEAR	149A	CODE
XX1  . . . . . . . . . . . . . .  	L NEAR	0F63	CODE


   3082 Source  Lines
   3144 Total   Lines
    759 Symbols

  11450 Bytes symbol space free

      0 Warning Errors
      0 Severe  Errors
