Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 09:44:02

DISKCOPY MSDOS Disk Copier                                  Page     1-1
                                                            

       1                                        TITLE   DISKCOPY MSDOS Disk Cop
					ier 
       2                                ;--------------------------------------
					-------------------- 
       3                                ; 
       4                                ;       Diskcopy - Program to copy enti
					re diskettes 
       5                                ; 
       6                                ;       Copyright 1982 by Microsoft Cor
					poration 
       7                                ;       Written by Chris Peters, August
					 1982 
       8                                ; 
       9                                ;--------------------------------------
					--------------------- 
      10                                ; 
      11                                ; Rev 1.00      Initial instance 
      12                                ; Rev 1.20 
      13                                ;               Read in > 64K hunks 
      14                                 
      15 = 0000                         FALSE   EQU     0 
      16 = FFFF                         TRUE    EQU     NOT FALSE 
      17                                 
      18                                 
      19 = 0021                         bdos    equ     21h 
      20 = 0020                         boot    equ     20h 
      21 = 0025                         aread   equ     25h 
      22 = 0026                         awrite  equ     26h 
      23                                 
      24                             C          INCLUDE DOSSYM.ASM 
      25                             C  include DOSMAC.ASM 
      26                             C  ; 
      27                             C  ; Macro file for MSDOS. 
      28                             C  ; 
      29                             C   
      30                             C  SUBTTL BREAK a listing into pages and g
					ive new subtitles 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 09:44:02

DISKCOPY MSDOS Disk Copier                                  Page     1-2
BREAK a listing into pages and give new subtitles           

      31                             C  PAGE 
      32                             C  BREAK MACRO subtitle 
      33                             C   SUBTTL subtitle 
      34                             C   PAGE 
      35                             C  ENDM 
      36                             C   
      37                             C  BREAK <I_NEED: declare a variable exter
					nal, if necessary, and allocate a size>
					 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 09:44:02

DISKCOPY MSDOS Disk Copier                                  Page     1-3
I_NEED: declare a variable external, if necessary, and alloc

      38                             C   
      39                             C  ; 
      40                             C  ; declare a variable external and alloc
					ate a size 
      41                             C  ; 
      42                             C  I_NEED MACRO sym,len 
      43                             C   DATA SEGMENT BYTE PUBLIC 'DATA' 
      44                             C   IFIDN <len>,<WORD> 
      45                             C   EXTRN &sym:WORD 
      46                             C   ELSE 
      47                             C   IFIDN <len>,<DWORD> 
      48                             C   EXTRN &sym:DWORD 
      49                             C   ELSE 
      50                             C   EXTRN &sym:BYTE 
      51                             C   ENDIF 
      52                             C   ENDIF 
      53                             C   DATA ENDS 
      54                             C  ENDM 
      55                             C   
      56                             C  ; 
      57                             C  ; call a procedure that may be external
					. The call will be short. 
      58                             C  ; 
      59                             C  invoke MACRO name 
      60                             C  .xcref 
      61                             C   IF2 
      62                             C   IFNDEF name 
      63                             C   EXTRN name:NEAR 
      64                             C   ENDIF 
      65                             C   ENDIF 
      66                             C  .cref 
      67                             C   CALL name 
      68                             C  ENDM 
      69                             C   
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 09:44:02

DISKCOPY MSDOS Disk Copier                                  Page     1-4
I_NEED: declare a variable external, if necessary, and alloc

      70                             C  PAGE 
      71                             C  ; 
      72                             C  ; jump to a label that may be external.
					 The jump will be near. 
      73                             C  ; 
      74                             C  transfer MACRO name 
      75                             C  .xcref 
      76                             C   IF2 
      77                             C   IFNDEF name 
      78                             C   EXTRN name:NEAR 
      79                             C   ENDIF 
      80                             C   ENDIF 
      81                             C  .cref 
      82                             C   JUMP name 
      83                             C  ENDM 
      84                             C   
      85                             C  ; 
      86                             C  ; get a short address in a word 
      87                             C  ; 
      88                             C  short_addr MACRO name 
      89                             C   IFDIF <name>,<?> 
      90                             C  .xcref 
      91                             C   IF2 
      92                             C   IFNDEF name 
      93                             C   EXTRN name:NEAR 
      94                             C   ENDIF 
      95                             C   ENDIF 
      96                             C  .cref 
      97                             C   DW OFFSET DOSGROUP:name 
      98                             C   ELSE 
      99                             C   DW ? 
     100                             C   ENDIF 
     101                             C  ENDM 
     102                             C   
     103                             C  ; 
     104                             C  ; get a long address in a dword 
     105                             C  ; 
     106                             C  long_addr MACRO name 
     107                             C  .xcref 
     108                             C   IF2 
     109                             C   IFNDEF name 
     110                             C   EXTRN name:NEAR 
     111                             C   ENDIF 
     112                             C  .cref 
     113                             C   DD name 
     114                             C  ENDM 
     115                             C   
     116                             C  ; 
     117                             C  ; declare a PROC near or far but PUBLIC
					 nonetheless 
     118                             C  ; 
     119                             C  procedure MACRO name,distance 
     120                             C   PUBLIC name 
     121                             C  name PROC distance 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 09:44:02

DISKCOPY MSDOS Disk Copier                                  Page     1-5
I_NEED: declare a variable external, if necessary, and alloc

     122                             C  ENDM 
     123                             C   
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 09:44:02

DISKCOPY MSDOS Disk Copier                                  Page     1-6
I_NEED: declare a variable external, if necessary, and alloc

     124                             C  PAGE 
     125                             C  ; 
     126                             C  ; define a data item to be public and o
					f an appropriate size/type 
     127                             C  ; 
     128                             C  I_AM MACRO name,size 
     129                             C   PUBLIC name 
     130                             C   
     131                             C   IFIDN <size>,<WORD> 
     132                             C  name DW ? 
     133                             C   ELSE 
     134                             C   IFIDN <size>,<DWORD> 
     135                             C  name DD ? 
     136                             C   ELSE 
     137                             C   IFIDN <size>,<BYTE> 
     138                             C  name DB ? 
     139                             C   ELSE 
     140                             C  name DB size DUP (?) 
     141                             C   ENDIF 
     142                             C   ENDIF 
     143                             C   ENDIF 
     144                             C  ENDM 
     145                             C   
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 09:44:02

DISKCOPY MSDOS Disk Copier                                  Page     1-7
I_NEED: declare a variable external, if necessary, and alloc

     146                             C  PAGE 
     147                             C  ; 
     148                             C  ; call the macro chain 
     149                             C  ; 
     150                             C  do_ext macro 
     151                             C  endm 
     152                             C   
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 09:44:02

DISKCOPY MSDOS Disk Copier                                  Page     1-8
I_NEED: declare a variable external, if necessary, and alloc

     153                             C  PAGE 
     154                             C   
     155                             C  ; 
     156                             C  ; define an entry in a procedure 
     157                             C  ; 
     158                             C  entry macro name 
     159                             C   PUBLIC name 
     160                             C  name: 
     161                             C  endm 
     162                             C   
     163                             C  BREAK <ERROR - print a message and then
					 jump to a label> 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 09:44:02

DISKCOPY MSDOS Disk Copier                                  Page     1-9
ERROR - print a message and then jump to a label            

     164                             C   
     165                             C  error macro code 
     166                             C   local a 
     167                             C  .xcref 
     168                             C   MOV AL,code 
     169                             C   transfer SYS_RET_ERR 
     170                             C  .cref 
     171                             C  ENDM 
     172                             C   
     173                             C  BREAK <JUMP - real jump that links up s
					hortwise> 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 09:44:02

DISKCOPY MSDOS Disk Copier                                  Page     1-10
JUMP - real jump that links up shortwise                    

     174                             C  ; 
     175                             C  ; given a label <lbl> either 2 byte jum
					p to another label <lbl>_J 
     176                             C  ; if it is near enough or 3 byte jump t
					o <lbl> 
     177                             C  ; 
     178                             C   
     179                             C  jump macro lbl 
     180                             C   local a 
     181                             C  .xcref 
     182                             C   a: 
     183                             C   ifndef lbl&_J ;; is this the first inv
					ocation 
     184                             C   JMP lbl 
     185                             C   ELSE 
     186                             C   IF lbl&_J GE $ 
     187                             C   JMP lbl 
     188                             C   ELSE 
     189                             C   IF ($-lbl&_J) GT 126 ;; is the jump to
					o far away? 
     190                             C   JMP lbl 
     191                             C   ELSE ;; do the short one... 
     192                             C   JMP lbl&_J 
     193                             C   ENDIF 
     194                             C   ENDIF 
     195                             C   ENDIF 
     196                             C   lbl&_j = a 
     197                             C  .cref 
     198                             C  endm 
     199                             C   
     200                             C  BREAK <RETURN - return from a function>
					 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 09:44:02

DISKCOPY MSDOS Disk Copier                                  Page     1-11
RETURN - return from a function                             

     201                             C   
     202                             C  return macro 
     203                             C   local a 
     204                             C  .xcref 
     205                             C  a: 
     206                             C   RET 
     207                             C  ret_l = a 
     208                             C  .cref 
     209                             C  endm 
     210                             C   
     211                             C  BREAK <CONDRET - conditional return> 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 09:44:02

DISKCOPY MSDOS Disk Copier                                  Page     1-12
CONDRET - conditional return                                

     212                             C   
     213                             C  makelab macro l,cc,ncc 
     214                             C   local a 
     215                             C   j&ncc a ;; j<NCC> a: 
     216                             C   return ;; return 
     217                             C   a: ;; a: 
     218                             C   ret_&cc = ret_l ;; define ret_<CC> to 
					be ret_l 
     219                             C  endm 
     220                             C   
     221                             C  condret macro cc,ncc 
     222                             C   local a,b 
     223                             C   ifdef ret_l ;; if ret_l is defined 
     224                             C   if (($ - ret_l) le 126) and ($ gt ret_
					l) 
     225                             C   ;; if ret_l is near enough then 
     226                             C   a: j&cc ret_l ;; a: j<CC> to ret_l 
     227                             C   ret_&cc = a ;; define ret_<CC> to be a
					: 
     228                             C   else 
     229                             C   makelab a,cc,ncc 
     230                             C   endif 
     231                             C   else 
     232                             C   ifdef ret_&cc ;; if ret_<CC> defined 
     233                             C   if (($ - ret_&cc) le 126) and ($ gt re
					t_&cc) 
     234                             C   ;; if ret_<CC> is near enough 
     235                             C   a: j&cc ret_&cc ;; a: j<CC> to ret_<CC
					> 
     236                             C   ret_&cc = a ;; define ret_<CC> to be a
					: 
     237                             C   else 
     238                             C   makelab a,cc,ncc 
     239                             C   endif 
     240                             C   else 
     241                             C   makelab a,cc,ncc 
     242                             C   endif 
     243                             C   endif 
     244                             C  endm 
     245                             C  ;condret macro cc,ncc 
     246                             C  ; local a,b 
     247                             C  ; ifdef ret_l ; if ret_l is defined 
     248                             C  ; if (($ - ret_l) le 126) and ($ gt ret
					_l) 
     249                             C  ; ; if ret_l is near enough then 
     250                             C  ; a: j&cc ret_l ; a: j<CC> to ret_l 
     251                             C  ; ret_&cc = a ; define ret_<CC> to be a
					: 
     252                             C  ; exitm 
     253                             C  ; endif 
     254                             C  ; endif 
     255                             C  ; ifdef ret_&cc ; if ret_<CC> defined 
     256                             C  ; if (($ - ret_&cc) le 126) and ($ gt r
					et_&cc) 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 09:44:02

DISKCOPY MSDOS Disk Copier                                  Page     1-13
CONDRET - conditional return                                

     257                             C  ; ; if ret_<CC> is near enough 
     258                             C  ; a: j&cc ret_&cc ; a: j<CC> to ret_<CC
					> 
     259                             C  ; ret_&cc = a ; define ret_<CC> to be a
					: 
     260                             C  ; exitm 
     261                             C  ; endif 
     262                             C  ; endif 
     263                             C  ; j&ncc a ; j<NCC> a: 
     264                             C  ; return ; return 
     265                             C  ; a: ; a: 
     266                             C  ; ret_&cc = ret_l ; define ret_<CC> to 
					be ret_l 
     267                             C  ;endm 
     268                             C  ; 
     269                             C  BREAK <RETZ - return if zero, links up 
					shortwise if necessary> 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 09:44:02

DISKCOPY MSDOS Disk Copier                                  Page     1-14
RETZ - return if zero, links up shortwise if necessary      

     270                             C   
     271                             C  retz macro 
     272                             C   condret z,nz 
     273                             C  endm 
     274                             C   
     275                             C  BREAK <RETNZ - return if not zero, link
					s up shortwise if necessary> 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 09:44:02

DISKCOPY MSDOS Disk Copier                                  Page     1-15
RETNZ - return if not zero, links up shortwise if necessary 

     276                             C   
     277                             C  retnz macro 
     278                             C   condret nz,z 
     279                             C  endm 
     280                             C   
     281                             C  BREAK <RETC - return if carry set, link
					s up shortwise if necessary> 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 09:44:02

DISKCOPY MSDOS Disk Copier                                  Page     1-16
RETC - return if carry set, links up shortwise if necessary 

     282                             C   
     283                             C  retc macro 
     284                             C   condret c,nc 
     285                             C  endm 
     286                             C   
     287                             C  BREAK <RETNC - return if not carry, lin
					ks up shortwise if necessary> 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 09:44:02

DISKCOPY MSDOS Disk Copier                                  Page     1-17
RETNC - return if not carry, links up shortwise if necessary

     288                             C   
     289                             C  retnc macro 
     290                             C   condret nc,c 
     291                             C  endm 
     292                             C   
     293                             C  BREAK <CONTEXT - set the DOS context to
					 a particular register> 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 09:44:02

DISKCOPY MSDOS Disk Copier                                  Page     1-18
CONTEXT - set the DOS context to a particular register      

     294                             C   
     295                             C  context macro r 
     296                             C   PUSH SS 
     297                             C   POP r 
     298                             C   ASSUME r:DOSGROUP 
     299                             C  endm 
     300                             C   
     301                             C  IF2 
     302                             C      %OUT    DOSSYM in Pass 2 
     303                             C  ENDIF 
     304                             C   
     305                             C  ENDIF 
     306                             C   
     307 = 0002                      C  DOS_MAJOR_VERSION   EQU      2 
     308 = 000B                      C  DOS_MINOR_VERSION   EQU     11 
     309                             C   
     310                             C  BREAK <Control character definitions> 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 09:44:02

DISKCOPY MSDOS Disk Copier                                  Page     1-19
Control character definitions                               

     311                             C   
     312 = 007F                      C  c_DEL       EQU     7Fh         ;    AS
					CII rubout or delete previous char 
     313 = 0008                      C  c_BS        EQU     08h         ; ^H AS
					CII backspace 
     314 = 000D                      C  c_CR        EQU     0Dh         ; ^M AS
					CII carriage return 
     315 = 000A                      C  c_LF        EQU     0Ah         ; ^J AS
					CII linefeed 
     316 = 0017                      C  c_ETB       EQU     17h         ; ^W AS
					CII end of transmission 
     317 = 0015                      C  c_NAK       EQU     15h         ; ^U AS
					CII negative acknowledge 
     318 = 0003                      C  c_ETX       EQU     03h         ; ^C AS
					CII end of text 
     319 = 0009                      C  c_HT        EQU     09h         ; ^I AS
					CII tab 
     320                             C   
     321                             C  BREAK <BPB Definition> 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 09:44:02

DISKCOPY MSDOS Disk Copier                                  Page     1-20
BPB Definition                                              

     322                             C   
     323                             C   
     324                             C  ;----+----+----+----+----+----+----+---
					-+----+----+----+----+----+----+----; 
     325                             C  ;                                      
					                                    ; 
     326                             C  ;            C  A  V  E  A  T     P  R 
					 O  G  R  A  M  M  E  R             ; 
     327                             C  ;                                      
					                                    ; 
     328                             C  ; Certain structures, constants and sys
					tem  calls  below  are  private  to ; 
     329                             C  ; the DOS  and  are  extremely  version
					-dependent.  They may change at any ; 
     330                             C  ; time at  the  implementors'  whim.   
					As  a  result,  they  must  not  be ; 
     331                             C  ; documented to  the  general  public. 
					  If  an  extreme case arises, they ; 
     332                             C  ; must be documented with this warning.
					                                    ; 
     333                             C  ;                                      
					                                    ; 
     334                             C  ; Those structures and constants that a
					re subject to  the  above  will  be ; 
     335                             C  ; marked and bracketed with the flag:  
					                                    ; 
     336                             C  ;                                      
					                                    ; 
     337                             C  ;            C  A  V  E  A  T     P  R 
					 O  G  R  A  M  M  E  R             ; 
     338                             C  ;                                      
					                                    ; 
     339                             C  ;----+----+----+----+----+----+----+---
					-+----+----+----+----+----+----+----; 
     340                             C   
     341                             C  BREAK  <Bios Parameter Block> 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 09:44:02

DISKCOPY MSDOS Disk Copier                                  Page     1-21
Bios Parameter Block                                        

     342                             C  ;----+----+----+----+----+----+----+---
					-+----+----+----+----+----+----+----; 
     343                             C  ;            C  A  V  E  A  T     P  R 
					 O  G  R  A  M  M  E  R             ; 
     344                             C  ;                                      
					                                    ; 
     345                             C   
     346                             C  ; Bios Parameter Block definition 
     347                             C  ; This structure is used to build a ful
					l DPB 
     348                             C   
     349                             C  BPBLOCK STRUC 
     350 0000  ????                  C  BPSECSZ DW      ?       ; Size in bytes
					 of physical sector 
     351 0002  ??                    C  BPCLUS  DB      ?       ; Sectors/Alloc
					 unit 
     352 0003  ????                  C  BPRES   DW      ?       ; Number of res
					erved sectors 
     353 0005  ??                    C  BPFTCNT DB      ?       ; Number of FAT
					s 
     354 0006  ????                  C  BPDRCNT DW      ?       ; Number of dir
					ectory entries 
     355 0008  ????                  C  BPSCCNT DW      ?       ; Total number 
					of sectors 
     356 000A  ??                    C  BPMEDIA DB      ?       ; Media descrip
					tor byte 
     357 000B  ????                  C  BPFTSEC DW      ?       ; Number of sec
					tors taken up by one FAT 
     358 000D                        C  BPBLOCK ENDS 
     359                             C  ;                                      
					                                    ; 
     360                             C  ;            C  A  V  E  A  T     P  R 
					 O  G  R  A  M  M  E  R             ; 
     361                             C  ;----+----+----+----+----+----+----+---
					-+----+----+----+----+----+----+----; 
     362                             C   
     363                             C  BREAK <Disk I/O Buffer Header> 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 09:44:02

DISKCOPY MSDOS Disk Copier                                  Page     1-22
Disk I/O Buffer Header                                      

     364                             C  ;----+----+----+----+----+----+----+---
					-+----+----+----+----+----+----+----; 
     365                             C  ;            C  A  V  E  A  T     P  R 
					 O  G  R  A  M  M  E  R             ; 
     366                             C  ;                                      
					                                    ; 
     367                             C   
     368                             C  ; Field definition for I/O buffer infor
					mation 
     369                             C   
     370                             C  BUFFINFO        STRUC 
     371 0000  ????????              C  NEXTBUF         DD      ?       ; Point
					er to next buffer in list 
     372                             C  ; The next two items are often refed as
					 a word 
     373 0004  ??                    C  BUFDRV          DB      ?       ; Logic
					al drive # assoc with buffer FF = free 
     374 0005  ??                    C  BUFDIRTY        DB      ?       ; Dirty
					 flag 
     375 0006  ??                    C  BUFPRI          DB      ?       ; Buffe
					r selection priority (see EQUs below) 
     376 0007  ??                    C  VISIT           DB      ?       ; Visit
					 flag for buffer pool scans 
     377 0008  ????                  C  BUFSECNO        DW      ?       ; Secto
					r number of buffer 
     378                             C  ; The next two items are often refed as
					 a word 
     379 000A  ??                    C  BUFWRTCNT       DB      ?       ; For F
					AT sectors, # times sector written out 
     380 000B  ??                    C  BUFWRTINC       DB      ?       ; "   "
					     "   , # sectors between each write
					 
     381 000C  ????????              C  BUFDRVDP        DD      ?       ; Point
					er to drive parameters 
     382 0010                        C  BUFFINFO        ENDS 
     383                             C   
     384 = 0010                      C  BUFINSIZ        EQU     SIZE BUFFINFO 
     385                             C                                  ; Size 
					of structure in bytes 
     386                             C   
     387 = 0000                      C  FREEPRI EQU     0 
     388 = 0002                      C  LBRPRI  EQU     2               ; Last 
					byte of buffer read 
     389 = 0004                      C  LBWPRI  EQU     4               ; Last 
					byte written 
     390 = 0006                      C  RPRI    EQU     6               ; Read 
					but not last byte 
     391 = 0008                      C  WPRI    EQU     8               ; Writt
					en but not last byte 
     392 = 000F                      C  DIRPRI  EQU     15              ; Direc
					tory Sector 
     393 = 001E                      C  FATPRI  EQU     30              ; FAT s
					ector 
     394                             C  ;                                      
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 09:44:02

DISKCOPY MSDOS Disk Copier                                  Page     1-23
Disk I/O Buffer Header                                      

					                                    ; 
     395                             C  ;            C  A  V  E  A  T     P  R 
					 O  G  R  A  M  M  E  R             ; 
     396                             C  ;----+----+----+----+----+----+----+---
					-+----+----+----+----+----+----+----; 
     397                             C   
     398                             C  BREAK <User stack inside of system call
					> 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 09:44:02

DISKCOPY MSDOS Disk Copier                                  Page     1-24
User stack inside of system call                            

     399                             C  ; Location of user registers relative u
					ser stack pointer 
     400                             C   
     401                             C  user_environ    STRUC 
     402 0000  ????                  C  user_AX     DW      ? 
     403 0002  ????                  C  user_BX     DW      ? 
     404 0004  ????                  C  user_CX     DW      ? 
     405 0006  ????                  C  user_DX     DW      ? 
     406 0008  ????                  C  user_SI     DW      ? 
     407 000A  ????                  C  user_DI     DW      ? 
     408 000C  ????                  C  user_BP     DW      ? 
     409 000E  ????                  C  user_DS     DW      ? 
     410 0010  ????                  C  user_ES     DW      ? 
     411 0012  ????                  C  user_IP     DW      ? 
     412 0014  ????                  C  user_CS     DW      ? 
     413 0016  ????                  C  user_F      DW      ? 
     414 0018                        C  user_environ    ENDS 
     415                             C   
     416                             C  BREAK <interrupt definitions> 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 09:44:02

DISKCOPY MSDOS Disk Copier                                  Page     1-25
interrupt definitions                                       

     417                             C   
     418 = 0020                      C  INTTAB          EQU     20H 
     419 = 0080                      C  INTBASE         EQU     4 * inttab 
     420 = 00C0                      C  ENTRYPOINT      EQU     INTBASE+40H 
     421                             C   
     422                             C          ENDIF 
     423                             C   
     424                             C  ; 
     425                             C  ; interrupt assignments 
     426                             C  ; 
     427                             C          IF      NOT ALTVECT 
     428 =                           C  int_abort           EQU     INTTAB     
					     ; abort process 
     429 = 0021                      C  int_command         EQU     int_abort+1
					     ; call MSDOS 
     430 = 0022                      C  int_terminate       EQU     int_abort+2
					     ; int to terminate address 
     431 = 0023                      C  int_ctrl_c          EQU     int_abort+3
					     ; ^c trapper 
     432 = 0024                      C  int_fatal_abort     EQU     int_abort+4
					     ; hard disk error 
     433 = 0025                      C  int_disk_read       EQU     int_abort+5
					     ; logical sector disk read 
     434 = 0026                      C  int_disk_write      EQU     int_abort+6
					     ; logical sector disk write 
     435 = 0027                      C  int_keep_process    EQU     int_abort+7
					     ; terminate program and stay 
     436                             C                                         
					     ; resident 
     437                             C  ;----+----+----+----+----+----+----+---
					-+----+----+----+----+----+----+----; 
     438                             C  ;            C  A  V  E  A  T     P  R 
					 O  G  R  A  M  M  E  R             ; 
     439                             C  ;                                      
					                                    ; 
     440 = 0028                      C  int_spooler         EQU     int_abort+8
					     ; spooler call 
     441 = 0029                      C  int_fastcon         EQU     int_abort+9
					     ; fast CON interrupt 
     442                             C  ;                                      
					                                    ; 
     443                             C  ;            C  A  V  E  A  T     P  R 
					 O  G  R  A  M  M  E  R             ; 
     444                             C  ;----+----+----+----+----+----+----+---
					-+----+----+----+----+----+----+----; 
     445                             C          ENDIF 
     446                             C   
     447 = 0080                      C  addr_int_abort          EQU    4 * int_
					abort 
     448 = 0084                      C  addr_int_command        EQU    4 * int_
					command 
     449 = 0088                      C  addr_int_terminate      EQU    4 * int_
					terminate 
     450 = 008C                      C  addr_int_ctrl_c         EQU    4 * int_
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 09:44:02

DISKCOPY MSDOS Disk Copier                                  Page     1-26
interrupt definitions                                       

					ctrl_c 
     451 = 0090                      C  addr_int_fatal_abort    EQU    4 * int_
					fatal_abort 
     452 = 0094                      C  addr_int_disk_read      EQU    4 * int_
					disk_read 
     453 = 0098                      C  addr_int_disk_write     EQU    4 * int_
					disk_write 
     454 = 009C                      C  addr_int_keep_process   EQU    4 * int_
					keep_process 
     455                             C  ;----+----+----+----+----+----+----+---
					-+----+----+----+----+----+----+----; 
     456                             C  ;            C  A  V  E  A  T     P  R 
					 O  G  R  A  M  M  E  R             ; 
     457                             C  ;                                      
					                                    ; 
     458 = 00A0                      C  addr_int_spooler        EQU    4 * int_
					spooler 
     459 = 00A4                      C  addr_int_fastcon        EQU    4 * int_
					fastcon 
     460                             C  ;                                      
					                                    ; 
     461                             C  ;            C  A  V  E  A  T     P  R 
					 O  G  R  A  M  M  E  R             ; 
     462                             C  ;----+----+----+----+----+----+----+---
					-+----+----+----+----+----+----+----; 
     463                             C   
     464                             C  BREAK <Disk map> 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 09:44:02

DISKCOPY MSDOS Disk Copier                                  Page     1-27
Disk map                                                    

     465                             C  ;  MSDOS partitions the disk into 4 sec
					tions: 
     466                             C  ; 
     467                             C  ;  phys sector 0:   +------------------
					-+ 
     468                             C  ;       |           | boot/reserved    
					 | 
     469                             C  ;       |           +------------------
					-+ 
     470                             C  ;       |           |  File allocation 
					 | 
     471                             C  ;       v           |      table(s)    
					 | 
     472                             C  ;                   |  (multiple copies
					 | 
     473                             C  ;                   |     are kept)    
					 | 
     474                             C  ;                   +------------------
					-+ 
     475                             C  ;                   |     Directory    
					 | 
     476                             C  ;                   +------------------
					-+ 
     477                             C  ;                   |     File space   
					 | 
     478                             C  ;                   +------------------
					-+ 
     479                             C  ;                   |   Unaddressable  
					 | 
     480                             C  ;                   |  (to end of disk)
					 | 
     481                             C  ;                   +------------------
					-+ 
     482                             C  ; 
     483                             C  ; All partition boundaries are sector b
					oundaries.  The size of the FAT is 
     484                             C  ; adjusted to maximize the file space a
					ddressable. 
     485                             C   
     486                             C  BREAK <Directory entry> 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 09:44:02

DISKCOPY MSDOS Disk Copier                                  Page     1-28
Directory entry                                             

     487                             C   
     488                             C  ; 
     489                             C  ;       +---------------------------+ 
     490                             C  ;       |  (12 BYTE) filename/ext   |  
					     0       0 
     491                             C  ;       +---------------------------+ 
     492                             C  ;       |     (BYTE) attributes     |  
					     11      B 
     493                             C  ;       +---------------------------+ 
     494                             C  ;       |    (10 BYTE) reserved     |  
					     12      C 
     495                             C  ;       +---------------------------+ 
     496                             C  ;       | (WORD) time of last write |  
					     22      16 
     497                             C  ;       +---------------------------+ 
     498                             C  ;       | (WORD) date of last write |  
					     24      18 
     499                             C  ;       +---------------------------+ 
     500                             C  ;       |   (WORD) First cluster    |  
					     26      1A 
     501                             C  ;       +---------------------------+ 
     502                             C  ;       |     (DWORD) file size     |  
					     28      1C 
     503                             C  ;       +---------------------------+ 
     504                             C  ; 
     505                             C  ;   First byte of filename  = E5 -> fre
					e directory entry 
     506                             C  ;                           = 00 -> end
					 of allocated directory 
     507                             C  ;   Time:   Bits 0-4=seconds/2, bits 5-
					10=minute, 11-15=hour 
     508                             C  ;   Date:   Bits 0-4=day, bits 5-8=mont
					h, bits 9-15=year-1980 
     509                             C  ; 
     510                             C  dir_entry   STRUC 
     511 0000  000B[                 C  dir_name    DB      11 DUP (?)         
					 ; file name 
     512            ??               C  
     513                         ]   C  
     514                             C  
     515 000B  ??                    C  dir_attr    DB      ?                  
					 ; attribute bits 
     516 000C  000A[                 C  dir_pad     DB      10 DUP (?)         
					 ; reserved for expansion 
     517            ??               C  
     518                         ]   C  
     519                             C  
     520 0016  ????                  C  dir_time    DW      ?                  
					 ; time of last write 
     521 0018  ????                  C  dir_date    DW      ?                  
					 ; date of last write 
     522 001A  ????                  C  dir_first   DW      ?                  
					 ; first allocation unit of file 
     523 001C  ????                  C  dir_size_l  DW      ?                  
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 09:44:02

DISKCOPY MSDOS Disk Copier                                  Page     1-29
Directory entry                                             

					 ; low 16 bits of file size 
     524 001E  ????                  C  dir_size_h  DW      ?                  
					 ; high 16 bits of file size 
     525 0020                        C  dir_entry   ENDS 
     526                             C   
     527 = 0001                      C  attr_read_only      EQU      1h 
     528 = 0002                      C  attr_hidden         EQU      2h 
     529 = 0004                      C  attr_system         EQU      4h 
     530 = 0008                      C  attr_volume_id      EQU      8h 
     531 = 0010                      C  attr_directory      EQU     10h 
     532 = 0020                      C  attr_archive        EQU     20h 
     533                             C   
     534 = 0016                      C  attr_all            EQU     attr_hidden
					+attr_system+attr_directory 
     535                             C                                         
					 ; OR of hard attributes for FINDENTRY 
     536                             C   
     537 = 0021                      C  attr_ignore         EQU     attr_read_o
					nly+attr_archive 
     538                             C                                         
					 ; ignore this(ese) attribute(s) during
					 
     539                             C                                         
					 ; search first/next 
     540                             C   
     541 = 0027                      C  attr_changeable     EQU     attr_read_o
					nly+attr_hidden+attr_system+attr_archiv
					e 
     542                             C                                         
					 ; changeable via CHMOD 
     543                             C   
     544                             C  BREAK <File allocation Table informatio
					n> 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 09:44:02

DISKCOPY MSDOS Disk Copier                                  Page     1-30
File allocation Table information                           

     545                             C  ; 
     546                             C  ; The File Allocation Table uses a 12-b
					it entry for each allocation unit on 
     547                             C  ; the disk.  These entries are packed, 
					two for every three bytes.  The content
					s 
     548                             C  ; of entry number N is found by 1) mult
					iplying N by 1.5; 2) adding the result 
     549                             C  ; to the base address of the Allocation
					 Table; 3) fetching the 16-bit word 
     550                             C  ; at this address; 4) If N was odd (so 
					that N*1.5 was not an integer), shift 
     551                             C  ; the word right four bits; 5) mask to 
					12 bits (AND with 0FFF hex).  Entry 
     552                             C  ; number zero is used as an end-of-file
					 trap in the OS and is passed to the 
     553                             C  ; BIOS to help determine disk format.  
					Entry 1 is reserved for future use. 
     554                             C  ; The first available allocation unit i
					s assigned entry number two, and even 
     555                             C  ; though it is the first, is called clu
					ster 2.  Entries greater than 0FF8H 
     556                             C  ; are end of file marks; entries of zer
					o are unallocated.  Otherwise, the 
     557                             C  ; contents of a FAT entry is the number
					 of the next cluster in the file. 
     558                             C  ; 
     559                             C  ; Clusters with bad sectors are tagged 
					with FF7H.  Any non-zero number would 
     560                             C  ; do because these clusters show as all
					ocated, but are not part of any 
     561                             C  ; allocation chain and thus will never 
					be allocated to a file.  A particular 
     562                             C  ; number is selected so that disk check
					ing programs know what to do (ie.  a 
     563                             C  ; cluster with entry FF7H which is not 
					in a chain is not an error). 
     564                             C   
     565                             C  BREAK <DPB structure> 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 09:44:02

DISKCOPY MSDOS Disk Copier                                  Page     1-31
DPB structure                                               

     566                             C  ;----+----+----+----+----+----+----+---
					-+----+----+----+----+----+----+----; 
     567                             C  ;            C  A  V  E  A  T     P  R 
					 O  G  R  A  M  M  E  R             ; 
     568                             C  ;                                      
					                                    ; 
     569                             C   
     570 = 0040                      C  DIRSTRLEN       EQU     64      ; Max l
					ength in bytes of directory strings 
     571                             C   
     572                             C  dpb     STRUC 
     573 0000  ??                    C  dpb_drive           DB      ?   ; Logic
					al drive # assoc with DPB (A=0,B=1,...)
					 
     574 0001  ??                    C  dpb_UNIT            DB      ?   ; Drive
					r unit number of DPB 
     575 0002  ????                  C  dpb_sector_size     DW      ?   ; Size 
					of physical sector in bytes 
     576 0004  ??                    C  dpb_cluster_mask    DB      ?   ; Secto
					rs/cluster - 1 
     577 0005  ??                    C  dpb_cluster_shift   DB      ?   ; Log2 
					of sectors/cluster 
     578 0006  ????                  C  dpb_first_FAT       DW      ?   ; Start
					ing record of FATs 
     579 0008  ??                    C  dpb_FAT_count       DB      ?   ; Numbe
					r of FATs for this drive 
     580 0009  ????                  C  dpb_root_entries    DW      ?   ; Numbe
					r of directory entries 
     581 000B  ????                  C  dpb_first_sector    DW      ?   ; First
					 sector of first cluster 
     582 000D  ????                  C  dpb_max_cluster     DW      ?   ; Numbe
					r of clusters on drive + 1 
     583 000F  ??                    C  dpb_FAT_size        DB      ?   ; Numbe
					r of records occupied by FAT 
     584 0010  ????                  C  dpb_dir_sector      DW      ?   ; Start
					ing record of directory 
     585 0012  ????????              C  dpb_driver_addr     DD      ?   ; Point
					er to driver 
     586 0016  ??                    C  dpb_media           DB      ?   ; Media
					 byte 
     587 0017  ??                    C  dpb_first_access    DB      ?   ; This 
					is initialized to -1 to force a media 
     588                             C                                  ; check
					 the first time this DPB is used 
     589 0018  ????????              C  dpb_next_dpb        DD      ?   ; Point
					er to next Drive parameter block 
     590 001C  ????                  C  dpb_current_dir     DW      ?   ; Clust
					er number of start of current directory
					 
     591                             C                                  ; 0 ind
					icates root, -1 indicates invalid (disk
					 
     592                             C                                  ; ?  ch
					anged) 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 09:44:02

DISKCOPY MSDOS Disk Copier                                  Page     1-32
DPB structure                                               

     593 001E  0040[                 C  dpb_dir_text        DB      DIRSTRLEN D
					UP(?) 
     594            ??               C  
     595                         ]   C  
     596                             C  
     597                             C                                  ; ASCIZ
					 string of current directory 
     598 005E                        C  dpb     ENDS 
     599                             C   
     600 = 005E                      C  DPBSIZ  EQU     SIZE dpb        ; Size 
					of the structure in bytes 
     601                             C   
     602 = 000D                      C  DSKSIZ  =       dpb_max_cluster ; Size 
					of disk (temp used during init only) 
     603                             C  ;                                      
					                                    ; 
     604                             C  ;            C  A  V  E  A  T     P  R 
					 O  G  R  A  M  M  E  R             ; 
     605                             C  ;----+----+----+----+----+----+----+---
					-+----+----+----+----+----+----+----; 
     606                             C   
     607                             C  BREAK <File Control Block definition> 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 09:44:02

DISKCOPY MSDOS Disk Copier                                  Page     1-33
File Control Block definition                               

     608                             C  ; 
     609                             C  ; Field definition for FCBs 
     610                             C  ; The FCB has the following structure: 
     611                             C  ; 
     612                             C  ;       +---------------------------+ 
     613                             C  ;       |   Drive indicator(byte)   | 
     614                             C  ;       +---------------------------+ 
     615                             C  ;       |    Filename (8 chars)     | 
     616                             C  ;       +---------------------------+ 
     617                             C  ;       |    Extension (3 chars)    | 
     618                             C  ;       +---------------------------+ 
     619                             C  ;       |   Current Extent(word)    | 
     620                             C  ;       +---------------------------+ 
     621                             C  ;       |    Record size (word)     | 
     622                             C  ;       +---------------------------+ 
     623                             C  ;       |    File Size (2 words)    | 
     624                             C  ;       +---------------------------+ 
     625                             C  ;       |       Date of write       | 
     626                             C  ;       +---------------------------+ 
     627                             C  ;       |       Time of write       | 
     628                             C  ;       +---------------------------+ 
     629                             C  ;----+----+----+----+----+----+----+---
					-+----+----+----+----+----+----+----; 
     630                             C  ;            C  A  V  E  A  T     P  R 
					 O  G  R  A  M  M  E  R             ; 
     631                             C  ;                                      
					                                    ; 
     632                             C  ;       | Flags:                    | 
     633                             C  ;       |  bit 7=0 file/1 device    | 
     634                             C  ;       |  bit 6=0 if dirty         | 
     635                             C  ;       |  bits 0-5 deviceid        | 
     636                             C  ;       +---------------------------+ 
     637                             C  ;       |   first cluster in file   | 
     638                             C  ;       +---------------------------+ 
     639                             C  ;       | position of last cluster  | 
     640                             C  ;       +---------------------------+ 
     641                             C  ;       |   last cluster accessed   |  
					 12 bit-+--- packed in 3 bytes 
     642                             C  ;       +---------------------------+  
					        | 
     643                             C  ;       |     parent directory      |  
					 <------+ 
     644                             C  ;       +---------------------------+ 
     645                             C  ;                                      
					                                    ; 
     646                             C  ;            C  A  V  E  A  T     P  R 
					 O  G  R  A  M  M  E  R             ; 
     647                             C  ;----+----+----+----+----+----+----+---
					-+----+----+----+----+----+----+----; 
     648                             C  ;       |    next record number     | 
     649                             C  ;       +---------------------------+ 
     650                             C  ;       |   random record number    | 
     651                             C  ;       +---------------------------+ 
     652                             C  ; 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 09:44:02

DISKCOPY MSDOS Disk Copier                                  Page     1-34
File Control Block definition                               

     653                             C   
     654                             C  sys_fcb     STRUC 
     655 0000  ??                    C  fcb_drive   DB      ? 
     656 0001  0008[                 C  fcb_name    DB      8 DUP (?) 
     657            ??               C  
     658                         ]   C  
     659                             C  
     660 0009  0003[                 C  fcb_ext     DB      3 DUP (?) 
     661            ??               C  
     662                         ]   C  
     663                             C  
     664 000C  ????                  C  fcb_EXTENT  DW      ? 
     665 000E  ????                  C  fcb_RECSIZ  DW      ?       ; Size of r
					ecord (user settable) 
     666 0010  ????                  C  fcb_FILSIZ  DW      ?       ; Size of f
					ile in bytes; used with the following 
     667                             C                              ; word 
     668 0012  ????                  C  fcb_DRVBP   DW      ?       ; BP for SE
					ARCH FIRST and SEARCH NEXT 
     669 0014  ????                  C  fcb_FDATE   DW      ?       ; Date of l
					ast writing 
     670 0016  ????                  C  fcb_FTIME   DW      ?       ; Time of l
					ast writing 
     671                             C  ;----+----+----+----+----+----+----+---
					-+----+----+----+----+----+----+----; 
     672                             C  ;            C  A  V  E  A  T     P  R 
					 O  G  R  A  M  M  E  R             ; 
     673                             C  ;                                      
					                                    ; 
     674 0018  ??                    C  fcb_DEVID   DB      ?       ; Device ID
					 number, bits 0-5 if file. 
     675                             C                              ; bit 7=0 f
					or file, bit 7=1 for I/O device 
     676                             C                              ; If file, 
					bit 6=0 if dirty 
     677                             C                              ; If I/O de
					vice, bit 6=0 if EOF (input) 
     678                             C                              ;          
					     Bit 5=1 if Raw mode 
     679                             C                              ;          
					     Bit 0=1 if console input device 
     680                             C                              ;          
					     Bit 1=1 if console output device 
     681                             C                              ;          
					     Bit 2=1 if null device 
     682                             C                              ;          
					     Bit 3=1 if clock device 
     683 0019  ????                  C  fcb_FIRCLUS DW      ?       ; First clu
					ster of file 
     684 001B  ????                  C  fcb_CLUSPOS DW      ?       ; Position 
					of last cluster accessed 
     685 001D  ????                  C  fcb_LSTCLUS DW      ?       ; Last clus
					ter accessed and directory pack 2 12 
     686 001F  ??                    C              DB      ?       ; bit numbe
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 09:44:02

DISKCOPY MSDOS Disk Copier                                  Page     1-35
File Control Block definition                               

					rs into 24 bits... 
     687                             C  ;                                      
					                                    ; 
     688                             C  ;            C  A  V  E  A  T     P  R 
					 O  G  R  A  M  M  E  R             ; 
     689                             C  ;----+----+----+----+----+----+----+---
					-+----+----+----+----+----+----+----; 
     690 0020  ??                    C  fcb_NR      DB      ?       ; Next reco
					rd 
     691 0021  0004[                 C  fcb_RR      DB      4 DUP (?)          
					     ; Random record 
     692            ??               C  
     693                         ]   C  
     694                             C  
     695 0025                        C  sys_fcb     ENDS 
     696                             C   
     697 = 0010                      C  FILDIRENT       = fcb_FILSIZ           
					 ; Used only by SEARCH FIRST and SEARCH
					 
     698                             C                                         
					 ; NEXT 
     699                             C   
     700                             C  ;----+----+----+----+----+----+----+---
					-+----+----+----+----+----+----+----; 
     701                             C  ;            C  A  V  E  A  T     P  R 
					 O  G  R  A  M  M  E  R             ; 
     702                             C  ;                                      
					                                    ; 
     703 = 0040                      C  devid_file_clean        EQU     40h    
					 ; true if file and not written 
     704 = 003F                      C  devid_file_mask_drive   EQU     3Fh    
					 ; mask for drive number 
     705                             C   
     706 = 0080                      C  devid_device            EQU     80h    
					 ; true if a device 
     707 = 0040                      C  devid_device_EOF        EQU     40h    
					 ; true if end of file reached 
     708 = 0020                      C  devid_device_raw        EQU     20h    
					 ; true if in raw mode 
     709 = 0010                      C  devid_device_special    EQU     10h    
					 ; true if special device 
     710 = 0008                      C  devid_device_clock      EQU     08h    
					 ; true if clock device 
     711 = 0004                      C  devid_device_null       EQU     04h    
					 ; true if null device 
     712 = 0002                      C  devid_device_con_out    EQU     02h    
					 ; true if console output 
     713 = 0001                      C  devid_device_con_in     EQU     01h    
					 ; true if consle input 
     714                             C   
     715                             C  ; 
     716                             C  ; structure of devid field as returned 
					by IOCTL is: 
     717                             C  ; 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 09:44:02

DISKCOPY MSDOS Disk Copier                                  Page     1-36
File Control Block definition                               

     718                             C  ;       BIT     7   6   5   4   3   2  
					 1   0 
     719                             C  ;             |---|---|---|---|---|---|
					---|---| 
     720                             C  ;             | I | E | R | S | I | I |
					 I | I | 
     721                             C  ;             | S | O | A | P | S | S |
					 S | S | 
     722                             C  ;             | D | F | W | E | C | N |
					 C | C | 
     723                             C  ;             | E |   |   | C | L | U |
					 O | I | 
     724                             C  ;             | V |   |   | L | K | L |
					 T | N | 
     725                             C  ;             |---|---|---|---|---|---|
					---|---| 
     726                             C  ;       ISDEV = 1 if this channel is a 
					device 
     727                             C  ;             = 0 if this channel is a 
					disk file 
     728                             C  ; 
     729                             C  ;       If ISDEV = 1 
     730                             C  ; 
     731                             C  ;             EOF = 0 if End Of File on
					 input 
     732                             C  ;             RAW = 1 if this device is
					 in Raw mode 
     733                             C  ;                 = 0 if this device is
					 cooked 
     734                             C  ;             ISCLK = 1 if this device 
					is the clock device 
     735                             C  ;             ISNUL = 1 if this device 
					is the null device 
     736                             C  ;             ISCOT = 1 if this device 
					is the console output 
     737                             C  ;             ISCIN = 1 if this device 
					is the console input 
     738                             C  ; 
     739                             C  ;       If ISDEV = 0 
     740                             C  ;             EOF = 0 if channel has be
					en written 
     741                             C  ;             Bits 0-5  are  the  block
					  device  number  for 
     742                             C  ;                 the channel (0 = A, 1
					 = B, ...) 
     743                             C  ; 
     744 = 0080                      C  devid_ISDEV     EQU     80h 
     745 = 0040                      C  devid_EOF       EQU     40h 
     746 = 0020                      C  devid_RAW       EQU     20h 
     747 = 0010                      C  devid_SPECIAL   EQU     10H 
     748 = 0008                      C  devid_ISCLK     EQU     08h 
     749 = 0004                      C  devid_ISNUL     EQU     04h 
     750 = 0002                      C  devid_ISCOT     EQU     02h 
     751 = 0001                      C  devid_ISCIN     EQU     01h 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 09:44:02

DISKCOPY MSDOS Disk Copier                                  Page     1-37
File Control Block definition                               

     752                             C   
     753 = 001F                      C  devid_block_dev EQU     1Fh            
					 ; mask for block device number 
     754                             C   
     755                             C  ; 
     756                             C  ; find first/next buffer 
     757                             C  ; 
     758                             C  find_buf    STRUC 
     759 0000  ??                    C  find_buf_sattr      DB  ?           ; a
					ttribute of search 
     760 0001  ??                    C  find_buf_drive      DB  ?           ; d
					rive of search 
     761 0002  000B[                 C  find_buf_name       DB  11 DUP (?)  ; f
					ormatted name 
     762            ??               C  
     763                         ]   C  
     764                             C  
     765 000D  ????                  C  find_buf_LastEnt    DW  ?           ; L
					astEnt 
     766 000F  ????????              C  find_buf_ThisDPB    DD  ?           ; T
					his DPB 
     767 0013  ????                  C  find_buf_DirStart   DW  ?           ; D
					irStart 
     768                             C  ;                                      
					                                    ; 
     769                             C  ;            C  A  V  E  A  T     P  R 
					 O  G  R  A  M  M  E  R             ; 
     770                             C  ;----+----+----+----+----+----+----+---
					-+----+----+----+----+----+----+----; 
     771                             C   
     772 0015  ??                    C  find_buf_attr       DB  ?           ; a
					ttribute found 
     773 0016  ????                  C  find_buf_time       DW  ?           ; t
					ime 
     774 0018  ????                  C  find_buf_date       DW  ?           ; d
					ate 
     775 001A  ????                  C  find_buf_size_l     DW  ?           ; l
					ow(size) 
     776 001C  ????                  C  find_buf_size_h     DW  ?           ; h
					igh(size) 
     777 001E  000D[                 C  find_buf_pname      DB  13 DUP (?)  ; p
					acked name 
     778            ??               C  
     779                         ]   C  
     780                             C  
     781 002B                        C  find_buf    ENDS 
     782                             C   
     783                             C  BREAK <Process data block> 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 09:44:02

DISKCOPY MSDOS Disk Copier                                  Page     1-38
Process data block                                          

     784                             C  ; 
     785                             C  ; Process data block (otherwise known a
					s program header) 
     786                             C  ; 
     787                             C   
     788 = 0014                      C  FilPerProc          EQU     20 
     789                             C   
     790                             C  Process_data_block  STRUC 
     791 0000  ????                  C  PDB_Exit_Call       DW      ?          
					 ; INT int_abort system terminate 
     792 0002  ????                  C  PDB_block_len       DW      ?          
					 ; size of execution block 
     793 0004  ??                    C                      DB      ? 
     794 0005  0005[                 C  PDB_CPM_Call        DB  5 DUP (?)      
					 ; ancient call to system 
     795            ??               C  
     796                         ]   C  
     797                             C  
     798 000A  ????????              C  PDB_Exit            DD      ?          
					 ; pointer to exit routine 
     799 000E  ????????              C  PDB_Ctrl_C          DD      ?          
					 ; pointer to ^C routine 
     800 0012  ????????              C  PDB_Fatal_abort     DD      ?          
					 ; pointer to fatal error 
     801                             C  ;----+----+----+----+----+----+----+---
					-+----+----+----+----+----+----+----; 
     802                             C  ;            C  A  V  E  A  T     P  R 
					 O  G  R  A  M  M  E  R             ; 
     803                             C  ;                                      
					                                    ; 
     804 0016  ????                  C  PDB_Parent_PID      DW      ?          
					 ; PID of parent (terminate PID) 
     805 0018  0014[                 C  PDB_JFN_Table       DB  FilPerProc DUP 
					(?) 
     806            ??               C  
     807                         ]   C  
     808                             C  
     809                             C                                         
					 ; indices into system table 
     810                             C  ;                                      
					                                    ; 
     811                             C  ;            C  A  V  E  A  T     P  R 
					 O  G  R  A  M  M  E  R             ; 
     812                             C  ;----+----+----+----+----+----+----+---
					-+----+----+----+----+----+----+----; 
     813 002C  ????                  C  PDB_environ         DW      ?          
					 ; seg addr of environment 
     814                             C  ;----+----+----+----+----+----+----+---
					-+----+----+----+----+----+----+----; 
     815                             C  ;            C  A  V  E  A  T     P  R 
					 O  G  R  A  M  M  E  R             ; 
     816                             C  ;                                      
					                                    ; 
     817 002E  ????????              C  PDB_User_stack      DD      ?          
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 09:44:02

DISKCOPY MSDOS Disk Copier                                  Page     1-39
Process data block                                          

					 ; stack of self during system calls 
     818 0032  001E[                 C  PDB_PAD1            DB      1Eh DUP (?)
					 
     819            ??               C  
     820                         ]   C  
     821                             C  
     822                             C  ;                                      
					                                    ; 
     823                             C  ;            C  A  V  E  A  T     P  R 
					 O  G  R  A  M  M  E  R             ; 
     824                             C  ;----+----+----+----+----+----+----+---
					-+----+----+----+----+----+----+----; 
     825 0050  0005[                 C  PDB_Call_system     DB      5 DUP (?)  
					 ; portable method of system call 
     826            ??               C  
     827                         ]   C  
     828                             C  
     829                             C  ;----+----+----+----+----+----+----+---
					-+----+----+----+----+----+----+----; 
     830                             C  ;            C  A  V  E  A  T     P  R 
					 O  G  R  A  M  M  E  R             ; 
     831                             C  ;                                      
					                                    ; 
     832 0055  0006[                 C  PDB_PAD2            DB      6h DUP (?) 
					 ; 
     833            ??               C  
     834                         ]   C  
     835                             C  
     836                             C  ;                                      
					                                    ; 
     837                             C  ;            C  A  V  E  A  T     P  R 
					 O  G  R  A  M  M  E  R             ; 
     838                             C  ;----+----+----+----+----+----+----+---
					-+----+----+----+----+----+----+----; 
     839 005B                        C  Process_data_block  ENDS 
     840                             C   
     841                             C  BREAK <EXEC and EXE file structures> 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 09:44:02

DISKCOPY MSDOS Disk Copier                                  Page     1-40
EXEC and EXE file structures                                

     842                             C  ; 
     843                             C  ; EXEC arg block - load/go program 
     844                             C  ; 
     845                             C   
     846                             C  ; 
     847                             C  ; The following get used as arguments t
					o the EXEC system call.  They indicate 
     848                             C  ; whether or not the program is execute
					d or whether or not a program header 
     849                             C  ; gets created. 
     850                             C  ; 
     851 = 0001                      C  exec_func_no_execute    EQU 1          
					 ; no execute bit 
     852 = 0002                      C  exec_func_overlay       EQU 2          
					 ; overlay bit 
     853                             C   
     854                             C  Exec0           STRUC 
     855 0000  ????                  C  Exec0_environ   DW      ?              
					 ; seg addr of environment 
     856 0002  ????????              C  Exec0_com_line  DD      ?              
					 ; pointer to asciz command line 
     857 0006  ????????              C  Exec0_5C_FCB    DD      ?              
					 ; default fcb at 5C 
     858 000A  ????????              C  Exec0_6C_FCB    DD      ?              
					 ; default fcb at 6C 
     859 000E                        C  Exec0           ENDS 
     860                             C   
     861                             C  Exec1           STRUC 
     862 0000  ????                  C  Exec1_environ   DW      ?              
					 ; seg addr of environment 
     863 0002  ????????              C  Exec1_com_line  DD      ?              
					 ; pointer to asciz command line 
     864 0006  ????????              C  Exec1_5C_FCB    DD      ?              
					 ; default fcb at 5C 
     865 000A  ????????              C  Exec1_6C_FCB    DD      ?              
					 ; default fcb at 6C 
     866 000E  ????                  C  Exec1_SP        DW      ?              
					 ; stack pointer of program 
     867 0010  ????                  C  Exec1_SS        DW      ?              
					 ; stack seg register of program 
     868 0012  ????                  C  Exec1_IP        DW      ?              
					 ; entry point IP 
     869 0014  ????                  C  Exec1_CS        DW      ?              
					 ; entry point CS 
     870 0016                        C  Exec1           ENDS 
     871                             C   
     872                             C  Exec3           STRUC 
     873 0000  ????                  C  Exec3_load_addr DW      ?              
					 ; seg address of load point 
     874 0002  ????                  C  Exec3_reloc_fac DW      ?              
					 ; relocation factor 
     875 0004                        C  Exec3           ENDS 
     876                             C   
     877                             C  ; 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 09:44:02

DISKCOPY MSDOS Disk Copier                                  Page     1-41
EXEC and EXE file structures                                

     878                             C  ; Exit codes in upper byte 
     879                             C  ; 
     880 = 0000                      C  Exit_terminate      EQU     0 
     881 = 0000                      C  Exit_abort          EQU     0 
     882 = 0001                      C  Exit_Ctrl_C         EQU     1 
     883 = 0002                      C  Exit_Hard_Error     EQU     2 
     884 = 0003                      C  Exit_Keep_process   EQU     3 
     885                             C   
     886                             C  ; 
     887                             C  ; EXE file header 
     888                             C  ; 
     889                             C   
     890                             C  EXE_file    STRUC 
     891 0000  ????                  C  exe_signature   DW  ?                  
					 ; must contain 4D5A  (yay zibo!) 
     892 0002  ????                  C  exe_len_mod_512 DW  ?                  
					 ; low 9 bits of length 
     893 0004  ????                  C  exe_pages       DW  ?                  
					 ; number of 512b pages in file 
     894 0006  ????                  C  exe_rle_count   DW  ?                  
					 ; count of reloc entries 
     895 0008  ????                  C  exe_par_dir     DW  ?                  
					 ; number of paragraphs before image 
     896 000A  ????                  C  exe_min_BSS     DW  ?                  
					 ; minimum number of para of BSS 
     897 000C  ????                  C  exe_max_BSS     DW  ?                  
					 ; max number of para of BSS 
     898 000E  ????                  C  exe_SS          DW  ?                  
					 ; stack of image 
     899 0010  ????                  C  exe_SP          DW  ?                  
					 ; SP of image 
     900 0012  ????                  C  exe_chksum      DW  ?                  
					 ; checksum  of file (ignored) 
     901 0014  ????                  C  exe_IP          DW  ?                  
					 ; IP of entry 
     902 0016  ????                  C  exe_CS          DW  ?                  
					 ; CS of entry 
     903 0018  ????                  C  exe_rle_table   DW  ?                  
					 ; byte offset of reloc table 
     904 001A  ????                  C  exe_iov         DW  ?                  
					 ; overlay number (0 for root) 
     905 001C  ????????              C  exe_sym_tab     DD  ?                  
					 ; offset of symbol table in file 
     906 0020                        C  EXE_file    ENDS 
     907                             C   
     908 = 5A4D                      C  exe_valid_signature     EQU 5A4Dh 
     909 = 4D5A                      C  exe_valid_old_signature EQU 4D5Ah 
     910                             C   
     911                             C  symbol_entry    STRUC 
     912 0000  ????????              C  sym_value       DD  ? 
     913 0004  ????                  C  sym_type        DW  ? 
     914 0006  ??                    C  sym_len         DB  ? 
     915 0007  00FF[                 C  sym_name        DB  255 dup (?) 
     916            ??               C  
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 09:44:02

DISKCOPY MSDOS Disk Copier                                  Page     1-42
EXEC and EXE file structures                                

     917                         ]   C  
     918                             C  
     919 0106                        C  symbol_entry    ENDS 
     920                             C   
     921                             C  BREAK <Internal system file table forma
					t> 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 09:44:02

DISKCOPY MSDOS Disk Copier                                  Page     1-43
Internal system file table format                           

     922                             C  ;----+----+----+----+----+----+----+---
					-+----+----+----+----+----+----+----; 
     923                             C  ;            C  A  V  E  A  T     P  R 
					 O  G  R  A  M  M  E  R             ; 
     924                             C  ;                                      
					                                    ; 
     925                             C  ; 
     926                             C  ; system file table 
     927                             C  ; 
     928                             C   
     929                             C  sft             STRUC 
     930 0000  ????????              C  sft_link        DD      ? 
     931 0004  ????                  C  sft_count       DW      ?              
					 ; number of entries 
     932 0006  ????                  C  sft_table       DW      ?              
					 ; beginning of array of the following 
     933 0008                        C  sft             ENDS 
     934                             C   
     935                             C  ; 
     936                             C  ; system file table entry 
     937                             C  ; 
     938                             C   
     939                             C  sf_entry        STRUC 
     940 0000  ??                    C  sf_ref_count    DB      ?              
					 ; number of processes sharing fcb 
     941 0001  ??                    C  sf_mode         DB      ?              
					 ; mode of access 
     942 0002  ??                    C  sf_attr         DB      ?              
					 ; attribute of file 
     943 0003  0025[                 C  sf_fcb          DB      (SIZE sys_fcb) 
					DUP (?) 
     944            ??               C  
     945                         ]   C  
     946                             C  
     947                             C                                         
					 ; actual FCB 
     948 0028                        C  sf_entry        ENDS 
     949                             C   
     950 = 0005                      C  sf_default_number   EQU     5h 
     951                             C  ;                                      
					                                    ; 
     952                             C  ;            C  A  V  E  A  T     P  R 
					 O  G  R  A  M  M  E  R             ; 
     953                             C  ;----+----+----+----+----+----+----+---
					-+----+----+----+----+----+----+----; 
     954                             C   
     955                             C  BREAK <Memory arena structure> 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 09:44:02

DISKCOPY MSDOS Disk Copier                                  Page     1-44
Memory arena structure                                      

     956                             C  ;----+----+----+----+----+----+----+---
					-+----+----+----+----+----+----+----; 
     957                             C  ;            C  A  V  E  A  T     P  R 
					 O  G  R  A  M  M  E  R             ; 
     958                             C  ;                                      
					                                    ; 
     959                             C  ; 
     960                             C  ; arena item 
     961                             C  ; 
     962                             C  arena   STRUC 
     963 0000  ??                    C  arena_signature     DB  ?              
					 ; 4D for valid item, 5A for last item 
     964 0001  ????                  C  arena_owner         DW  ?              
					 ; owner of arena item 
     965 0003  ????                  C  arena_size          DW  ?              
					 ; size in paragraphs of item 
     966 0005                        C  arena   ENDS 
     967                             C   
     968                             C  ; 
     969                             C  ; Current structure of the data returne
					d by the international call 
     970                             C  ; 
     971                             C   
     972                             C  internat_block STRUC 
     973 0000  ????                  C  Date_tim_format DW      ?           ; 0
					-USA, 1-EUR, 2-JAP 
     974 0002  ??                    C  Currency_sym    DB      ?           ; C
					urrency Symbol 5 bytes 
     975 0003  ??                    C                  DB      ? 
     976 0004  ??                    C                  DB      ? 
     977 0005  ??                    C                  DB      ? 
     978 0006  ??                    C                  DB      ? 
     979 0007  ??                    C  Thous_sep       DB      ?           ; T
					housands separator 2 bytes 
     980 0008  ??                    C                  DB      ? 
     981 0009  ??                    C  Decimal_sep     DB      ?           ; D
					ecimal separator 2 bytes 
     982 000A  ??                    C                  DB      ? 
     983 000B  ??                    C  Date_sep        DB      ?           ; D
					ate separator 2 bytes 
     984 000C  ??                    C                  DB      ? 
     985 000D  ??                    C  Time_sep        DB      ?           ; D
					ecimal separator 2 bytes 
     986 000E  ??                    C                  DB      ? 
     987 000F  ??                    C  Bit_feild       DB      ?           ; B
					it values 
     988                             C                                      ;  
					 Bit 0 = 0 if currency symbol first 
     989                             C                                      ;  
					       = 1 if currency symbol last 
     990                             C                                      ;  
					 Bit 1 = 0 if No space after currency s
					ymbol 
     991                             C                                      ;  
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 09:44:02

DISKCOPY MSDOS Disk Copier                                  Page     1-45
Memory arena structure                                      

					       = 1 if space after currency symb
					ol 
     992 0010  ??                    C  Currency_cents  DB      ?           ; N
					umber of places after currency dec poin
					t 
     993 0011  ??                    C  Time_24         DB      ?           ; 1
					 if 24 hour time, 0 if 12 hour time 
     994 0012  ????                  C  Map_call        DW      ?           ; A
					ddress of case mapping call (DWORD) 
     995 0014  ????                  C                  DW      ?           ; T
					HIS IS TWO WORDS SO IT CAN BE INITIALIZ
					ED 
     996                             C                                      ;  
					in pieces. 
     997 0016  ??                    C  Data_sep        DB      ?           ; D
					ata list separator character 
     998 0017  ??                    C                  DB      ? 
     999 0018                        C  internat_block ENDS 
    1000                             C   
    1001                             C  ; 
    1002                             C  ; Max size of the block returned by the
					 INTERNATIONAL call 
    1003                             C  ; 
    1004 = 0020                      C  internat_block_max      EQU     32 
    1005                             C   
    1006                             C  ; 
    1007                             C  ; CAUTION: The routines in ALLOC.ASM re
					ly on the fact that arena_signature 
    1008                             C  ; and arena_owner_system are all equal 
					to zero and are contained in DI.  Chang
					e 
    1009                             C  ; them and change ALLOC.ASM. 
    1010                             C   
    1011 = 0000                      C  arena_owner_system  EQU 0              
					 ; free block indication 
    1012                             C   
    1013 = 004D                      C  arena_signature_normal  EQU 4Dh        
					 ; valid signature, not end of arena 
    1014 = 005A                      C  arena_signature_end     EQU 5Ah        
					 ; valid signature, last block in arena
					 
    1015                             C  ;                                      
					                                    ; 
    1016                             C  ;            C  A  V  E  A  T     P  R 
					 O  G  R  A  M  M  E  R             ; 
    1017                             C  ;----+----+----+----+----+----+----+---
					-+----+----+----+----+----+----+----; 
    1018                             C   
    1019                             C  BREAK <Machine instruction definitions>
					 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 09:44:02

DISKCOPY MSDOS Disk Copier                                  Page     1-46
Machine instruction definitions                             

    1020                             C   
    1021 = 00CD                      C  mi_INT          EQU     0CDh 
    1022 = 00EA                      C  mi_Long_JMP     EQU     0EAh 
    1023 = 009A                      C  mi_Long_CALL    EQU     09Ah 
    1024 = 00CB                      C  mi_Long_RET     EQU     0CBh 
    1025                             C   
    1026                             C  BREAK <Standard I/O assignments> 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 09:44:02

DISKCOPY MSDOS Disk Copier                                  Page     1-47
Standard I/O assignments                                    

    1027                             C   
    1028 = 0000                      C  stdin       EQU     0 
    1029 = 0001                      C  stdout      EQU     1 
    1030 = 0002                      C  stderr      EQU     2 
    1031 = 0003                      C  stdaux      EQU     3 
    1032 = 0004                      C  stdprn      EQU     4 
    1033                             C   
    1034                             C  BREAK <Xenix subfunction assignments> 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 09:44:02

DISKCOPY MSDOS Disk Copier                                  Page     1-48
Xenix subfunction assignments                               

    1035                             C   
    1036 = 0000                      C  open_for_read   EQU 0 
    1037 = 0001                      C  open_for_write  EQU 1 
    1038 = 0002                      C  open_for_both   EQU 2 
    1039                             C   
    1040                             C  BREAK <Xenix error codes> 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 09:44:02

DISKCOPY MSDOS Disk Copier                                  Page     1-49
Xenix error codes                                           

    1041                             C   
    1042                             C  ; 
    1043                             C  ; XENIX calls all return error codes th
					rough AX.  If an error occurred then 
    1044                             C  ; the carry bit will be set and the err
					or code is in AX.  If no error occurred
					 
    1045                             C  ; then the carry bit is reset and AX co
					ntains returned info. 
    1046                             C  ; 
    1047                             C   
    1048 =                           C  no_error_occurred               EQU    
					 0                                     
					                         ? 
    1049                             C   
    1050 = 0001                      C  error_invalid_function          EQU    
					 1 
    1051 = 0002                      C  error_file_not_found            EQU    
					 2 
    1052 = 0003                      C  error_path_not_found            EQU    
					 3 
    1053 = 0004                      C  error_too_many_open_files       EQU    
					 4 
    1054 = 0005                      C  error_access_denied             EQU    
					 5 
    1055 = 0006                      C  error_invalid_handle            EQU    
					 6 
    1056 = 0007                      C  error_arena_trashed             EQU    
					 7 
    1057 = 0008                      C  error_not_enough_memory         EQU    
					 8 
    1058 = 0009                      C  error_invalid_block             EQU    
					 9 
    1059 = 000A                      C  error_bad_environment           EQU    
					 10 
    1060 = 000B                      C  error_bad_format                EQU    
					 11 
    1061 = 000C                      C  error_invalid_access            EQU    
					 12 
    1062 = 000D                      C  error_invalid_data              EQU    
					 13 
    1063                             C  ;**** unused                    EQU    
					 14 
    1064 = 000F                      C  error_invalid_drive             EQU    
					 15 
    1065 = 0010                      C  error_current_directory         EQU    
					 16 
    1066 = 0011                      C  error_not_same_device           EQU    
					 17 
    1067 = 0012                      C  error_no_more_files             EQU    
					 18 
    1068                             C   
    1069 =                           C  country_not_found               EQU    
					 error_file_not_found 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 09:44:02

DISKCOPY MSDOS Disk Copier                                  Page     1-50
Xenix error codes                                           

    1070 =                           C  alloc_not_enough_memory         EQU    
					 error_not_enough_memory 
    1071 =                           C  alloc_arena_trashed             EQU    
					 error_arena_trashed 
    1072                             C   
    1073 =                           C  close_invalid_handle            EQU    
					 error_invalid_handle 
    1074 =                           C  close_invalid_function          EQU    
					 error_invalid_function 
    1075                             C   
    1076 =                           C  chdir_path_not_found            EQU    
					 error_path_not_found 
    1077                             C   
    1078 =                           C  chmod_path_not_found            EQU    
					 error_path_not_found 
    1079 =                           C  chmod_access_denied             EQU    
					 error_access_denied 
    1080 =                           C  chmod_invalid_function          EQU    
					 error_invalid_function 
    1081                             C   
    1082 =                           C  creat_access_denied             EQU    
					 error_access_denied 
    1083 =                           C  creat_path_not_found            EQU    
					 error_path_not_found 
    1084 =                           C  creat_too_many_open_files       EQU    
					 error_too_many_open_files 
    1085                             C   
    1086 =                           C  curdir_invalid_drive            EQU    
					 error_invalid_drive 
    1087                             C   
    1088 =                           C  dealloc_invalid_block           EQU    
					 error_invalid_block 
    1089 =                           C  dealloc_arena_trashed           EQU    
					 error_arena_trashed 
    1090                             C   
    1091 =                           C  dup_invalid_handle              EQU    
					 error_invalid_handle 
    1092 =                           C  dup_too_many_open_files         EQU    
					 error_too_many_open_files 
    1093                             C   
    1094 =                           C  dup2_invalid_handle             EQU    
					 error_invalid_handle 
    1095                             C   
    1096 =                           C  exec_invalid_function           EQU    
					 error_invalid_function 
    1097 =                           C  exec_bad_environment            EQU    
					 error_bad_environment 
    1098 =                           C  exec_bad_format                 EQU    
					 error_bad_format 
    1099 =                           C  exec_not_enough_memory          EQU    
					 error_not_enough_memory 
    1100 =                           C  exec_file_not_found             EQU    
					 error_file_not_found 
    1101                             C   
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 09:44:02

DISKCOPY MSDOS Disk Copier                                  Page     1-51
Xenix error codes                                           

    1102 =                           C  filetimes_invalid_function      EQU    
					 error_invalid_function 
    1103 =                           C  filetimes_invalid_handle        EQU    
					 error_invalid_handle 
    1104                             C   
    1105 =                           C  findfirst_file_not_found        EQU    
					 error_file_not_found 
    1106 =                           C  findfirst_no_more_files         EQU    
					 error_no_more_files 
    1107 =                           C  findnext_no_more_files          EQU    
					 error_no_more_files 
    1108                             C   
    1109 =                           C  international_invalid_function  EQU    
					 error_invalid_function 
    1110                             C   
    1111 =                           C  ioctl_invalid_handle            EQU    
					 error_invalid_handle 
    1112 =                           C  ioctl_invalid_function          EQU    
					 error_invalid_function 
    1113 =                           C  ioctl_invalid_data              EQU    
					 error_invalid_data 
    1114                             C   
    1115 =                           C  lseek_invalid_handle            EQU    
					 error_invalid_handle 
    1116 =                           C  lseek_invalid_function          EQU    
					 error_invalid_function 
    1117                             C   
    1118 =                           C  mkdir_path_not_found            EQU    
					 error_path_not_found 
    1119 =                           C  mkdir_access_denied             EQU    
					 error_access_denied 
    1120                             C   
    1121 =                           C  open_invalid_access             EQU    
					 error_invalid_access 
    1122 =                           C  open_file_not_found             EQU    
					 error_file_not_found 
    1123 =                           C  open_access_denied              EQU    
					 error_access_denied 
    1124 =                           C  open_too_many_open_files        EQU    
					 error_too_many_open_files 
    1125                             C   
    1126 =                           C  read_invalid_handle             EQU    
					 error_invalid_handle 
    1127 =                           C  read_access_denied              EQU    
					 error_access_denied 
    1128                             C   
    1129 =                           C  rename_file_not_found           EQU    
					 error_file_not_found 
    1130 =                           C  rename_not_same_device          EQU    
					 error_not_same_device 
    1131 =                           C  rename_access_denied            EQU    
					 error_access_denied 
    1132                             C   
    1133 =                           C  rmdir_path_not_found            EQU    
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 09:44:02

DISKCOPY MSDOS Disk Copier                                  Page     1-52
Xenix error codes                                           

					 error_path_not_found 
    1134 =                           C  rmdir_access_denied             EQU    
					 error_access_denied 
    1135 =                           C  rmdir_current_directory         EQU    
					 error_current_directory 
    1136                             C   
    1137 =                           C  setblock_invalid_block          EQU    
					 error_invalid_block 
    1138 =                           C  setblock_arena_trashed          EQU    
					 error_arena_trashed 
    1139 =                           C  setblock_not_enough_memory      EQU    
					 error_not_enough_memory 
    1140 =                           C  setblock_invalid_function       EQU    
					 error_invalid_function 
    1141                             C   
    1142 =                           C  unlink_file_not_found           EQU    
					 error_file_not_found 
    1143 =                           C  unlink_access_denied            EQU    
					 error_access_denied 
    1144                             C   
    1145 =                           C  write_invalid_handle            EQU    
					 error_invalid_handle 
    1146 =                           C  write_access_denied             EQU    
					 error_access_denied 
    1147                             C   
    1148                             C  BREAK <system call definitions> 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 09:44:02

DISKCOPY MSDOS Disk Copier                                  Page     1-53
system call definitions                                     

    1149                             C   
    1150 = 0000                      C  Abort                           EQU 0  
					 ;  0      0 
    1151 = 0001                      C  Std_Con_Input                   EQU 1  
					 ;  1      1 
    1152 = 0002                      C  Std_Con_Output                  EQU 2  
					 ;  2      2 
    1153 = 0003                      C  Std_Aux_Input                   EQU 3  
					 ;  3      3 
    1154 = 0004                      C  Std_Aux_Output                  EQU 4  
					 ;  4      4 
    1155 = 0005                      C  Std_Printer_Output              EQU 5  
					 ;  5      5 
    1156 = 0006                      C  Raw_Con_IO                      EQU 6  
					 ;  6      6 
    1157 = 0007                      C  Raw_Con_Input                   EQU 7  
					 ;  7      7 
    1158 = 0008                      C  Std_Con_Input_No_Echo           EQU 8  
					 ;  8      8 
    1159 = 0009                      C  Std_Con_String_Output           EQU 9  
					 ;  9      9 
    1160 = 000A                      C  Std_Con_String_Input            EQU 10 
					 ; 10      A 
    1161 = 000B                      C  Std_Con_Input_Status            EQU 11 
					 ; 11      B 
    1162 = 000C                      C  Std_Con_Input_Flush             EQU 12 
					 ; 12      C 
    1163 = 000D                      C  Disk_Reset                      EQU 13 
					 ; 13      D 
    1164 = 000E                      C  Set_Default_Drive               EQU 14 
					 ; 14      E 
    1165 = 000F                      C  FCB_Open                        EQU 15 
					 ; 15      F 
    1166 = 0010                      C  FCB_Close                       EQU 16 
					 ; 16     10 
    1167 = 0011                      C  Dir_Search_First                EQU 17 
					 ; 17     11 
    1168 = 0012                      C  Dir_Search_Next                 EQU 18 
					 ; 18     12 
    1169 = 0013                      C  FCB_Delete                      EQU 19 
					 ; 19     13 
    1170 = 0014                      C  FCB_Seq_Read                    EQU 20 
					 ; 20     14 
    1171 = 0015                      C  FCB_Seq_Write                   EQU 21 
					 ; 21     15 
    1172 = 0016                      C  FCB_Create                      EQU 22 
					 ; 22     16 
    1173 = 0017                      C  FCB_Rename                      EQU 23 
					 ; 23     17 
    1174 = 0019                      C  Get_Default_Drive               EQU 25 
					 ; 25     19 
    1175 = 001A                      C  Set_DMA                         EQU 26 
					 ; 26     1A 
    1176                             C  ;----+----+----+----+----+----+----+---
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 09:44:02

DISKCOPY MSDOS Disk Copier                                  Page     1-54
system call definitions                                     

					-+----+----+----+----+----+----+----; 
    1177                             C  ;            C  A  V  E  A  T     P  R 
					 O  G  R  A  M  M  E  R             ; 
    1178                             C  ;                                      
					                                    ; 
    1179 = 001F                      C  Get_Default_DPB                 EQU 31 
					 ; 31     1F 
    1180                             C  ;                                      
					                                    ; 
    1181                             C  ;            C  A  V  E  A  T     P  R 
					 O  G  R  A  M  M  E  R             ; 
    1182                             C  ;----+----+----+----+----+----+----+---
					-+----+----+----+----+----+----+----; 
    1183 = 0021                      C  FCB_Random_Read                 EQU 33 
					 ; 33     21 
    1184 = 0022                      C  FCB_Random_Write                EQU 34 
					 ; 34     22 
    1185 = 0023                      C  Get_FCB_File_Length             EQU 35 
					 ; 35     23 
    1186 = 0024                      C  Get_FCB_Position                EQU 36 
					 ; 36     24 
    1187 = 0025                      C  Set_Interrupt_Vector            EQU 37 
					 ; 37     25 
    1188 = 0026                      C  Create_Process_Data_Block       EQU 38 
					 ; 38     26 
    1189 = 0027                      C  FCB_Random_Read_Block           EQU 39 
					 ; 39     27 
    1190 = 0028                      C  FCB_Random_Write_Block          EQU 40 
					 ; 40     28 
    1191 = 0029                      C  Parse_File_Descriptor           EQU 41 
					 ; 41     29 
    1192 = 002A                      C  Get_Date                        EQU 42 
					 ; 42     2A 
    1193 = 002B                      C  Set_Date                        EQU 43 
					 ; 43     2B 
    1194 = 002C                      C  Get_Time                        EQU 44 
					 ; 44     2C 
    1195 = 002D                      C  Set_Time                        EQU 45 
					 ; 45     2D 
    1196 = 002E                      C  Set_Verify_On_Write             EQU 46 
					 ; 46     2E 
    1197                             C  ; Extended functionality group 
    1198 = 002F                      C  Get_DMA                         EQU 47 
					 ; 47     2F 
    1199 = 0030                      C  Get_Version                     EQU 48 
					 ; 48     30 
    1200 = 0031                      C  Keep_Process                    EQU 49 
					 ; 49     31 
    1201                             C  ;----+----+----+----+----+----+----+---
					-+----+----+----+----+----+----+----; 
    1202                             C  ;            C  A  V  E  A  T     P  R 
					 O  G  R  A  M  M  E  R             ; 
    1203                             C  ;                                      
					                                    ; 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 09:44:02

DISKCOPY MSDOS Disk Copier                                  Page     1-55
system call definitions                                     

    1204 = 0032                      C  Get_DPB                         EQU 50 
					 ; 50     32 
    1205                             C  ;                                      
					                                    ; 
    1206                             C  ;            C  A  V  E  A  T     P  R 
					 O  G  R  A  M  M  E  R             ; 
    1207                             C  ;----+----+----+----+----+----+----+---
					-+----+----+----+----+----+----+----; 
    1208 = 0033                      C  Set_CTRL_C_Trapping             EQU 51 
					 ; 51     33 
    1209 = 0034                      C  Get_InDOS_Flag                  EQU 52 
					 ; 52     34 
    1210 = 0035                      C  Get_Interrupt_Vector            EQU 53 
					 ; 53     35 
    1211 = 0036                      C  Get_Drive_Freespace             EQU 54 
					 ; 54     36 
    1212 = 0037                      C  Char_Oper                       EQU 55 
					 ; 55     37 
    1213 = 0038                      C  International                   EQU 56 
					 ; 56     38 
    1214                             C  ;   Directory Group 
    1215 = 0039                      C  MKDir                           EQU 57 
					 ; 57     39 
    1216 = 003A                      C  RMDir                           EQU 58 
					 ; 58     3A 
    1217 = 003B                      C  CHDir                           EQU 59 
					 ; 59     3B 
    1218                             C  ;   File Group 
    1219 = 003C                      C  Creat                           EQU 60 
					 ; 60     3C 
    1220 = 003D                      C  Open                            EQU 61 
					 ; 61     3D 
    1221 = 003E                      C  Close                           EQU 62 
					 ; 62     3E 
    1222 = 003F                      C  Read                            EQU 63 
					 ; 63     3F 
    1223 = 0040                      C  Write                           EQU 64 
					 ; 64     40 
    1224 = 0041                      C  Unlink                          EQU 65 
					 ; 65     41 
    1225 = 0042                      C  LSeek                           EQU 66 
					 ; 66     42 
    1226 = 0043                      C  CHMod                           EQU 67 
					 ; 67     43 
    1227 = 0044                      C  IOCtl                           EQU 68 
					 ; 68     44 
    1228 = 0045                      C  XDup                            EQU 69 
					 ; 69     45 
    1229 = 0046                      C  XDup2                           EQU 70 
					 ; 70     46 
    1230 = 0047                      C  Current_Dir                     EQU 71 
					 ; 71     47 
    1231                             C  ;    Memory Group 
    1232 = 0048                      C  Alloc                           EQU 72 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 09:44:02

DISKCOPY MSDOS Disk Copier                                  Page     1-56
system call definitions                                     

					 ; 72     48 
    1233 = 0049                      C  Dealloc                         EQU 73 
					 ; 73     49 
    1234 = 004A                      C  Setblock                        EQU 74 
					 ; 74     4A 
    1235                             C  ;    Process Group 
    1236 = 004B                      C  Exec                            EQU 75 
					 ; 75     4B 
    1237 = 004C                      C  Exit                            EQU 76 
					 ; 76     4C 
    1238 = 004D                      C  Wait                            EQU 77 
					 ; 77     4D 
    1239 = 004E                      C  Find_First                      EQU 78 
					 ; 78     4E 
    1240                             C  ;   Special Group 
    1241 = 004F                      C  Find_Next                       EQU 79 
					 ; 79     4F 
    1242                             C  ; SPECIAL SYSTEM GROUP 
    1243                             C  ;----+----+----+----+----+----+----+---
					-+----+----+----+----+----+----+----; 
    1244                             C  ;            C  A  V  E  A  T     P  R 
					 O  G  R  A  M  M  E  R             ; 
    1245                             C  ;                                      
					                                    ; 
    1246 = 0050                      C  Set_Current_PDB                 EQU 80 
					 ; 80     50 
    1247 = 0051                      C  Get_Current_PDB                 EQU 81 
					 ; 81     51 
    1248 = 0052                      C  Get_In_Vars                     EQU 82 
					 ; 82     52 
    1249 = 0053                      C  SetDPB                          EQU 83 
					 ; 83     53 
    1250                             C  ;                                      
					                                    ; 
    1251                             C  ;            C  A  V  E  A  T     P  R 
					 O  G  R  A  M  M  E  R             ; 
    1252                             C  ;----+----+----+----+----+----+----+---
					-+----+----+----+----+----+----+----; 
    1253 = 0054                      C  Get_Verify_On_Write             EQU 84 
					 ; 84     54 
    1254                             C  ;----+----+----+----+----+----+----+---
					-+----+----+----+----+----+----+----; 
    1255                             C  ;            C  A  V  E  A  T     P  R 
					 O  G  R  A  M  M  E  R             ; 
    1256                             C  ;                                      
					                                    ; 
    1257 = 0055                      C  Dup_PDB                         EQU 85 
					 ; 85     55 
    1258                             C  ;                                      
					                                    ; 
    1259                             C  ;            C  A  V  E  A  T     P  R 
					 O  G  R  A  M  M  E  R             ; 
    1260                             C  ;----+----+----+----+----+----+----+---
					-+----+----+----+----+----+----+----; 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 09:44:02

DISKCOPY MSDOS Disk Copier                                  Page     1-57
system call definitions                                     

    1261 = 0056                      C  Rename                          EQU 86 
					 ; 86     56 
    1262 = 0057                      C  File_Times                      EQU 87 
					 ; 87     57 
    1263 = 0058                      C  AllocOper                       EQU 88 
					 ; 88     58 
    1264                             C  ; Network extention system calls 
    1265 = 0059                      C  GetExtendedError                EQU 89 
					 ; 89     59 
    1266 = 005A                      C  CreateTempFile                  EQU 90 
					 ; 90     5A 
    1267 = 005B                      C  CreateNewFile                   EQU 91 
					 ; 91     5B 
    1268 = 005C                      C  LockOper                        EQU 92 
					 ; 92     5C Lock and Unlock 
    1269 = 005D                      C  ServerCall                      EQU 93 
					 ; 93     5D CommitAll, ServerDOSCall, 
    1270                             C                                         
					 ;           CloseByName, CloseUser, 
    1271                             C                                         
					 ;           CloseUserProcess, 
    1272                             C                                         
					 ;           GetOpenFileList 
    1273 = 005E                      C  UserIDOper                      EQU 94 
					 ; 94     5E Get and Set 
    1274 = 005F                      C  AssignOper                      EQU 95 
					 ; 95     5F On, Off, Get, Set, Cancel 
    1275                             C   
    1276 = 00F8                      C  Set_Oem_Handler                 EQU 248
					 ; 248    F8 
    1277 = 00F9                      C  OEM_C1                          EQU 249
					 ; 249    F9 
    1278 = 00FA                      C  OEM_C2                          EQU 250
					 ; 250    FA 
    1279 = 00FB                      C  OEM_C3                          EQU 251
					 ; 251    FB 
    1280 = 00FC                      C  OEM_C4                          EQU 252
					 ; 252    FC 
    1281 = 00FD                      C  OEM_C5                          EQU 253
					 ; 253    FD 
    1282 = 00FE                      C  OEM_C6                          EQU 254
					 ; 254    FE 
    1283 = 00FF                      C  OEM_C7                          EQU 255
					 ; 255    FF 
    1284                             C  SUBTTL 
    1285                                 
    1286                                 
    1287 = 005C                         fcb     equ     5ch 
    1288                                 
    1289 0000                           CODE    SEGMENT PUBLIC 
    1290 0000                           CODE    ENDS 
    1291                                 
    1292 0000                           CONST   SEGMENT PUBLIC BYTE 
    1293 0000                           CONST   ENDS 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 09:44:02

DISKCOPY MSDOS Disk Copier                                  Page     1-58
                                                            

    1294                                 
    1295 0000                           DATA    SEGMENT PUBLIC BYTE 
    1296 0000                           DATA    ENDS 
    1297                                 
    1298                                DG      GROUP   CODE,CONST,DATA 
    1299                                 
    1300 0000                           CODE  segment PUBLIC 
    1301                                        assume  cs:DG,ds:DG,es:DG,ss:DG
					 
    1302                                 
    1303                                        EXTRN   dskrd:NEAR,dskwrt:NEAR,
					promptyn:NEAR 
    1304                                        PUBLIC  PRINT,PCRLF,ASKANOTHER,
					sec64k,secsiz 
    1305                                 
    1306 0100                                   org     100h 
    1307                                 
    1308 0100                           diskcopy: 
    1309 0100  EB 69 90                         jmp     disk_entry 
    1310                                 
    1311 0103  56 65 72 73 20 31 2E     HEADER  DB      "Vers 1.20" 
    1312       32 30                    
    1313                                 
    1314 010C  00                       source  db      0 
    1315 010D  00                       dest    db      0 
    1316 010E  0000                     count   dw      0 
    1317 0110  0000                     start   dw      0 
    1318 0112  0000                     secsiz  dw      0 
    1319 0114  0000                     passcnt dw      0 
    1320 0116  0000                     sec64k  dw      0 
    1321 0118  00                       media   db      0 
    1322 0119  0000                     buffer  dw      0 
    1323 011B  0000                     bufsiz  dw      0 
    1324                                 
    1325 011D  BA 0000 E                pcrlf:  mov     dx,OFFSET DG: crlf 
    1326 0120  B4 09                    print:  mov     ah,STD_CON_STRING_OUTPU
					T 
    1327 0122  CD 21                            int     bdos 
    1328 0124  C3                       pret:   ret 
    1329                                 
    1330 0125  BA 0000 E                getkey: mov     dx,OFFSET DG: keymsg 
    1331 0128  E8 0120 R                        call    print 
    1332 012B  B4 0C                            mov     ah,12                  
					 ;wait for key press 
    1333 012D  B0 01                            mov     al,1 
    1334 012F  CD 21                            int     21h 
    1335 0131  C3                               ret 
    1336                                ; 
    1337                                ; returns number of sectors on the disk
					 in cx, sector size in ax 
    1338                                ; 
    1339 0132  1E                       getdpb: push    ds 
    1340 0133  FE C2                            inc     dl 
    1341 0135  B4 32                            mov     ah,GET_DPB 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 09:44:02

DISKCOPY MSDOS Disk Copier                                  Page     1-59
                                                            

    1342 0137  CD 21                            int     bdos 
    1343 0139  8A 47 04                         mov     al,[bx+dpb_cluster_mask
					] 
    1344 013C  98                               cbw 
    1345 013D  40                               inc     ax 
    1346 013E  8B 4F 0D                         mov     cx,[bx+dpb_max_cluster]
					 
    1347 0141  49                               dec     cx 
    1348 0142  F7 E1                            mul     cx 
    1349 0144  03 47 0B                         add     ax,[bx+dpb_first_sector
					] 
    1350 0147  8B 4F 02                         mov     cx,[bx+dpb_sector_size]
					 
    1351 014A  8A 5F 16                         mov     bl,[bx+dpb_media] 
    1352 014D  1F                               pop     ds 
    1353 014E  C3                               ret 
    1354                                 
    1355 014F  8A 07                    getdrv: mov     al,[bx] 
    1356 0151  FE C8                            dec     al 
    1357 0153  3C FF                            cmp     al,-1 
    1358 0155  75 04                            jnz     get1 
    1359 0157  B4 19                            mov     ah,19h 
    1360 0159  CD 21                            int     21h 
    1361 015B  C3                       get1:   ret 
    1362                                ; 
    1363                                ; set zero flag if drives the same 
    1364                                ; 
    1365 015C  50                       compare:push    ax 
    1366 015D  A0 010D R                        mov     al,[dest] 
    1367 0160  3A 06 010C R                     cmp     al,[source] 
    1368 0164  58                               pop     ax 
    1369 0165  C3                               ret 
    1370                                 
    1371 0166                           printerr: 
    1372 0166  E8 0120 R                        call    print 
    1373 0169  CD 20                            int     boot 
    1374                                 
    1375 016B                           disk_entry: 
    1376 016B  FA                               cli                     ;set up
					 local stack 
    1377 016C  BC 0100                          mov     sp,100h 
    1378 016F  FB                               sti 
    1379                                 
    1380                                 
    1381                                ;Code to print header 
    1382                                ;       PUSH    AX 
    1383                                ;       MOV     DX,OFFSET DG: HEADER 
    1384                                ;       CALL    print 
    1385                                ;       POP     AX 
    1386                                 
    1387 0170  BA 0000 E                        mov     dx,OFFSET DG: drverr1 
    1388 0173  FE C0                            inc     al 
    1389 0175  74 EF                            jz      printerr 
    1390 0177  FE C4                            inc     ah 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 09:44:02

DISKCOPY MSDOS Disk Copier                                  Page     1-60
                                                            

    1391 0179  74 EB                            jz      printerr 
    1392                                 
    1393 017B  BB 005C                          mov     bx,fcb 
    1394 017E  E8 014F R                        call    getdrv 
    1395 0181  A2 010C R                        mov     [source],al 
    1396 0184  00 06 0000 E                     add     [srclet],al 
    1397 0188  BB 006C                          mov     bx,fcb+16 
    1398 018B  E8 014F R                        call    getdrv 
    1399 018E  A2 010D R                        mov     [dest],al 
    1400 0191  00 06 0000 E                     add     [dstlet],al 
    1401 0195  00 06 0000 E                     add     [fdstlet],al 
    1402 0199  B4 0D                            mov     ah,DISK_RESET 
    1403 019B  CD 21                            int     bdos                   
					 ;empty buffer queue 
    1404                                 
    1405 019D  BB 000F R                        mov     bx,OFFSET DG:progsiz + 
					15 
    1406 01A0  D1 EB                            shr     bx,1 
    1407 01A2  D1 EB                            shr     bx,1 
    1408 01A4  D1 EB                            shr     bx,1 
    1409 01A6  D1 EB                            shr     bx,1 
    1410 01A8  B4 4A                            mov     ah,setblock 
    1411 01AA  CD 21                            int     21h                    
					 ;give back extra memory 
    1412                                 
    1413 01AC  BB FFFF                          mov     bx,0FFFFh              
					 ;ask for Biggest hunk 
    1414 01AF  B4 48                            mov     ah,alloc 
    1415 01B1  CD 21                            int     21h 
    1416 01B3  73 04                            jnc     gotmem 
    1417 01B5  B4 48                            mov     ah,alloc 
    1418 01B7  CD 21                            int     21h 
    1419 01B9                           gotmem: 
    1420 01B9  A3 0119 R                        mov     [buffer],ax 
    1421 01BC  89 1E 011B R                     mov     [bufsiz],bx 
    1422                                 
    1423 01C0                           copyagn: 
    1424 01C0  C7 06 0110 R 0000                mov     [start],0              
					 ;Initialize start sector 
    1425 01C6  E8 015C R                        call    compare 
    1426 01C9  74 06                            jz      onedrv1 
    1427 01CB  BA 0000 E                        mov     dx,OFFSET DG: srcmsg 
    1428 01CE  E8 0120 R                        call    print 
    1429 01D1  BA 0000 E                onedrv1:mov     dx,OFFSET DG: fdstmsg 
    1430 01D4  E8 0120 R                        call    print 
    1431 01D7  E8 0125 R                        call    getkey 
    1432                                 
    1433 01DA  8A 16 010D R                     mov     dl,[dest] 
    1434 01DE  E8 0132 R                        call    getdpb 
    1435 01E1  A3 010E R                        mov     [count],ax 
    1436 01E4  89 0E 0112 R                     mov     [secsiz],cx 
    1437 01E8  88 1E 0118 R                     mov     [media],bl 
    1438                                 
    1439 01EC  E8 015C R                        call    compare 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 09:44:02

DISKCOPY MSDOS Disk Copier                                  Page     1-61
                                                            

    1440 01EF  75 09                            jnz     twodrv1 
    1441 01F1  BA 0000 E                        mov     dx,OFFSET DG: srcmsg 
    1442 01F4  E8 0120 R                        call    print 
    1443 01F7  E8 0125 R                        call    getkey 
    1444                                 
    1445 01FA  8A 16 010C R             twodrv1:mov     dl,[source] 
    1446 01FE  E8 0132 R                        call    getdpb 
    1447 0201  BA 0000 E                        mov     dx,OFFSET DG: drverr3 
    1448 0204  38 1E 0118 R                     cmp     [media],bl             
					 ;make sure media and sizes match 
    1449 0208  75 06                            jnz     errv 
    1450 020A  39 06 010E R                     cmp     [count],ax 
    1451 020E  74 03                            jz      sizeok 
    1452 0210  E9 0166 R                errv:   jmp     printerr 
    1453                                 
    1454 0213                           sizeok: 
    1455 0213  8B 1E 0112 R                     mov     bx,[secsiz] 
    1456 0217  83 C3 0F                         add     bx,15 
    1457 021A  B1 04                            mov     cl,4 
    1458 021C  D3 EB                            shr     bx,cl 
    1459 021E  33 D2                            xor     dx,dx 
    1460 0220  B8 1000                          mov     ax,1000H 
    1461 0223  F7 F3                            div     bx 
    1462 0225  A3 0116 R                        mov     [sec64k],ax     ;set nu
					mber of sectors in 64K bytes 
    1463 0228  33 D2                            xor     dx,dx 
    1464 022A  A1 011B R                        mov     ax,[bufsiz] 
    1465 022D  F7 F3                            div     bx 
    1466 022F  A3 0114 R                        mov     [passcnt],ax    ;set nu
					mber of sectors per pass 
    1467                                 
    1468 0232  E8 015C R                        call    compare         ;print 
					copying.... 
    1469 0235  74 06                            jz      loop 
    1470 0237  BA 0000 E                        mov     dx,OFFSET DG: cpymsg 
    1471 023A  E8 0120 R                        call    print 
    1472                                 
    1473 023D  1E                       loop:   push    ds 
    1474                                 
    1475 023E  A0 010C R                        mov     al,[source] 
    1476 0241  33 DB                            xor     bx,bx 
    1477 0243  8B 0E 0114 R                     mov     cx,[passcnt] 
    1478 0247  3B 0E 010E R                     cmp     cx,[count] 
    1479 024B  76 04                            jbe     countok 
    1480 024D  8B 0E 010E R                     mov     cx,[count] 
    1481 0251  8B 16 0110 R             countok:mov     dx,[start] 
    1482 0255  8E 1E 0119 R                     mov     ds,[buffer] 
    1483 0259  E8 0000 E                        call    dskrd 
    1484 025C  1F                               pop     ds 
    1485                                 
    1486 025D  1E                               push    ds 
    1487 025E  51                               push    cx 
    1488                                 
    1489 025F  E8 015C R                        call    compare 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 09:44:02

DISKCOPY MSDOS Disk Copier                                  Page     1-62
                                                            

    1490 0262  75 09                            jnz     twodrv2 
    1491 0264  BA 0000 E                        mov     dx,OFFSET DG: dstmsg 
    1492 0267  E8 0120 R                        call    print 
    1493 026A  E8 0125 R                        call    getkey 
    1494                                 
    1495 026D  A0 010D R                twodrv2:mov     al,[dest] 
    1496 0270  33 DB                            xor     bx,bx 
    1497 0272  8B 16 0110 R                     mov     dx,[start] 
    1498 0276  8E 1E 0119 R                     mov     ds,[buffer] 
    1499 027A  E8 0000 E                        call    dskwrt 
    1500 027D  59                               pop     cx 
    1501 027E  1F                               pop     ds 
    1502                                 
    1503 027F  01 0E 0110 R                     add     [start],cx 
    1504 0283  29 0E 010E R                     sub     [count],cx 
    1505 0287  76 10                            jbe     quitcopy 
    1506                                 
    1507 0289  E8 015C R                        call    compare 
    1508 028C  75 AF                            jnz     loop 
    1509 028E  BA 0000 E                        mov     dx,OFFSET DG: srcmsg 
    1510 0291  E8 0120 R                        call    print 
    1511 0294  E8 0125 R                        call    getkey 
    1512 0297  EB A4                            jmp     loop 
    1513                                 
    1514 0299                           quitcopy: 
    1515 0299  B4 0D                            mov     ah,DISK_RESET 
    1516 029B  CD 21                            int     bdos                   
					 ;empty buffer queue 
    1517 029D  BA 0000 E                        mov     dx,OFFSET DG: goodmsg 
    1518 02A0  E8 015C R                        call    compare 
    1519 02A3  75 03                            jnz     twodrv3 
    1520 02A5  BA 0000 E                        mov     dx,OFFSET DG: good1 
    1521                                 
    1522 02A8                           ASKANOTHER: 
    1523 02A8  E8 0120 R                twodrv3:call    print 
    1524 02AB  BA 0000 E                        mov     dx,OFFSET DG:anoprompt 
    1525 02AE  E8 0000 E                        call    promptyn 
    1526 02B1  75 03                            jnz     alldone 
    1527 02B3  E9 01C0 R                        jmp     copyagn 
    1528 02B6                           alldone: 
    1529 02B6  CD 20                            int     boot            ;home, 
					james... 
    1530                                 
    1531 02B8                           CODE    ENDS 
    1532                                 
    1533 0000                           CONST   SEGMENT PUBLIC BYTE 
    1534                                 
    1535                                        EXTRN   fdstmsg:BYTE,dstmsg:BYT
					E,fdstlet:BYTE,dstlet:BYTE 
    1536                                        EXTRN   cpymsg:BYTE,good1:BYTE,
					goodmsg:BYTE,srcmsg:BYTE,srclet:BYTE 
    1537                                        EXTRN   keymsg:BYTE,drverr1:BYT
					E,drverr3:BYTE,crlf:BYTE 
    1538                                        EXTRN   anoprompt:BYTE 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 09:44:02

DISKCOPY MSDOS Disk Copier                                  Page     1-63
                                                            

    1539                                 
    1540 0000  20 4D 49 43 52 4F 53             db      ' MICROSOFT - PETERS ' 
    1541       4F 46 54 20 2D 20 50     
    1542       45 54 45 52 53 20        
    1543 0014                           CONST   ENDS 
    1544                                 
    1545 0000                           DATA    SEGMENT BYTE 
    1546                                 
    1547 0000                           progsiz LABEL   BYTE 
    1548                                 
    1549 0000                           DATA    ends 
    1550                                        end     diskcopy 

Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 09:44:02

DISKCOPY MSDOS Disk Copier                                  Symbols-1
                                                             

Macros:

		N a m e			Lines

BREAK  . . . . . . . . . . . . .  	   2
CONDRET  . . . . . . . . . . . .  	  19
CONTEXT  . . . . . . . . . . . .  	   3
DO_EXT . . . . . . . . . . . . .  	   0
ENTRY  . . . . . . . . . . . . .  	   2
ERROR  . . . . . . . . . . . . .  	   4
INVOKE . . . . . . . . . . . . .  	   8
I_AM . . . . . . . . . . . . . .  	  14
I_NEED . . . . . . . . . . . . .  	  11
JUMP . . . . . . . . . . . . . .  	  17
LONG_ADDR  . . . . . . . . . . .  	   7
MAKELAB  . . . . . . . . . . . .  	   4
PROCEDURE  . . . . . . . . . . .  	   2
RETC . . . . . . . . . . . . . .  	   1
RETNC  . . . . . . . . . . . . .  	   1
RETNZ  . . . . . . . . . . . . .  	   1
RETURN . . . . . . . . . . . . .  	   5
RETZ . . . . . . . . . . . . . .  	   1
SHORT_ADDR . . . . . . . . . . .  	  12
TRANSFER . . . . . . . . . . . .  	   8

Structures and Records:

                N a m e                 Width   # fields
                                        Shift   Width   Mask    Initial

ARENA  . . . . . . . . . . . . .  	0005	0003
  ARENA_SIGNATURE  . . . . . . .  	0000
  ARENA_OWNER  . . . . . . . . .  	0001
  ARENA_SIZE . . . . . . . . . .  	0003
BPBLOCK  . . . . . . . . . . . .  	000D	0008
  BPSECSZ  . . . . . . . . . . .  	0000
  BPCLUS . . . . . . . . . . . .  	0002
  BPRES  . . . . . . . . . . . .  	0003
  BPFTCNT  . . . . . . . . . . .  	0005
  BPDRCNT  . . . . . . . . . . .  	0006
  BPSCCNT  . . . . . . . . . . .  	0008
  BPMEDIA  . . . . . . . . . . .  	000A
  BPFTSEC  . . . . . . . . . . .  	000B
BUFFINFO . . . . . . . . . . . .  	0010	0009
  NEXTBUF  . . . . . . . . . . .  	0000
  BUFDRV . . . . . . . . . . . .  	0004
  BUFDIRTY . . . . . . . . . . .  	0005
  BUFPRI . . . . . . . . . . . .  	0006
  VISIT  . . . . . . . . . . . .  	0007
  BUFSECNO . . . . . . . . . . .  	0008
  BUFWRTCNT  . . . . . . . . . .  	000A
  BUFWRTINC  . . . . . . . . . .  	000B
  BUFDRVDP . . . . . . . . . . .  	000C
DIR_ENTRY  . . . . . . . . . . .  	0020	0008
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 09:44:02

DISKCOPY MSDOS Disk Copier                                  Symbols-2
                                                             

  DIR_NAME . . . . . . . . . . .  	0000
  DIR_ATTR . . . . . . . . . . .  	000B
  DIR_PAD  . . . . . . . . . . .  	000C
  DIR_TIME . . . . . . . . . . .  	0016
  DIR_DATE . . . . . . . . . . .  	0018
  DIR_FIRST  . . . . . . . . . .  	001A
  DIR_SIZE_L . . . . . . . . . .  	001C
  DIR_SIZE_H . . . . . . . . . .  	001E
DPB  . . . . . . . . . . . . . .  	005E	0012
  DPB_DRIVE  . . . . . . . . . .  	0000
  DPB_UNIT . . . . . . . . . . .  	0001
  DPB_SECTOR_SIZE  . . . . . . .  	0002
  DPB_CLUSTER_MASK . . . . . . .  	0004
  DPB_CLUSTER_SHIFT  . . . . . .  	0005
  DPB_FIRST_FAT  . . . . . . . .  	0006
  DPB_FAT_COUNT  . . . . . . . .  	0008
  DPB_ROOT_ENTRIES . . . . . . .  	0009
  DPB_FIRST_SECTOR . . . . . . .  	000B
  DPB_MAX_CLUSTER  . . . . . . .  	000D
  DPB_FAT_SIZE . . . . . . . . .  	000F
  DPB_DIR_SECTOR . . . . . . . .  	0010
  DPB_DRIVER_ADDR  . . . . . . .  	0012
  DPB_MEDIA  . . . . . . . . . .  	0016
  DPB_FIRST_ACCESS . . . . . . .  	0017
  DPB_NEXT_DPB . . . . . . . . .  	0018
  DPB_CURRENT_DIR  . . . . . . .  	001C
  DPB_DIR_TEXT . . . . . . . . .  	001E
EXEC0  . . . . . . . . . . . . .  	000E	0004
  EXEC0_ENVIRON  . . . . . . . .  	0000
  EXEC0_COM_LINE . . . . . . . .  	0002
  EXEC0_5C_FCB . . . . . . . . .  	0006
  EXEC0_6C_FCB . . . . . . . . .  	000A
EXEC1  . . . . . . . . . . . . .  	0016	0008
  EXEC1_ENVIRON  . . . . . . . .  	0000
  EXEC1_COM_LINE . . . . . . . .  	0002
  EXEC1_5C_FCB . . . . . . . . .  	0006
  EXEC1_6C_FCB . . . . . . . . .  	000A
  EXEC1_SP . . . . . . . . . . .  	000E
  EXEC1_SS . . . . . . . . . . .  	0010
  EXEC1_IP . . . . . . . . . . .  	0012
  EXEC1_CS . . . . . . . . . . .  	0014
EXEC3  . . . . . . . . . . . . .  	0004	0002
  EXEC3_LOAD_ADDR  . . . . . . .  	0000
  EXEC3_RELOC_FAC  . . . . . . .  	0002
EXE_FILE . . . . . . . . . . . .  	0020	000F
  EXE_SIGNATURE  . . . . . . . .  	0000
  EXE_LEN_MOD_512  . . . . . . .  	0002
  EXE_PAGES  . . . . . . . . . .  	0004
  EXE_RLE_COUNT  . . . . . . . .  	0006
  EXE_PAR_DIR  . . . . . . . . .  	0008
  EXE_MIN_BSS  . . . . . . . . .  	000A
  EXE_MAX_BSS  . . . . . . . . .  	000C
  EXE_SS . . . . . . . . . . . .  	000E
  EXE_SP . . . . . . . . . . . .  	0010
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 09:44:02

DISKCOPY MSDOS Disk Copier                                  Symbols-3
                                                             

  EXE_CHKSUM . . . . . . . . . .  	0012
  EXE_IP . . . . . . . . . . . .  	0014
  EXE_CS . . . . . . . . . . . .  	0016
  EXE_RLE_TABLE  . . . . . . . .  	0018
  EXE_IOV  . . . . . . . . . . .  	001A
  EXE_SYM_TAB  . . . . . . . . .  	001C
FIND_BUF . . . . . . . . . . . .  	002B	000C
  FIND_BUF_SATTR . . . . . . . .  	0000
  FIND_BUF_DRIVE . . . . . . . .  	0001
  FIND_BUF_NAME  . . . . . . . .  	0002
  FIND_BUF_LASTENT . . . . . . .  	000D
  FIND_BUF_THISDPB . . . . . . .  	000F
  FIND_BUF_DIRSTART  . . . . . .  	0013
  FIND_BUF_ATTR  . . . . . . . .  	0015
  FIND_BUF_TIME  . . . . . . . .  	0016
  FIND_BUF_DATE  . . . . . . . .  	0018
  FIND_BUF_SIZE_L  . . . . . . .  	001A
  FIND_BUF_SIZE_H  . . . . . . .  	001C
  FIND_BUF_PNAME . . . . . . . .  	001E
INTERNAT_BLOCK . . . . . . . . .  	0018	0015
  DATE_TIM_FORMAT  . . . . . . .  	0000
  CURRENCY_SYM . . . . . . . . .  	0002
  THOUS_SEP  . . . . . . . . . .  	0007
  DECIMAL_SEP  . . . . . . . . .  	0009
  DATE_SEP . . . . . . . . . . .  	000B
  TIME_SEP . . . . . . . . . . .  	000D
  BIT_FEILD  . . . . . . . . . .  	000F
  CURRENCY_CENTS . . . . . . . .  	0010
  TIME_24  . . . . . . . . . . .  	0011
  MAP_CALL . . . . . . . . . . .  	0012
  DATA_SEP . . . . . . . . . . .  	0016
PROCESS_DATA_BLOCK . . . . . . .  	005B	000E
  PDB_EXIT_CALL  . . . . . . . .  	0000
  PDB_BLOCK_LEN  . . . . . . . .  	0002
  PDB_CPM_CALL . . . . . . . . .  	0005
  PDB_EXIT . . . . . . . . . . .  	000A
  PDB_CTRL_C . . . . . . . . . .  	000E
  PDB_FATAL_ABORT  . . . . . . .  	0012
  PDB_PARENT_PID . . . . . . . .  	0016
  PDB_JFN_TABLE  . . . . . . . .  	0018
  PDB_ENVIRON  . . . . . . . . .  	002C
  PDB_USER_STACK . . . . . . . .  	002E
  PDB_PAD1 . . . . . . . . . . .  	0032
  PDB_CALL_SYSTEM  . . . . . . .  	0050
  PDB_PAD2 . . . . . . . . . . .  	0055
SFT  . . . . . . . . . . . . . .  	0008	0003
  SFT_LINK . . . . . . . . . . .  	0000
  SFT_COUNT  . . . . . . . . . .  	0004
  SFT_TABLE  . . . . . . . . . .  	0006
SF_ENTRY . . . . . . . . . . . .  	0028	0004
  SF_REF_COUNT . . . . . . . . .  	0000
  SF_MODE  . . . . . . . . . . .  	0001
  SF_ATTR  . . . . . . . . . . .  	0002
  SF_FCB . . . . . . . . . . . .  	0003
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 09:44:02

DISKCOPY MSDOS Disk Copier                                  Symbols-4
                                                             

SYMBOL_ENTRY . . . . . . . . . .  	0106	0004
  SYM_VALUE  . . . . . . . . . .  	0000
  SYM_TYPE . . . . . . . . . . .  	0004
  SYM_LEN  . . . . . . . . . . .  	0006
  SYM_NAME . . . . . . . . . . .  	0007
SYS_FCB  . . . . . . . . . . . .  	0025	0010
  FCB_DRIVE  . . . . . . . . . .  	0000
  FCB_NAME . . . . . . . . . . .  	0001
  FCB_EXT  . . . . . . . . . . .  	0009
  FCB_EXTENT . . . . . . . . . .  	000C
  FCB_RECSIZ . . . . . . . . . .  	000E
  FCB_FILSIZ . . . . . . . . . .  	0010
  FCB_DRVBP  . . . . . . . . . .  	0012
  FCB_FDATE  . . . . . . . . . .  	0014
  FCB_FTIME  . . . . . . . . . .  	0016
  FCB_DEVID  . . . . . . . . . .  	0018
  FCB_FIRCLUS  . . . . . . . . .  	0019
  FCB_CLUSPOS  . . . . . . . . .  	001B
  FCB_LSTCLUS  . . . . . . . . .  	001D
  FCB_NR . . . . . . . . . . . .  	0020
  FCB_RR . . . . . . . . . . . .  	0021
USER_ENVIRON . . . . . . . . . .  	0018	000C
  USER_AX  . . . . . . . . . . .  	0000
  USER_BX  . . . . . . . . . . .  	0002
  USER_CX  . . . . . . . . . . .  	0004
  USER_DX  . . . . . . . . . . .  	0006
  USER_SI  . . . . . . . . . . .  	0008
  USER_DI  . . . . . . . . . . .  	000A
  USER_BP  . . . . . . . . . . .  	000C
  USER_DS  . . . . . . . . . . .  	000E
  USER_ES  . . . . . . . . . . .  	0010
  USER_IP  . . . . . . . . . . .  	0012
  USER_CS  . . . . . . . . . . .  	0014
  USER_F . . . . . . . . . . . .  	0016

Segments and Groups:

                N a m e         	Size	Align	Combine Class

DG . . . . . . . . . . . . . . .  	GROUP
  CODE . . . . . . . . . . . . .  	02B8	PARA	PUBLIC	
  CONST  . . . . . . . . . . . .  	0014	BYTE	PUBLIC	
  DATA . . . . . . . . . . . . .  	0000	BYTE	PUBLIC	

Symbols:            

                N a m e         	Type	Value	Attr         

ABORT  . . . . . . . . . . . . .  	Number	0000	
ADDR_INT_ABORT . . . . . . . . .  	Number	0080	
ADDR_INT_COMMAND . . . . . . . .  	Number	0084	
ADDR_INT_CTRL_C  . . . . . . . .  	Number	008C	
ADDR_INT_DISK_READ . . . . . . .  	Number	0094	
ADDR_INT_DISK_WRITE  . . . . . .  	Number	0098	
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 09:44:02

DISKCOPY MSDOS Disk Copier                                  Symbols-5
                                                             

ADDR_INT_FASTCON . . . . . . . .  	Number	00A4	
ADDR_INT_FATAL_ABORT . . . . . .  	Number	0090	
ADDR_INT_KEEP_PROCESS  . . . . .  	Number	009C	
ADDR_INT_SPOOLER . . . . . . . .  	Number	00A0	
ADDR_INT_TERMINATE . . . . . . .  	Number	0088	
ALLDONE  . . . . . . . . . . . .  	L NEAR	02B6	CODE
ALLOC  . . . . . . . . . . . . .  	Number	0048	
ALLOCOPER  . . . . . . . . . . .  	Number	0058	
ALLOC_ARENA_TRASHED  . . . . . .  	Alias	 ERROR_ARENA_TRASHED		
ALLOC_NOT_ENOUGH_MEMORY  . . . .  	Alias	 ERROR_NOT_ENOUGH_MEMORY		
ALTVECT  . . . . . . . . . . . .  	Number	0000	
ANOPROMPT  . . . . . . . . . . .  	V BYTE 	0000	CONST	External
AREAD  . . . . . . . . . . . . .  	Number	0025	
ARENA_OWNER_SYSTEM . . . . . . .  	Number	0000	
ARENA_SIGNATURE_END  . . . . . .  	Number	005A	
ARENA_SIGNATURE_NORMAL . . . . .  	Number	004D	
ASKANOTHER . . . . . . . . . . .  	L NEAR	02A8	CODE	Global
ASSIGNOPER . . . . . . . . . . .  	Number	005F	
ATTR_ALL . . . . . . . . . . . .  	Number	0016	
ATTR_ARCHIVE . . . . . . . . . .  	Number	0020	
ATTR_CHANGEABLE  . . . . . . . .  	Number	0027	
ATTR_DIRECTORY . . . . . . . . .  	Number	0010	
ATTR_HIDDEN  . . . . . . . . . .  	Number	0002	
ATTR_IGNORE  . . . . . . . . . .  	Number	0021	
ATTR_READ_ONLY . . . . . . . . .  	Number	0001	
ATTR_SYSTEM  . . . . . . . . . .  	Number	0004	
ATTR_VOLUME_ID . . . . . . . . .  	Number	0008	
AWRITE . . . . . . . . . . . . .  	Number	0026	

BDOS . . . . . . . . . . . . . .  	Number	0021	
BOOT . . . . . . . . . . . . . .  	Number	0020	
BUFFER . . . . . . . . . . . . .  	L WORD 	0119	CODE
BUFINSIZ . . . . . . . . . . . .  	Number	0010	
BUFSIZ . . . . . . . . . . . . .  	L WORD 	011B	CODE

CHAR_OPER  . . . . . . . . . . .  	Number	0037	
CHDIR  . . . . . . . . . . . . .  	Number	003B	
CHDIR_PATH_NOT_FOUND . . . . . .  	Alias	 ERROR_PATH_NOT_FOUND		
CHMOD  . . . . . . . . . . . . .  	Number	0043	
CHMOD_ACCESS_DENIED  . . . . . .  	Alias	 ERROR_ACCESS_DENIED		
CHMOD_INVALID_FUNCTION . . . . .  	Alias	 ERROR_INVALID_FUNCTION		
CHMOD_PATH_NOT_FOUND . . . . . .  	Alias	 ERROR_PATH_NOT_FOUND		
CLOSE  . . . . . . . . . . . . .  	Number	003E	
CLOSE_INVALID_FUNCTION . . . . .  	Alias	 ERROR_INVALID_FUNCTION		
CLOSE_INVALID_HANDLE . . . . . .  	Alias	 ERROR_INVALID_HANDLE		
COMPARE  . . . . . . . . . . . .  	L NEAR	015C	CODE
COPYAGN  . . . . . . . . . . . .  	L NEAR	01C0	CODE
COUNT  . . . . . . . . . . . . .  	L WORD 	010E	CODE
COUNTOK  . . . . . . . . . . . .  	L NEAR	0251	CODE
COUNTRY_NOT_FOUND  . . . . . . .  	Alias	 ERROR_FILE_NOT_FOUND		
CPYMSG . . . . . . . . . . . . .  	V BYTE 	0000	CONST	External
CREAT  . . . . . . . . . . . . .  	Number	003C	
CREATENEWFILE  . . . . . . . . .  	Number	005B	
CREATETEMPFILE . . . . . . . . .  	Number	005A	
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 09:44:02

DISKCOPY MSDOS Disk Copier                                  Symbols-6
                                                             

CREATE_PROCESS_DATA_BLOCK  . . .  	Number	0026	
CREAT_ACCESS_DENIED  . . . . . .  	Alias	 ERROR_ACCESS_DENIED		
CREAT_PATH_NOT_FOUND . . . . . .  	Alias	 ERROR_PATH_NOT_FOUND		
CREAT_TOO_MANY_OPEN_FILES  . . .  	Alias	 ERROR_TOO_MANY_OPEN_FILES		
CRLF . . . . . . . . . . . . . .  	V BYTE 	0000	CONST	External
CURDIR_INVALID_DRIVE . . . . . .  	Alias	 ERROR_INVALID_DRIVE		
CURRENT_DIR  . . . . . . . . . .  	Number	0047	
C_BS . . . . . . . . . . . . . .  	Number	0008	
C_CR . . . . . . . . . . . . . .  	Number	000D	
C_DEL  . . . . . . . . . . . . .  	Number	007F	
C_ETB  . . . . . . . . . . . . .  	Number	0017	
C_ETX  . . . . . . . . . . . . .  	Number	0003	
C_HT . . . . . . . . . . . . . .  	Number	0009	
C_LF . . . . . . . . . . . . . .  	Number	000A	
C_NAK  . . . . . . . . . . . . .  	Number	0015	

DEALLOC  . . . . . . . . . . . .  	Number	0049	
DEALLOC_ARENA_TRASHED  . . . . .  	Alias	 ERROR_ARENA_TRASHED		
DEALLOC_INVALID_BLOCK  . . . . .  	Alias	 ERROR_INVALID_BLOCK		
DEST . . . . . . . . . . . . . .  	L BYTE 	010D	CODE
DEVID_BLOCK_DEV  . . . . . . . .  	Number	001F	
DEVID_DEVICE . . . . . . . . . .  	Number	0080	
DEVID_DEVICE_CLOCK . . . . . . .  	Number	0008	
DEVID_DEVICE_CON_IN  . . . . . .  	Number	0001	
DEVID_DEVICE_CON_OUT . . . . . .  	Number	0002	
DEVID_DEVICE_EOF . . . . . . . .  	Number	0040	
DEVID_DEVICE_NULL  . . . . . . .  	Number	0004	
DEVID_DEVICE_RAW . . . . . . . .  	Number	0020	
DEVID_DEVICE_SPECIAL . . . . . .  	Number	0010	
DEVID_EOF  . . . . . . . . . . .  	Number	0040	
DEVID_FILE_CLEAN . . . . . . . .  	Number	0040	
DEVID_FILE_MASK_DRIVE  . . . . .  	Number	003F	
DEVID_ISCIN  . . . . . . . . . .  	Number	0001	
DEVID_ISCLK  . . . . . . . . . .  	Number	0008	
DEVID_ISCOT  . . . . . . . . . .  	Number	0002	
DEVID_ISDEV  . . . . . . . . . .  	Number	0080	
DEVID_ISNUL  . . . . . . . . . .  	Number	0004	
DEVID_RAW  . . . . . . . . . . .  	Number	0020	
DEVID_SPECIAL  . . . . . . . . .  	Number	0010	
DIRPRI . . . . . . . . . . . . .  	Number	000F	
DIRSTRLEN  . . . . . . . . . . .  	Number	0040	
DIR_SEARCH_FIRST . . . . . . . .  	Number	0011	
DIR_SEARCH_NEXT  . . . . . . . .  	Number	0012	
DISKCOPY . . . . . . . . . . . .  	L NEAR	0100	CODE
DISK_ENTRY . . . . . . . . . . .  	L NEAR	016B	CODE
DISK_RESET . . . . . . . . . . .  	Number	000D	
DOS_MAJOR_VERSION  . . . . . . .  	Number	0002	
DOS_MINOR_VERSION  . . . . . . .  	Number	000B	
DPBSIZ . . . . . . . . . . . . .  	Number	005E	
DRVERR1  . . . . . . . . . . . .  	V BYTE 	0000	CONST	External
DRVERR3  . . . . . . . . . . . .  	V BYTE 	0000	CONST	External
DSKRD  . . . . . . . . . . . . .  	L NEAR	0000	CODE	External
DSKSIZ . . . . . . . . . . . . .  	Number	000D	
DSKWRT . . . . . . . . . . . . .  	L NEAR	0000	CODE	External
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 09:44:02

DISKCOPY MSDOS Disk Copier                                  Symbols-7
                                                             

DSTLET . . . . . . . . . . . . .  	V BYTE 	0000	CONST	External
DSTMSG . . . . . . . . . . . . .  	V BYTE 	0000	CONST	External
DUP2_INVALID_HANDLE  . . . . . .  	Alias	 ERROR_INVALID_HANDLE		
DUP_INVALID_HANDLE . . . . . . .  	Alias	 ERROR_INVALID_HANDLE		
DUP_PDB  . . . . . . . . . . . .  	Number	0055	
DUP_TOO_MANY_OPEN_FILES  . . . .  	Alias	 ERROR_TOO_MANY_OPEN_FILES		

ENTRYPOINT . . . . . . . . . . .  	Number	00C0	
ERROR_ACCESS_DENIED  . . . . . .  	Number	0005	
ERROR_ARENA_TRASHED  . . . . . .  	Number	0007	
ERROR_BAD_ENVIRONMENT  . . . . .  	Number	000A	
ERROR_BAD_FORMAT . . . . . . . .  	Number	000B	
ERROR_CURRENT_DIRECTORY  . . . .  	Number	0010	
ERROR_FILE_NOT_FOUND . . . . . .  	Number	0002	
ERROR_INVALID_ACCESS . . . . . .  	Number	000C	
ERROR_INVALID_BLOCK  . . . . . .  	Number	0009	
ERROR_INVALID_DATA . . . . . . .  	Number	000D	
ERROR_INVALID_DRIVE  . . . . . .  	Number	000F	
ERROR_INVALID_FUNCTION . . . . .  	Number	0001	
ERROR_INVALID_HANDLE . . . . . .  	Number	0006	
ERROR_NOT_ENOUGH_MEMORY  . . . .  	Number	0008	
ERROR_NOT_SAME_DEVICE  . . . . .  	Number	0011	
ERROR_NO_MORE_FILES  . . . . . .  	Number	0012	
ERROR_PATH_NOT_FOUND . . . . . .  	Number	0003	
ERROR_TOO_MANY_OPEN_FILES  . . .  	Number	0004	
ERRV . . . . . . . . . . . . . .  	L NEAR	0210	CODE
EXEC . . . . . . . . . . . . . .  	Number	004B	
EXEC_BAD_ENVIRONMENT . . . . . .  	Alias	 ERROR_BAD_ENVIRONMENT		
EXEC_BAD_FORMAT  . . . . . . . .  	Alias	 ERROR_BAD_FORMAT		
EXEC_FILE_NOT_FOUND  . . . . . .  	Alias	 ERROR_FILE_NOT_FOUND		
EXEC_FUNC_NO_EXECUTE . . . . . .  	Number	0001	
EXEC_FUNC_OVERLAY  . . . . . . .  	Number	0002	
EXEC_INVALID_FUNCTION  . . . . .  	Alias	 ERROR_INVALID_FUNCTION		
EXEC_NOT_ENOUGH_MEMORY . . . . .  	Alias	 ERROR_NOT_ENOUGH_MEMORY		
EXE_VALID_OLD_SIGNATURE  . . . .  	Number	4D5A	
EXE_VALID_SIGNATURE  . . . . . .  	Number	5A4D	
EXIT . . . . . . . . . . . . . .  	Number	004C	
EXIT_ABORT . . . . . . . . . . .  	Number	0000	
EXIT_CTRL_C  . . . . . . . . . .  	Number	0001	
EXIT_HARD_ERROR  . . . . . . . .  	Number	0002	
EXIT_KEEP_PROCESS  . . . . . . .  	Number	0003	
EXIT_TERMINATE . . . . . . . . .  	Number	0000	

FALSE  . . . . . . . . . . . . .  	Number	0000	
FATPRI . . . . . . . . . . . . .  	Number	001E	
FCB  . . . . . . . . . . . . . .  	Number	005C	
FCB_CLOSE  . . . . . . . . . . .  	Number	0010	
FCB_CREATE . . . . . . . . . . .  	Number	0016	
FCB_DELETE . . . . . . . . . . .  	Number	0013	
FCB_OPEN . . . . . . . . . . . .  	Number	000F	
FCB_RANDOM_READ  . . . . . . . .  	Number	0021	
FCB_RANDOM_READ_BLOCK  . . . . .  	Number	0027	
FCB_RANDOM_WRITE . . . . . . . .  	Number	0022	
FCB_RANDOM_WRITE_BLOCK . . . . .  	Number	0028	
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 09:44:02

DISKCOPY MSDOS Disk Copier                                  Symbols-8
                                                             

FCB_RENAME . . . . . . . . . . .  	Number	0017	
FCB_SEQ_READ . . . . . . . . . .  	Number	0014	
FCB_SEQ_WRITE  . . . . . . . . .  	Number	0015	
FDSTLET  . . . . . . . . . . . .  	V BYTE 	0000	CONST	External
FDSTMSG  . . . . . . . . . . . .  	V BYTE 	0000	CONST	External
FILDIRENT  . . . . . . . . . . .  	Number	0010	
FILETIMES_INVALID_FUNCTION . . .  	Alias	 ERROR_INVALID_FUNCTION		
FILETIMES_INVALID_HANDLE . . . .  	Alias	 ERROR_INVALID_HANDLE		
FILE_TIMES . . . . . . . . . . .  	Number	0057	
FILPERPROC . . . . . . . . . . .  	Number	0014	
FINDFIRST_FILE_NOT_FOUND . . . .  	Alias	 ERROR_FILE_NOT_FOUND		
FINDFIRST_NO_MORE_FILES  . . . .  	Alias	 ERROR_NO_MORE_FILES		
FINDNEXT_NO_MORE_FILES . . . . .  	Alias	 ERROR_NO_MORE_FILES		
FIND_FIRST . . . . . . . . . . .  	Number	004E	
FIND_NEXT  . . . . . . . . . . .  	Number	004F	
FREEPRI  . . . . . . . . . . . .  	Number	0000	

GET1 . . . . . . . . . . . . . .  	L NEAR	015B	CODE
GETDPB . . . . . . . . . . . . .  	L NEAR	0132	CODE
GETDRV . . . . . . . . . . . . .  	L NEAR	014F	CODE
GETEXTENDEDERROR . . . . . . . .  	Number	0059	
GETKEY . . . . . . . . . . . . .  	L NEAR	0125	CODE
GET_CURRENT_PDB  . . . . . . . .  	Number	0051	
GET_DATE . . . . . . . . . . . .  	Number	002A	
GET_DEFAULT_DPB  . . . . . . . .  	Number	001F	
GET_DEFAULT_DRIVE  . . . . . . .  	Number	0019	
GET_DMA  . . . . . . . . . . . .  	Number	002F	
GET_DPB  . . . . . . . . . . . .  	Number	0032	
GET_DRIVE_FREESPACE  . . . . . .  	Number	0036	
GET_FCB_FILE_LENGTH  . . . . . .  	Number	0023	
GET_FCB_POSITION . . . . . . . .  	Number	0024	
GET_INDOS_FLAG . . . . . . . . .  	Number	0034	
GET_INTERRUPT_VECTOR . . . . . .  	Number	0035	
GET_IN_VARS  . . . . . . . . . .  	Number	0052	
GET_TIME . . . . . . . . . . . .  	Number	002C	
GET_VERIFY_ON_WRITE  . . . . . .  	Number	0054	
GET_VERSION  . . . . . . . . . .  	Number	0030	
GOOD1  . . . . . . . . . . . . .  	V BYTE 	0000	CONST	External
GOODMSG  . . . . . . . . . . . .  	V BYTE 	0000	CONST	External
GOTMEM . . . . . . . . . . . . .  	L NEAR	01B9	CODE

HEADER . . . . . . . . . . . . .  	L BYTE 	0103	CODE

INTBASE  . . . . . . . . . . . .  	Number	0080	
INTERNATIONAL  . . . . . . . . .  	Number	0038	
INTERNATIONAL_INVALID_FUNCTION .  	Alias	 ERROR_INVALID_FUNCTION		
INTERNAT_BLOCK_MAX . . . . . . .  	Number	0020	
INTTAB . . . . . . . . . . . . .  	Number	0020	
INT_ABORT  . . . . . . . . . . .  	Alias	 INTTAB		
INT_COMMAND  . . . . . . . . . .  	Number	0021	
INT_CTRL_C . . . . . . . . . . .  	Number	0023	
INT_DISK_READ  . . . . . . . . .  	Number	0025	
INT_DISK_WRITE . . . . . . . . .  	Number	0026	
INT_FASTCON  . . . . . . . . . .  	Number	0029	
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 09:44:02

DISKCOPY MSDOS Disk Copier                                  Symbols-9
                                                             

INT_FATAL_ABORT  . . . . . . . .  	Number	0024	
INT_KEEP_PROCESS . . . . . . . .  	Number	0027	
INT_SPOOLER  . . . . . . . . . .  	Number	0028	
INT_TERMINATE  . . . . . . . . .  	Number	0022	
IOCTL  . . . . . . . . . . . . .  	Number	0044	
IOCTL_INVALID_DATA . . . . . . .  	Alias	 ERROR_INVALID_DATA		
IOCTL_INVALID_FUNCTION . . . . .  	Alias	 ERROR_INVALID_FUNCTION		
IOCTL_INVALID_HANDLE . . . . . .  	Alias	 ERROR_INVALID_HANDLE		

KEEP_PROCESS . . . . . . . . . .  	Number	0031	
KEYMSG . . . . . . . . . . . . .  	V BYTE 	0000	CONST	External

LBRPRI . . . . . . . . . . . . .  	Number	0002	
LBWPRI . . . . . . . . . . . . .  	Number	0004	
LOCKOPER . . . . . . . . . . . .  	Number	005C	
LOOP . . . . . . . . . . . . . .  	L NEAR	023D	CODE
LSEEK  . . . . . . . . . . . . .  	Number	0042	
LSEEK_INVALID_FUNCTION . . . . .  	Alias	 ERROR_INVALID_FUNCTION		
LSEEK_INVALID_HANDLE . . . . . .  	Alias	 ERROR_INVALID_HANDLE		

MEDIA  . . . . . . . . . . . . .  	L BYTE 	0118	CODE
MI_INT . . . . . . . . . . . . .  	Number	00CD	
MI_LONG_CALL . . . . . . . . . .  	Number	009A	
MI_LONG_JMP  . . . . . . . . . .  	Number	00EA	
MI_LONG_RET  . . . . . . . . . .  	Number	00CB	
MKDIR  . . . . . . . . . . . . .  	Number	0039	
MKDIR_ACCESS_DENIED  . . . . . .  	Alias	 ERROR_ACCESS_DENIED		
MKDIR_PATH_NOT_FOUND . . . . . .  	Alias	 ERROR_PATH_NOT_FOUND		

NO_ERROR_OCCURRED  . . . . . . .  	Text  0                                                              ?		

OEM_C1 . . . . . . . . . . . . .  	Number	00F9	
OEM_C2 . . . . . . . . . . . . .  	Number	00FA	
OEM_C3 . . . . . . . . . . . . .  	Number	00FB	
OEM_C4 . . . . . . . . . . . . .  	Number	00FC	
OEM_C5 . . . . . . . . . . . . .  	Number	00FD	
OEM_C6 . . . . . . . . . . . . .  	Number	00FE	
OEM_C7 . . . . . . . . . . . . .  	Number	00FF	
ONEDRV1  . . . . . . . . . . . .  	L NEAR	01D1	CODE
OPEN . . . . . . . . . . . . . .  	Number	003D	
OPEN_ACCESS_DENIED . . . . . . .  	Alias	 ERROR_ACCESS_DENIED		
OPEN_FILE_NOT_FOUND  . . . . . .  	Alias	 ERROR_FILE_NOT_FOUND		
OPEN_FOR_BOTH  . . . . . . . . .  	Number	0002	
OPEN_FOR_READ  . . . . . . . . .  	Number	0000	
OPEN_FOR_WRITE . . . . . . . . .  	Number	0001	
OPEN_INVALID_ACCESS  . . . . . .  	Alias	 ERROR_INVALID_ACCESS		
OPEN_TOO_MANY_OPEN_FILES . . . .  	Alias	 ERROR_TOO_MANY_OPEN_FILES		

PARSE_FILE_DESCRIPTOR  . . . . .  	Number	0029	
PASSCNT  . . . . . . . . . . . .  	L WORD 	0114	CODE
PCRLF  . . . . . . . . . . . . .  	L NEAR	011D	CODE	Global
PRET . . . . . . . . . . . . . .  	L NEAR	0124	CODE
PRINT  . . . . . . . . . . . . .  	L NEAR	0120	CODE	Global
PRINTERR . . . . . . . . . . . .  	L NEAR	0166	CODE
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 09:44:02

DISKCOPY MSDOS Disk Copier                                  Symbols-10
                                                             

PROGSIZ  . . . . . . . . . . . .  	L BYTE 	0000	DATA
PROMPTYN . . . . . . . . . . . .  	L NEAR	0000	CODE	External

QUITCOPY . . . . . . . . . . . .  	L NEAR	0299	CODE

RAW_CON_INPUT  . . . . . . . . .  	Number	0007	
RAW_CON_IO . . . . . . . . . . .  	Number	0006	
READ . . . . . . . . . . . . . .  	Number	003F	
READ_ACCESS_DENIED . . . . . . .  	Alias	 ERROR_ACCESS_DENIED		
READ_INVALID_HANDLE  . . . . . .  	Alias	 ERROR_INVALID_HANDLE		
RENAME . . . . . . . . . . . . .  	Number	0056	
RENAME_ACCESS_DENIED . . . . . .  	Alias	 ERROR_ACCESS_DENIED		
RENAME_FILE_NOT_FOUND  . . . . .  	Alias	 ERROR_FILE_NOT_FOUND		
RENAME_NOT_SAME_DEVICE . . . . .  	Alias	 ERROR_NOT_SAME_DEVICE		
RMDIR  . . . . . . . . . . . . .  	Number	003A	
RMDIR_ACCESS_DENIED  . . . . . .  	Alias	 ERROR_ACCESS_DENIED		
RMDIR_CURRENT_DIRECTORY  . . . .  	Alias	 ERROR_CURRENT_DIRECTORY		
RMDIR_PATH_NOT_FOUND . . . . . .  	Alias	 ERROR_PATH_NOT_FOUND		
RPRI . . . . . . . . . . . . . .  	Number	0006	

SEC64K . . . . . . . . . . . . .  	L WORD 	0116	CODE	Global
SECSIZ . . . . . . . . . . . . .  	L WORD 	0112	CODE	Global
SERVERCALL . . . . . . . . . . .  	Number	005D	
SETBLOCK . . . . . . . . . . . .  	Number	004A	
SETBLOCK_ARENA_TRASHED . . . . .  	Alias	 ERROR_ARENA_TRASHED		
SETBLOCK_INVALID_BLOCK . . . . .  	Alias	 ERROR_INVALID_BLOCK		
SETBLOCK_INVALID_FUNCTION  . . .  	Alias	 ERROR_INVALID_FUNCTION		
SETBLOCK_NOT_ENOUGH_MEMORY . . .  	Alias	 ERROR_NOT_ENOUGH_MEMORY		
SETDPB . . . . . . . . . . . . .  	Number	0053	
SET_CTRL_C_TRAPPING  . . . . . .  	Number	0033	
SET_CURRENT_PDB  . . . . . . . .  	Number	0050	
SET_DATE . . . . . . . . . . . .  	Number	002B	
SET_DEFAULT_DRIVE  . . . . . . .  	Number	000E	
SET_DMA  . . . . . . . . . . . .  	Number	001A	
SET_INTERRUPT_VECTOR . . . . . .  	Number	0025	
SET_OEM_HANDLER  . . . . . . . .  	Number	00F8	
SET_TIME . . . . . . . . . . . .  	Number	002D	
SET_VERIFY_ON_WRITE  . . . . . .  	Number	002E	
SF_DEFAULT_NUMBER  . . . . . . .  	Number	0005	
SIZEOK . . . . . . . . . . . . .  	L NEAR	0213	CODE
SOURCE . . . . . . . . . . . . .  	L BYTE 	010C	CODE
SRCLET . . . . . . . . . . . . .  	V BYTE 	0000	CONST	External
SRCMSG . . . . . . . . . . . . .  	V BYTE 	0000	CONST	External
START  . . . . . . . . . . . . .  	L WORD 	0110	CODE
STDAUX . . . . . . . . . . . . .  	Number	0003	
STDERR . . . . . . . . . . . . .  	Number	0002	
STDIN  . . . . . . . . . . . . .  	Number	0000	
STDOUT . . . . . . . . . . . . .  	Number	0001	
STDPRN . . . . . . . . . . . . .  	Number	0004	
STD_AUX_INPUT  . . . . . . . . .  	Number	0003	
STD_AUX_OUTPUT . . . . . . . . .  	Number	0004	
STD_CON_INPUT  . . . . . . . . .  	Number	0001	
STD_CON_INPUT_FLUSH  . . . . . .  	Number	000C	
STD_CON_INPUT_NO_ECHO  . . . . .  	Number	0008	
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 09:44:02

DISKCOPY MSDOS Disk Copier                                  Symbols-11
                                                             

STD_CON_INPUT_STATUS . . . . . .  	Number	000B	
STD_CON_OUTPUT . . . . . . . . .  	Number	0002	
STD_CON_STRING_INPUT . . . . . .  	Number	000A	
STD_CON_STRING_OUTPUT  . . . . .  	Number	0009	
STD_PRINTER_OUTPUT . . . . . . .  	Number	0005	

TRUE . . . . . . . . . . . . . .  	Number	FFFF	
TWODRV1  . . . . . . . . . . . .  	L NEAR	01FA	CODE
TWODRV2  . . . . . . . . . . . .  	L NEAR	026D	CODE
TWODRV3  . . . . . . . . . . . .  	L NEAR	02A8	CODE

UNLINK . . . . . . . . . . . . .  	Number	0041	
UNLINK_ACCESS_DENIED . . . . . .  	Alias	 ERROR_ACCESS_DENIED		
UNLINK_FILE_NOT_FOUND  . . . . .  	Alias	 ERROR_FILE_NOT_FOUND		
USERIDOPER . . . . . . . . . . .  	Number	005E	

WAIT . . . . . . . . . . . . . .  	Number	004D	
WPRI . . . . . . . . . . . . . .  	Number	0008	
WRITE  . . . . . . . . . . . . .  	Number	0040	
WRITE_ACCESS_DENIED  . . . . . .  	Alias	 ERROR_ACCESS_DENIED		
WRITE_INVALID_HANDLE . . . . . .  	Alias	 ERROR_INVALID_HANDLE		

XDUP . . . . . . . . . . . . . .  	Number	0045	
XDUP2  . . . . . . . . . . . . .  	Number	0046	


   1523 Source  Lines
   1585 Total   Lines
    544 Symbols

  21286 Bytes symbol space free

      0 Warning Errors
      0 Severe  Errors
