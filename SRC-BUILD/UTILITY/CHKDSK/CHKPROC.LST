Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 07:53:02

CHKPROC - Procedures called from chkdsk                     Page     1-1
                                                            

       1                                TITLE   CHKPROC - Procedures called fro
					m chkdsk 
       2                                 
       3 = 0000                         FALSE   EQU     0 
       4 = FFFF                         TRUE    EQU     NOT FALSE 
       5                                 
       6 = 003A                         DRVCHAR EQU     ":" 
       7                                 
       8                             C          INCLUDE DOSSYM.ASM 
       9                             C  include DOSMAC.ASM 
      10                             C  ; 
      11                             C  ; Macro file for MSDOS. 
      12                             C  ; 
      13                             C   
      14                             C  SUBTTL BREAK a listing into pages and g
					ive new subtitles 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 07:53:02

CHKPROC - Procedures called from chkdsk                     Page     1-2
BREAK a listing into pages and give new subtitles           

      15                             C  PAGE 
      16                             C  BREAK MACRO subtitle 
      17                             C   SUBTTL subtitle 
      18                             C   PAGE 
      19                             C  ENDM 
      20                             C   
      21                             C  BREAK <I_NEED: declare a variable exter
					nal, if necessary, and allocate a size>
					 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 07:53:02

CHKPROC - Procedures called from chkdsk                     Page     1-3
I_NEED: declare a variable external, if necessary, and alloc

      22                             C   
      23                             C  ; 
      24                             C  ; declare a variable external and alloc
					ate a size 
      25                             C  ; 
      26                             C  I_NEED MACRO sym,len 
      27                             C   DATA SEGMENT BYTE PUBLIC 'DATA' 
      28                             C   IFIDN <len>,<WORD> 
      29                             C   EXTRN &sym:WORD 
      30                             C   ELSE 
      31                             C   IFIDN <len>,<DWORD> 
      32                             C   EXTRN &sym:DWORD 
      33                             C   ELSE 
      34                             C   EXTRN &sym:BYTE 
      35                             C   ENDIF 
      36                             C   ENDIF 
      37                             C   DATA ENDS 
      38                             C  ENDM 
      39                             C   
      40                             C  ; 
      41                             C  ; call a procedure that may be external
					. The call will be short. 
      42                             C  ; 
      43                             C  invoke MACRO name 
      44                             C  .xcref 
      45                             C   IF2 
      46                             C   IFNDEF name 
      47                             C   EXTRN name:NEAR 
      48                             C   ENDIF 
      49                             C   ENDIF 
      50                             C  .cref 
      51                             C   CALL name 
      52                             C  ENDM 
      53                             C   
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 07:53:02

CHKPROC - Procedures called from chkdsk                     Page     1-4
I_NEED: declare a variable external, if necessary, and alloc

      54                             C  PAGE 
      55                             C  ; 
      56                             C  ; jump to a label that may be external.
					 The jump will be near. 
      57                             C  ; 
      58                             C  transfer MACRO name 
      59                             C  .xcref 
      60                             C   IF2 
      61                             C   IFNDEF name 
      62                             C   EXTRN name:NEAR 
      63                             C   ENDIF 
      64                             C   ENDIF 
      65                             C  .cref 
      66                             C   JUMP name 
      67                             C  ENDM 
      68                             C   
      69                             C  ; 
      70                             C  ; get a short address in a word 
      71                             C  ; 
      72                             C  short_addr MACRO name 
      73                             C   IFDIF <name>,<?> 
      74                             C  .xcref 
      75                             C   IF2 
      76                             C   IFNDEF name 
      77                             C   EXTRN name:NEAR 
      78                             C   ENDIF 
      79                             C   ENDIF 
      80                             C  .cref 
      81                             C   DW OFFSET DOSGROUP:name 
      82                             C   ELSE 
      83                             C   DW ? 
      84                             C   ENDIF 
      85                             C  ENDM 
      86                             C   
      87                             C  ; 
      88                             C  ; get a long address in a dword 
      89                             C  ; 
      90                             C  long_addr MACRO name 
      91                             C  .xcref 
      92                             C   IF2 
      93                             C   IFNDEF name 
      94                             C   EXTRN name:NEAR 
      95                             C   ENDIF 
      96                             C  .cref 
      97                             C   DD name 
      98                             C  ENDM 
      99                             C   
     100                             C  ; 
     101                             C  ; declare a PROC near or far but PUBLIC
					 nonetheless 
     102                             C  ; 
     103                             C  procedure MACRO name,distance 
     104                             C   PUBLIC name 
     105                             C  name PROC distance 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 07:53:02

CHKPROC - Procedures called from chkdsk                     Page     1-5
I_NEED: declare a variable external, if necessary, and alloc

     106                             C  ENDM 
     107                             C   
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 07:53:02

CHKPROC - Procedures called from chkdsk                     Page     1-6
I_NEED: declare a variable external, if necessary, and alloc

     108                             C  PAGE 
     109                             C  ; 
     110                             C  ; define a data item to be public and o
					f an appropriate size/type 
     111                             C  ; 
     112                             C  I_AM MACRO name,size 
     113                             C   PUBLIC name 
     114                             C   
     115                             C   IFIDN <size>,<WORD> 
     116                             C  name DW ? 
     117                             C   ELSE 
     118                             C   IFIDN <size>,<DWORD> 
     119                             C  name DD ? 
     120                             C   ELSE 
     121                             C   IFIDN <size>,<BYTE> 
     122                             C  name DB ? 
     123                             C   ELSE 
     124                             C  name DB size DUP (?) 
     125                             C   ENDIF 
     126                             C   ENDIF 
     127                             C   ENDIF 
     128                             C  ENDM 
     129                             C   
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 07:53:02

CHKPROC - Procedures called from chkdsk                     Page     1-7
I_NEED: declare a variable external, if necessary, and alloc

     130                             C  PAGE 
     131                             C  ; 
     132                             C  ; call the macro chain 
     133                             C  ; 
     134                             C  do_ext macro 
     135                             C  endm 
     136                             C   
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 07:53:02

CHKPROC - Procedures called from chkdsk                     Page     1-8
I_NEED: declare a variable external, if necessary, and alloc

     137                             C  PAGE 
     138                             C   
     139                             C  ; 
     140                             C  ; define an entry in a procedure 
     141                             C  ; 
     142                             C  entry macro name 
     143                             C   PUBLIC name 
     144                             C  name: 
     145                             C  endm 
     146                             C   
     147                             C  BREAK <ERROR - print a message and then
					 jump to a label> 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 07:53:02

CHKPROC - Procedures called from chkdsk                     Page     1-9
ERROR - print a message and then jump to a label            

     148                             C   
     149                             C  error macro code 
     150                             C   local a 
     151                             C  .xcref 
     152                             C   MOV AL,code 
     153                             C   transfer SYS_RET_ERR 
     154                             C  .cref 
     155                             C  ENDM 
     156                             C   
     157                             C  BREAK <JUMP - real jump that links up s
					hortwise> 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 07:53:02

CHKPROC - Procedures called from chkdsk                     Page     1-10
JUMP - real jump that links up shortwise                    

     158                             C  ; 
     159                             C  ; given a label <lbl> either 2 byte jum
					p to another label <lbl>_J 
     160                             C  ; if it is near enough or 3 byte jump t
					o <lbl> 
     161                             C  ; 
     162                             C   
     163                             C  jump macro lbl 
     164                             C   local a 
     165                             C  .xcref 
     166                             C   a: 
     167                             C   ifndef lbl&_J ;; is this the first inv
					ocation 
     168                             C   JMP lbl 
     169                             C   ELSE 
     170                             C   IF lbl&_J GE $ 
     171                             C   JMP lbl 
     172                             C   ELSE 
     173                             C   IF ($-lbl&_J) GT 126 ;; is the jump to
					o far away? 
     174                             C   JMP lbl 
     175                             C   ELSE ;; do the short one... 
     176                             C   JMP lbl&_J 
     177                             C   ENDIF 
     178                             C   ENDIF 
     179                             C   ENDIF 
     180                             C   lbl&_j = a 
     181                             C  .cref 
     182                             C  endm 
     183                             C   
     184                             C  BREAK <RETURN - return from a function>
					 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 07:53:02

CHKPROC - Procedures called from chkdsk                     Page     1-11
RETURN - return from a function                             

     185                             C   
     186                             C  return macro 
     187                             C   local a 
     188                             C  .xcref 
     189                             C  a: 
     190                             C   RET 
     191                             C  ret_l = a 
     192                             C  .cref 
     193                             C  endm 
     194                             C   
     195                             C  BREAK <CONDRET - conditional return> 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 07:53:02

CHKPROC - Procedures called from chkdsk                     Page     1-12
CONDRET - conditional return                                

     196                             C   
     197                             C  makelab macro l,cc,ncc 
     198                             C   local a 
     199                             C   j&ncc a ;; j<NCC> a: 
     200                             C   return ;; return 
     201                             C   a: ;; a: 
     202                             C   ret_&cc = ret_l ;; define ret_<CC> to 
					be ret_l 
     203                             C  endm 
     204                             C   
     205                             C  condret macro cc,ncc 
     206                             C   local a,b 
     207                             C   ifdef ret_l ;; if ret_l is defined 
     208                             C   if (($ - ret_l) le 126) and ($ gt ret_
					l) 
     209                             C   ;; if ret_l is near enough then 
     210                             C   a: j&cc ret_l ;; a: j<CC> to ret_l 
     211                             C   ret_&cc = a ;; define ret_<CC> to be a
					: 
     212                             C   else 
     213                             C   makelab a,cc,ncc 
     214                             C   endif 
     215                             C   else 
     216                             C   ifdef ret_&cc ;; if ret_<CC> defined 
     217                             C   if (($ - ret_&cc) le 126) and ($ gt re
					t_&cc) 
     218                             C   ;; if ret_<CC> is near enough 
     219                             C   a: j&cc ret_&cc ;; a: j<CC> to ret_<CC
					> 
     220                             C   ret_&cc = a ;; define ret_<CC> to be a
					: 
     221                             C   else 
     222                             C   makelab a,cc,ncc 
     223                             C   endif 
     224                             C   else 
     225                             C   makelab a,cc,ncc 
     226                             C   endif 
     227                             C   endif 
     228                             C  endm 
     229                             C  ;condret macro cc,ncc 
     230                             C  ; local a,b 
     231                             C  ; ifdef ret_l ; if ret_l is defined 
     232                             C  ; if (($ - ret_l) le 126) and ($ gt ret
					_l) 
     233                             C  ; ; if ret_l is near enough then 
     234                             C  ; a: j&cc ret_l ; a: j<CC> to ret_l 
     235                             C  ; ret_&cc = a ; define ret_<CC> to be a
					: 
     236                             C  ; exitm 
     237                             C  ; endif 
     238                             C  ; endif 
     239                             C  ; ifdef ret_&cc ; if ret_<CC> defined 
     240                             C  ; if (($ - ret_&cc) le 126) and ($ gt r
					et_&cc) 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 07:53:02

CHKPROC - Procedures called from chkdsk                     Page     1-13
CONDRET - conditional return                                

     241                             C  ; ; if ret_<CC> is near enough 
     242                             C  ; a: j&cc ret_&cc ; a: j<CC> to ret_<CC
					> 
     243                             C  ; ret_&cc = a ; define ret_<CC> to be a
					: 
     244                             C  ; exitm 
     245                             C  ; endif 
     246                             C  ; endif 
     247                             C  ; j&ncc a ; j<NCC> a: 
     248                             C  ; return ; return 
     249                             C  ; a: ; a: 
     250                             C  ; ret_&cc = ret_l ; define ret_<CC> to 
					be ret_l 
     251                             C  ;endm 
     252                             C  ; 
     253                             C  BREAK <RETZ - return if zero, links up 
					shortwise if necessary> 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 07:53:02

CHKPROC - Procedures called from chkdsk                     Page     1-14
RETZ - return if zero, links up shortwise if necessary      

     254                             C   
     255                             C  retz macro 
     256                             C   condret z,nz 
     257                             C  endm 
     258                             C   
     259                             C  BREAK <RETNZ - return if not zero, link
					s up shortwise if necessary> 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 07:53:02

CHKPROC - Procedures called from chkdsk                     Page     1-15
RETNZ - return if not zero, links up shortwise if necessary 

     260                             C   
     261                             C  retnz macro 
     262                             C   condret nz,z 
     263                             C  endm 
     264                             C   
     265                             C  BREAK <RETC - return if carry set, link
					s up shortwise if necessary> 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 07:53:02

CHKPROC - Procedures called from chkdsk                     Page     1-16
RETC - return if carry set, links up shortwise if necessary 

     266                             C   
     267                             C  retc macro 
     268                             C   condret c,nc 
     269                             C  endm 
     270                             C   
     271                             C  BREAK <RETNC - return if not carry, lin
					ks up shortwise if necessary> 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 07:53:02

CHKPROC - Procedures called from chkdsk                     Page     1-17
RETNC - return if not carry, links up shortwise if necessary

     272                             C   
     273                             C  retnc macro 
     274                             C   condret nc,c 
     275                             C  endm 
     276                             C   
     277                             C  BREAK <CONTEXT - set the DOS context to
					 a particular register> 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 07:53:02

CHKPROC - Procedures called from chkdsk                     Page     1-18
CONTEXT - set the DOS context to a particular register      

     278                             C   
     279                             C  context macro r 
     280                             C   PUSH SS 
     281                             C   POP r 
     282                             C   ASSUME r:DOSGROUP 
     283                             C  endm 
     284                             C   
     285                             C  IF2 
     286                             C      %OUT    DOSSYM in Pass 2 
     287                             C  ENDIF 
     288                             C   
     289                             C  ENDIF 
     290                             C   
     291 = 0002                      C  DOS_MAJOR_VERSION   EQU      2 
     292 = 000B                      C  DOS_MINOR_VERSION   EQU     11 
     293                             C   
     294                             C  BREAK <Control character definitions> 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 07:53:02

CHKPROC - Procedures called from chkdsk                     Page     1-19
Control character definitions                               

     295                             C   
     296 = 007F                      C  c_DEL       EQU     7Fh         ;    AS
					CII rubout or delete previous char 
     297 = 0008                      C  c_BS        EQU     08h         ; ^H AS
					CII backspace 
     298 = 000D                      C  c_CR        EQU     0Dh         ; ^M AS
					CII carriage return 
     299 = 000A                      C  c_LF        EQU     0Ah         ; ^J AS
					CII linefeed 
     300 = 0017                      C  c_ETB       EQU     17h         ; ^W AS
					CII end of transmission 
     301 = 0015                      C  c_NAK       EQU     15h         ; ^U AS
					CII negative acknowledge 
     302 = 0003                      C  c_ETX       EQU     03h         ; ^C AS
					CII end of text 
     303 = 0009                      C  c_HT        EQU     09h         ; ^I AS
					CII tab 
     304                             C   
     305                             C  BREAK <BPB Definition> 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 07:53:02

CHKPROC - Procedures called from chkdsk                     Page     1-20
BPB Definition                                              

     306                             C   
     307                             C   
     308                             C  ;----+----+----+----+----+----+----+---
					-+----+----+----+----+----+----+----; 
     309                             C  ;                                      
					                                    ; 
     310                             C  ;            C  A  V  E  A  T     P  R 
					 O  G  R  A  M  M  E  R             ; 
     311                             C  ;                                      
					                                    ; 
     312                             C  ; Certain structures, constants and sys
					tem  calls  below  are  private  to ; 
     313                             C  ; the DOS  and  are  extremely  version
					-dependent.  They may change at any ; 
     314                             C  ; time at  the  implementors'  whim.   
					As  a  result,  they  must  not  be ; 
     315                             C  ; documented to  the  general  public. 
					  If  an  extreme case arises, they ; 
     316                             C  ; must be documented with this warning.
					                                    ; 
     317                             C  ;                                      
					                                    ; 
     318                             C  ; Those structures and constants that a
					re subject to  the  above  will  be ; 
     319                             C  ; marked and bracketed with the flag:  
					                                    ; 
     320                             C  ;                                      
					                                    ; 
     321                             C  ;            C  A  V  E  A  T     P  R 
					 O  G  R  A  M  M  E  R             ; 
     322                             C  ;                                      
					                                    ; 
     323                             C  ;----+----+----+----+----+----+----+---
					-+----+----+----+----+----+----+----; 
     324                             C   
     325                             C  BREAK  <Bios Parameter Block> 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 07:53:02

CHKPROC - Procedures called from chkdsk                     Page     1-21
Bios Parameter Block                                        

     326                             C  ;----+----+----+----+----+----+----+---
					-+----+----+----+----+----+----+----; 
     327                             C  ;            C  A  V  E  A  T     P  R 
					 O  G  R  A  M  M  E  R             ; 
     328                             C  ;                                      
					                                    ; 
     329                             C   
     330                             C  ; Bios Parameter Block definition 
     331                             C  ; This structure is used to build a ful
					l DPB 
     332                             C   
     333                             C  BPBLOCK STRUC 
     334 0000  ????                  C  BPSECSZ DW      ?       ; Size in bytes
					 of physical sector 
     335 0002  ??                    C  BPCLUS  DB      ?       ; Sectors/Alloc
					 unit 
     336 0003  ????                  C  BPRES   DW      ?       ; Number of res
					erved sectors 
     337 0005  ??                    C  BPFTCNT DB      ?       ; Number of FAT
					s 
     338 0006  ????                  C  BPDRCNT DW      ?       ; Number of dir
					ectory entries 
     339 0008  ????                  C  BPSCCNT DW      ?       ; Total number 
					of sectors 
     340 000A  ??                    C  BPMEDIA DB      ?       ; Media descrip
					tor byte 
     341 000B  ????                  C  BPFTSEC DW      ?       ; Number of sec
					tors taken up by one FAT 
     342 000D                        C  BPBLOCK ENDS 
     343                             C  ;                                      
					                                    ; 
     344                             C  ;            C  A  V  E  A  T     P  R 
					 O  G  R  A  M  M  E  R             ; 
     345                             C  ;----+----+----+----+----+----+----+---
					-+----+----+----+----+----+----+----; 
     346                             C   
     347                             C  BREAK <Disk I/O Buffer Header> 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 07:53:02

CHKPROC - Procedures called from chkdsk                     Page     1-22
Disk I/O Buffer Header                                      

     348                             C  ;----+----+----+----+----+----+----+---
					-+----+----+----+----+----+----+----; 
     349                             C  ;            C  A  V  E  A  T     P  R 
					 O  G  R  A  M  M  E  R             ; 
     350                             C  ;                                      
					                                    ; 
     351                             C   
     352                             C  ; Field definition for I/O buffer infor
					mation 
     353                             C   
     354                             C  BUFFINFO        STRUC 
     355 0000  ????????              C  NEXTBUF         DD      ?       ; Point
					er to next buffer in list 
     356                             C  ; The next two items are often refed as
					 a word 
     357 0004  ??                    C  BUFDRV          DB      ?       ; Logic
					al drive # assoc with buffer FF = free 
     358 0005  ??                    C  BUFDIRTY        DB      ?       ; Dirty
					 flag 
     359 0006  ??                    C  BUFPRI          DB      ?       ; Buffe
					r selection priority (see EQUs below) 
     360 0007  ??                    C  VISIT           DB      ?       ; Visit
					 flag for buffer pool scans 
     361 0008  ????                  C  BUFSECNO        DW      ?       ; Secto
					r number of buffer 
     362                             C  ; The next two items are often refed as
					 a word 
     363 000A  ??                    C  BUFWRTCNT       DB      ?       ; For F
					AT sectors, # times sector written out 
     364 000B  ??                    C  BUFWRTINC       DB      ?       ; "   "
					     "   , # sectors between each write
					 
     365 000C  ????????              C  BUFDRVDP        DD      ?       ; Point
					er to drive parameters 
     366 0010                        C  BUFFINFO        ENDS 
     367                             C   
     368 = 0010                      C  BUFINSIZ        EQU     SIZE BUFFINFO 
     369                             C                                  ; Size 
					of structure in bytes 
     370                             C   
     371 = 0000                      C  FREEPRI EQU     0 
     372 = 0002                      C  LBRPRI  EQU     2               ; Last 
					byte of buffer read 
     373 = 0004                      C  LBWPRI  EQU     4               ; Last 
					byte written 
     374 = 0006                      C  RPRI    EQU     6               ; Read 
					but not last byte 
     375 = 0008                      C  WPRI    EQU     8               ; Writt
					en but not last byte 
     376 = 000F                      C  DIRPRI  EQU     15              ; Direc
					tory Sector 
     377 = 001E                      C  FATPRI  EQU     30              ; FAT s
					ector 
     378                             C  ;                                      
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 07:53:02

CHKPROC - Procedures called from chkdsk                     Page     1-23
Disk I/O Buffer Header                                      

					                                    ; 
     379                             C  ;            C  A  V  E  A  T     P  R 
					 O  G  R  A  M  M  E  R             ; 
     380                             C  ;----+----+----+----+----+----+----+---
					-+----+----+----+----+----+----+----; 
     381                             C   
     382                             C  BREAK <User stack inside of system call
					> 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 07:53:02

CHKPROC - Procedures called from chkdsk                     Page     1-24
User stack inside of system call                            

     383                             C  ; Location of user registers relative u
					ser stack pointer 
     384                             C   
     385                             C  user_environ    STRUC 
     386 0000  ????                  C  user_AX     DW      ? 
     387 0002  ????                  C  user_BX     DW      ? 
     388 0004  ????                  C  user_CX     DW      ? 
     389 0006  ????                  C  user_DX     DW      ? 
     390 0008  ????                  C  user_SI     DW      ? 
     391 000A  ????                  C  user_DI     DW      ? 
     392 000C  ????                  C  user_BP     DW      ? 
     393 000E  ????                  C  user_DS     DW      ? 
     394 0010  ????                  C  user_ES     DW      ? 
     395 0012  ????                  C  user_IP     DW      ? 
     396 0014  ????                  C  user_CS     DW      ? 
     397 0016  ????                  C  user_F      DW      ? 
     398 0018                        C  user_environ    ENDS 
     399                             C   
     400                             C  BREAK <interrupt definitions> 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 07:53:02

CHKPROC - Procedures called from chkdsk                     Page     1-25
interrupt definitions                                       

     401                             C   
     402 = 0020                      C  INTTAB          EQU     20H 
     403 = 0080                      C  INTBASE         EQU     4 * inttab 
     404 = 00C0                      C  ENTRYPOINT      EQU     INTBASE+40H 
     405                             C   
     406                             C          ENDIF 
     407                             C   
     408                             C  ; 
     409                             C  ; interrupt assignments 
     410                             C  ; 
     411                             C          IF      NOT ALTVECT 
     412 =                           C  int_abort           EQU     INTTAB     
					     ; abort process 
     413 = 0021                      C  int_command         EQU     int_abort+1
					     ; call MSDOS 
     414 = 0022                      C  int_terminate       EQU     int_abort+2
					     ; int to terminate address 
     415 = 0023                      C  int_ctrl_c          EQU     int_abort+3
					     ; ^c trapper 
     416 = 0024                      C  int_fatal_abort     EQU     int_abort+4
					     ; hard disk error 
     417 = 0025                      C  int_disk_read       EQU     int_abort+5
					     ; logical sector disk read 
     418 = 0026                      C  int_disk_write      EQU     int_abort+6
					     ; logical sector disk write 
     419 = 0027                      C  int_keep_process    EQU     int_abort+7
					     ; terminate program and stay 
     420                             C                                         
					     ; resident 
     421                             C  ;----+----+----+----+----+----+----+---
					-+----+----+----+----+----+----+----; 
     422                             C  ;            C  A  V  E  A  T     P  R 
					 O  G  R  A  M  M  E  R             ; 
     423                             C  ;                                      
					                                    ; 
     424 = 0028                      C  int_spooler         EQU     int_abort+8
					     ; spooler call 
     425 = 0029                      C  int_fastcon         EQU     int_abort+9
					     ; fast CON interrupt 
     426                             C  ;                                      
					                                    ; 
     427                             C  ;            C  A  V  E  A  T     P  R 
					 O  G  R  A  M  M  E  R             ; 
     428                             C  ;----+----+----+----+----+----+----+---
					-+----+----+----+----+----+----+----; 
     429                             C          ENDIF 
     430                             C   
     431 = 0080                      C  addr_int_abort          EQU    4 * int_
					abort 
     432 = 0084                      C  addr_int_command        EQU    4 * int_
					command 
     433 = 0088                      C  addr_int_terminate      EQU    4 * int_
					terminate 
     434 = 008C                      C  addr_int_ctrl_c         EQU    4 * int_
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 07:53:02

CHKPROC - Procedures called from chkdsk                     Page     1-26
interrupt definitions                                       

					ctrl_c 
     435 = 0090                      C  addr_int_fatal_abort    EQU    4 * int_
					fatal_abort 
     436 = 0094                      C  addr_int_disk_read      EQU    4 * int_
					disk_read 
     437 = 0098                      C  addr_int_disk_write     EQU    4 * int_
					disk_write 
     438 = 009C                      C  addr_int_keep_process   EQU    4 * int_
					keep_process 
     439                             C  ;----+----+----+----+----+----+----+---
					-+----+----+----+----+----+----+----; 
     440                             C  ;            C  A  V  E  A  T     P  R 
					 O  G  R  A  M  M  E  R             ; 
     441                             C  ;                                      
					                                    ; 
     442 = 00A0                      C  addr_int_spooler        EQU    4 * int_
					spooler 
     443 = 00A4                      C  addr_int_fastcon        EQU    4 * int_
					fastcon 
     444                             C  ;                                      
					                                    ; 
     445                             C  ;            C  A  V  E  A  T     P  R 
					 O  G  R  A  M  M  E  R             ; 
     446                             C  ;----+----+----+----+----+----+----+---
					-+----+----+----+----+----+----+----; 
     447                             C   
     448                             C  BREAK <Disk map> 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 07:53:02

CHKPROC - Procedures called from chkdsk                     Page     1-27
Disk map                                                    

     449                             C  ;  MSDOS partitions the disk into 4 sec
					tions: 
     450                             C  ; 
     451                             C  ;  phys sector 0:   +------------------
					-+ 
     452                             C  ;       |           | boot/reserved    
					 | 
     453                             C  ;       |           +------------------
					-+ 
     454                             C  ;       |           |  File allocation 
					 | 
     455                             C  ;       v           |      table(s)    
					 | 
     456                             C  ;                   |  (multiple copies
					 | 
     457                             C  ;                   |     are kept)    
					 | 
     458                             C  ;                   +------------------
					-+ 
     459                             C  ;                   |     Directory    
					 | 
     460                             C  ;                   +------------------
					-+ 
     461                             C  ;                   |     File space   
					 | 
     462                             C  ;                   +------------------
					-+ 
     463                             C  ;                   |   Unaddressable  
					 | 
     464                             C  ;                   |  (to end of disk)
					 | 
     465                             C  ;                   +------------------
					-+ 
     466                             C  ; 
     467                             C  ; All partition boundaries are sector b
					oundaries.  The size of the FAT is 
     468                             C  ; adjusted to maximize the file space a
					ddressable. 
     469                             C   
     470                             C  BREAK <Directory entry> 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 07:53:02

CHKPROC - Procedures called from chkdsk                     Page     1-28
Directory entry                                             

     471                             C   
     472                             C  ; 
     473                             C  ;       +---------------------------+ 
     474                             C  ;       |  (12 BYTE) filename/ext   |  
					     0       0 
     475                             C  ;       +---------------------------+ 
     476                             C  ;       |     (BYTE) attributes     |  
					     11      B 
     477                             C  ;       +---------------------------+ 
     478                             C  ;       |    (10 BYTE) reserved     |  
					     12      C 
     479                             C  ;       +---------------------------+ 
     480                             C  ;       | (WORD) time of last write |  
					     22      16 
     481                             C  ;       +---------------------------+ 
     482                             C  ;       | (WORD) date of last write |  
					     24      18 
     483                             C  ;       +---------------------------+ 
     484                             C  ;       |   (WORD) First cluster    |  
					     26      1A 
     485                             C  ;       +---------------------------+ 
     486                             C  ;       |     (DWORD) file size     |  
					     28      1C 
     487                             C  ;       +---------------------------+ 
     488                             C  ; 
     489                             C  ;   First byte of filename  = E5 -> fre
					e directory entry 
     490                             C  ;                           = 00 -> end
					 of allocated directory 
     491                             C  ;   Time:   Bits 0-4=seconds/2, bits 5-
					10=minute, 11-15=hour 
     492                             C  ;   Date:   Bits 0-4=day, bits 5-8=mont
					h, bits 9-15=year-1980 
     493                             C  ; 
     494                             C  dir_entry   STRUC 
     495 0000  000B[                 C  dir_name    DB      11 DUP (?)         
					 ; file name 
     496            ??               C  
     497                         ]   C  
     498                             C  
     499 000B  ??                    C  dir_attr    DB      ?                  
					 ; attribute bits 
     500 000C  000A[                 C  dir_pad     DB      10 DUP (?)         
					 ; reserved for expansion 
     501            ??               C  
     502                         ]   C  
     503                             C  
     504 0016  ????                  C  dir_time    DW      ?                  
					 ; time of last write 
     505 0018  ????                  C  dir_date    DW      ?                  
					 ; date of last write 
     506 001A  ????                  C  dir_first   DW      ?                  
					 ; first allocation unit of file 
     507 001C  ????                  C  dir_size_l  DW      ?                  
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 07:53:02

CHKPROC - Procedures called from chkdsk                     Page     1-29
Directory entry                                             

					 ; low 16 bits of file size 
     508 001E  ????                  C  dir_size_h  DW      ?                  
					 ; high 16 bits of file size 
     509 0020                        C  dir_entry   ENDS 
     510                             C   
     511 = 0001                      C  attr_read_only      EQU      1h 
     512 = 0002                      C  attr_hidden         EQU      2h 
     513 = 0004                      C  attr_system         EQU      4h 
     514 = 0008                      C  attr_volume_id      EQU      8h 
     515 = 0010                      C  attr_directory      EQU     10h 
     516 = 0020                      C  attr_archive        EQU     20h 
     517                             C   
     518 = 0016                      C  attr_all            EQU     attr_hidden
					+attr_system+attr_directory 
     519                             C                                         
					 ; OR of hard attributes for FINDENTRY 
     520                             C   
     521 = 0021                      C  attr_ignore         EQU     attr_read_o
					nly+attr_archive 
     522                             C                                         
					 ; ignore this(ese) attribute(s) during
					 
     523                             C                                         
					 ; search first/next 
     524                             C   
     525 = 0027                      C  attr_changeable     EQU     attr_read_o
					nly+attr_hidden+attr_system+attr_archiv
					e 
     526                             C                                         
					 ; changeable via CHMOD 
     527                             C   
     528                             C  BREAK <File allocation Table informatio
					n> 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 07:53:02

CHKPROC - Procedures called from chkdsk                     Page     1-30
File allocation Table information                           

     529                             C  ; 
     530                             C  ; The File Allocation Table uses a 12-b
					it entry for each allocation unit on 
     531                             C  ; the disk.  These entries are packed, 
					two for every three bytes.  The content
					s 
     532                             C  ; of entry number N is found by 1) mult
					iplying N by 1.5; 2) adding the result 
     533                             C  ; to the base address of the Allocation
					 Table; 3) fetching the 16-bit word 
     534                             C  ; at this address; 4) If N was odd (so 
					that N*1.5 was not an integer), shift 
     535                             C  ; the word right four bits; 5) mask to 
					12 bits (AND with 0FFF hex).  Entry 
     536                             C  ; number zero is used as an end-of-file
					 trap in the OS and is passed to the 
     537                             C  ; BIOS to help determine disk format.  
					Entry 1 is reserved for future use. 
     538                             C  ; The first available allocation unit i
					s assigned entry number two, and even 
     539                             C  ; though it is the first, is called clu
					ster 2.  Entries greater than 0FF8H 
     540                             C  ; are end of file marks; entries of zer
					o are unallocated.  Otherwise, the 
     541                             C  ; contents of a FAT entry is the number
					 of the next cluster in the file. 
     542                             C  ; 
     543                             C  ; Clusters with bad sectors are tagged 
					with FF7H.  Any non-zero number would 
     544                             C  ; do because these clusters show as all
					ocated, but are not part of any 
     545                             C  ; allocation chain and thus will never 
					be allocated to a file.  A particular 
     546                             C  ; number is selected so that disk check
					ing programs know what to do (ie.  a 
     547                             C  ; cluster with entry FF7H which is not 
					in a chain is not an error). 
     548                             C   
     549                             C  BREAK <DPB structure> 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 07:53:02

CHKPROC - Procedures called from chkdsk                     Page     1-31
DPB structure                                               

     550                             C  ;----+----+----+----+----+----+----+---
					-+----+----+----+----+----+----+----; 
     551                             C  ;            C  A  V  E  A  T     P  R 
					 O  G  R  A  M  M  E  R             ; 
     552                             C  ;                                      
					                                    ; 
     553                             C   
     554 = 0040                      C  DIRSTRLEN       EQU     64      ; Max l
					ength in bytes of directory strings 
     555                             C   
     556                             C  dpb     STRUC 
     557 0000  ??                    C  dpb_drive           DB      ?   ; Logic
					al drive # assoc with DPB (A=0,B=1,...)
					 
     558 0001  ??                    C  dpb_UNIT            DB      ?   ; Drive
					r unit number of DPB 
     559 0002  ????                  C  dpb_sector_size     DW      ?   ; Size 
					of physical sector in bytes 
     560 0004  ??                    C  dpb_cluster_mask    DB      ?   ; Secto
					rs/cluster - 1 
     561 0005  ??                    C  dpb_cluster_shift   DB      ?   ; Log2 
					of sectors/cluster 
     562 0006  ????                  C  dpb_first_FAT       DW      ?   ; Start
					ing record of FATs 
     563 0008  ??                    C  dpb_FAT_count       DB      ?   ; Numbe
					r of FATs for this drive 
     564 0009  ????                  C  dpb_root_entries    DW      ?   ; Numbe
					r of directory entries 
     565 000B  ????                  C  dpb_first_sector    DW      ?   ; First
					 sector of first cluster 
     566 000D  ????                  C  dpb_max_cluster     DW      ?   ; Numbe
					r of clusters on drive + 1 
     567 000F  ??                    C  dpb_FAT_size        DB      ?   ; Numbe
					r of records occupied by FAT 
     568 0010  ????                  C  dpb_dir_sector      DW      ?   ; Start
					ing record of directory 
     569 0012  ????????              C  dpb_driver_addr     DD      ?   ; Point
					er to driver 
     570 0016  ??                    C  dpb_media           DB      ?   ; Media
					 byte 
     571 0017  ??                    C  dpb_first_access    DB      ?   ; This 
					is initialized to -1 to force a media 
     572                             C                                  ; check
					 the first time this DPB is used 
     573 0018  ????????              C  dpb_next_dpb        DD      ?   ; Point
					er to next Drive parameter block 
     574 001C  ????                  C  dpb_current_dir     DW      ?   ; Clust
					er number of start of current directory
					 
     575                             C                                  ; 0 ind
					icates root, -1 indicates invalid (disk
					 
     576                             C                                  ; ?  ch
					anged) 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 07:53:02

CHKPROC - Procedures called from chkdsk                     Page     1-32
DPB structure                                               

     577 001E  0040[                 C  dpb_dir_text        DB      DIRSTRLEN D
					UP(?) 
     578            ??               C  
     579                         ]   C  
     580                             C  
     581                             C                                  ; ASCIZ
					 string of current directory 
     582 005E                        C  dpb     ENDS 
     583                             C   
     584 = 005E                      C  DPBSIZ  EQU     SIZE dpb        ; Size 
					of the structure in bytes 
     585                             C   
     586 = 000D                      C  DSKSIZ  =       dpb_max_cluster ; Size 
					of disk (temp used during init only) 
     587                             C  ;                                      
					                                    ; 
     588                             C  ;            C  A  V  E  A  T     P  R 
					 O  G  R  A  M  M  E  R             ; 
     589                             C  ;----+----+----+----+----+----+----+---
					-+----+----+----+----+----+----+----; 
     590                             C   
     591                             C  BREAK <File Control Block definition> 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 07:53:02

CHKPROC - Procedures called from chkdsk                     Page     1-33
File Control Block definition                               

     592                             C  ; 
     593                             C  ; Field definition for FCBs 
     594                             C  ; The FCB has the following structure: 
     595                             C  ; 
     596                             C  ;       +---------------------------+ 
     597                             C  ;       |   Drive indicator(byte)   | 
     598                             C  ;       +---------------------------+ 
     599                             C  ;       |    Filename (8 chars)     | 
     600                             C  ;       +---------------------------+ 
     601                             C  ;       |    Extension (3 chars)    | 
     602                             C  ;       +---------------------------+ 
     603                             C  ;       |   Current Extent(word)    | 
     604                             C  ;       +---------------------------+ 
     605                             C  ;       |    Record size (word)     | 
     606                             C  ;       +---------------------------+ 
     607                             C  ;       |    File Size (2 words)    | 
     608                             C  ;       +---------------------------+ 
     609                             C  ;       |       Date of write       | 
     610                             C  ;       +---------------------------+ 
     611                             C  ;       |       Time of write       | 
     612                             C  ;       +---------------------------+ 
     613                             C  ;----+----+----+----+----+----+----+---
					-+----+----+----+----+----+----+----; 
     614                             C  ;            C  A  V  E  A  T     P  R 
					 O  G  R  A  M  M  E  R             ; 
     615                             C  ;                                      
					                                    ; 
     616                             C  ;       | Flags:                    | 
     617                             C  ;       |  bit 7=0 file/1 device    | 
     618                             C  ;       |  bit 6=0 if dirty         | 
     619                             C  ;       |  bits 0-5 deviceid        | 
     620                             C  ;       +---------------------------+ 
     621                             C  ;       |   first cluster in file   | 
     622                             C  ;       +---------------------------+ 
     623                             C  ;       | position of last cluster  | 
     624                             C  ;       +---------------------------+ 
     625                             C  ;       |   last cluster accessed   |  
					 12 bit-+--- packed in 3 bytes 
     626                             C  ;       +---------------------------+  
					        | 
     627                             C  ;       |     parent directory      |  
					 <------+ 
     628                             C  ;       +---------------------------+ 
     629                             C  ;                                      
					                                    ; 
     630                             C  ;            C  A  V  E  A  T     P  R 
					 O  G  R  A  M  M  E  R             ; 
     631                             C  ;----+----+----+----+----+----+----+---
					-+----+----+----+----+----+----+----; 
     632                             C  ;       |    next record number     | 
     633                             C  ;       +---------------------------+ 
     634                             C  ;       |   random record number    | 
     635                             C  ;       +---------------------------+ 
     636                             C  ; 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 07:53:02

CHKPROC - Procedures called from chkdsk                     Page     1-34
File Control Block definition                               

     637                             C   
     638                             C  sys_fcb     STRUC 
     639 0000  ??                    C  fcb_drive   DB      ? 
     640 0001  0008[                 C  fcb_name    DB      8 DUP (?) 
     641            ??               C  
     642                         ]   C  
     643                             C  
     644 0009  0003[                 C  fcb_ext     DB      3 DUP (?) 
     645            ??               C  
     646                         ]   C  
     647                             C  
     648 000C  ????                  C  fcb_EXTENT  DW      ? 
     649 000E  ????                  C  fcb_RECSIZ  DW      ?       ; Size of r
					ecord (user settable) 
     650 0010  ????                  C  fcb_FILSIZ  DW      ?       ; Size of f
					ile in bytes; used with the following 
     651                             C                              ; word 
     652 0012  ????                  C  fcb_DRVBP   DW      ?       ; BP for SE
					ARCH FIRST and SEARCH NEXT 
     653 0014  ????                  C  fcb_FDATE   DW      ?       ; Date of l
					ast writing 
     654 0016  ????                  C  fcb_FTIME   DW      ?       ; Time of l
					ast writing 
     655                             C  ;----+----+----+----+----+----+----+---
					-+----+----+----+----+----+----+----; 
     656                             C  ;            C  A  V  E  A  T     P  R 
					 O  G  R  A  M  M  E  R             ; 
     657                             C  ;                                      
					                                    ; 
     658 0018  ??                    C  fcb_DEVID   DB      ?       ; Device ID
					 number, bits 0-5 if file. 
     659                             C                              ; bit 7=0 f
					or file, bit 7=1 for I/O device 
     660                             C                              ; If file, 
					bit 6=0 if dirty 
     661                             C                              ; If I/O de
					vice, bit 6=0 if EOF (input) 
     662                             C                              ;          
					     Bit 5=1 if Raw mode 
     663                             C                              ;          
					     Bit 0=1 if console input device 
     664                             C                              ;          
					     Bit 1=1 if console output device 
     665                             C                              ;          
					     Bit 2=1 if null device 
     666                             C                              ;          
					     Bit 3=1 if clock device 
     667 0019  ????                  C  fcb_FIRCLUS DW      ?       ; First clu
					ster of file 
     668 001B  ????                  C  fcb_CLUSPOS DW      ?       ; Position 
					of last cluster accessed 
     669 001D  ????                  C  fcb_LSTCLUS DW      ?       ; Last clus
					ter accessed and directory pack 2 12 
     670 001F  ??                    C              DB      ?       ; bit numbe
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 07:53:02

CHKPROC - Procedures called from chkdsk                     Page     1-35
File Control Block definition                               

					rs into 24 bits... 
     671                             C  ;                                      
					                                    ; 
     672                             C  ;            C  A  V  E  A  T     P  R 
					 O  G  R  A  M  M  E  R             ; 
     673                             C  ;----+----+----+----+----+----+----+---
					-+----+----+----+----+----+----+----; 
     674 0020  ??                    C  fcb_NR      DB      ?       ; Next reco
					rd 
     675 0021  0004[                 C  fcb_RR      DB      4 DUP (?)          
					     ; Random record 
     676            ??               C  
     677                         ]   C  
     678                             C  
     679 0025                        C  sys_fcb     ENDS 
     680                             C   
     681 = 0010                      C  FILDIRENT       = fcb_FILSIZ           
					 ; Used only by SEARCH FIRST and SEARCH
					 
     682                             C                                         
					 ; NEXT 
     683                             C   
     684                             C  ;----+----+----+----+----+----+----+---
					-+----+----+----+----+----+----+----; 
     685                             C  ;            C  A  V  E  A  T     P  R 
					 O  G  R  A  M  M  E  R             ; 
     686                             C  ;                                      
					                                    ; 
     687 = 0040                      C  devid_file_clean        EQU     40h    
					 ; true if file and not written 
     688 = 003F                      C  devid_file_mask_drive   EQU     3Fh    
					 ; mask for drive number 
     689                             C   
     690 = 0080                      C  devid_device            EQU     80h    
					 ; true if a device 
     691 = 0040                      C  devid_device_EOF        EQU     40h    
					 ; true if end of file reached 
     692 = 0020                      C  devid_device_raw        EQU     20h    
					 ; true if in raw mode 
     693 = 0010                      C  devid_device_special    EQU     10h    
					 ; true if special device 
     694 = 0008                      C  devid_device_clock      EQU     08h    
					 ; true if clock device 
     695 = 0004                      C  devid_device_null       EQU     04h    
					 ; true if null device 
     696 = 0002                      C  devid_device_con_out    EQU     02h    
					 ; true if console output 
     697 = 0001                      C  devid_device_con_in     EQU     01h    
					 ; true if consle input 
     698                             C   
     699                             C  ; 
     700                             C  ; structure of devid field as returned 
					by IOCTL is: 
     701                             C  ; 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 07:53:02

CHKPROC - Procedures called from chkdsk                     Page     1-36
File Control Block definition                               

     702                             C  ;       BIT     7   6   5   4   3   2  
					 1   0 
     703                             C  ;             |---|---|---|---|---|---|
					---|---| 
     704                             C  ;             | I | E | R | S | I | I |
					 I | I | 
     705                             C  ;             | S | O | A | P | S | S |
					 S | S | 
     706                             C  ;             | D | F | W | E | C | N |
					 C | C | 
     707                             C  ;             | E |   |   | C | L | U |
					 O | I | 
     708                             C  ;             | V |   |   | L | K | L |
					 T | N | 
     709                             C  ;             |---|---|---|---|---|---|
					---|---| 
     710                             C  ;       ISDEV = 1 if this channel is a 
					device 
     711                             C  ;             = 0 if this channel is a 
					disk file 
     712                             C  ; 
     713                             C  ;       If ISDEV = 1 
     714                             C  ; 
     715                             C  ;             EOF = 0 if End Of File on
					 input 
     716                             C  ;             RAW = 1 if this device is
					 in Raw mode 
     717                             C  ;                 = 0 if this device is
					 cooked 
     718                             C  ;             ISCLK = 1 if this device 
					is the clock device 
     719                             C  ;             ISNUL = 1 if this device 
					is the null device 
     720                             C  ;             ISCOT = 1 if this device 
					is the console output 
     721                             C  ;             ISCIN = 1 if this device 
					is the console input 
     722                             C  ; 
     723                             C  ;       If ISDEV = 0 
     724                             C  ;             EOF = 0 if channel has be
					en written 
     725                             C  ;             Bits 0-5  are  the  block
					  device  number  for 
     726                             C  ;                 the channel (0 = A, 1
					 = B, ...) 
     727                             C  ; 
     728 = 0080                      C  devid_ISDEV     EQU     80h 
     729 = 0040                      C  devid_EOF       EQU     40h 
     730 = 0020                      C  devid_RAW       EQU     20h 
     731 = 0010                      C  devid_SPECIAL   EQU     10H 
     732 = 0008                      C  devid_ISCLK     EQU     08h 
     733 = 0004                      C  devid_ISNUL     EQU     04h 
     734 = 0002                      C  devid_ISCOT     EQU     02h 
     735 = 0001                      C  devid_ISCIN     EQU     01h 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 07:53:02

CHKPROC - Procedures called from chkdsk                     Page     1-37
File Control Block definition                               

     736                             C   
     737 = 001F                      C  devid_block_dev EQU     1Fh            
					 ; mask for block device number 
     738                             C   
     739                             C  ; 
     740                             C  ; find first/next buffer 
     741                             C  ; 
     742                             C  find_buf    STRUC 
     743 0000  ??                    C  find_buf_sattr      DB  ?           ; a
					ttribute of search 
     744 0001  ??                    C  find_buf_drive      DB  ?           ; d
					rive of search 
     745 0002  000B[                 C  find_buf_name       DB  11 DUP (?)  ; f
					ormatted name 
     746            ??               C  
     747                         ]   C  
     748                             C  
     749 000D  ????                  C  find_buf_LastEnt    DW  ?           ; L
					astEnt 
     750 000F  ????????              C  find_buf_ThisDPB    DD  ?           ; T
					his DPB 
     751 0013  ????                  C  find_buf_DirStart   DW  ?           ; D
					irStart 
     752                             C  ;                                      
					                                    ; 
     753                             C  ;            C  A  V  E  A  T     P  R 
					 O  G  R  A  M  M  E  R             ; 
     754                             C  ;----+----+----+----+----+----+----+---
					-+----+----+----+----+----+----+----; 
     755                             C   
     756 0015  ??                    C  find_buf_attr       DB  ?           ; a
					ttribute found 
     757 0016  ????                  C  find_buf_time       DW  ?           ; t
					ime 
     758 0018  ????                  C  find_buf_date       DW  ?           ; d
					ate 
     759 001A  ????                  C  find_buf_size_l     DW  ?           ; l
					ow(size) 
     760 001C  ????                  C  find_buf_size_h     DW  ?           ; h
					igh(size) 
     761 001E  000D[                 C  find_buf_pname      DB  13 DUP (?)  ; p
					acked name 
     762            ??               C  
     763                         ]   C  
     764                             C  
     765 002B                        C  find_buf    ENDS 
     766                             C   
     767                             C  BREAK <Process data block> 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 07:53:02

CHKPROC - Procedures called from chkdsk                     Page     1-38
Process data block                                          

     768                             C  ; 
     769                             C  ; Process data block (otherwise known a
					s program header) 
     770                             C  ; 
     771                             C   
     772 = 0014                      C  FilPerProc          EQU     20 
     773                             C   
     774                             C  Process_data_block  STRUC 
     775 0000  ????                  C  PDB_Exit_Call       DW      ?          
					 ; INT int_abort system terminate 
     776 0002  ????                  C  PDB_block_len       DW      ?          
					 ; size of execution block 
     777 0004  ??                    C                      DB      ? 
     778 0005  0005[                 C  PDB_CPM_Call        DB  5 DUP (?)      
					 ; ancient call to system 
     779            ??               C  
     780                         ]   C  
     781                             C  
     782 000A  ????????              C  PDB_Exit            DD      ?          
					 ; pointer to exit routine 
     783 000E  ????????              C  PDB_Ctrl_C          DD      ?          
					 ; pointer to ^C routine 
     784 0012  ????????              C  PDB_Fatal_abort     DD      ?          
					 ; pointer to fatal error 
     785                             C  ;----+----+----+----+----+----+----+---
					-+----+----+----+----+----+----+----; 
     786                             C  ;            C  A  V  E  A  T     P  R 
					 O  G  R  A  M  M  E  R             ; 
     787                             C  ;                                      
					                                    ; 
     788 0016  ????                  C  PDB_Parent_PID      DW      ?          
					 ; PID of parent (terminate PID) 
     789 0018  0014[                 C  PDB_JFN_Table       DB  FilPerProc DUP 
					(?) 
     790            ??               C  
     791                         ]   C  
     792                             C  
     793                             C                                         
					 ; indices into system table 
     794                             C  ;                                      
					                                    ; 
     795                             C  ;            C  A  V  E  A  T     P  R 
					 O  G  R  A  M  M  E  R             ; 
     796                             C  ;----+----+----+----+----+----+----+---
					-+----+----+----+----+----+----+----; 
     797 002C  ????                  C  PDB_environ         DW      ?          
					 ; seg addr of environment 
     798                             C  ;----+----+----+----+----+----+----+---
					-+----+----+----+----+----+----+----; 
     799                             C  ;            C  A  V  E  A  T     P  R 
					 O  G  R  A  M  M  E  R             ; 
     800                             C  ;                                      
					                                    ; 
     801 002E  ????????              C  PDB_User_stack      DD      ?          
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 07:53:02

CHKPROC - Procedures called from chkdsk                     Page     1-39
Process data block                                          

					 ; stack of self during system calls 
     802 0032  001E[                 C  PDB_PAD1            DB      1Eh DUP (?)
					 
     803            ??               C  
     804                         ]   C  
     805                             C  
     806                             C  ;                                      
					                                    ; 
     807                             C  ;            C  A  V  E  A  T     P  R 
					 O  G  R  A  M  M  E  R             ; 
     808                             C  ;----+----+----+----+----+----+----+---
					-+----+----+----+----+----+----+----; 
     809 0050  0005[                 C  PDB_Call_system     DB      5 DUP (?)  
					 ; portable method of system call 
     810            ??               C  
     811                         ]   C  
     812                             C  
     813                             C  ;----+----+----+----+----+----+----+---
					-+----+----+----+----+----+----+----; 
     814                             C  ;            C  A  V  E  A  T     P  R 
					 O  G  R  A  M  M  E  R             ; 
     815                             C  ;                                      
					                                    ; 
     816 0055  0006[                 C  PDB_PAD2            DB      6h DUP (?) 
					 ; 
     817            ??               C  
     818                         ]   C  
     819                             C  
     820                             C  ;                                      
					                                    ; 
     821                             C  ;            C  A  V  E  A  T     P  R 
					 O  G  R  A  M  M  E  R             ; 
     822                             C  ;----+----+----+----+----+----+----+---
					-+----+----+----+----+----+----+----; 
     823 005B                        C  Process_data_block  ENDS 
     824                             C   
     825                             C  BREAK <EXEC and EXE file structures> 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 07:53:02

CHKPROC - Procedures called from chkdsk                     Page     1-40
EXEC and EXE file structures                                

     826                             C  ; 
     827                             C  ; EXEC arg block - load/go program 
     828                             C  ; 
     829                             C   
     830                             C  ; 
     831                             C  ; The following get used as arguments t
					o the EXEC system call.  They indicate 
     832                             C  ; whether or not the program is execute
					d or whether or not a program header 
     833                             C  ; gets created. 
     834                             C  ; 
     835 = 0001                      C  exec_func_no_execute    EQU 1          
					 ; no execute bit 
     836 = 0002                      C  exec_func_overlay       EQU 2          
					 ; overlay bit 
     837                             C   
     838                             C  Exec0           STRUC 
     839 0000  ????                  C  Exec0_environ   DW      ?              
					 ; seg addr of environment 
     840 0002  ????????              C  Exec0_com_line  DD      ?              
					 ; pointer to asciz command line 
     841 0006  ????????              C  Exec0_5C_FCB    DD      ?              
					 ; default fcb at 5C 
     842 000A  ????????              C  Exec0_6C_FCB    DD      ?              
					 ; default fcb at 6C 
     843 000E                        C  Exec0           ENDS 
     844                             C   
     845                             C  Exec1           STRUC 
     846 0000  ????                  C  Exec1_environ   DW      ?              
					 ; seg addr of environment 
     847 0002  ????????              C  Exec1_com_line  DD      ?              
					 ; pointer to asciz command line 
     848 0006  ????????              C  Exec1_5C_FCB    DD      ?              
					 ; default fcb at 5C 
     849 000A  ????????              C  Exec1_6C_FCB    DD      ?              
					 ; default fcb at 6C 
     850 000E  ????                  C  Exec1_SP        DW      ?              
					 ; stack pointer of program 
     851 0010  ????                  C  Exec1_SS        DW      ?              
					 ; stack seg register of program 
     852 0012  ????                  C  Exec1_IP        DW      ?              
					 ; entry point IP 
     853 0014  ????                  C  Exec1_CS        DW      ?              
					 ; entry point CS 
     854 0016                        C  Exec1           ENDS 
     855                             C   
     856                             C  Exec3           STRUC 
     857 0000  ????                  C  Exec3_load_addr DW      ?              
					 ; seg address of load point 
     858 0002  ????                  C  Exec3_reloc_fac DW      ?              
					 ; relocation factor 
     859 0004                        C  Exec3           ENDS 
     860                             C   
     861                             C  ; 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 07:53:02

CHKPROC - Procedures called from chkdsk                     Page     1-41
EXEC and EXE file structures                                

     862                             C  ; Exit codes in upper byte 
     863                             C  ; 
     864 = 0000                      C  Exit_terminate      EQU     0 
     865 = 0000                      C  Exit_abort          EQU     0 
     866 = 0001                      C  Exit_Ctrl_C         EQU     1 
     867 = 0002                      C  Exit_Hard_Error     EQU     2 
     868 = 0003                      C  Exit_Keep_process   EQU     3 
     869                             C   
     870                             C  ; 
     871                             C  ; EXE file header 
     872                             C  ; 
     873                             C   
     874                             C  EXE_file    STRUC 
     875 0000  ????                  C  exe_signature   DW  ?                  
					 ; must contain 4D5A  (yay zibo!) 
     876 0002  ????                  C  exe_len_mod_512 DW  ?                  
					 ; low 9 bits of length 
     877 0004  ????                  C  exe_pages       DW  ?                  
					 ; number of 512b pages in file 
     878 0006  ????                  C  exe_rle_count   DW  ?                  
					 ; count of reloc entries 
     879 0008  ????                  C  exe_par_dir     DW  ?                  
					 ; number of paragraphs before image 
     880 000A  ????                  C  exe_min_BSS     DW  ?                  
					 ; minimum number of para of BSS 
     881 000C  ????                  C  exe_max_BSS     DW  ?                  
					 ; max number of para of BSS 
     882 000E  ????                  C  exe_SS          DW  ?                  
					 ; stack of image 
     883 0010  ????                  C  exe_SP          DW  ?                  
					 ; SP of image 
     884 0012  ????                  C  exe_chksum      DW  ?                  
					 ; checksum  of file (ignored) 
     885 0014  ????                  C  exe_IP          DW  ?                  
					 ; IP of entry 
     886 0016  ????                  C  exe_CS          DW  ?                  
					 ; CS of entry 
     887 0018  ????                  C  exe_rle_table   DW  ?                  
					 ; byte offset of reloc table 
     888 001A  ????                  C  exe_iov         DW  ?                  
					 ; overlay number (0 for root) 
     889 001C  ????????              C  exe_sym_tab     DD  ?                  
					 ; offset of symbol table in file 
     890 0020                        C  EXE_file    ENDS 
     891                             C   
     892 = 5A4D                      C  exe_valid_signature     EQU 5A4Dh 
     893 = 4D5A                      C  exe_valid_old_signature EQU 4D5Ah 
     894                             C   
     895                             C  symbol_entry    STRUC 
     896 0000  ????????              C  sym_value       DD  ? 
     897 0004  ????                  C  sym_type        DW  ? 
     898 0006  ??                    C  sym_len         DB  ? 
     899 0007  00FF[                 C  sym_name        DB  255 dup (?) 
     900            ??               C  
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 07:53:02

CHKPROC - Procedures called from chkdsk                     Page     1-42
EXEC and EXE file structures                                

     901                         ]   C  
     902                             C  
     903 0106                        C  symbol_entry    ENDS 
     904                             C   
     905                             C  BREAK <Internal system file table forma
					t> 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 07:53:02

CHKPROC - Procedures called from chkdsk                     Page     1-43
Internal system file table format                           

     906                             C  ;----+----+----+----+----+----+----+---
					-+----+----+----+----+----+----+----; 
     907                             C  ;            C  A  V  E  A  T     P  R 
					 O  G  R  A  M  M  E  R             ; 
     908                             C  ;                                      
					                                    ; 
     909                             C  ; 
     910                             C  ; system file table 
     911                             C  ; 
     912                             C   
     913                             C  sft             STRUC 
     914 0000  ????????              C  sft_link        DD      ? 
     915 0004  ????                  C  sft_count       DW      ?              
					 ; number of entries 
     916 0006  ????                  C  sft_table       DW      ?              
					 ; beginning of array of the following 
     917 0008                        C  sft             ENDS 
     918                             C   
     919                             C  ; 
     920                             C  ; system file table entry 
     921                             C  ; 
     922                             C   
     923                             C  sf_entry        STRUC 
     924 0000  ??                    C  sf_ref_count    DB      ?              
					 ; number of processes sharing fcb 
     925 0001  ??                    C  sf_mode         DB      ?              
					 ; mode of access 
     926 0002  ??                    C  sf_attr         DB      ?              
					 ; attribute of file 
     927 0003  0025[                 C  sf_fcb          DB      (SIZE sys_fcb) 
					DUP (?) 
     928            ??               C  
     929                         ]   C  
     930                             C  
     931                             C                                         
					 ; actual FCB 
     932 0028                        C  sf_entry        ENDS 
     933                             C   
     934 = 0005                      C  sf_default_number   EQU     5h 
     935                             C  ;                                      
					                                    ; 
     936                             C  ;            C  A  V  E  A  T     P  R 
					 O  G  R  A  M  M  E  R             ; 
     937                             C  ;----+----+----+----+----+----+----+---
					-+----+----+----+----+----+----+----; 
     938                             C   
     939                             C  BREAK <Memory arena structure> 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 07:53:02

CHKPROC - Procedures called from chkdsk                     Page     1-44
Memory arena structure                                      

     940                             C  ;----+----+----+----+----+----+----+---
					-+----+----+----+----+----+----+----; 
     941                             C  ;            C  A  V  E  A  T     P  R 
					 O  G  R  A  M  M  E  R             ; 
     942                             C  ;                                      
					                                    ; 
     943                             C  ; 
     944                             C  ; arena item 
     945                             C  ; 
     946                             C  arena   STRUC 
     947 0000  ??                    C  arena_signature     DB  ?              
					 ; 4D for valid item, 5A for last item 
     948 0001  ????                  C  arena_owner         DW  ?              
					 ; owner of arena item 
     949 0003  ????                  C  arena_size          DW  ?              
					 ; size in paragraphs of item 
     950 0005                        C  arena   ENDS 
     951                             C   
     952                             C  ; 
     953                             C  ; Current structure of the data returne
					d by the international call 
     954                             C  ; 
     955                             C   
     956                             C  internat_block STRUC 
     957 0000  ????                  C  Date_tim_format DW      ?           ; 0
					-USA, 1-EUR, 2-JAP 
     958 0002  ??                    C  Currency_sym    DB      ?           ; C
					urrency Symbol 5 bytes 
     959 0003  ??                    C                  DB      ? 
     960 0004  ??                    C                  DB      ? 
     961 0005  ??                    C                  DB      ? 
     962 0006  ??                    C                  DB      ? 
     963 0007  ??                    C  Thous_sep       DB      ?           ; T
					housands separator 2 bytes 
     964 0008  ??                    C                  DB      ? 
     965 0009  ??                    C  Decimal_sep     DB      ?           ; D
					ecimal separator 2 bytes 
     966 000A  ??                    C                  DB      ? 
     967 000B  ??                    C  Date_sep        DB      ?           ; D
					ate separator 2 bytes 
     968 000C  ??                    C                  DB      ? 
     969 000D  ??                    C  Time_sep        DB      ?           ; D
					ecimal separator 2 bytes 
     970 000E  ??                    C                  DB      ? 
     971 000F  ??                    C  Bit_feild       DB      ?           ; B
					it values 
     972                             C                                      ;  
					 Bit 0 = 0 if currency symbol first 
     973                             C                                      ;  
					       = 1 if currency symbol last 
     974                             C                                      ;  
					 Bit 1 = 0 if No space after currency s
					ymbol 
     975                             C                                      ;  
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 07:53:02

CHKPROC - Procedures called from chkdsk                     Page     1-45
Memory arena structure                                      

					       = 1 if space after currency symb
					ol 
     976 0010  ??                    C  Currency_cents  DB      ?           ; N
					umber of places after currency dec poin
					t 
     977 0011  ??                    C  Time_24         DB      ?           ; 1
					 if 24 hour time, 0 if 12 hour time 
     978 0012  ????                  C  Map_call        DW      ?           ; A
					ddress of case mapping call (DWORD) 
     979 0014  ????                  C                  DW      ?           ; T
					HIS IS TWO WORDS SO IT CAN BE INITIALIZ
					ED 
     980                             C                                      ;  
					in pieces. 
     981 0016  ??                    C  Data_sep        DB      ?           ; D
					ata list separator character 
     982 0017  ??                    C                  DB      ? 
     983 0018                        C  internat_block ENDS 
     984                             C   
     985                             C  ; 
     986                             C  ; Max size of the block returned by the
					 INTERNATIONAL call 
     987                             C  ; 
     988 = 0020                      C  internat_block_max      EQU     32 
     989                             C   
     990                             C  ; 
     991                             C  ; CAUTION: The routines in ALLOC.ASM re
					ly on the fact that arena_signature 
     992                             C  ; and arena_owner_system are all equal 
					to zero and are contained in DI.  Chang
					e 
     993                             C  ; them and change ALLOC.ASM. 
     994                             C   
     995 = 0000                      C  arena_owner_system  EQU 0              
					 ; free block indication 
     996                             C   
     997 = 004D                      C  arena_signature_normal  EQU 4Dh        
					 ; valid signature, not end of arena 
     998 = 005A                      C  arena_signature_end     EQU 5Ah        
					 ; valid signature, last block in arena
					 
     999                             C  ;                                      
					                                    ; 
    1000                             C  ;            C  A  V  E  A  T     P  R 
					 O  G  R  A  M  M  E  R             ; 
    1001                             C  ;----+----+----+----+----+----+----+---
					-+----+----+----+----+----+----+----; 
    1002                             C   
    1003                             C  BREAK <Machine instruction definitions>
					 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 07:53:02

CHKPROC - Procedures called from chkdsk                     Page     1-46
Machine instruction definitions                             

    1004                             C   
    1005 = 00CD                      C  mi_INT          EQU     0CDh 
    1006 = 00EA                      C  mi_Long_JMP     EQU     0EAh 
    1007 = 009A                      C  mi_Long_CALL    EQU     09Ah 
    1008 = 00CB                      C  mi_Long_RET     EQU     0CBh 
    1009                             C   
    1010                             C  BREAK <Standard I/O assignments> 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 07:53:02

CHKPROC - Procedures called from chkdsk                     Page     1-47
Standard I/O assignments                                    

    1011                             C   
    1012 = 0000                      C  stdin       EQU     0 
    1013 = 0001                      C  stdout      EQU     1 
    1014 = 0002                      C  stderr      EQU     2 
    1015 = 0003                      C  stdaux      EQU     3 
    1016 = 0004                      C  stdprn      EQU     4 
    1017                             C   
    1018                             C  BREAK <Xenix subfunction assignments> 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 07:53:02

CHKPROC - Procedures called from chkdsk                     Page     1-48
Xenix subfunction assignments                               

    1019                             C   
    1020 = 0000                      C  open_for_read   EQU 0 
    1021 = 0001                      C  open_for_write  EQU 1 
    1022 = 0002                      C  open_for_both   EQU 2 
    1023                             C   
    1024                             C  BREAK <Xenix error codes> 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 07:53:02

CHKPROC - Procedures called from chkdsk                     Page     1-49
Xenix error codes                                           

    1025                             C   
    1026                             C  ; 
    1027                             C  ; XENIX calls all return error codes th
					rough AX.  If an error occurred then 
    1028                             C  ; the carry bit will be set and the err
					or code is in AX.  If no error occurred
					 
    1029                             C  ; then the carry bit is reset and AX co
					ntains returned info. 
    1030                             C  ; 
    1031                             C   
    1032 =                           C  no_error_occurred               EQU    
					 0                                     
					                         ? 
    1033                             C   
    1034 = 0001                      C  error_invalid_function          EQU    
					 1 
    1035 = 0002                      C  error_file_not_found            EQU    
					 2 
    1036 = 0003                      C  error_path_not_found            EQU    
					 3 
    1037 = 0004                      C  error_too_many_open_files       EQU    
					 4 
    1038 = 0005                      C  error_access_denied             EQU    
					 5 
    1039 = 0006                      C  error_invalid_handle            EQU    
					 6 
    1040 = 0007                      C  error_arena_trashed             EQU    
					 7 
    1041 = 0008                      C  error_not_enough_memory         EQU    
					 8 
    1042 = 0009                      C  error_invalid_block             EQU    
					 9 
    1043 = 000A                      C  error_bad_environment           EQU    
					 10 
    1044 = 000B                      C  error_bad_format                EQU    
					 11 
    1045 = 000C                      C  error_invalid_access            EQU    
					 12 
    1046 = 000D                      C  error_invalid_data              EQU    
					 13 
    1047                             C  ;**** unused                    EQU    
					 14 
    1048 = 000F                      C  error_invalid_drive             EQU    
					 15 
    1049 = 0010                      C  error_current_directory         EQU    
					 16 
    1050 = 0011                      C  error_not_same_device           EQU    
					 17 
    1051 = 0012                      C  error_no_more_files             EQU    
					 18 
    1052                             C   
    1053 =                           C  country_not_found               EQU    
					 error_file_not_found 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 07:53:02

CHKPROC - Procedures called from chkdsk                     Page     1-50
Xenix error codes                                           

    1054 =                           C  alloc_not_enough_memory         EQU    
					 error_not_enough_memory 
    1055 =                           C  alloc_arena_trashed             EQU    
					 error_arena_trashed 
    1056                             C   
    1057 =                           C  close_invalid_handle            EQU    
					 error_invalid_handle 
    1058 =                           C  close_invalid_function          EQU    
					 error_invalid_function 
    1059                             C   
    1060 =                           C  chdir_path_not_found            EQU    
					 error_path_not_found 
    1061                             C   
    1062 =                           C  chmod_path_not_found            EQU    
					 error_path_not_found 
    1063 =                           C  chmod_access_denied             EQU    
					 error_access_denied 
    1064 =                           C  chmod_invalid_function          EQU    
					 error_invalid_function 
    1065                             C   
    1066 =                           C  creat_access_denied             EQU    
					 error_access_denied 
    1067 =                           C  creat_path_not_found            EQU    
					 error_path_not_found 
    1068 =                           C  creat_too_many_open_files       EQU    
					 error_too_many_open_files 
    1069                             C   
    1070 =                           C  curdir_invalid_drive            EQU    
					 error_invalid_drive 
    1071                             C   
    1072 =                           C  dealloc_invalid_block           EQU    
					 error_invalid_block 
    1073 =                           C  dealloc_arena_trashed           EQU    
					 error_arena_trashed 
    1074                             C   
    1075 =                           C  dup_invalid_handle              EQU    
					 error_invalid_handle 
    1076 =                           C  dup_too_many_open_files         EQU    
					 error_too_many_open_files 
    1077                             C   
    1078 =                           C  dup2_invalid_handle             EQU    
					 error_invalid_handle 
    1079                             C   
    1080 =                           C  exec_invalid_function           EQU    
					 error_invalid_function 
    1081 =                           C  exec_bad_environment            EQU    
					 error_bad_environment 
    1082 =                           C  exec_bad_format                 EQU    
					 error_bad_format 
    1083 =                           C  exec_not_enough_memory          EQU    
					 error_not_enough_memory 
    1084 =                           C  exec_file_not_found             EQU    
					 error_file_not_found 
    1085                             C   
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 07:53:02

CHKPROC - Procedures called from chkdsk                     Page     1-51
Xenix error codes                                           

    1086 =                           C  filetimes_invalid_function      EQU    
					 error_invalid_function 
    1087 =                           C  filetimes_invalid_handle        EQU    
					 error_invalid_handle 
    1088                             C   
    1089 =                           C  findfirst_file_not_found        EQU    
					 error_file_not_found 
    1090 =                           C  findfirst_no_more_files         EQU    
					 error_no_more_files 
    1091 =                           C  findnext_no_more_files          EQU    
					 error_no_more_files 
    1092                             C   
    1093 =                           C  international_invalid_function  EQU    
					 error_invalid_function 
    1094                             C   
    1095 =                           C  ioctl_invalid_handle            EQU    
					 error_invalid_handle 
    1096 =                           C  ioctl_invalid_function          EQU    
					 error_invalid_function 
    1097 =                           C  ioctl_invalid_data              EQU    
					 error_invalid_data 
    1098                             C   
    1099 =                           C  lseek_invalid_handle            EQU    
					 error_invalid_handle 
    1100 =                           C  lseek_invalid_function          EQU    
					 error_invalid_function 
    1101                             C   
    1102 =                           C  mkdir_path_not_found            EQU    
					 error_path_not_found 
    1103 =                           C  mkdir_access_denied             EQU    
					 error_access_denied 
    1104                             C   
    1105 =                           C  open_invalid_access             EQU    
					 error_invalid_access 
    1106 =                           C  open_file_not_found             EQU    
					 error_file_not_found 
    1107 =                           C  open_access_denied              EQU    
					 error_access_denied 
    1108 =                           C  open_too_many_open_files        EQU    
					 error_too_many_open_files 
    1109                             C   
    1110 =                           C  read_invalid_handle             EQU    
					 error_invalid_handle 
    1111 =                           C  read_access_denied              EQU    
					 error_access_denied 
    1112                             C   
    1113 =                           C  rename_file_not_found           EQU    
					 error_file_not_found 
    1114 =                           C  rename_not_same_device          EQU    
					 error_not_same_device 
    1115 =                           C  rename_access_denied            EQU    
					 error_access_denied 
    1116                             C   
    1117 =                           C  rmdir_path_not_found            EQU    
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 07:53:02

CHKPROC - Procedures called from chkdsk                     Page     1-52
Xenix error codes                                           

					 error_path_not_found 
    1118 =                           C  rmdir_access_denied             EQU    
					 error_access_denied 
    1119 =                           C  rmdir_current_directory         EQU    
					 error_current_directory 
    1120                             C   
    1121 =                           C  setblock_invalid_block          EQU    
					 error_invalid_block 
    1122 =                           C  setblock_arena_trashed          EQU    
					 error_arena_trashed 
    1123 =                           C  setblock_not_enough_memory      EQU    
					 error_not_enough_memory 
    1124 =                           C  setblock_invalid_function       EQU    
					 error_invalid_function 
    1125                             C   
    1126 =                           C  unlink_file_not_found           EQU    
					 error_file_not_found 
    1127 =                           C  unlink_access_denied            EQU    
					 error_access_denied 
    1128                             C   
    1129 =                           C  write_invalid_handle            EQU    
					 error_invalid_handle 
    1130 =                           C  write_access_denied             EQU    
					 error_access_denied 
    1131                             C   
    1132                             C  BREAK <system call definitions> 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 07:53:02

CHKPROC - Procedures called from chkdsk                     Page     1-53
system call definitions                                     

    1133                             C   
    1134 = 0000                      C  Abort                           EQU 0  
					 ;  0      0 
    1135 = 0001                      C  Std_Con_Input                   EQU 1  
					 ;  1      1 
    1136 = 0002                      C  Std_Con_Output                  EQU 2  
					 ;  2      2 
    1137 = 0003                      C  Std_Aux_Input                   EQU 3  
					 ;  3      3 
    1138 = 0004                      C  Std_Aux_Output                  EQU 4  
					 ;  4      4 
    1139 = 0005                      C  Std_Printer_Output              EQU 5  
					 ;  5      5 
    1140 = 0006                      C  Raw_Con_IO                      EQU 6  
					 ;  6      6 
    1141 = 0007                      C  Raw_Con_Input                   EQU 7  
					 ;  7      7 
    1142 = 0008                      C  Std_Con_Input_No_Echo           EQU 8  
					 ;  8      8 
    1143 = 0009                      C  Std_Con_String_Output           EQU 9  
					 ;  9      9 
    1144 = 000A                      C  Std_Con_String_Input            EQU 10 
					 ; 10      A 
    1145 = 000B                      C  Std_Con_Input_Status            EQU 11 
					 ; 11      B 
    1146 = 000C                      C  Std_Con_Input_Flush             EQU 12 
					 ; 12      C 
    1147 = 000D                      C  Disk_Reset                      EQU 13 
					 ; 13      D 
    1148 = 000E                      C  Set_Default_Drive               EQU 14 
					 ; 14      E 
    1149 = 000F                      C  FCB_Open                        EQU 15 
					 ; 15      F 
    1150 = 0010                      C  FCB_Close                       EQU 16 
					 ; 16     10 
    1151 = 0011                      C  Dir_Search_First                EQU 17 
					 ; 17     11 
    1152 = 0012                      C  Dir_Search_Next                 EQU 18 
					 ; 18     12 
    1153 = 0013                      C  FCB_Delete                      EQU 19 
					 ; 19     13 
    1154 = 0014                      C  FCB_Seq_Read                    EQU 20 
					 ; 20     14 
    1155 = 0015                      C  FCB_Seq_Write                   EQU 21 
					 ; 21     15 
    1156 = 0016                      C  FCB_Create                      EQU 22 
					 ; 22     16 
    1157 = 0017                      C  FCB_Rename                      EQU 23 
					 ; 23     17 
    1158 = 0019                      C  Get_Default_Drive               EQU 25 
					 ; 25     19 
    1159 = 001A                      C  Set_DMA                         EQU 26 
					 ; 26     1A 
    1160                             C  ;----+----+----+----+----+----+----+---
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 07:53:02

CHKPROC - Procedures called from chkdsk                     Page     1-54
system call definitions                                     

					-+----+----+----+----+----+----+----; 
    1161                             C  ;            C  A  V  E  A  T     P  R 
					 O  G  R  A  M  M  E  R             ; 
    1162                             C  ;                                      
					                                    ; 
    1163 = 001F                      C  Get_Default_DPB                 EQU 31 
					 ; 31     1F 
    1164                             C  ;                                      
					                                    ; 
    1165                             C  ;            C  A  V  E  A  T     P  R 
					 O  G  R  A  M  M  E  R             ; 
    1166                             C  ;----+----+----+----+----+----+----+---
					-+----+----+----+----+----+----+----; 
    1167 = 0021                      C  FCB_Random_Read                 EQU 33 
					 ; 33     21 
    1168 = 0022                      C  FCB_Random_Write                EQU 34 
					 ; 34     22 
    1169 = 0023                      C  Get_FCB_File_Length             EQU 35 
					 ; 35     23 
    1170 = 0024                      C  Get_FCB_Position                EQU 36 
					 ; 36     24 
    1171 = 0025                      C  Set_Interrupt_Vector            EQU 37 
					 ; 37     25 
    1172 = 0026                      C  Create_Process_Data_Block       EQU 38 
					 ; 38     26 
    1173 = 0027                      C  FCB_Random_Read_Block           EQU 39 
					 ; 39     27 
    1174 = 0028                      C  FCB_Random_Write_Block          EQU 40 
					 ; 40     28 
    1175 = 0029                      C  Parse_File_Descriptor           EQU 41 
					 ; 41     29 
    1176 = 002A                      C  Get_Date                        EQU 42 
					 ; 42     2A 
    1177 = 002B                      C  Set_Date                        EQU 43 
					 ; 43     2B 
    1178 = 002C                      C  Get_Time                        EQU 44 
					 ; 44     2C 
    1179 = 002D                      C  Set_Time                        EQU 45 
					 ; 45     2D 
    1180 = 002E                      C  Set_Verify_On_Write             EQU 46 
					 ; 46     2E 
    1181                             C  ; Extended functionality group 
    1182 = 002F                      C  Get_DMA                         EQU 47 
					 ; 47     2F 
    1183 = 0030                      C  Get_Version                     EQU 48 
					 ; 48     30 
    1184 = 0031                      C  Keep_Process                    EQU 49 
					 ; 49     31 
    1185                             C  ;----+----+----+----+----+----+----+---
					-+----+----+----+----+----+----+----; 
    1186                             C  ;            C  A  V  E  A  T     P  R 
					 O  G  R  A  M  M  E  R             ; 
    1187                             C  ;                                      
					                                    ; 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 07:53:02

CHKPROC - Procedures called from chkdsk                     Page     1-55
system call definitions                                     

    1188 = 0032                      C  Get_DPB                         EQU 50 
					 ; 50     32 
    1189                             C  ;                                      
					                                    ; 
    1190                             C  ;            C  A  V  E  A  T     P  R 
					 O  G  R  A  M  M  E  R             ; 
    1191                             C  ;----+----+----+----+----+----+----+---
					-+----+----+----+----+----+----+----; 
    1192 = 0033                      C  Set_CTRL_C_Trapping             EQU 51 
					 ; 51     33 
    1193 = 0034                      C  Get_InDOS_Flag                  EQU 52 
					 ; 52     34 
    1194 = 0035                      C  Get_Interrupt_Vector            EQU 53 
					 ; 53     35 
    1195 = 0036                      C  Get_Drive_Freespace             EQU 54 
					 ; 54     36 
    1196 = 0037                      C  Char_Oper                       EQU 55 
					 ; 55     37 
    1197 = 0038                      C  International                   EQU 56 
					 ; 56     38 
    1198                             C  ;   Directory Group 
    1199 = 0039                      C  MKDir                           EQU 57 
					 ; 57     39 
    1200 = 003A                      C  RMDir                           EQU 58 
					 ; 58     3A 
    1201 = 003B                      C  CHDir                           EQU 59 
					 ; 59     3B 
    1202                             C  ;   File Group 
    1203 = 003C                      C  Creat                           EQU 60 
					 ; 60     3C 
    1204 = 003D                      C  Open                            EQU 61 
					 ; 61     3D 
    1205 = 003E                      C  Close                           EQU 62 
					 ; 62     3E 
    1206 = 003F                      C  Read                            EQU 63 
					 ; 63     3F 
    1207 = 0040                      C  Write                           EQU 64 
					 ; 64     40 
    1208 = 0041                      C  Unlink                          EQU 65 
					 ; 65     41 
    1209 = 0042                      C  LSeek                           EQU 66 
					 ; 66     42 
    1210 = 0043                      C  CHMod                           EQU 67 
					 ; 67     43 
    1211 = 0044                      C  IOCtl                           EQU 68 
					 ; 68     44 
    1212 = 0045                      C  XDup                            EQU 69 
					 ; 69     45 
    1213 = 0046                      C  XDup2                           EQU 70 
					 ; 70     46 
    1214 = 0047                      C  Current_Dir                     EQU 71 
					 ; 71     47 
    1215                             C  ;    Memory Group 
    1216 = 0048                      C  Alloc                           EQU 72 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 07:53:02

CHKPROC - Procedures called from chkdsk                     Page     1-56
system call definitions                                     

					 ; 72     48 
    1217 = 0049                      C  Dealloc                         EQU 73 
					 ; 73     49 
    1218 = 004A                      C  Setblock                        EQU 74 
					 ; 74     4A 
    1219                             C  ;    Process Group 
    1220 = 004B                      C  Exec                            EQU 75 
					 ; 75     4B 
    1221 = 004C                      C  Exit                            EQU 76 
					 ; 76     4C 
    1222 = 004D                      C  Wait                            EQU 77 
					 ; 77     4D 
    1223 = 004E                      C  Find_First                      EQU 78 
					 ; 78     4E 
    1224                             C  ;   Special Group 
    1225 = 004F                      C  Find_Next                       EQU 79 
					 ; 79     4F 
    1226                             C  ; SPECIAL SYSTEM GROUP 
    1227                             C  ;----+----+----+----+----+----+----+---
					-+----+----+----+----+----+----+----; 
    1228                             C  ;            C  A  V  E  A  T     P  R 
					 O  G  R  A  M  M  E  R             ; 
    1229                             C  ;                                      
					                                    ; 
    1230 = 0050                      C  Set_Current_PDB                 EQU 80 
					 ; 80     50 
    1231 = 0051                      C  Get_Current_PDB                 EQU 81 
					 ; 81     51 
    1232 = 0052                      C  Get_In_Vars                     EQU 82 
					 ; 82     52 
    1233 = 0053                      C  SetDPB                          EQU 83 
					 ; 83     53 
    1234                             C  ;                                      
					                                    ; 
    1235                             C  ;            C  A  V  E  A  T     P  R 
					 O  G  R  A  M  M  E  R             ; 
    1236                             C  ;----+----+----+----+----+----+----+---
					-+----+----+----+----+----+----+----; 
    1237 = 0054                      C  Get_Verify_On_Write             EQU 84 
					 ; 84     54 
    1238                             C  ;----+----+----+----+----+----+----+---
					-+----+----+----+----+----+----+----; 
    1239                             C  ;            C  A  V  E  A  T     P  R 
					 O  G  R  A  M  M  E  R             ; 
    1240                             C  ;                                      
					                                    ; 
    1241 = 0055                      C  Dup_PDB                         EQU 85 
					 ; 85     55 
    1242                             C  ;                                      
					                                    ; 
    1243                             C  ;            C  A  V  E  A  T     P  R 
					 O  G  R  A  M  M  E  R             ; 
    1244                             C  ;----+----+----+----+----+----+----+---
					-+----+----+----+----+----+----+----; 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 07:53:02

CHKPROC - Procedures called from chkdsk                     Page     1-57
system call definitions                                     

    1245 = 0056                      C  Rename                          EQU 86 
					 ; 86     56 
    1246 = 0057                      C  File_Times                      EQU 87 
					 ; 87     57 
    1247 = 0058                      C  AllocOper                       EQU 88 
					 ; 88     58 
    1248                             C  ; Network extention system calls 
    1249 = 0059                      C  GetExtendedError                EQU 89 
					 ; 89     59 
    1250 = 005A                      C  CreateTempFile                  EQU 90 
					 ; 90     5A 
    1251 = 005B                      C  CreateNewFile                   EQU 91 
					 ; 91     5B 
    1252 = 005C                      C  LockOper                        EQU 92 
					 ; 92     5C Lock and Unlock 
    1253 = 005D                      C  ServerCall                      EQU 93 
					 ; 93     5D CommitAll, ServerDOSCall, 
    1254                             C                                         
					 ;           CloseByName, CloseUser, 
    1255                             C                                         
					 ;           CloseUserProcess, 
    1256                             C                                         
					 ;           GetOpenFileList 
    1257 = 005E                      C  UserIDOper                      EQU 94 
					 ; 94     5E Get and Set 
    1258 = 005F                      C  AssignOper                      EQU 95 
					 ; 95     5F On, Off, Get, Set, Cancel 
    1259                             C   
    1260 = 00F8                      C  Set_Oem_Handler                 EQU 248
					 ; 248    F8 
    1261 = 00F9                      C  OEM_C1                          EQU 249
					 ; 249    F9 
    1262 = 00FA                      C  OEM_C2                          EQU 250
					 ; 250    FA 
    1263 = 00FB                      C  OEM_C3                          EQU 251
					 ; 251    FB 
    1264 = 00FC                      C  OEM_C4                          EQU 252
					 ; 252    FC 
    1265 = 00FD                      C  OEM_C5                          EQU 253
					 ; 253    FD 
    1266 = 00FE                      C  OEM_C6                          EQU 254
					 ; 254    FE 
    1267 = 00FF                      C  OEM_C7                          EQU 255
					 ; 255    FF 
    1268                             C  SUBTTL 
    1269                                 
    1270                                 
    1271                                SUBTTL  Segments used in load order 
    1272                                 
    1273 0000                           CODE    SEGMENT PUBLIC 
    1274 0000                           CODE    ENDS 
    1275                                 
    1276 0000                           CONST   SEGMENT PUBLIC BYTE 
    1277                                 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 07:53:02

CHKPROC - Procedures called from chkdsk                     Page     1-58
Segments used in load order                                 

    1278                                        EXTRN   CLUSBAD:BYTE,BADATT:BYT
					E,BADSIZM:BYTE 
    1279                                        EXTRN   DIRECMES:BYTE,CDDDMES:B
					YTE,NDOTMES:BYTE 
    1280                                        EXTRN   BADTARG1:BYTE,BADTARG2:
					BYTE,FATALMES:BYTE 
    1281                                        EXTRN   STACKMES:BYTE,BADDPBDIR
					:BYTE,CREATMES:BYTE 
    1282                                        EXTRN   FREEBYMES_PRE:BYTE,FREE
					BYMESF_PRE:BYTE 
    1283                                        EXTRN   FREEBYMES_POST:BYTE,FRE
					EBYMESF_POST:BYTE 
    1284                                        EXTRN   NULNZ:BYTE,NULDMES:BYTE
					,BADCLUS:BYTE 
    1285                                        EXTRN   NORECDDOT:BYTE,NORECDOT
					:BYTE,DOTMES:BYTE 
    1286                                        EXTRN   BADWRITE_PRE:BYTE,BADCH
					AIN:BYTE,CROSSMES_PRE:BYTE 
    1287                                        EXTRN   BADWRITE_POST:BYTE,CROS
					SMES_POST:BYTE,INDENT:BYTE 
    1288                                        EXTRN   PTRANDIR:BYTE,PTRANDIR2
					:BYTE,FREEMES:BYTE,FIXMES:BYTE 
    1289                                 
    1290                                        EXTRN   NOISY:BYTE,DOFIX:BYTE,D
					IRBUF:WORD,DOTENT:BYTE,FIXMFLG:BYTE 
    1291                                        EXTRN   HAVFIX:BYTE,SECONDPASS:
					BYTE,LCLUS:WORD,DIRTYFAT:BYTE 
    1292                                        EXTRN   NUL:BYTE,ALLFILE:BYTE,P
					ARSTR:BYTE,ERRSUB:WORD,USERDIR:BYTE 
    1293                                        EXTRN   HIDCNT:WORD,HIDSIZ:WORD
					,FILCNT:WORD,FILSIZ:WORD,DIRCHAR:BYTE 
    1294                                        EXTRN   DIRCNT:WORD,DIRSIZ:WORD
					,FRAGMENT:BYTE,HECODE:BYTE 
    1295                                        EXTRN   BADSIZ:WORD,ORPHSIZ:WOR
					D,DDOTENT:BYTE,CROSSCNT:WORD 
    1296                                        EXTRN   ORPHCNT:WORD,ORPHFCB:BY
					TE,ORPHEXT:BYTE,ALLDRV:BYTE,DIRCHAR:BYT
					E 
    1297                                 
    1298 0000                           CONST   ENDS 
    1299                                 
    1300 0000                           DATA    SEGMENT PUBLIC WORD 
    1301                                 
    1302                                        EXTRN   THISDPB:DWORD,HARDCH:DW
					ORD,CONTCH:DWORD,USERDEV:BYTE 
    1303                                        EXTRN   CSIZE:BYTE,SSIZE:WORD,D
					SIZE:WORD,MCLUS:WORD,NAMBUF:BYTE 
    1304                                        EXTRN   DOTSNOGOOD:BYTE,ZEROTRU
					NC:BYTE,ISCROSS:BYTE,SRFCBPT:WORD 
    1305                                        EXTRN   FATMAP:WORD,SECBUF:WORD
					,ERRCNT:BYTE,STACKLIM:WORD,FAT:WORD 
    1306                                 
    1307 0000                           DATA    ENDS 
    1308                                 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 07:53:02

CHKPROC - Procedures called from chkdsk                     Page     1-59
Segments used in load order                                 

    1309                                DG      GROUP   CODE,CONST,DATA 
    1310                                 
    1311                                SUBTTL  Initialized Data 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 07:53:02

CHKPROC - Procedures called from chkdsk                     Page     1-60
Initialized Data                                            

    1312                                PAGE 
    1313                                 
    1314                                 
    1315 0000                           CODE    SEGMENT PUBLIC 
    1316                                ASSUME  CS:DG,DS:DG,ES:DG,SS:DG 
    1317                                 
    1318                                        PUBLIC  INT_23,INT_24,FINDCHAIN
					,DONE,AMDONE,RDONE 
    1319                                        PUBLIC  FATAL,DIRPROC,CHKMAP,CH
					KCROSS,UNPACK 
    1320                                        PUBLIC  PRINTTHISEL2,CHECKERR,P
					RINTCURRDIRERR 
    1321                                 
    1322                                        EXTRN   EPRINT:NEAR,DOCRLF:NEAR
					,PRINT:NEAR 
    1323                                        EXTRN   PROMPTYN:NEAR,DOINT26:N
					EAR,SUBERRP:NEAR 
    1324                                        EXTRN   DOTCOMBMES:NEAR,DISP16B
					ITS:NEAR 
    1325                                        EXTRN   CHAINREPORT:NEAR,DISPCL
					US:NEAR 
    1326                                        EXTRN   PRTCHR:NEAR,WDSKERR:NEA
					R,CHECKFILES:NEAR 
    1327                                        EXTRN   FCB_TO_ASCZ:NEAR,FIGREC
					:NEAR,RDSKERR:NEAR 
    1328                                 
    1329 0000                           CHKPROC: 
    1330                                 
    1331                                SUBTTL  DIRPROC -- Recursive directory 
					processing 
    1332                                 
    1333                                ; YOU ARE ADVISED NOT TO COPY THE FOLLO
					WING METHOD!!! 
    1334                                 
    1335 0000                           DOTDOTHARDWAY: 
    1336 0000  C5 3E 0000 E                     LDS     DI,[THISDPB] 
    1337                                ASSUME  DS:NOTHING 
    1338 0004  C7 45 1C FFFF                    MOV     [DI.dpb_current_dir],-1
					       ;Invalidate path 
    1339 0009  8B F7                            MOV     SI,DI 
    1340 000B  83 C6 1E                         ADD     SI,dpb_dir_text 
    1341 000E  8B CE                            MOV     CX,SI 
    1342 0010                           FINDEND: 
    1343 0010  AC                               LODSB                          
					 ;Scan to end of current path 
    1344 0011  0A C0                            OR      AL,AL 
    1345 0013  75 FB                            JNZ     FINDEND 
    1346 0015  4E                               DEC     SI                     
					 ;Point at the NUL 
    1347 0016                           DELLOOP:                               
					 ;Delete last element 
    1348 0016  3B F1                            CMP     SI,CX 
    1349 0018  74 1A                            JZ      SETROOT 
    1350 001A  80 3C 2F                         CMP     BYTE PTR [SI],"/" 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 07:53:02

CHKPROC - Procedures called from chkdsk                     Page     1-61
DIRPROC -- Recursive directory processing                   

    1351 001D  74 08                            JZ      SETTERM 
    1352 001F  80 3C 5C                         CMP     BYTE PTR [SI],"\" 
    1353 0022  74 03                            JZ      SETTERM 
    1354 0024  4E                               DEC     SI 
    1355 0025  EB EF                            JMP     SHORT DELLOOP 
    1356                                 
    1357 0027                           SETTERM: 
    1358 0027  C6 04 00                         MOV     BYTE PTR [SI],0 
    1359 002A                           SETCURR: 
    1360 002A  0E                               PUSH    CS 
    1361 002B  1F                               POP     DS 
    1362                                ASSUME  DS:DG 
    1363 002C  BA 0000 E                        MOV     DX,OFFSET DG:DOTMES 
    1364 002F  B4 3B                            MOV     AH,CHDIR               
					 ;Chdir to altered path 
    1365 0031  CD 21                            INT     21H 
    1366 0033  C3                               RET 
    1367                                 
    1368 0034                           SETROOT: 
    1369                                ASSUME  DS:NOTHING 
    1370 0034  C7 45 1C 0000                    MOV     [DI.dpb_current_dir],0 
					       ;Set Path to Root 
    1371 0039  EB EF                            JMP     SHORT SETCURR          
					 ;The CHDIR will fail, but who cares 
    1372                                 
    1373                                 
    1374                                ;Structures used by DIRPROC 
    1375                                 
    1376                                SRCHFCB STRUC 
    1377 0000  002C[                            DB      44 DUP (?) 
    1378            ??                  
    1379                         ]      
    1380                                
    1381 002C                           SRCHFCB ENDS 
    1382 = 002C                         SFCBSIZ EQU     SIZE SRCHFCB 
    1383 = 0017                         THISENT EQU     17H                    
					 ;Relative entry number of current entr
					y 
    1384                                 
    1385                                DIRENT  STRUC 
    1386 0000  0007[                            DB      7 DUP (?)              
					 ;Ext FCB junk 
    1387            ??                  
    1388                         ]      
    1389                                
    1390 0007  ??                               DB      ?                      
					 ;Drive 
    1391 0008  000B[                    DIRNAM  DB      11 DUP (?) 
    1392            ??                  
    1393                         ]      
    1394                                
    1395 0013  ??                       DIRATT  DB      ? 
    1396 0014  000A[                            DB      10 DUP (?) 
    1397            ??                  
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 07:53:02

CHKPROC - Procedures called from chkdsk                     Page     1-62
DIRPROC -- Recursive directory processing                   

    1398                         ]      
    1399                                
    1400 001E  ????                     DIRTIM  DW      ? 
    1401 0020  ????                     DIRDAT  DW      ? 
    1402 0022  ????                     DIRCLUS DW      ? 
    1403 0024  ????????                 DIRESIZ DD      ? 
    1404 0028                           DIRENT  ENDS 
    1405 = 0028                         ENTSIZ  EQU     SIZE DIRENT 
    1406                                 
    1407                                ;Attribute bits 
    1408                                 
    1409 = 0001                         RDONLY  EQU     1 
    1410 = 0002                         HIDDN   EQU     2 
    1411 = 0004                         SYSTM   EQU     4 
    1412 = 0008                         VOLIDA  EQU     8 
    1413 = 0010                         ISDIR   EQU     10H 
    1414                                 
    1415                                ASSUME  DS:DG 
    1416                                 
    1417 003B                           NODOT:                                 
					 ;No . 
    1418 003B  50                               PUSH    AX                     
					 ;Return from SRCH 
    1419 003C  80 3E 0000 E 00                  CMP     [NOISY],0 
    1420 0041  75 05                            JNZ     DOEXTMES1 
    1421 0043  E8 0000 E                        CALL    SUBERRP 
    1422 0046  EB 0C                            JMP     SHORT MESD1 
    1423 0048                           DOEXTMES1: 
    1424 0048  BE 0000 E                        MOV     SI,OFFSET DG:DOTMES 
    1425 004B  E8 08DC R                        CALL    PRINTCURRDIRERR 
    1426 004E  BA 0000 E                        MOV     DX,OFFSET DG:NDOTMES 
    1427 0051  E8 0000 E                        CALL    EPRINT 
    1428 0054                           MESD1: 
    1429 0054  33 C0                            XOR     AX,AX 
    1430 0056  53                               PUSH    BX 
    1431 0057  55                               PUSH    BP 
    1432 0058  E8 0842 R                        CALL    GETENT 
    1433 005B  5D                               POP     BP 
    1434 005C  55                               PUSH    BP 
    1435 005D  80 3D E5                         CMP     BYTE PTR [DI],0E5H     
					 ;Have place to put .? 
    1436 0060  75 30                            JNZ     CANTREC                
					 ;Nope 
    1437 0062  BE 0000 E                        MOV     SI,OFFSET DG:DOTENT 
    1438 0065  B9 000B                          MOV     CX,11 
    1439 0068  F3/ A4                           REP     MOVSB                  
					 ;Name 
    1440 006A  50                               PUSH    AX 
    1441 006B  B0 10                            MOV     AL,ISDIR 
    1442 006D  AA                               STOSB                          
					 ;Attribute 
    1443 006E  83 C7 0A                         ADD     DI,10 
    1444 0071  33 C0                            XOR     AX,AX 
    1445 0073  AB                               STOSW                          
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 07:53:02

CHKPROC - Procedures called from chkdsk                     Page     1-63
DIRPROC -- Recursive directory processing                   

					 ;Date = 0 
    1446 0074  AB                               STOSW                          
					 ;Time = 0 
    1447 0075  8B 46 06                         MOV     AX,[BP+6] 
    1448 0078  AB                               STOSW                          
					 ;Alloc # 
    1449 0079  33 C0                            XOR     AX,AX 
    1450 007B  AB                               STOSW 
    1451 007C  AB                               STOSW                          
					 ;Size 
    1452 007D  58                               POP     AX 
    1453 007E  C6 06 0000 E 01                  MOV     [HAVFIX],1             
					 ;Have a fix 
    1454 0083  80 3E 0000 E 00                  CMP     [DOFIX],0 
    1455 0088  74 19                            JZ      DOTGOON                
					 ;No fix if not F 
    1456 008A  B9 0001                          MOV     CX,1 
    1457 008D  E8 0000 E                        CALL    DOINT26 
    1458 0090  EB 11                            JMP     SHORT DOTGOON 
    1459                                 
    1460 0092                           CANTREC: 
    1461 0092  FE 06 0000 E                     INC     [DOTSNOGOOD] 
    1462 0096  80 3E 0000 E 00                  CMP     [NOISY],0 
    1463 009B  74 06                            JZ      DOTGOON 
    1464 009D  BA 0000 E                        MOV     DX,OFFSET DG:NORECDOT 
    1465 00A0  E8 0000 E                        CALL    EPRINT 
    1466 00A3                           DOTGOON: 
    1467 00A3  5D                               POP     BP 
    1468 00A4  5B                               POP     BX 
    1469 00A5  58                               POP     AX 
    1470 00A6  BE 0000 E                        MOV     SI,OFFSET DG:DIRBUF 
    1471 00A9  E9 0214 R                        JMP     CHKDOTDOT              
					 ;Go look for .. 
    1472                                 
    1473 00AC                           NODDOT:                                
					 ;No .. 
    1474 00AC  50                               PUSH    AX                     
					 ;Return from SRCH 
    1475 00AD  80 3E 0000 E 00                  CMP     [NOISY],0 
    1476 00B2  75 05                            JNZ     DOEXTMES2 
    1477 00B4  E8 0000 E                        CALL    SUBERRP 
    1478 00B7  EB 0C                            JMP     SHORT MESD2 
    1479 00B9                           DOEXTMES2: 
    1480 00B9  BE 0000 E                        MOV     SI,OFFSET DG:PARSTR 
    1481 00BC  E8 08DC R                        CALL    PRINTCURRDIRERR 
    1482 00BF  BA 0000 E                        MOV     DX,OFFSET DG:NDOTMES 
    1483 00C2  E8 0000 E                        CALL    EPRINT 
    1484 00C5                           MESD2: 
    1485 00C5  B8 0001                          MOV     AX,1 
    1486 00C8  53                               PUSH    BX 
    1487 00C9  55                               PUSH    BP 
    1488 00CA  E8 0842 R                        CALL    GETENT 
    1489 00CD  5D                               POP     BP 
    1490 00CE  55                               PUSH    BP 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 07:53:02

CHKPROC - Procedures called from chkdsk                     Page     1-64
DIRPROC -- Recursive directory processing                   

    1491 00CF  80 3D E5                         CMP     BYTE PTR [DI],0E5H     
					 ;Place to put it? 
    1492 00D2  75 37                            JNZ     CANTREC2               
					 ;Nope 
    1493 00D4  BE 0000 E                        MOV     SI,OFFSET DG:DDOTENT 
    1494 00D7  B9 000B                          MOV     CX,11 
    1495 00DA  F3/ A4                           REP     MOVSB                  
					 ;Name 
    1496 00DC  50                               PUSH    AX 
    1497 00DD  B0 10                            MOV     AL,ISDIR 
    1498 00DF  AA                               STOSB                          
					 ;Attribute 
    1499 00E0  83 C7 0A                         ADD     DI,10 
    1500 00E3  33 C0                            XOR     AX,AX 
    1501 00E5  AB                               STOSW                          
					 ;Date 
    1502 00E6  AB                               STOSW                          
					 ;Time 
    1503 00E7  8B 46 04                         MOV     AX,[BP+4] 
    1504 00EA  AB                               STOSW                          
					 ;Alloc # 
    1505 00EB  33 C0                            XOR     AX,AX 
    1506 00ED  AB                               STOSW 
    1507 00EE  AB                               STOSW                          
					 ;Size 
    1508 00EF  58                               POP     AX 
    1509 00F0  C6 06 0000 E 01                  MOV     [HAVFIX],1             
					 ;Got a fix 
    1510 00F5  80 3E 0000 E 00                  CMP     [DOFIX],0 
    1511 00FA  74 06                            JZ      NFIX                   
					 ;No fix if no F, carry clear 
    1512 00FC  B9 0001                          MOV     CX,1 
    1513 00FF  E8 0000 E                        CALL    DOINT26 
    1514 0102                           NFIX: 
    1515 0102  5D                               POP     BP 
    1516 0103  5B                               POP     BX 
    1517 0104  58                               POP     AX 
    1518 0105  BE 0000 E                        MOV     SI,OFFSET DG:DIRBUF 
    1519 0108  E9 028A R                        JMP     ROOTDIR                
					 ;Process files 
    1520                                 
    1521 010B                           CANTREC2: 
    1522 010B  5D                               POP     BP 
    1523 010C  5B                               POP     BX 
    1524 010D  58                               POP     AX 
    1525 010E  80 3E 0000 E 00                  CMP     [NOISY],0 
    1526 0113  74 21                            JZ      DOTSBAD 
    1527 0115  BA 0000 E                        MOV     DX,OFFSET DG:NORECDDOT 
    1528 0118  E8 0000 E                        CALL    EPRINT 
    1529 011B  EB 19 90                         JMP     DOTSBAD 
    1530                                 
    1531 011E                           NULLDIRERR: 
    1532 011E  80 3E 0000 E 00                  CMP     [NOISY],0 
    1533 0123  75 05                            JNZ     DOEXTMES3 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 07:53:02

CHKPROC - Procedures called from chkdsk                     Page     1-65
DIRPROC -- Recursive directory processing                   

    1534 0125  E8 0000 E                        CALL    SUBERRP 
    1535 0128  EB 0C                            JMP     SHORT DOTSBAD 
    1536 012A                           DOEXTMES3: 
    1537 012A  BE 0000 E                        MOV     SI,OFFSET DG:NUL 
    1538 012D  E8 08DC R                        CALL    PRINTCURRDIRERR 
    1539 0130  BA 0000 E                        MOV     DX,OFFSET DG:NULDMES 
    1540 0133  E8 0000 E                        CALL    EPRINT 
    1541 0136                           DOTSBAD:                               
					 ;Can't recover 
    1542 0136  BA 0000 E                        MOV     DX,OFFSET DG:BADTARG2 
    1543 0139  E8 0000 E                        CALL    EPRINT 
    1544 013C  E8 0000 R                        CALL    DOTDOTHARDWAY 
    1545 013F  FE 06 0000 E                     INC     [DOTSNOGOOD] 
    1546 0143  E9 02B3 R                        JMP     DIRDONE                
					 ;Terminate tree walk at this level 
    1547                                 
    1548 0146  E9 028A R                ROOTDIRJ: JMP   ROOTDIR 
    1549                                 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 07:53:02

CHKPROC - Procedures called from chkdsk                     Page     1-66
DIRPROC -- Recursive directory processing                   

    1550                                PAGE 
    1551 0149                           DIRPROC: 
    1552                                ;Recursive tree walker 
    1553                                ;dirproc(self,parent) 
    1554 0149  C6 06 0000 E 00                  MOV     [DOTSNOGOOD],0         
					 ;Init to dots OK 
    1555 014E  C7 06 0000 E 0000                MOV     [ERRSUB],0             
					 ;No subdir errors yet 
    1556 0154  55                               PUSH    BP                     
					 ;Save frame pointer 
    1557 0155  8B EC                            MOV     BP,SP 
    1558 0157  83 EC 2C                         SUB     SP,SFCBSIZ             
					 ;Only local var 
    1559 015A  3B 26 0000 E                     CMP     SP,[STACKLIM] 
    1560 015E  77 06                            JA      STACKISOK 
    1561 0160  BB 0000 E                        MOV     BX,OFFSET DG:STACKMES  
					 ;Out of stack 
    1562 0163  E9 094C R                        JMP     FATAL 
    1563 0166                           STACKISOK: 
    1564 0166  80 3E 0000 E 00                  CMP     [NOISY],0 
    1565 016B  74 16                            JZ      NOPRINT 
    1566 016D  80 3E 0000 E 00                  CMP     [SECONDPASS],0 
    1567 0172  75 0F                            JNZ     NOPRINT                
					 ;Don't do it again on second pass 
    1568 0174  BA 0000 E                        MOV     DX,OFFSET DG:DIRECMES  
					 ;Tell user where we are 
    1569 0177  E8 0000 E                        CALL    PRINT 
    1570 017A  BE 0000 E                        MOV     SI,OFFSET DG:NUL 
    1571 017D  E8 08FF R                        CALL    PRINTCURRDIR 
    1572 0180  E8 0000 E                        CALL    DOCRLF 
    1573 0183                           NOPRINT: 
    1574 0183  BE 0000 E                        MOV     SI,OFFSET DG:ALLFILE 
    1575 0186  8B FC                            MOV     DI,SP 
    1576 0188  57                               PUSH    DI 
    1577 0189  B9 002C                          MOV     CX,SFCBSIZ 
    1578 018C  F3/ A4                           REP     MOVSB           ;Initia
					lize search FCB 
    1579 018E  5A                               POP     DX 
    1580 018F  8B DA                            MOV     BX,DX           ;BX poi
					nts to SRCH FCB 
    1581 0191  B4 11                            MOV     AH,DIR_SEARCH_FIRST 
    1582 0193  CD 21                            INT     21H 
    1583 0195  83 7E 06 00                      CMP     WORD PTR [BP+6],0      
					 ;Am I the root 
    1584 0199  74 AB                            JZ      ROOTDIRJ               
					 ;Yes, no . or .. 
    1585 019B  0A C0                            OR      AL,AL 
    1586 019D  74 03                            JZ      NONULLDERR 
    1587 019F  E9 011E R                        JMP     NULLDIRERR             
					 ;Dir is empty! 
    1588 01A2                           NONULLDERR: 
    1589 01A2  BE 0008 E                        MOV     SI,OFFSET DG:DIRBUF + D
					IRNAM 
    1590 01A5  BF 0000 E                        MOV     DI,OFFSET DG:DOTENT 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 07:53:02

CHKPROC - Procedures called from chkdsk                     Page     1-67
DIRPROC -- Recursive directory processing                   

    1591 01A8  B9 000B                          MOV     CX,11 
    1592 01AB  F3/ A6                           REP     CMPSB 
    1593 01AD  74 03                            JZ      DOTOK                  
					 ;Got a . as first entry 
    1594 01AF  E9 003B R                        JMP     NODOT                  
					 ;No . 
    1595 01B2                           DOTOK: 
    1596 01B2  BE 0000 E                        MOV     SI,OFFSET DG:DIRBUF 
    1597 01B5  8A 44 13                         MOV     AL,[SI.DIRATT] 
    1598 01B8  A8 10                            TEST    AL,ISDIR 
    1599 01BA  75 12                            JNZ     DATTOK 
    1600 01BC  56                               PUSH    SI                     
					 ;. not a dir? 
    1601 01BD  BE 0000 E                        MOV     SI,OFFSET DG:DOTMES 
    1602 01C0  BA 0000 E                        MOV     DX,OFFSET DG:BADATT 
    1603 01C3  E8 0000 E                        CALL    DOTCOMBMES 
    1604 01C6  5E                               POP     SI 
    1605 01C7  80 4C 13 10                      OR      [SI.DIRATT],ISDIR 
    1606 01CB  E8 0818 R                        CALL    FIXENT                 
					 ;Fix it 
    1607 01CE                           DATTOK: 
    1608 01CE  8B 44 22                         MOV     AX,[SI.DIRCLUS] 
    1609 01D1  3B 46 06                         CMP     AX,[BP+6]              
					 ;. link = MYSELF? 
    1610 01D4  74 14                            JZ      DLINKOK 
    1611 01D6  56                               PUSH    SI                     
					 ;Link messed up 
    1612 01D7  BE 0000 E                        MOV     SI,OFFSET DG:DOTMES 
    1613 01DA  BA 0000 E                        MOV     DX,OFFSET DG:CLUSBAD 
    1614 01DD  E8 0000 E                        CALL    DOTCOMBMES 
    1615 01E0  5E                               POP     SI 
    1616 01E1  8B 46 06                         MOV     AX,[BP+6] 
    1617 01E4  89 44 22                         MOV     [SI.DIRCLUS],AX 
    1618 01E7  E8 0818 R                        CALL    FIXENT                 
					 ;Fix it 
    1619 01EA                           DLINKOK: 
    1620 01EA  8B 44 24                         MOV     AX,WORD PTR [SI.DIRESIZ
					] 
    1621 01ED  0B C0                            OR      AX,AX 
    1622 01EF  75 07                            JNZ     BADDSIZ 
    1623 01F1  8B 44 26                         MOV     AX,WORD PTR [SI.DIRESIZ
					+2] 
    1624 01F4  0B C0                            OR      AX,AX 
    1625 01F6  74 16                            JZ      DSIZOK 
    1626 01F8                           BADDSIZ:                               
					 ;Size should be zero 
    1627 01F8  56                               PUSH    SI 
    1628 01F9  BE 0000 E                        MOV     SI,OFFSET DG:DOTMES 
    1629 01FC  BA 0000 E                        MOV     DX,OFFSET DG:BADSIZM 
    1630 01FF  E8 0000 E                        CALL    DOTCOMBMES 
    1631 0202  5E                               POP     SI 
    1632 0203  33 C0                            XOR     AX,AX 
    1633 0205  89 44 24                         MOV     WORD PTR [SI.DIRESIZ],A
					X 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 07:53:02

CHKPROC - Procedures called from chkdsk                     Page     1-68
DIRPROC -- Recursive directory processing                   

    1634 0208  89 44 26                         MOV     WORD PTR [SI.DIRESIZ+2]
					,AX 
    1635 020B  E8 0818 R                        CALL    FIXENT                 
					 ;Fix it 
    1636 020E                           DSIZOK:                                
					 ;Get next (should be ..) 
    1637 020E  8B D3                            MOV     DX,BX 
    1638 0210  B4 12                            MOV     AH,DIR_SEARCH_NEXT 
    1639 0212  CD 21                            INT     21H 
    1640 0214                           CHKDOTDOT:                             
					 ;Come here after . failure 
    1641 0214  0A C0                            OR      AL,AL 
    1642 0216  74 03                            JZ      DOTDOTOK 
    1643 0218  E9 00AC R                NODDOTJ: JMP    NODDOT                 
					 ;No .. 
    1644 021B                           DOTDOTOK: 
    1645 021B  BE 0008 E                        MOV     SI,OFFSET DG:DIRBUF + D
					IRNAM 
    1646 021E  BF 0000 E                        MOV     DI,OFFSET DG:DDOTENT 
    1647 0221  B9 000B                          MOV     CX,11 
    1648 0224  F3/ A6                           REP     CMPSB 
    1649 0226  75 F0                            JNZ     NODDOTJ                
					 ;No .. 
    1650 0228  BE 0000 E                        MOV     SI,OFFSET DG:DIRBUF 
    1651 022B  8A 44 13                         MOV     AL,[SI.DIRATT] 
    1652 022E  A8 10                            TEST    AL,ISDIR 
    1653 0230  75 12                            JNZ     DDATTOK                
					 ;.. must be a dir 
    1654 0232  56                               PUSH    SI 
    1655 0233  BE 0000 E                        MOV     SI,OFFSET DG:PARSTR 
    1656 0236  BA 0000 E                        MOV     DX,OFFSET DG:BADATT 
    1657 0239  E8 0000 E                        CALL    DOTCOMBMES 
    1658 023C  5E                               POP     SI 
    1659 023D  80 4C 13 10                      OR      [SI.DIRATT],ISDIR 
    1660 0241  E8 0818 R                        CALL    FIXENT                 
					 ;Fix it 
    1661 0244                           DDATTOK: 
    1662 0244  56                               PUSH    SI 
    1663 0245  8B 44 22                         MOV     AX,[SI.DIRCLUS] 
    1664 0248  3B 46 04                         CMP     AX,[BP+4]              
					 ;.. link must be PARENT 
    1665 024B  74 13                            JZ      DDLINKOK 
    1666 024D  BE 0000 E                        MOV     SI,OFFSET DG:PARSTR 
    1667 0250  BA 0000 E                        MOV     DX,OFFSET DG:CLUSBAD 
    1668 0253  E8 0000 E                        CALL    DOTCOMBMES 
    1669 0256  5E                               POP     SI 
    1670 0257  8B 46 04                         MOV     AX,[BP+4] 
    1671 025A  89 44 22                         MOV     [SI.DIRCLUS],AX 
    1672 025D  E8 0818 R                        CALL    FIXENT                 
					 ;Fix it 
    1673 0260                           DDLINKOK: 
    1674 0260  8B 44 24                         MOV     AX,WORD PTR [SI.DIRESIZ
					] 
    1675 0263  0B C0                            OR      AX,AX 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 07:53:02

CHKPROC - Procedures called from chkdsk                     Page     1-69
DIRPROC -- Recursive directory processing                   

    1676 0265  75 07                            JNZ     BADDDSIZ 
    1677 0267  8B 44 26                         MOV     AX,WORD PTR [SI.DIRESIZ
					+2] 
    1678 026A  0B C0                            OR      AX,AX 
    1679 026C  74 16                            JZ      DDSIZOK 
    1680 026E                           BADDDSIZ:                              
					 ;.. size should be 0 
    1681 026E  56                               PUSH    SI 
    1682 026F  BE 0000 E                        MOV     SI,OFFSET DG:PARSTR 
    1683 0272  BA 0000 E                        MOV     DX,OFFSET DG:BADSIZM 
    1684 0275  E8 0000 E                        CALL    DOTCOMBMES 
    1685 0278  5E                               POP     SI 
    1686 0279  33 C0                            XOR     AX,AX 
    1687 027B  89 44 24                         MOV     WORD PTR [SI.DIRESIZ],A
					X 
    1688 027E  89 44 26                         MOV     WORD PTR [SI.DIRESIZ+2]
					,AX 
    1689 0281  E8 0818 R                        CALL    FIXENT                 
					 ;Fix it 
    1690 0284                           DDSIZOK: 
    1691 0284  8B D3                            MOV     DX,BX                  
					 ;Next entry 
    1692 0286  B4 12                            MOV     AH,DIR_SEARCH_NEXT 
    1693 0288  CD 21                            INT     21H 
    1694                                 
    1695 028A                           ROOTDIR:                               
					 ;Come here after .. failure also 
    1696 028A  0A C0                            OR      AL,AL 
    1697 028C  74 2B                            JZ      MOREDIR                
					 ;More to go 
    1698 028E  83 7E 06 00                      CMP     WORD PTR [BP+6],0      
					 ;Am I the root? 
    1699 0292  74 1F                            JZ      DIRDONE                
					 ;Yes, no chdir 
    1700 0294  BA 0000 E                        MOV     DX,OFFSET DG:PARSTR 
    1701 0297  B4 3B                            MOV     AH,CHDIR               
					 ;Chdir to parent (..) 
    1702 0299  CD 21                            INT     21H 
    1703 029B  73 16                            JNC     DIRDONE                
					 ;Worked 
    1704 029D  80 3E 0000 E 00                  CMP     [NOISY],0 
    1705 02A2  74 0C                            JZ      DODDH 
    1706 02A4  BE 0000 E                        MOV     SI,OFFSET DG:NUL 
    1707 02A7  E8 08DC R                        CALL    PRINTCURRDIRERR 
    1708 02AA  BA 0000 E                        MOV     DX,OFFSET DG:CDDDMES 
    1709 02AD  E8 0000 E                        CALL    EPRINT 
    1710 02B0                           DODDH: 
    1711 02B0  E8 0000 R                        CALL    DOTDOTHARDWAY          
					 ;Try again 
    1712 02B3                           DIRDONE: 
    1713 02B3  8B E5                            MOV     SP,BP                  
					 ;Pop local vars 
    1714 02B5  5D                               POP     BP                     
					 ;Restore frame 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 07:53:02

CHKPROC - Procedures called from chkdsk                     Page     1-70
DIRPROC -- Recursive directory processing                   

    1715 02B6  C2 0004                          RET     4                      
					 ;Pop args 
    1716                                 
    1717 02B9                           MOREDIR: 
    1718 02B9  BE 0000 E                        MOV     SI,OFFSET DG:DIRBUF 
    1719 02BC  F6 44 13 10                      TEST    [SI.DIRATT],ISDIR 
    1720 02C0  75 4B                            JNZ     NEWDIR                 
					 ;Is a new directory 
    1721 02C2  80 3E 0000 E 00                  CMP     [SECONDPASS],0 
    1722 02C7  74 05                            JZ      FPROC1                 
					 ;First pass 
    1723 02C9  E8 03C0 R                        CALL    CROSSLOOK              
					 ;Check for cross links 
    1724 02CC  EB B6                            JMP     DDSIZOK                
					 ;Next 
    1725 02CE                           FPROC1: 
    1726 02CE  80 3E 0000 E 00                  CMP     [NOISY],0 
    1727 02D3  74 12                            JZ      NOPRINT2 
    1728 02D5  BA 0000 E                        MOV     DX,OFFSET DG:INDENT    
					 ;Tell user where we are 
    1729 02D8  E8 0000 E                        CALL    PRINT 
    1730 02DB  53                               PUSH    BX 
    1731 02DC  8B DE                            MOV     BX,SI 
    1732 02DE  E8 08F2 R                        CALL    PRINTTHISEL 
    1733 02E1  E8 0000 E                        CALL    DOCRLF 
    1734 02E4  8B F3                            MOV     SI,BX 
    1735 02E6  5B                               POP     BX 
    1736 02E7                           NOPRINT2: 
    1737 02E7  B0 81                            MOV     AL,81H                 
					 ;Head of file 
    1738 02E9  E8 03F1 R                        CALL    MARKFAT 
    1739 02EC  F6 44 13 08                      TEST    [SI.DIRATT],VOLIDA 
    1740 02F0  75 06                            JNZ     HIDENFILE              
					 ;VOL ID counts as hidden 
    1741 02F2  F6 44 13 02                      TEST    [SI.DIRATT],HIDDN 
    1742 02F6  74 0A                            JZ      NORMFILE 
    1743 02F8                           HIDENFILE: 
    1744 02F8  FF 06 0000 E                     INC     [HIDCNT] 
    1745 02FC  01 0E 0000 E                     ADD     [HIDSIZ],CX 
    1746 0300  EB 82                            JMP     DDSIZOK                
					 ;Next 
    1747 0302                           NORMFILE: 
    1748 0302  FF 06 0000 E                     INC     [FILCNT] 
    1749 0306  01 0E 0000 E                     ADD     [FILSIZ],CX 
    1750 030A  E9 0284 R                        JMP     DDSIZOK                
					 ;Next 
    1751                                 
    1752 030D                           NEWDIR: 
    1753 030D  80 3E 0000 E 00                  CMP     [SECONDPASS],0 
    1754 0312  74 05                            JZ      DPROC1 
    1755 0314  E8 03C0 R                        CALL    CROSSLOOK              
					 ;Check for cross links 
    1756 0317  EB 1E                            JMP     SHORT DPROC2 
    1757 0319                           DPROC1: 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 07:53:02

CHKPROC - Procedures called from chkdsk                     Page     1-71
DIRPROC -- Recursive directory processing                   

    1758 0319  B0 82                            MOV     AL,82H                 
					 ;Head of dir 
    1759 031B  E8 03F1 R                        CALL    MARKFAT 
    1760 031E  FF 06 0000 E                     INC     [DIRCNT] 
    1761 0322  01 0E 0000 E                     ADD     [DIRSIZ],CX 
    1762 0326  80 3E 0000 E 00                  CMP     [ZEROTRUNC],0 
    1763 032B  74 0A                            JZ      DPROC2                 
					 ;Dir not truncated 
    1764 032D                           CONVDIR: 
    1765 032D  80 64 13 EF                      AND     [SI.DIRATT],NOT ISDIR  
					 ;Turn into file 
    1766 0331  E8 0818 R                        CALL    FIXENT 
    1767 0334  E9 0284 R                        JMP     DDSIZOK                
					 ;Next 
    1768 0337                           DPROC2: 
    1769 0337  FF 36 0000 E                     PUSH    [ERRSUB] 
    1770 033B  53                               PUSH    BX                     
					 ;Save my srch FCB pointer 
    1771 033C  FF 74 22                         PUSH    [SI.DIRCLUS]           
					 ;MYSELF for next directory 
    1772 033F  FF 76 06                         PUSH    [BP+6]                 
					 ;His PARENT is me 
    1773 0342  83 C6 08                         ADD     SI,DIRNAM 
    1774 0345  BF 0000 E                        MOV     DI,OFFSET DG:NAMBUF 
    1775 0348  57                               PUSH    DI 
    1776 0349  E8 0000 E                        CALL    FCB_TO_ASCZ 
    1777 034C  5A                               POP     DX 
    1778 034D  B4 3B                            MOV     AH,CHDIR               
					 ;CHDIR to new dir 
    1779 034F  CD 21                            INT     21H 
    1780 0351  72 12                            JC      CANTTARG               
					 ;Barfed 
    1781 0353  E8 0149 R                        CALL    DIRPROC 
    1782 0356  5B                               POP     BX                     
					 ;Get my SRCH FCB pointer back 
    1783 0357  8F 06 0000 E                     POP     [ERRSUB] 
    1784 035B  80 3E 0000 E 00                  CMP     [DOTSNOGOOD],0 
    1785 0360  75 1B                            JNZ     ASKCONV 
    1786 0362  E9 0284 R                        JMP     DDSIZOK                
					 ;Next 
    1787                                 
    1788 0365                           CANTTARG: 
    1789 0365  58                               POP     AX                     
					 ;Clean stack 
    1790 0366  58                               POP     AX 
    1791 0367  58                               POP     AX 
    1792 0368  58                               POP     AX 
    1793 0369  52                               PUSH    DX                     
					 ;Save pointer to bad DIR 
    1794 036A  BA 0000 E                        MOV     DX,OFFSET DG:BADTARG1 
    1795 036D  E8 0000 E                        CALL    EPRINT 
    1796 0370  5E                               POP     SI                     
					 ;Pointer to bad DIR 
    1797 0371  E8 08DC R                        CALL    PRINTCURRDIRERR 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 07:53:02

CHKPROC - Procedures called from chkdsk                     Page     1-72
DIRPROC -- Recursive directory processing                   

    1798 0374  BA 0000 E                        MOV     DX,OFFSET DG:BADTARG2 
    1799 0377  E8 0000 E                        CALL    EPRINT 
    1800 037A  E9 0284 R                DDSIZOKJ: JMP   DDSIZOK                
					 ;Next 
    1801                                 
    1802 037D                           ASKCONV: 
    1803 037D  80 3E 0000 E 00                  CMP     [SECONDPASS],0 
    1804 0382  75 F6                            JNZ     DDSIZOKJ               
					 ;Leave on second pass 
    1805 0384  BA 0000 E                        MOV     DX,OFFSET DG:PTRANDIR 
    1806 0387  80 3E 0000 E 00                  CMP     [NOISY],0 
    1807 038C  75 03                            JNZ     PRINTTRMES 
    1808 038E  BA 0000 E                        MOV     DX,OFFSET DG:PTRANDIR2 
    1809 0391                           PRINTTRMES: 
    1810 0391  E8 0000 E                        CALL    PROMPTYN               
					 ;Ask user what to do 
    1811 0394  75 E4                            JNZ     DDSIZOKJ               
					 ;User say leave alone 
    1812 0396  55                               PUSH    BP 
    1813 0397  53                               PUSH    BX 
    1814 0398  8B 47 17                         MOV     AX,[BX+THISENT]        
					 ;Entry number 
    1815 039B  E8 0842 R                        CALL    GETENT                 
					 ;Get the entry 
    1816 039E  8B F7                            MOV     SI,DI 
    1817 03A0  BF 0000 E                        MOV     DI,OFFSET DG:DIRBUF 
    1818 03A3  57                               PUSH    DI 
    1819 03A4  83 C7 08                         ADD     DI,DIRNAM 
    1820 03A7  B9 0020                          MOV     CX,32 
    1821 03AA  F3/ A4                           REP     MOVSB                  
					 ;Transfer entry to DIRBUF 
    1822 03AC  5E                               POP     SI 
    1823 03AD  56                               PUSH    SI 
    1824 03AE  8B 74 22                         MOV     SI,[SI.DIRCLUS]        
					 ;First cluster 
    1825 03B1  E8 0743 R                        CALL    GETFILSIZ 
    1826 03B4  5E                               POP     SI 
    1827 03B5  5B                               POP     BX 
    1828 03B6  5D                               POP     BP 
    1829 03B7  89 44 24                         MOV     WORD PTR [SI.DIRESIZ],A
					X        ;Fix entry 
    1830 03BA  89 54 26                         MOV     WORD PTR [SI.DIRESIZ+2]
					,DX 
    1831 03BD  E9 032D R                        JMP     CONVDIR 
    1832                                 
    1833                                SUBTTL  FAT Look routines 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 07:53:02

CHKPROC - Procedures called from chkdsk                     Page     1-73
FAT Look routines                                           

    1834                                PAGE 
    1835 03C0                           CROSSLOOK: 
    1836                                ;Same as MRKFAT only simpler for pass 2
					 
    1837 03C0  89 1E 0000 E                     MOV     [SRFCBPT],BX 
    1838 03C4  8B DE                            MOV     BX,SI 
    1839 03C6  8B 77 22                         MOV     SI,[BX.DIRCLUS] 
    1840 03C9  E8 03E2 R                        CALL    CROSSCHK 
    1841 03CC  75 12                            JNZ     CROSSLINKJ 
    1842 03CE                           CHLP: 
    1843 03CE  53                               PUSH    BX 
    1844 03CF  E8 0500 R                        CALL    UNPACK 
    1845 03D2  5B                               POP     BX 
    1846 03D3  87 F7                            XCHG    SI,DI 
    1847 03D5  81 FE 0FF8                       CMP     SI,0FF8H 
    1848 03D9  73 72                            JAE     CHAINDONEJ 
    1849 03DB  E8 03E2 R                        CALL    CROSSCHK 
    1850 03DE  74 EE                            JZ      CHLP 
    1851 03E0  EB 72                    CROSSLINKJ: JMP SHORT CROSSLINK 
    1852                                 
    1853 03E2                           CROSSCHK: 
    1854 03E2  8B 3E 0000 E                     MOV     DI,[FATMAP] 
    1855 03E6  03 FE                            ADD     DI,SI 
    1856 03E8  8A 25                            MOV     AH,[DI] 
    1857 03EA  F6 C4 10                         TEST    AH,10H 
    1858 03ED  C3                               RET 
    1859                                 
    1860 03EE  E9 04CB R                NOCLUSTERSJ: JMP        NOCLUSTERS 
    1861                                 
    1862 03F1                           MARKFAT: 
    1863                                ; Map the file and perform checks 
    1864                                ; SI points to dir entry 
    1865                                ; AL is head mark with app type 
    1866                                ; On return CX is number of clusters 
    1867                                ; BX,SI preserved 
    1868                                ; ZEROTRUNC is non zero if the file was
					 trimmed to zero length 
    1869                                ; ISCROSS is non zero if the file is cr
					oss linked 
    1870                                 
    1871 03F1  C6 06 0000 E 00                  MOV     [ZEROTRUNC],0   ;Initia
					lize 
    1872 03F6  C6 06 0000 E 00                  MOV     [ISCROSS],0 
    1873 03FB  89 1E 0000 E                     MOV     [SRFCBPT],BX 
    1874 03FF  8B DE                            MOV     BX,SI 
    1875 0401  33 C9                            XOR     CX,CX 
    1876 0403  8B 77 22                         MOV     SI,[BX.DIRCLUS] 
    1877 0406  83 FE 02                         CMP     SI,2 
    1878 0409  72 E3                            JB      NOCLUSTERSJ     ;Bad cl
					uster #  or nul file (SI = 0) 
    1879 040B  3B 36 0000 E                     CMP     SI,[MCLUS] 
    1880 040F  77 DD                            JA      NOCLUSTERSJ     ;Bad cl
					uster # 
    1881 0411  53                               PUSH    BX 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 07:53:02

CHKPROC - Procedures called from chkdsk                     Page     1-74
FAT Look routines                                           

    1882 0412  E8 0500 R                        CALL    UNPACK 
    1883 0415  5B                               POP     BX 
    1884 0416  74 D6                            JZ      NOCLUSTERSJ     ;Bad cl
					uster (it is marked free) 
    1885 0418  E8 0552 R                        CALL    MARKMAP 
    1886 041B  75 37                            JNZ     CROSSLINK 
    1887 041D  24 7F                            AND     AL,7FH                 
					 ;Turn off head bit 
    1888 041F                           CHASELOOP: 
    1889 041F  53                               PUSH    BX 
    1890 0420  E8 0500 R                        CALL    UNPACK 
    1891 0423  5B                               POP     BX 
    1892 0424  41                               INC     CX 
    1893 0425  87 F7                            XCHG    SI,DI 
    1894 0427  81 FE 0FF8                       CMP     SI,0FF8H 
    1895 042B  73 4C                            JAE     CHAINDONE 
    1896 042D  83 FE 02                         CMP     SI,2 
    1897 0430  72 06                            JB      MRKBAD 
    1898 0432  3B 36 0000 E                     CMP     SI,[MCLUS] 
    1899 0436  76 17                            JBE     MRKOK 
    1900 0438                           MRKBAD:                         ;Bad cl
					uster # in chain 
    1901 0438  51                               PUSH    CX 
    1902 0439  57                               PUSH    DI 
    1903 043A  E8 08E6 R                        CALL    PRINTTHISELERR 
    1904 043D  BA 0000 E                        MOV     DX,OFFSET DG:BADCHAIN 
    1905 0440  E8 0000 E                        CALL    EPRINT 
    1906 0443  5E                               POP     SI 
    1907 0444  BA 0FFF                          MOV     DX,0FFFH        ;Insert
					 EOF 
    1908 0447  53                               PUSH    BX 
    1909 0448  E8 051E R                        CALL    PACK 
    1910 044B  5B                               POP     BX 
    1911 044C  59                               POP     CX 
    1912 044D  EB 2A                    CHAINDONEJ: JMP SHORT CHAINDONE 
    1913                                 
    1914 044F                           MRKOK: 
    1915 044F  E8 0552 R                        CALL    MARKMAP 
    1916 0452  74 CB                            JZ      CHASELOOP 
    1917 0454                           CROSSLINK:                      ;File i
					s cross linked 
    1918 0454  FE 06 0000 E                     INC     [ISCROSS] 
    1919 0458  80 3E 0000 E 00                  CMP     [SECONDPASS],0 
    1920 045D  74 1A                            JZ      CHAINDONE              
					 ;Crosslinks only on second pass 
    1921 045F  56                               PUSH    SI                     
					 ;Cluster number 
    1922 0460  E8 08F2 R                        CALL    PRINTTHISEL 
    1923 0463  E8 0000 E                        CALL    DOCRLF 
    1924 0466  BA 0000 E                        MOV     DX,OFFSET DG:CROSSMES_P
					RE 
    1925 0469  E8 0000 E                        CALL    PRINT 
    1926 046C  5E                               POP     SI 
    1927 046D  53                               PUSH    BX 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 07:53:02

CHKPROC - Procedures called from chkdsk                     Page     1-75
FAT Look routines                                           

    1928 046E  51                               PUSH    CX 
    1929 046F  BB 0000 E                        MOV     BX,OFFSET DG:CROSSMES_P
					OST 
    1930 0472  33 FF                            XOR     DI,DI 
    1931 0474  E8 0000 E                        CALL    DISP16BITS 
    1932 0477  59                               POP     CX 
    1933 0478  5B                               POP     BX 
    1934 0479                           CHAINDONE: 
    1935 0479  F6 47 13 10                      TEST    [BX.DIRATT],ISDIR 
    1936 047D  75 45                            JNZ     NOSIZE                 
					 ;Don't size dirs 
    1937 047F  80 3E 0000 E 00                  CMP     [ISCROSS],0 
    1938 0484  75 3E                            JNZ     NOSIZE                 
					 ;Don't size cross linked files 
    1939 0486  80 3E 0000 E 00                  CMP     [SECONDPASS],0 
    1940 048B  75 37                            JNZ     NOSIZE                 
					 ;Don't size on pass 2  (CX garbage) 
    1941 048D  A0 0000 E                        MOV     AL,[CSIZE] 
    1942 0490  32 E4                            XOR     AH,AH 
    1943 0492  F7 26 0000 E                     MUL     [SSIZE] 
    1944 0496  50                               PUSH    AX              ;Size i
					n bytes of one alloc unit 
    1945 0497  F7 E1                            MUL     CX 
    1946 0499  8B FA                            MOV     DI,DX           ;Save a
					llocation size 
    1947 049B  8B F0                            MOV     SI,AX 
    1948 049D  2B 47 24                         SUB     AX,WORD PTR [BX.DIRESIZ
					] 
    1949 04A0  1B 57 26                         SBB     DX,WORD PTR [BX.DIRESIZ
					+2] 
    1950 04A3  72 0A                            JC      BADFSIZ         ;Size t
					o big 
    1951 04A5  0B D2                            OR      DX,DX 
    1952 04A7  75 06                            JNZ     BADFSIZ         ;Size t
					o small 
    1953 04A9  5A                               POP     DX 
    1954 04AA  3B C2                            CMP     AX,DX 
    1955 04AC  72 16                            JB      NOSIZE          ;Size w
					ithin one Alloc unit 
    1956 04AE  52                               PUSH    DX              ;Size t
					o small 
    1957 04AF                           BADFSIZ: 
    1958 04AF  5A                               POP     DX 
    1959 04B0  51                               PUSH    CX              ;Save s
					ize of file 
    1960 04B1  89 77 24                         MOV     WORD PTR [BX.DIRESIZ],S
					I 
    1961 04B4  89 7F 26                         MOV     WORD PTR [BX.DIRESIZ+2]
					,DI 
    1962 04B7  E8 0807 R                        CALL    FIXENT2                
					 ;Fix it 
    1963 04BA  E8 08E6 R                        CALL    PRINTTHISELERR 
    1964 04BD  BA 0000 E                        MOV     DX,OFFSET DG:BADCLUS 
    1965 04C0  E8 0000 E                        CALL    EPRINT 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 07:53:02

CHKPROC - Procedures called from chkdsk                     Page     1-76
FAT Look routines                                           

    1966 04C3  59                               POP     CX              ;Restor
					e size of file 
    1967 04C4                           NOSIZE: 
    1968 04C4  8B F3                            MOV     SI,BX 
    1969 04C6  8B 1E 0000 E                     MOV     BX,[SRFCBPT] 
    1970 04CA  C3                               RET 
    1971                                 
    1972 04CB                           NOCLUSTERS: 
    1973                                ;File is zero length 
    1974 04CB  0B F6                            OR      SI,SI 
    1975 04CD  74 1F                            JZ      CHKSIZ          ;Firclu
					s is OK, Check size 
    1976 04CF  BA 0000 E                        MOV     DX,OFFSET DG:NULNZ 
    1977 04D2                           ADJUST: 
    1978 04D2  52                               PUSH    DX 
    1979 04D3  E8 08E6 R                        CALL    PRINTTHISELERR 
    1980 04D6  5A                               POP     DX 
    1981 04D7  E8 0000 E                        CALL    EPRINT 
    1982 04DA  33 F6                            XOR     SI,SI 
    1983 04DC  89 77 22                         MOV     [BX.DIRCLUS],SI        
					         ;Set it to 0 
    1984 04DF  89 77 24                         MOV     WORD PTR [BX.DIRESIZ],S
					I        ;Set size too 
    1985 04E2  89 77 26                         MOV     WORD PTR [BX.DIRESIZ+2]
					,SI 
    1986 04E5  E8 0807 R                        CALL    FIXENT2                
					         ;Fix it 
    1987 04E8  FE 06 0000 E                     INC     [ZEROTRUNC]            
					         ;Indicate truncation 
    1988 04EC  EB 8B                            JMP     CHAINDONE 
    1989                                 
    1990 04EE                           CHKSIZ: 
    1991 04EE  BA 0000 E                        MOV     DX,OFFSET DG:BADCLUS 
    1992 04F1  83 7F 24 00                      CMP     WORD PTR [BX.DIRESIZ],0
					 
    1993 04F5  75 DB                            JNZ     ADJUST                 
					         ;Size wrong 
    1994 04F7  83 7F 26 00                      CMP     WORD PTR [BX.DIRESIZ+2]
					,0 
    1995 04FB  75 D5                            JNZ     ADJUST                 
					         ;Size wrong 
    1996 04FD  E9 0479 R                        JMP     CHAINDONE              
					         ;Size OK 
    1997                                 
    1998 0500                           UNPACK: 
    1999                                ;Cluster number in SI, Return contents 
					in DI, BX destroyed 
    2000                                ;ZERO SET IF CLUSTER IS FREE 
    2001 0500  BB 0000 E                        MOV     BX,OFFSET DG:FAT 
    2002 0503  8B FE                            MOV     DI,SI 
    2003 0505  D1 EF                            SHR     DI,1 
    2004 0507  03 FE                            ADD     DI,SI 
    2005 0509  8B 39                            MOV     DI,WORD PTR [DI+BX] 
    2006 050B  F7 C6 0001                       TEST    SI,1 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 07:53:02

CHKPROC - Procedures called from chkdsk                     Page     1-77
FAT Look routines                                           

    2007 050F  74 08                            JZ      HAVCLUS 
    2008 0511  D1 EF                            SHR     DI,1 
    2009 0513  D1 EF                            SHR     DI,1 
    2010 0515  D1 EF                            SHR     DI,1 
    2011 0517  D1 EF                            SHR     DI,1 
    2012 0519                           HAVCLUS: 
    2013 0519  81 E7 0FFF                       AND     DI,0FFFH 
    2014 051D  C3                               RET 
    2015                                 
    2016 051E                           PACK: 
    2017                                ; SI      CLUSTER NUMBER TO BE PACKED 
    2018                                ; DX      DATA TO BE PLACED IN CLUSTER 
					(SI) 
    2019                                ; BX,DX   DESTROYED 
    2020 051E  C6 06 0000 E 01                  MOV     [DIRTYFAT],1           
					 ;Set FAT dirty byte 
    2021 0523  C6 06 0000 E 01                  MOV     [HAVFIX],1             
					 ;Indicate a fix 
    2022 0528  BB 0000 E                        MOV     BX,OFFSET DG:FAT 
    2023 052B  56                               PUSH    SI 
    2024 052C  8B FE                            MOV     DI,SI 
    2025 052E  D1 EE                            SHR     SI,1 
    2026 0530  03 F3                            ADD     SI,BX 
    2027 0532  03 F7                            ADD     SI,DI 
    2028 0534  D1 EF                            SHR     DI,1 
    2029 0536  8B 3C                            MOV     DI,[SI] 
    2030 0538  73 0E                            JNC     ALIGNED 
    2031 053A  D1 E2                            SHL     DX,1 
    2032 053C  D1 E2                            SHL     DX,1 
    2033 053E  D1 E2                            SHL     DX,1 
    2034 0540  D1 E2                            SHL     DX,1 
    2035 0542  81 E7 000F                       AND     DI,0FH 
    2036 0546  EB 04                            JMP     SHORT PACKIN 
    2037 0548                           ALIGNED: 
    2038 0548  81 E7 F000                       AND     DI,0F000H 
    2039 054C                           PACKIN: 
    2040 054C  0B FA                            OR      DI,DX 
    2041 054E  89 3C                            MOV     [SI],DI 
    2042 0550  5E                               POP     SI 
    2043 0551  C3                               RET 
    2044                                 
    2045                                 
    2046                                 
    2047 0552                           MARKMAP: 
    2048                                ; Mark in AL 
    2049                                ; Cluster in SI 
    2050                                ; AL,SI,CX preserved 
    2051                                ; ZERO RESET IF CROSSLINK, AH IS THE MA
					RK THAT WAS THERE 
    2052 0552  8B 3E 0000 E                     MOV     DI,[FATMAP] 
    2053 0556  03 FE                            ADD     DI,SI 
    2054 0558  8A 25                            MOV     AH,[DI] 
    2055 055A  0A E4                            OR      AH,AH 
    2056 055C  50                               PUSH    AX 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 07:53:02

CHKPROC - Procedures called from chkdsk                     Page     1-78
FAT Look routines                                           

    2057 055D  74 08                            JZ      SETMARK 
    2058 055F  8A C4                            MOV     AL,AH 
    2059 0561  FF 06 0000 E                     INC     [CROSSCNT]      ;Count 
					the crosslink 
    2060 0565  0C 10                            OR      AL,10H          ;Resets
					 zero 
    2061 0567                           SETMARK: 
    2062 0567  88 05                            MOV     [DI],AL 
    2063 0569  58                               POP     AX 
    2064 056A  C3                               RET 
    2065                                 
    2066                                 
    2067 056B                           CHKMAP: 
    2068                                ;Compare FAT and FATMAP looking for bad
					sectors orphans 
    2069 056B  8B 36 0000 E                     MOV     SI,[FATMAP] 
    2070 056F  46                               INC     SI 
    2071 0570  46                               INC     SI 
    2072 0571  BA 0002                          MOV     DX,2 
    2073 0574  8B 0E 0000 E                     MOV     CX,[DSIZE] 
    2074 0578                           CHKMAPLP: 
    2075 0578  AC                               LODSB 
    2076 0579  0A C0                            OR      AL,AL 
    2077 057B  75 22                            JNZ     CONTLP          ;Alread
					y seen this one 
    2078 057D  87 F2                            XCHG    SI,DX 
    2079 057F  E8 0500 R                        CALL    UNPACK 
    2080 0582  87 F2                            XCHG    SI,DX 
    2081 0584  74 19                            JZ      CONTLP          ;Free c
					luster 
    2082 0586  81 FF 0FF7                       CMP     DI,0FF7H        ;Bad se
					ctor? 
    2083 058A  75 0B                            JNZ     ORPHAN          ;No, fo
					und an orphan 
    2084 058C  FF 06 0000 E                     INC     [BADSIZ] 
    2085 0590  C6 44 FF 04                      MOV     BYTE PTR [SI-1],4      
					 ;Flag it 
    2086 0594  EB 09 90                         JMP     CONTLP 
    2087 0597                           ORPHAN: 
    2088 0597  FF 06 0000 E                     INC     [ORPHSIZ] 
    2089 059B  C6 44 FF 08                      MOV     BYTE PTR [SI-1],8      
					 ;Flag it 
    2090 059F                           CONTLP: 
    2091 059F  42                               INC     DX              ;Next c
					luster 
    2092 05A0  E2 D6                            LOOP    CHKMAPLP 
    2093 05A2  8B 36 0000 E                     MOV     SI,[ORPHSIZ] 
    2094 05A6  0B F6                            OR      SI,SI 
    2095 05A8  74 03                            JZ      RET18           ;No orp
					hans 
    2096 05AA  E8 05AE R                        CALL    RECOVER 
    2097 05AD  C3                       RET18:  RET 
    2098                                 
    2099 05AE                           RECOVER: 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 07:53:02

CHKPROC - Procedures called from chkdsk                     Page     1-79
FAT Look routines                                           

    2100                                ;free orphans or do chain recovery 
    2101 05AE  E8 08B9 R                        CALL    CHECKNOFMES 
    2102 05B1  E8 0000 E                        CALL    DOCRLF 
    2103 05B4  E8 0000 E                        CALL    CHAINREPORT 
    2104 05B7  BA 0000 E                        MOV     DX,OFFSET DG:FREEMES 
    2105 05BA  E8 0000 E                        CALL    PROMPTYN               
					 ;Ask user 
    2106 05BD  75 03                            JNZ     NOCHAINREC 
    2107 05BF  E9 067E R                        JMP     CHAINREC 
    2108 05C2                           NOCHAINREC: 
    2109 05C2  8B 36 0000 E                     MOV     SI,[FATMAP]            
					 ;Free all orphans 
    2110 05C6  46                               INC     SI 
    2111 05C7  46                               INC     SI 
    2112 05C8  BA 0002                          MOV     DX,2 
    2113 05CB  8B 0E 0000 E                     MOV     CX,[DSIZE] 
    2114 05CF                           CHKMAPLP2: 
    2115 05CF  AC                               LODSB 
    2116 05D0  A8 08                            TEST    AL,8 
    2117 05D2  74 0B                            JZ      NEXTCLUS 
    2118 05D4  87 F2                            XCHG    SI,DX 
    2119 05D6  52                               PUSH    DX 
    2120 05D7  33 D2                            XOR     DX,DX 
    2121 05D9  E8 051E R                        CALL    PACK            ;Mark a
					s free 
    2122 05DC  5A                               POP     DX 
    2123 05DD  87 F2                            XCHG    SI,DX 
    2124 05DF                           NEXTCLUS: 
    2125 05DF  42                               INC     DX 
    2126 05E0  E2 ED                            LOOP    CHKMAPLP2 
    2127 05E2  33 C0                            XOR     AX,AX 
    2128 05E4  87 06 0000 E                     XCHG    AX,[ORPHSIZ] 
    2129 05E8  50                               PUSH    AX 
    2130 05E9  BA 0000 E                        MOV     DX,OFFSET DG:FREEBYMESF
					_PRE 
    2131 05EC  80 3E 0000 E 00                  CMP     [DOFIX],0 
    2132 05F1  75 03                            JNZ     PRINTFMES 
    2133 05F3  BA 0000 E                        MOV     DX,OFFSET DG:FREEBYMES_
					PRE 
    2134 05F6                           PRINTFMES: 
    2135 05F6  E8 0000 E                        CALL    PRINT 
    2136 05F9  58                               POP     AX 
    2137 05FA  BB 0000 E                        MOV     BX,OFFSET DG:FREEBYMESF
					_POST 
    2138 05FD  80 3E 0000 E 00                  CMP     [DOFIX],0 
    2139 0602  75 06                            JNZ     DISPFRB 
    2140 0604  BB 0000 E                        MOV     BX,OFFSET DG:FREEBYMES_
					POST 
    2141 0607  A3 0000 E                        MOV     [LCLUS],AX 
    2142 060A                           DISPFRB: 
    2143 060A  E8 0000 E                        CALL    DISPCLUS        ;Tell h
					ow much freed 
    2144 060D  C3                               RET 
    2145                                 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 07:53:02

CHKPROC - Procedures called from chkdsk                     Page     1-80
FAT Look routines                                           

    2146 060E                           FINDCHAIN: 
    2147                                ;Do chain recovery on orphans 
    2148 060E  8B 36 0000 E                     MOV     SI,[FATMAP] 
    2149 0612  46                               INC     SI 
    2150 0613  46                               INC     SI 
    2151 0614  BA 0002                          MOV     DX,2 
    2152 0617  8B 0E 0000 E                     MOV     CX,[DSIZE] 
    2153 061B                           CHKMAPLP3: 
    2154 061B  AC                               LODSB 
    2155 061C  A8 08                            TEST    AL,8            ;Orphan
					? 
    2156 061E  74 5A                            JZ      NEXTCLUS2       ;Nope 
    2157 0620  A8 01                            TEST    AL,1            ;Seen b
					efore ? 
    2158 0622  75 56                            JNZ     NEXTCLUS2       ;Yup 
    2159 0624  56                               PUSH    SI              ;Save s
					earch environment 
    2160 0625  51                               PUSH    CX 
    2161 0626  52                               PUSH    DX 
    2162 0627  4E                               DEC     SI 
    2163 0628  80 0C 81                         OR      BYTE PTR [SI],81H      
					 ;Mark as seen and head 
    2164 062B  FF 06 0000 E                     INC     [ORPHCNT]      ;Found a
					 chain 
    2165 062F  8B F2                            MOV     SI,DX 
    2166 0631                           CHAINLP: 
    2167 0631  E8 0500 R                        CALL    UNPACK 
    2168 0634  87 F7                            XCHG    SI,DI 
    2169 0636  81 FE 0FF8                       CMP     SI,0FF8H 
    2170 063A  73 3B                            JAE     CHGOON          ;EOF 
    2171 063C  57                               PUSH    DI 
    2172 063D  83 FE 02                         CMP     SI,2 
    2173 0640  72 12                            JB      INSERTEOF       ;Bad cl
					uster number 
    2174 0642  3B 36 0000 E                     CMP     SI,[MCLUS] 
    2175 0646  77 0C                            JA      INSERTEOF       ;Bad cl
					uster number 
    2176 0648  3B F7                            CMP     SI,DI 
    2177 064A  74 08                            JZ      INSERTEOF       ;Tight 
					loop 
    2178 064C  E8 03E2 R                        CALL    CROSSCHK 
    2179 064F  F6 C4 08                         TEST    AH,8            ;Points
					 to a non-orphan? 
    2180 0652  75 09                            JNZ     CHKCHHEAD       ;Nope 
    2181 0654                           INSERTEOF: 
    2182 0654  5E                               POP     SI              ;Need t
					o stick EOF here 
    2183 0655  BA 0FFF                          MOV     DX,0FFFH 
    2184 0658  E8 051E R                        CALL    PACK 
    2185 065B  EB 1A                            JMP     SHORT CHGOON 
    2186 065D                           CHKCHHEAD: 
    2187 065D  F6 C4 80                         TEST    AH,80H          ;Previo
					sly marked head? 
    2188 0660  74 0A                            JZ      ADDCHAIN        ;Nope 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 07:53:02

CHKPROC - Procedures called from chkdsk                     Page     1-81
FAT Look routines                                           

    2189 0662  80 25 7F                         AND     BYTE PTR [DI],NOT 80H  
					 ;Turn off head bit 
    2190 0665  FF 0E 0000 E                     DEC     [ORPHCNT]              
					;Wasn't really a head 
    2191 0669  5F                               POP     DI              ;Clean 
					stack 
    2192 066A  EB 0B                            JMP     SHORT CHGOON 
    2193 066C                           ADDCHAIN: 
    2194 066C  F6 C4 01                         TEST    AH,1            ;Previo
					sly seen? 
    2195 066F  75 E3                            JNZ     INSERTEOF       ;Yup, d
					on't make a cross link 
    2196 0671  80 0D 01                         OR      BYTE PTR [DI],1 ;Mark a
					s seen 
    2197 0674  5F                               POP     DI              ;Clean 
					stack 
    2198 0675  EB BA                            JMP     CHAINLP         ;Follow
					 chain 
    2199                                 
    2200 0677                           CHGOON: 
    2201 0677  5A                               POP     DX              ;Restor
					e search 
    2202 0678  59                               POP     CX 
    2203 0679  5E                               POP     SI 
    2204 067A                           NEXTCLUS2: 
    2205 067A  42                               INC     DX 
    2206 067B  E2 9E                            LOOP    CHKMAPLP3 
    2207 067D  C3                               RET 
    2208                                 
    2209 067E                           CHAINREC: 
    2210 067E  C5 3E 0000 E                     LDS     DI,[THISDPB] 
    2211                                ASSUME  DS:NOTHING 
    2212 0682  8B 4D 09                         MOV     CX,[DI.dpb_root_entries
					] 
    2213 0685  0E                               PUSH    CS 
    2214 0686  1F                               POP     DS 
    2215                                ASSUME  DS:DG 
    2216 0687  8B 36 0000 E                     MOV     SI,[FATMAP] 
    2217 068B  46                               INC     SI 
    2218 068C  46                               INC     SI 
    2219 068D  BF 0001                          MOV     DI,1 
    2220 0690  E8 0726 R                        CALL    NEXTORPH 
    2221 0693  56                               PUSH    SI 
    2222 0694  57                               PUSH    DI 
    2223 0695  8B F7                            MOV     SI,DI 
    2224 0697  33 C0                            XOR     AX,AX 
    2225 0699  8B 16 0000 E                     MOV     DX,[ORPHCNT] 
    2226 069D                           MAKFILLP: 
    2227 069D  50                               PUSH    AX 
    2228 069E  51                               PUSH    CX 
    2229 069F  52                               PUSH    DX 
    2230 06A0  56                               PUSH    SI 
    2231 06A1  E8 0842 R                        CALL    GETENT 
    2232 06A4  5E                               POP     SI 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 07:53:02

CHKPROC - Procedures called from chkdsk                     Page     1-82
FAT Look routines                                           

    2233 06A5  80 3D E5                         CMP     BYTE PTR [DI],0E5H 
    2234 06A8  74 05                            JZ      GOTENT 
    2235 06AA  80 3D 00                         CMP     BYTE PTR [DI],0 
    2236 06AD  75 61                            JNZ     NEXTENT 
    2237 06AF                           GOTENT: 
    2238 06AF  C6 06 0000 E 01                  MOV     [HAVFIX],1      ;Making
					 a fix 
    2239 06B4  80 3E 0000 E 00                  CMP     [DOFIX],0 
    2240 06B9  74 42                            JZ      ENTMADE         ;Not su
					pposed to, carry clear 
    2241 06BB  89 75 1A                         MOV     [DI+26],SI      ;FIRCLU
					S Pointer 
    2242 06BE  50                               PUSH    AX              ;Save I
					NT 26 data 
    2243 06BF  52                               PUSH    DX 
    2244 06C0  53                               PUSH    BX 
    2245 06C1  B4 0D                            MOV     AH,DISK_RESET        ;F
					orce current state 
    2246 06C3  CD 21                            INT     21H 
    2247 06C5  BA 0000 E                        MOV     DX,OFFSET DG:ORPHFCB 
    2248 06C8  B4 0F                            MOV     AH,FCB_OPEN 
    2249 06CA                           OPAGAIN: 
    2250 06CA  CD 21                            INT     21H 
    2251 06CC  0A C0                            OR      AL,AL 
    2252 06CE  75 05                            JNZ     GOTORPHNAM 
    2253 06D0  E8 0730 R                        CALL    MAKORPHNAM             
					    ;Try next name 
    2254 06D3  EB F5                            JMP     SHORT OPAGAIN 
    2255                                 
    2256 06D5                           GOTORPHNAM: 
    2257 06D5  BE 0001 E                        MOV     SI,OFFSET DG:ORPHFCB + 
					1   ;ORPHFCB Now has good name 
    2258 06D8  B9 000B                          MOV     CX,11 
    2259 06DB  F3/ A4                           REP     MOVSB 
    2260 06DD  E8 0730 R                        CALL    MAKORPHNAM             
					    ;Make next name 
    2261 06E0  33 C0                            XOR     AX,AX 
    2262 06E2  B9 000F                          MOV     CX,15 
    2263 06E5  F3/ AA                           REP     STOSB 
    2264 06E7  8B 35                            MOV     SI,[DI] 
    2265 06E9  47                               INC     DI              ;Skip F
					IRCLUS 
    2266 06EA  47                               INC     DI 
    2267 06EB  57                               PUSH    DI 
    2268 06EC  E8 0743 R                        CALL    GETFILSIZ 
    2269 06EF  5F                               POP     DI 
    2270 06F0  AB                               STOSW 
    2271 06F1  8B C2                            MOV     AX,DX 
    2272 06F3  AB                               STOSW 
    2273 06F4  5B                               POP     BX 
    2274 06F5  5A                               POP     DX 
    2275 06F6  58                               POP     AX 
    2276 06F7  B9 0001                          MOV     CX,1 
    2277 06FA  E8 0000 E                        CALL    DOINT26 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 07:53:02

CHKPROC - Procedures called from chkdsk                     Page     1-83
FAT Look routines                                           

    2278 06FD                           ENTMADE: 
    2279 06FD  5A                               POP     DX 
    2280 06FE  59                               POP     CX 
    2281 06FF  58                               POP     AX 
    2282 0700  5F                               POP     DI 
    2283 0701  5E                               POP     SI 
    2284 0702  4A                               DEC     DX 
    2285 0703  0B D2                            OR      DX,DX 
    2286 0705  74 1B                            JZ      RET100 
    2287 0707  E8 0726 R                        CALL    NEXTORPH 
    2288 070A  56                               PUSH    SI 
    2289 070B  57                               PUSH    DI 
    2290 070C  8B F7                            MOV     SI,DI 
    2291 070E  EB 03                            JMP     SHORT NXTORP 
    2292                                 
    2293 0710                           NEXTENT: 
    2294 0710  5A                               POP     DX 
    2295 0711  59                               POP     CX 
    2296 0712  58                               POP     AX 
    2297 0713                           NXTORP: 
    2298 0713  40                               INC     AX 
    2299 0714  E2 0D                            LOOP    MAKFILLPJ 
    2300 0716  58                               POP     AX                     
					 ;Clean Stack 
    2301 0717  58                               POP     AX 
    2302 0718  29 16 0000 E                     SUB     [ORPHCNT],DX           
					 ;Couldn't make them all 
    2303 071C  BA 0000 E                        MOV     DX,OFFSET DG:CREATMES 
    2304 071F  E8 0000 E                        CALL    EPRINT 
    2305 0722  C3                       RET100: RET 
    2306                                 
    2307 0723  E9 069D R                MAKFILLPJ: JMP  MAKFILLP 
    2308                                 
    2309 0726                           NEXTORPH: 
    2310 0726  50                               PUSH    AX 
    2311 0727  AC                               LODSB 
    2312 0728  47                               INC     DI 
    2313 0729  3C 89                            CMP     AL,89H 
    2314 072B  58                               POP     AX 
    2315 072C  74 F4                            JZ      RET100 
    2316 072E  EB F6                            JMP     SHORT NEXTORPH 
    2317                                 
    2318 0730                           MAKORPHNAM: 
    2319 0730  56                               PUSH    SI 
    2320 0731  BE FFFF E                        MOV     SI,OFFSET DG:ORPHEXT - 
					1 
    2321 0734                           NAM0: 
    2322 0734  FE 04                            INC     BYTE PTR [SI] 
    2323 0736  80 3C 39                         CMP     BYTE PTR [SI],'9' 
    2324 0739  7E 06                            JLE     NAMMADE 
    2325 073B  C6 04 30                         MOV     BYTE PTR [SI],'0' 
    2326 073E  4E                               DEC     SI 
    2327 073F  EB F3                            JMP     NAM0 
    2328                                 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 07:53:02

CHKPROC - Procedures called from chkdsk                     Page     1-84
FAT Look routines                                           

    2329 0741                           NAMMADE: 
    2330 0741  5E                               POP     SI 
    2331 0742  C3                               RET 
    2332                                 
    2333 0743                           GETFILSIZ: 
    2334                                ;SI is start cluster, returns filesize 
					as DX:AX 
    2335 0743  33 C0                            XOR     AX,AX 
    2336 0745                           NCLUS: 
    2337 0745  E8 0500 R                        CALL    UNPACK 
    2338 0748  87 F7                            XCHG    SI,DI 
    2339 074A  40                               INC     AX 
    2340 074B  81 FE 0FF8                       CMP     SI,0FF8H 
    2341 074F  73 05                            JAE     GOTEOF 
    2342 0751  83 FE 02                         CMP     SI,2 
    2343 0754  73 EF                            JAE     NCLUS 
    2344 0756                           GOTEOF: 
    2345 0756  8A 1E 0000 E                     MOV     BL,[CSIZE] 
    2346 075A  32 FF                            XOR     BH,BH 
    2347 075C  F7 E3                            MUL     BX 
    2348 075E  F7 26 0000 E                     MUL     [SSIZE] 
    2349 0762  C3                               RET 
    2350                                 
    2351                                 
    2352                                 
    2353 0763                           CHKCROSS: 
    2354                                ;Check for Crosslinks, do second pass i
					f any to find pairs 
    2355 0763  8B 36 0000 E                     MOV     SI,[CROSSCNT] 
    2356 0767  0B F6                            OR      SI,SI 
    2357 0769  74 0E                            JZ      RET8            ;None 
    2358 076B  E8 0000 E                        CALL    DOCRLF 
    2359 076E  FE 06 0000 E                     INC     [SECONDPASS] 
    2360 0772  33 C0                            XOR     AX,AX 
    2361 0774  50                               PUSH    AX 
    2362 0775  50                               PUSH    AX 
    2363 0776  E8 0149 R                        CALL    DIRPROC         ;Do it 
					again 
    2364 0779  C3                       RET8:   RET 
    2365                                 
    2366                                SUBTTL  AMDONE - Finish up routine 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 07:53:02

CHKPROC - Procedures called from chkdsk                     Page     1-85
AMDONE - Finish up routine                                  

    2367                                PAGE 
    2368 077A                           AMDONE: 
    2369                                ASSUME  DS:NOTHING 
    2370 077A  36: 80 3E 0000 E 00              CMP     [DIRTYFAT],0 
    2371 0780  74 66                            JZ      NOWRITE         ;FAT no
					t dirty 
    2372 0782  36: 80 3E 0000 E 00              CMP     [DOFIX],0 
    2373 0788  74 5E                            JZ      NOWRITE         ;Not su
					pposed to fix 
    2374 078A                           REWRITE: 
    2375 078A  36: C5 1E 0000 E                 LDS     BX,[THISDPB] 
    2376                                ASSUME  DS:NOTHING 
    2377 078F  8A 4F 0F                         MOV     CL,[BX.dpb_FAT_size]   
					       ;Sectors for one fat 
    2378 0792  32 ED                            XOR     CH,CH 
    2379 0794  8B F9                            MOV     DI,CX 
    2380 0796  8A 4F 08                         MOV     CL,[BX.dpb_FAT_count]  
					        ;Number of FATs 
    2381 0799  8B 57 06                         MOV     DX,[BX.dpb_first_FAT]  
					        ;First sector of FAT 
    2382 079C  0E                               PUSH    CS 
    2383 079D  1F                               POP     DS 
    2384                                ASSUME  DS:DG 
    2385 079E  88 2E 0000 E                     MOV     [ERRCNT],CH 
    2386 07A2  BB 0000 E                        MOV     BX,OFFSET DG:FAT 
    2387 07A5  A0 0000 E                        MOV     AL,[ALLDRV] 
    2388 07A8  FE C8                            DEC     AL 
    2389 07AA  B4 31                            MOV     AH,'1' 
    2390 07AC  51                               PUSH    CX 
    2391 07AD                           WRTLOOP: 
    2392 07AD  87 CF                            XCHG    CX,DI 
    2393 07AF  52                               PUSH    DX 
    2394 07B0  51                               PUSH    CX 
    2395 07B1  57                               PUSH    DI 
    2396 07B2  50                               PUSH    AX 
    2397 07B3  CD 26                            INT     26H                    
					 ;Write out the FAT 
    2398 07B5  A2 0000 E                        MOV     [HECODE],AL 
    2399 07B8  58                               POP     AX                     
					 ;Flags 
    2400 07B9  73 17                            JNC     WRTOK 
    2401 07BB  FE 06 0000 E                     INC     [ERRCNT] 
    2402 07BF  BA 0000 E                        MOV     DX,OFFSET DG:BADWRITE_P
					RE 
    2403 07C2  E8 0000 E                        CALL    PRINT 
    2404 07C5  58                               POP     AX 
    2405 07C6  50                               PUSH    AX 
    2406 07C7  8A D4                            MOV     DL,AH 
    2407 07C9  E8 0000 E                        CALL    PRTCHR 
    2408 07CC  BA 0000 E                        MOV     DX,OFFSET DG:BADWRITE_P
					OST 
    2409 07CF  E8 0000 E                        CALL    PRINT 
    2410 07D2                           WRTOK: 
    2411 07D2  58                               POP     AX 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 07:53:02

CHKPROC - Procedures called from chkdsk                     Page     1-86
AMDONE - Finish up routine                                  

    2412 07D3  59                               POP     CX 
    2413 07D4  5F                               POP     DI 
    2414 07D5  5A                               POP     DX 
    2415 07D6  FE C4                            INC     AH 
    2416 07D8  03 D7                            ADD     DX,DI 
    2417 07DA  E2 D1                            LOOP    WRTLOOP         ;Next F
					AT 
    2418 07DC  59                               POP     CX              ;Number
					 of FATs 
    2419 07DD  3A 0E 0000 E                     CMP     CL,[ERRCNT]     ;Error 
					on all? 
    2420 07E1  75 05                            JNZ     NOWRITE         ;no 
    2421 07E3  E8 0000 E                        CALL    WDSKERR 
    2422 07E6  74 A2                            JZ      REWRITE 
    2423 07E8                           NOWRITE: 
    2424 07E8  B4 0D                            MOV     AH,DISK_RESET        ;I
					nvalidate any buffers in system 
    2425 07EA  CD 21                            INT     21H 
    2426 07EC  BA 0000 E                        MOV     DX,OFFSET DG:USERDIR   
					 ;Recover users directory 
    2427 07EF  B4 3B                            MOV     AH,CHDIR 
    2428 07F1  CD 21                            INT     21H 
    2429 07F3  80 3E 0000 E 01                  CMP     BYTE PTR [FRAGMENT],1  
					 ;Check for any fragmented files? 
    2430 07F8  75 03                            JNZ     DONE                   
					 ;No -- we're finished 
    2431 07FA  E8 0000 E                        CALL    CHECKFILES             
					 ;Yes -- report any fragments 
    2432 07FD                           DONE: 
    2433                                ASSUME  DS:NOTHING 
    2434 07FD  36: 8A 16 0000 E                 MOV     DL,[USERDEV]    ;Recove
					r users drive 
    2435 0802  B4 0E                            MOV     AH,SET_DEFAULT_DRIVE 
    2436 0804  CD 21                            INT     21H 
    2437 0806  C3                               RET 
    2438                                 
    2439                                SUBTTL  Routines for manipulating dir e
					ntries 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 07:53:02

CHKPROC - Procedures called from chkdsk                     Page     1-87
Routines for manipulating dir entries                       

    2440                                PAGE 
    2441 0807                           FIXENT2: 
    2442                                ;Same as FIXENT only [SRFCBPT] points t
					o the search FCB, BX points to the entr
					y 
    2443 0807  56                               PUSH    SI 
    2444 0808  53                               PUSH    BX 
    2445 0809  51                               PUSH    CX 
    2446 080A  8B F3                            MOV     SI,BX 
    2447 080C  36: 8B 1E 0000 E                 MOV     BX,[SRFCBPT] 
    2448 0811  E8 0818 R                        CALL    FIXENT 
    2449 0814  59                               POP     CX 
    2450 0815  5B                               POP     BX 
    2451 0816  5E                               POP     SI 
    2452 0817  C3                       RET20:  RET 
    2453                                 
    2454 0818                           FIXENT: 
    2455                                ;BX Points to search FCB 
    2456                                ;SI Points to Entry to fix 
    2457 0818  36: C6 06 0000 E 01              MOV     [HAVFIX],1      ;Indica
					te a fix 
    2458 081E  36: 80 3E 0000 E 00              CMP     [DOFIX],0 
    2459 0824  74 F1                            JZ      RET20           ;But do
					n't do it! 
    2460 0826  55                               PUSH    BP 
    2461 0827  53                               PUSH    BX 
    2462 0828  56                               PUSH    SI 
    2463 0829  56                               PUSH    SI              ;Entry 
					pointer 
    2464 082A  8B 47 17                         MOV     AX,[BX+THISENT]        
					 ;Entry number 
    2465 082D  E8 0842 R                        CALL    GETENT 
    2466 0830  5E                               POP     SI              ;Entry 
					pointer 
    2467 0831  83 C6 08                         ADD     SI,DIRNAM       ;Point 
					to start of entry 
    2468 0834  B9 0020                          MOV     CX,32 
    2469 0837  F3/ A4                           REP     MOVSB 
    2470 0839  FE C1                            INC     CL 
    2471 083B  E8 0000 E                        CALL    DOINT26 
    2472 083E  5E                               POP     SI 
    2473 083F  5B                               POP     BX 
    2474 0840  5D                               POP     BP 
    2475 0841  C3                               RET 
    2476                                 
    2477 0842                           GETENT: 
    2478                                ;AX is desired entry number (in current
					 directory) 
    2479                                ; 
    2480                                ;DI points to entry in SECBUF 
    2481                                ;AX DX BX set to do an INT 26 to write 
					it back out (CX must be reset to 1) 
    2482                                ;ALL registers destroyed (via int 25) 
    2483 0842  36: C5 3E 0000 E                 LDS     DI,[THISDPB] 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 07:53:02

CHKPROC - Procedures called from chkdsk                     Page     1-88
Routines for manipulating dir entries                       

    2484                                ASSUME  DS:NOTHING 
    2485 0847  8B 5D 1C                         MOV     BX,[DI.dpb_current_dir]
					 
    2486 084A  0E                               PUSH    CS 
    2487 084B  1F                               POP     DS 
    2488                                ASSUME  DS:DG 
    2489 084C  81 FB 0FF8                       CMP     BX,0FF8H 
    2490 0850  72 06                            JB      CLUSISOK 
    2491 0852  BB 0000 E                        MOV     BX,OFFSET DG:BADDPBDIR 
					         ;This should never happen 
    2492 0855  E9 094C R                        JMP     FATAL 
    2493 0858                           CLUSISOK: 
    2494 0858  B1 04                            MOV     CL,4 
    2495 085A  D3 E0                            SHL     AX,CL 
    2496 085C  33 D2                            XOR     DX,DX 
    2497 085E  D1 E0                            SHL     AX,1 
    2498 0860  D1 D2                            RCL     DX,1                   
					 ;Account for overflow 
    2499 0862  8B 0E 0000 E                     MOV     CX,[SSIZE] 
    2500 0866  80 E1 E0                         AND     CL,255-31              
					 ;Must be a multiple of 32 
    2501 0869  F7 F1                            DIV     CX              ;DX is 
					position in sector, AX is dir sector # 
    2502 086B  0B DB                            OR      BX,BX 
    2503 086D  74 3C                            JZ      WANTROOT 
    2504 086F  F6 36 0000 E                     DIV     [CSIZE]         ;AL # c
					lusters to skip, AH position in cluster
					 
    2505 0873  8A C8                            MOV     CL,AL 
    2506 0875  32 ED                            XOR     CH,CH 
    2507 0877  E3 0B                            JCXZ    GOTCLUS 
    2508 0879  8B F3                            MOV     SI,BX 
    2509 087B                           SKIPLP: 
    2510 087B  E8 0500 R                        CALL    UNPACK 
    2511 087E  87 F7                            XCHG    SI,DI 
    2512 0880  E2 F9                            LOOP    SKIPLP 
    2513 0882  8B DE                            MOV     BX,SI 
    2514 0884                           GOTCLUS: 
    2515 0884  52                               PUSH    DX              ;Positi
					on in sector 
    2516 0885  E8 0000 E                        CALL    FIGREC          ;Conver
					t to sector # 
    2517 0888                           DOROOTDIR: 
    2518 0888  8B 1E 0000 E                     MOV     BX,[SECBUF] 
    2519 088C  A0 0000 E                        MOV     AL,[ALLDRV] 
    2520 088F  FE C8                            DEC     AL 
    2521 0891                           RDRETRY: 
    2522 0891  50                               PUSH    AX 
    2523 0892  52                               PUSH    DX 
    2524 0893  53                               PUSH    BX 
    2525 0894  B9 0001                          MOV     CX,1 
    2526 0897  CD 25                            INT     25H             ;Read i
					t 
    2527 0899  A2 0000 E                        MOV     [HECODE],AL 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 07:53:02

CHKPROC - Procedures called from chkdsk                     Page     1-89
Routines for manipulating dir entries                       

    2528 089C  58                               POP     AX              ;FLAGS 
    2529 089D  5B                               POP     BX 
    2530 089E  5A                               POP     DX 
    2531 089F  58                               POP     AX 
    2532 08A0  73 05                            JNC     RDOK2 
    2533 08A2  E8 0000 E                        CALL    RDSKERR 
    2534 08A5  74 EA                            JZ      RDRETRY 
    2535 08A7                           RDOK2: 
    2536 08A7  5F                               POP     DI              ;Offset
					 into sector 
    2537 08A8  03 FB                            ADD     DI,BX           ;Add se
					ctor base offset 
    2538 08AA  C3                               RET 
    2539                                 
    2540 08AB                           WANTROOT: 
    2541 08AB  52                               PUSH    DX 
    2542 08AC  C5 3E 0000 E                     LDS     DI,[THISDPB] 
    2543                                ASSUME  DS:NOTHING 
    2544 08B0  8B D0                            MOV     DX,AX 
    2545 08B2  03 55 10                         ADD     DX,[DI.dpb_dir_sector] 
    2546 08B5  0E                               PUSH    CS 
    2547 08B6  1F                               POP     DS 
    2548                                ASSUME  DS:DG 
    2549 08B7  EB CF                            JMP     DOROOTDIR 
    2550                                 
    2551 08B9                           CHECKNOFMES: 
    2552 08B9  B0 01                            MOV     AL,1 
    2553 08BB  86 06 0000 E                     XCHG    AL,[FIXMFLG] 
    2554 08BF  0A C0                            OR      AL,AL 
    2555 08C1  75 18                            JNZ     RET14           ;Don't 
					print it more than once 
    2556 08C3  80 3E 0000 E 00                  CMP     [DOFIX],0 
    2557 08C8  75 11                            JNZ     RET14           ;Don't 
					print it if F switch specified 
    2558 08CA  52                               PUSH    DX 
    2559 08CB  BA 0000 E                        MOV     DX,OFFSET DG:FIXMES 
    2560 08CE  E8 0000 E                        CALL    PRINT 
    2561 08D1  5A                               POP     DX 
    2562 08D2  C3                               RET 
    2563                                 
    2564 08D3                           CHECKERR: 
    2565 08D3  E8 08B9 R                        CALL    CHECKNOFMES 
    2566 08D6  80 3E 0000 E 00                  CMP     [SECONDPASS],0 
    2567 08DB  C3                       RET14:  RET 
    2568                                 
    2569 08DC                           PRINTCURRDIRERR: 
    2570 08DC  E8 08D3 R                        CALL    CHECKERR 
    2571 08DF  75 FA                            JNZ     RET14 
    2572 08E1  E8 08FF R                        CALL    PRINTCURRDIR 
    2573 08E4  EB 08                            JMP     SHORT ERREX 
    2574                                 
    2575 08E6                           PRINTTHISELERR: 
    2576 08E6  E8 08D3 R                        CALL    CHECKERR 
    2577 08E9  75 F0                            JNZ     RET14 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 07:53:02

CHKPROC - Procedures called from chkdsk                     Page     1-90
Routines for manipulating dir entries                       

    2578 08EB  E8 08F2 R                        CALL    PRINTTHISEL 
    2579 08EE                           ERREX: 
    2580 08EE  E8 0000 E                        CALL    DOCRLF 
    2581 08F1  C3                               RET 
    2582                                 
    2583 08F2                           PRINTTHISEL: 
    2584 08F2  8B F3                            MOV     SI,BX 
    2585 08F4  83 C6 08                         ADD     SI,DIRNAM 
    2586 08F7                           PRINTTHISEL2: 
    2587 08F7  BF 0000 E                        MOV     DI,OFFSET DG:NAMBUF 
    2588 08FA  57                               PUSH    DI 
    2589 08FB  E8 0000 E                        CALL    FCB_TO_ASCZ 
    2590 08FE  5E                               POP     SI 
    2591 08FF                           PRINTCURRDIR: 
    2592 08FF  56                               PUSH    SI 
    2593 0900  8A 16 0000 E                     MOV     DL,[ALLDRV] 
    2594 0904  80 C2 40                         ADD     DL,'@' 
    2595 0907  E8 0000 E                        CALL    PRTCHR 
    2596 090A  B2 3A                            MOV     DL,DRVCHAR 
    2597 090C  E8 0000 E                        CALL    PRTCHR 
    2598 090F  C5 36 0000 E                     LDS     SI,[THISDPB] 
    2599                                ASSUME  DS:NOTHING 
    2600 0913  83 7C 1C 00                      CMP     [SI.dpb_current_dir],0 
    2601 0917  74 17                            JZ      CURISROOT 
    2602 0919  36: 8A 16 0000 E                 MOV     DL,[DIRCHAR] 
    2603 091E  E8 0000 E                        CALL    PRTCHR 
    2604 0921  83 C6 1E                         ADD     SI,dpb_dir_text 
    2605 0924                           PCURRLP: 
    2606 0924  AC                               LODSB 
    2607 0925  0A C0                            OR      AL,AL 
    2608 0927  74 07                            JZ      CURISROOT 
    2609 0929  8A D0                            MOV     DL,AL 
    2610 092B  E8 0000 E                        CALL    PRTCHR 
    2611 092E  EB F4                            JMP     PCURRLP 
    2612                                 
    2613 0930                           CURISROOT: 
    2614 0930  0E                               PUSH    CS 
    2615 0931  1F                               POP     DS 
    2616                                ASSUME  DS:DG 
    2617 0932  5E                               POP     SI 
    2618 0933  80 3C 00                         CMP     BYTE PTR [SI],0 
    2619 0936  74 13                            JZ      LPDONE          ;If tai
					l string NUL, no '/' 
    2620 0938  8A 16 0000 E                     MOV     DL,[DIRCHAR] 
    2621 093C  E8 0000 E                        CALL    PRTCHR 
    2622 093F                           ERRLOOP: 
    2623 093F  AC                               LODSB 
    2624 0940  0A C0                            OR      AL,AL 
    2625 0942  74 07                            JZ      LPDONE 
    2626 0944  8A D0                            MOV     DL,AL 
    2627 0946  E8 0000 E                        CALL    PRTCHR 
    2628 0949  EB F4                            JMP     ERRLOOP 
    2629 094B                           LPDONE: 
    2630 094B  C3                               RET 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 07:53:02

CHKPROC - Procedures called from chkdsk                     Page     1-91
Routines for manipulating dir entries                       

    2631                                 
    2632 094C                           FATAL: 
    2633                                ;Unrecoverable error 
    2634 094C  BA 0000 E                        MOV     DX,OFFSET DG:FATALMES 
    2635 094F  E8 0000 E                        CALL    PRINT 
    2636 0952  8B D3                            MOV     DX,BX 
    2637 0954  E8 0000 E                        CALL    PRINT 
    2638 0957  8A 16 0000 E                     MOV     DL,[USERDEV]           
					 ;At least leave on same drive 
    2639 095B  B4 0E                            MOV     AH,SET_DEFAULT_DRIVE 
    2640 095D  CD 21                            INT     21H 
    2641 095F  CD 20                            INT     20H 
    2642                                 
    2643                                 
    2644 0961  0975 R                   INT_24_RETADDR  DW      OFFSET DG:INT_2
					4_BACK 
    2645                                 
    2646 0963                           INT_24  PROC    FAR 
    2647                                ASSUME  DS:NOTHING,ES:NOTHING,SS:NOTHIN
					G 
    2648 0963  9C                               PUSHF 
    2649 0964  0E                               PUSH    CS 
    2650 0965  2E: FF 36 0961 R                 PUSH    [INT_24_RETADDR] 
    2651 096A  2E: FF 36 0002 E                 PUSH    WORD PTR [HARDCH+2] 
    2652 096F  2E: FF 36 0000 E                 PUSH    WORD PTR [HARDCH] 
    2653 0974  CB                               RET 
    2654                                INT_24  ENDP 
    2655                                 
    2656 0975                           INT_24_BACK: 
    2657 0975  3C 02                            CMP     AL,2            ;Abort?
					 
    2658 0977  75 05                            JNZ     IRETI 
    2659 0979  E8 07FD R                        CALL    DONE            ;Forget
					 about directory, restore users drive 
    2660 097C  CD 20                            INT     20H 
    2661 097E                           IRETI: 
    2662 097E  CF                               IRET 
    2663                                 
    2664 097F                           INT_23: 
    2665 097F  2E: C5 16 0000 E                 LDS     DX,[HARDCH] 
    2666 0984  B8 2524                          MOV     AX,(SET_INTERRUPT_VECTO
					R SHL 8) OR 24H 
    2667 0987  CD 21                            INT     21H 
    2668 0989  2E: C5 16 0000 E                 LDS     DX,[CONTCH] 
    2669 098E  B8 2523                          MOV     AX,(SET_INTERRUPT_VECTO
					R SHL 8) OR 23H 
    2670 0991  CD 21                            INT     21H 
    2671 0993  0E                               PUSH    CS 
    2672 0994  1F                               POP     DS 
    2673                                ASSUME  DS:DG 
    2674 0995  C6 06 0000 E 00                  MOV     [FRAGMENT],0 
    2675 099A                           RDONE: 
    2676 099A  E8 07E8 R                        CALL    NOWRITE         ;Restor
					e users drive and directory 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 07:53:02

CHKPROC - Procedures called from chkdsk                     Page     1-92
Routines for manipulating dir entries                       

    2677 099D  CD 20                            INT     20H 
    2678                                 
    2679 099F                           CODE    ENDS 
    2680                                        END     CHKPROC 

Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 07:53:02

CHKPROC - Procedures called from chkdsk                     Symbols-1
                                                             

Macros:

		N a m e			Lines

BREAK  . . . . . . . . . . . . .  	   2
CONDRET  . . . . . . . . . . . .  	  19
CONTEXT  . . . . . . . . . . . .  	   3
DO_EXT . . . . . . . . . . . . .  	   0
ENTRY  . . . . . . . . . . . . .  	   2
ERROR  . . . . . . . . . . . . .  	   4
INVOKE . . . . . . . . . . . . .  	   8
I_AM . . . . . . . . . . . . . .  	  14
I_NEED . . . . . . . . . . . . .  	  11
JUMP . . . . . . . . . . . . . .  	  17
LONG_ADDR  . . . . . . . . . . .  	   7
MAKELAB  . . . . . . . . . . . .  	   4
PROCEDURE  . . . . . . . . . . .  	   2
RETC . . . . . . . . . . . . . .  	   1
RETNC  . . . . . . . . . . . . .  	   1
RETNZ  . . . . . . . . . . . . .  	   1
RETURN . . . . . . . . . . . . .  	   5
RETZ . . . . . . . . . . . . . .  	   1
SHORT_ADDR . . . . . . . . . . .  	  12
TRANSFER . . . . . . . . . . . .  	   8

Structures and Records:

                N a m e                 Width   # fields
                                        Shift   Width   Mask    Initial

ARENA  . . . . . . . . . . . . .  	0005	0003
  ARENA_SIGNATURE  . . . . . . .  	0000
  ARENA_OWNER  . . . . . . . . .  	0001
  ARENA_SIZE . . . . . . . . . .  	0003
BPBLOCK  . . . . . . . . . . . .  	000D	0008
  BPSECSZ  . . . . . . . . . . .  	0000
  BPCLUS . . . . . . . . . . . .  	0002
  BPRES  . . . . . . . . . . . .  	0003
  BPFTCNT  . . . . . . . . . . .  	0005
  BPDRCNT  . . . . . . . . . . .  	0006
  BPSCCNT  . . . . . . . . . . .  	0008
  BPMEDIA  . . . . . . . . . . .  	000A
  BPFTSEC  . . . . . . . . . . .  	000B
BUFFINFO . . . . . . . . . . . .  	0010	0009
  NEXTBUF  . . . . . . . . . . .  	0000
  BUFDRV . . . . . . . . . . . .  	0004
  BUFDIRTY . . . . . . . . . . .  	0005
  BUFPRI . . . . . . . . . . . .  	0006
  VISIT  . . . . . . . . . . . .  	0007
  BUFSECNO . . . . . . . . . . .  	0008
  BUFWRTCNT  . . . . . . . . . .  	000A
  BUFWRTINC  . . . . . . . . . .  	000B
  BUFDRVDP . . . . . . . . . . .  	000C
DIRENT . . . . . . . . . . . . .  	0028	0009
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 07:53:02

CHKPROC - Procedures called from chkdsk                     Symbols-2
                                                             

  DIRNAM . . . . . . . . . . . .  	0008
  DIRATT . . . . . . . . . . . .  	0013
  DIRTIM . . . . . . . . . . . .  	001E
  DIRDAT . . . . . . . . . . . .  	0020
  DIRCLUS  . . . . . . . . . . .  	0022
  DIRESIZ  . . . . . . . . . . .  	0024
DIR_ENTRY  . . . . . . . . . . .  	0020	0008
  DIR_NAME . . . . . . . . . . .  	0000
  DIR_ATTR . . . . . . . . . . .  	000B
  DIR_PAD  . . . . . . . . . . .  	000C
  DIR_TIME . . . . . . . . . . .  	0016
  DIR_DATE . . . . . . . . . . .  	0018
  DIR_FIRST  . . . . . . . . . .  	001A
  DIR_SIZE_L . . . . . . . . . .  	001C
  DIR_SIZE_H . . . . . . . . . .  	001E
DPB  . . . . . . . . . . . . . .  	005E	0012
  DPB_DRIVE  . . . . . . . . . .  	0000
  DPB_UNIT . . . . . . . . . . .  	0001
  DPB_SECTOR_SIZE  . . . . . . .  	0002
  DPB_CLUSTER_MASK . . . . . . .  	0004
  DPB_CLUSTER_SHIFT  . . . . . .  	0005
  DPB_FIRST_FAT  . . . . . . . .  	0006
  DPB_FAT_COUNT  . . . . . . . .  	0008
  DPB_ROOT_ENTRIES . . . . . . .  	0009
  DPB_FIRST_SECTOR . . . . . . .  	000B
  DPB_MAX_CLUSTER  . . . . . . .  	000D
  DPB_FAT_SIZE . . . . . . . . .  	000F
  DPB_DIR_SECTOR . . . . . . . .  	0010
  DPB_DRIVER_ADDR  . . . . . . .  	0012
  DPB_MEDIA  . . . . . . . . . .  	0016
  DPB_FIRST_ACCESS . . . . . . .  	0017
  DPB_NEXT_DPB . . . . . . . . .  	0018
  DPB_CURRENT_DIR  . . . . . . .  	001C
  DPB_DIR_TEXT . . . . . . . . .  	001E
EXEC0  . . . . . . . . . . . . .  	000E	0004
  EXEC0_ENVIRON  . . . . . . . .  	0000
  EXEC0_COM_LINE . . . . . . . .  	0002
  EXEC0_5C_FCB . . . . . . . . .  	0006
  EXEC0_6C_FCB . . . . . . . . .  	000A
EXEC1  . . . . . . . . . . . . .  	0016	0008
  EXEC1_ENVIRON  . . . . . . . .  	0000
  EXEC1_COM_LINE . . . . . . . .  	0002
  EXEC1_5C_FCB . . . . . . . . .  	0006
  EXEC1_6C_FCB . . . . . . . . .  	000A
  EXEC1_SP . . . . . . . . . . .  	000E
  EXEC1_SS . . . . . . . . . . .  	0010
  EXEC1_IP . . . . . . . . . . .  	0012
  EXEC1_CS . . . . . . . . . . .  	0014
EXEC3  . . . . . . . . . . . . .  	0004	0002
  EXEC3_LOAD_ADDR  . . . . . . .  	0000
  EXEC3_RELOC_FAC  . . . . . . .  	0002
EXE_FILE . . . . . . . . . . . .  	0020	000F
  EXE_SIGNATURE  . . . . . . . .  	0000
  EXE_LEN_MOD_512  . . . . . . .  	0002
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 07:53:02

CHKPROC - Procedures called from chkdsk                     Symbols-3
                                                             

  EXE_PAGES  . . . . . . . . . .  	0004
  EXE_RLE_COUNT  . . . . . . . .  	0006
  EXE_PAR_DIR  . . . . . . . . .  	0008
  EXE_MIN_BSS  . . . . . . . . .  	000A
  EXE_MAX_BSS  . . . . . . . . .  	000C
  EXE_SS . . . . . . . . . . . .  	000E
  EXE_SP . . . . . . . . . . . .  	0010
  EXE_CHKSUM . . . . . . . . . .  	0012
  EXE_IP . . . . . . . . . . . .  	0014
  EXE_CS . . . . . . . . . . . .  	0016
  EXE_RLE_TABLE  . . . . . . . .  	0018
  EXE_IOV  . . . . . . . . . . .  	001A
  EXE_SYM_TAB  . . . . . . . . .  	001C
FIND_BUF . . . . . . . . . . . .  	002B	000C
  FIND_BUF_SATTR . . . . . . . .  	0000
  FIND_BUF_DRIVE . . . . . . . .  	0001
  FIND_BUF_NAME  . . . . . . . .  	0002
  FIND_BUF_LASTENT . . . . . . .  	000D
  FIND_BUF_THISDPB . . . . . . .  	000F
  FIND_BUF_DIRSTART  . . . . . .  	0013
  FIND_BUF_ATTR  . . . . . . . .  	0015
  FIND_BUF_TIME  . . . . . . . .  	0016
  FIND_BUF_DATE  . . . . . . . .  	0018
  FIND_BUF_SIZE_L  . . . . . . .  	001A
  FIND_BUF_SIZE_H  . . . . . . .  	001C
  FIND_BUF_PNAME . . . . . . . .  	001E
INTERNAT_BLOCK . . . . . . . . .  	0018	0015
  DATE_TIM_FORMAT  . . . . . . .  	0000
  CURRENCY_SYM . . . . . . . . .  	0002
  THOUS_SEP  . . . . . . . . . .  	0007
  DECIMAL_SEP  . . . . . . . . .  	0009
  DATE_SEP . . . . . . . . . . .  	000B
  TIME_SEP . . . . . . . . . . .  	000D
  BIT_FEILD  . . . . . . . . . .  	000F
  CURRENCY_CENTS . . . . . . . .  	0010
  TIME_24  . . . . . . . . . . .  	0011
  MAP_CALL . . . . . . . . . . .  	0012
  DATA_SEP . . . . . . . . . . .  	0016
PROCESS_DATA_BLOCK . . . . . . .  	005B	000E
  PDB_EXIT_CALL  . . . . . . . .  	0000
  PDB_BLOCK_LEN  . . . . . . . .  	0002
  PDB_CPM_CALL . . . . . . . . .  	0005
  PDB_EXIT . . . . . . . . . . .  	000A
  PDB_CTRL_C . . . . . . . . . .  	000E
  PDB_FATAL_ABORT  . . . . . . .  	0012
  PDB_PARENT_PID . . . . . . . .  	0016
  PDB_JFN_TABLE  . . . . . . . .  	0018
  PDB_ENVIRON  . . . . . . . . .  	002C
  PDB_USER_STACK . . . . . . . .  	002E
  PDB_PAD1 . . . . . . . . . . .  	0032
  PDB_CALL_SYSTEM  . . . . . . .  	0050
  PDB_PAD2 . . . . . . . . . . .  	0055
SFT  . . . . . . . . . . . . . .  	0008	0003
  SFT_LINK . . . . . . . . . . .  	0000
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 07:53:02

CHKPROC - Procedures called from chkdsk                     Symbols-4
                                                             

  SFT_COUNT  . . . . . . . . . .  	0004
  SFT_TABLE  . . . . . . . . . .  	0006
SF_ENTRY . . . . . . . . . . . .  	0028	0004
  SF_REF_COUNT . . . . . . . . .  	0000
  SF_MODE  . . . . . . . . . . .  	0001
  SF_ATTR  . . . . . . . . . . .  	0002
  SF_FCB . . . . . . . . . . . .  	0003
SRCHFCB  . . . . . . . . . . . .  	002C	0001
SYMBOL_ENTRY . . . . . . . . . .  	0106	0004
  SYM_VALUE  . . . . . . . . . .  	0000
  SYM_TYPE . . . . . . . . . . .  	0004
  SYM_LEN  . . . . . . . . . . .  	0006
  SYM_NAME . . . . . . . . . . .  	0007
SYS_FCB  . . . . . . . . . . . .  	0025	0010
  FCB_DRIVE  . . . . . . . . . .  	0000
  FCB_NAME . . . . . . . . . . .  	0001
  FCB_EXT  . . . . . . . . . . .  	0009
  FCB_EXTENT . . . . . . . . . .  	000C
  FCB_RECSIZ . . . . . . . . . .  	000E
  FCB_FILSIZ . . . . . . . . . .  	0010
  FCB_DRVBP  . . . . . . . . . .  	0012
  FCB_FDATE  . . . . . . . . . .  	0014
  FCB_FTIME  . . . . . . . . . .  	0016
  FCB_DEVID  . . . . . . . . . .  	0018
  FCB_FIRCLUS  . . . . . . . . .  	0019
  FCB_CLUSPOS  . . . . . . . . .  	001B
  FCB_LSTCLUS  . . . . . . . . .  	001D
  FCB_NR . . . . . . . . . . . .  	0020
  FCB_RR . . . . . . . . . . . .  	0021
USER_ENVIRON . . . . . . . . . .  	0018	000C
  USER_AX  . . . . . . . . . . .  	0000
  USER_BX  . . . . . . . . . . .  	0002
  USER_CX  . . . . . . . . . . .  	0004
  USER_DX  . . . . . . . . . . .  	0006
  USER_SI  . . . . . . . . . . .  	0008
  USER_DI  . . . . . . . . . . .  	000A
  USER_BP  . . . . . . . . . . .  	000C
  USER_DS  . . . . . . . . . . .  	000E
  USER_ES  . . . . . . . . . . .  	0010
  USER_IP  . . . . . . . . . . .  	0012
  USER_CS  . . . . . . . . . . .  	0014
  USER_F . . . . . . . . . . . .  	0016

Segments and Groups:

                N a m e         	Size	Align	Combine Class

DG . . . . . . . . . . . . . . .  	GROUP
  CODE . . . . . . . . . . . . .  	099F	PARA	PUBLIC	
  CONST  . . . . . . . . . . . .  	0000	BYTE	PUBLIC	
  DATA . . . . . . . . . . . . .  	0000	WORD	PUBLIC	
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 07:53:02

CHKPROC - Procedures called from chkdsk                     Symbols-5
                                                             

Symbols:            

                N a m e         	Type	Value	Attr         

ABORT  . . . . . . . . . . . . .  	Number	0000	
ADDCHAIN . . . . . . . . . . . .  	L NEAR	066C	CODE
ADDR_INT_ABORT . . . . . . . . .  	Number	0080	
ADDR_INT_COMMAND . . . . . . . .  	Number	0084	
ADDR_INT_CTRL_C  . . . . . . . .  	Number	008C	
ADDR_INT_DISK_READ . . . . . . .  	Number	0094	
ADDR_INT_DISK_WRITE  . . . . . .  	Number	0098	
ADDR_INT_FASTCON . . . . . . . .  	Number	00A4	
ADDR_INT_FATAL_ABORT . . . . . .  	Number	0090	
ADDR_INT_KEEP_PROCESS  . . . . .  	Number	009C	
ADDR_INT_SPOOLER . . . . . . . .  	Number	00A0	
ADDR_INT_TERMINATE . . . . . . .  	Number	0088	
ADJUST . . . . . . . . . . . . .  	L NEAR	04D2	CODE
ALIGNED  . . . . . . . . . . . .  	L NEAR	0548	CODE
ALLDRV . . . . . . . . . . . . .  	V BYTE 	0000	CONST	External
ALLFILE  . . . . . . . . . . . .  	V BYTE 	0000	CONST	External
ALLOC  . . . . . . . . . . . . .  	Number	0048	
ALLOCOPER  . . . . . . . . . . .  	Number	0058	
ALLOC_ARENA_TRASHED  . . . . . .  	Alias	 ERROR_ARENA_TRASHED		
ALLOC_NOT_ENOUGH_MEMORY  . . . .  	Alias	 ERROR_NOT_ENOUGH_MEMORY		
ALTVECT  . . . . . . . . . . . .  	Number	0000	
AMDONE . . . . . . . . . . . . .  	L NEAR	077A	CODE	Global
ARENA_OWNER_SYSTEM . . . . . . .  	Number	0000	
ARENA_SIGNATURE_END  . . . . . .  	Number	005A	
ARENA_SIGNATURE_NORMAL . . . . .  	Number	004D	
ASKCONV  . . . . . . . . . . . .  	L NEAR	037D	CODE
ASSIGNOPER . . . . . . . . . . .  	Number	005F	
ATTR_ALL . . . . . . . . . . . .  	Number	0016	
ATTR_ARCHIVE . . . . . . . . . .  	Number	0020	
ATTR_CHANGEABLE  . . . . . . . .  	Number	0027	
ATTR_DIRECTORY . . . . . . . . .  	Number	0010	
ATTR_HIDDEN  . . . . . . . . . .  	Number	0002	
ATTR_IGNORE  . . . . . . . . . .  	Number	0021	
ATTR_READ_ONLY . . . . . . . . .  	Number	0001	
ATTR_SYSTEM  . . . . . . . . . .  	Number	0004	
ATTR_VOLUME_ID . . . . . . . . .  	Number	0008	

BADATT . . . . . . . . . . . . .  	V BYTE 	0000	CONST	External
BADCHAIN . . . . . . . . . . . .  	V BYTE 	0000	CONST	External
BADCLUS  . . . . . . . . . . . .  	V BYTE 	0000	CONST	External
BADDDSIZ . . . . . . . . . . . .  	L NEAR	026E	CODE
BADDPBDIR  . . . . . . . . . . .  	V BYTE 	0000	CONST	External
BADDSIZ  . . . . . . . . . . . .  	L NEAR	01F8	CODE
BADFSIZ  . . . . . . . . . . . .  	L NEAR	04AF	CODE
BADSIZ . . . . . . . . . . . . .  	V WORD 	0000	CONST	External
BADSIZM  . . . . . . . . . . . .  	V BYTE 	0000	CONST	External
BADTARG1 . . . . . . . . . . . .  	V BYTE 	0000	CONST	External
BADTARG2 . . . . . . . . . . . .  	V BYTE 	0000	CONST	External
BADWRITE_POST  . . . . . . . . .  	V BYTE 	0000	CONST	External
BADWRITE_PRE . . . . . . . . . .  	V BYTE 	0000	CONST	External
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 07:53:02

CHKPROC - Procedures called from chkdsk                     Symbols-6
                                                             

BUFINSIZ . . . . . . . . . . . .  	Number	0010	

CANTREC  . . . . . . . . . . . .  	L NEAR	0092	CODE
CANTREC2 . . . . . . . . . . . .  	L NEAR	010B	CODE
CANTTARG . . . . . . . . . . . .  	L NEAR	0365	CODE
CDDDMES  . . . . . . . . . . . .  	V BYTE 	0000	CONST	External
CHAINDONE  . . . . . . . . . . .  	L NEAR	0479	CODE
CHAINDONEJ . . . . . . . . . . .  	L NEAR	044D	CODE
CHAINLP  . . . . . . . . . . . .  	L NEAR	0631	CODE
CHAINREC . . . . . . . . . . . .  	L NEAR	067E	CODE
CHAINREPORT  . . . . . . . . . .  	L NEAR	0000	CODE	External
CHAR_OPER  . . . . . . . . . . .  	Number	0037	
CHASELOOP  . . . . . . . . . . .  	L NEAR	041F	CODE
CHDIR  . . . . . . . . . . . . .  	Number	003B	
CHDIR_PATH_NOT_FOUND . . . . . .  	Alias	 ERROR_PATH_NOT_FOUND		
CHECKERR . . . . . . . . . . . .  	L NEAR	08D3	CODE	Global
CHECKFILES . . . . . . . . . . .  	L NEAR	0000	CODE	External
CHECKNOFMES  . . . . . . . . . .  	L NEAR	08B9	CODE
CHGOON . . . . . . . . . . . . .  	L NEAR	0677	CODE
CHKCHHEAD  . . . . . . . . . . .  	L NEAR	065D	CODE
CHKCROSS . . . . . . . . . . . .  	L NEAR	0763	CODE	Global
CHKDOTDOT  . . . . . . . . . . .  	L NEAR	0214	CODE
CHKMAP . . . . . . . . . . . . .  	L NEAR	056B	CODE	Global
CHKMAPLP . . . . . . . . . . . .  	L NEAR	0578	CODE
CHKMAPLP2  . . . . . . . . . . .  	L NEAR	05CF	CODE
CHKMAPLP3  . . . . . . . . . . .  	L NEAR	061B	CODE
CHKPROC  . . . . . . . . . . . .  	L NEAR	0000	CODE
CHKSIZ . . . . . . . . . . . . .  	L NEAR	04EE	CODE
CHLP . . . . . . . . . . . . . .  	L NEAR	03CE	CODE
CHMOD  . . . . . . . . . . . . .  	Number	0043	
CHMOD_ACCESS_DENIED  . . . . . .  	Alias	 ERROR_ACCESS_DENIED		
CHMOD_INVALID_FUNCTION . . . . .  	Alias	 ERROR_INVALID_FUNCTION		
CHMOD_PATH_NOT_FOUND . . . . . .  	Alias	 ERROR_PATH_NOT_FOUND		
CLOSE  . . . . . . . . . . . . .  	Number	003E	
CLOSE_INVALID_FUNCTION . . . . .  	Alias	 ERROR_INVALID_FUNCTION		
CLOSE_INVALID_HANDLE . . . . . .  	Alias	 ERROR_INVALID_HANDLE		
CLUSBAD  . . . . . . . . . . . .  	V BYTE 	0000	CONST	External
CLUSISOK . . . . . . . . . . . .  	L NEAR	0858	CODE
CONTCH . . . . . . . . . . . . .  	V DWORD	0000	DATA	External
CONTLP . . . . . . . . . . . . .  	L NEAR	059F	CODE
CONVDIR  . . . . . . . . . . . .  	L NEAR	032D	CODE
COUNTRY_NOT_FOUND  . . . . . . .  	Alias	 ERROR_FILE_NOT_FOUND		
CREAT  . . . . . . . . . . . . .  	Number	003C	
CREATENEWFILE  . . . . . . . . .  	Number	005B	
CREATETEMPFILE . . . . . . . . .  	Number	005A	
CREATE_PROCESS_DATA_BLOCK  . . .  	Number	0026	
CREATMES . . . . . . . . . . . .  	V BYTE 	0000	CONST	External
CREAT_ACCESS_DENIED  . . . . . .  	Alias	 ERROR_ACCESS_DENIED		
CREAT_PATH_NOT_FOUND . . . . . .  	Alias	 ERROR_PATH_NOT_FOUND		
CREAT_TOO_MANY_OPEN_FILES  . . .  	Alias	 ERROR_TOO_MANY_OPEN_FILES		
CROSSCHK . . . . . . . . . . . .  	L NEAR	03E2	CODE
CROSSCNT . . . . . . . . . . . .  	V WORD 	0000	CONST	External
CROSSLINK  . . . . . . . . . . .  	L NEAR	0454	CODE
CROSSLINKJ . . . . . . . . . . .  	L NEAR	03E0	CODE
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 07:53:02

CHKPROC - Procedures called from chkdsk                     Symbols-7
                                                             

CROSSLOOK  . . . . . . . . . . .  	L NEAR	03C0	CODE
CROSSMES_POST  . . . . . . . . .  	V BYTE 	0000	CONST	External
CROSSMES_PRE . . . . . . . . . .  	V BYTE 	0000	CONST	External
CSIZE  . . . . . . . . . . . . .  	V BYTE 	0000	DATA	External
CURDIR_INVALID_DRIVE . . . . . .  	Alias	 ERROR_INVALID_DRIVE		
CURISROOT  . . . . . . . . . . .  	L NEAR	0930	CODE
CURRENT_DIR  . . . . . . . . . .  	Number	0047	
C_BS . . . . . . . . . . . . . .  	Number	0008	
C_CR . . . . . . . . . . . . . .  	Number	000D	
C_DEL  . . . . . . . . . . . . .  	Number	007F	
C_ETB  . . . . . . . . . . . . .  	Number	0017	
C_ETX  . . . . . . . . . . . . .  	Number	0003	
C_HT . . . . . . . . . . . . . .  	Number	0009	
C_LF . . . . . . . . . . . . . .  	Number	000A	
C_NAK  . . . . . . . . . . . . .  	Number	0015	

DATTOK . . . . . . . . . . . . .  	L NEAR	01CE	CODE
DDATTOK  . . . . . . . . . . . .  	L NEAR	0244	CODE
DDLINKOK . . . . . . . . . . . .  	L NEAR	0260	CODE
DDOTENT  . . . . . . . . . . . .  	V BYTE 	0000	CONST	External
DDSIZOK  . . . . . . . . . . . .  	L NEAR	0284	CODE
DDSIZOKJ . . . . . . . . . . . .  	L NEAR	037A	CODE
DEALLOC  . . . . . . . . . . . .  	Number	0049	
DEALLOC_ARENA_TRASHED  . . . . .  	Alias	 ERROR_ARENA_TRASHED		
DEALLOC_INVALID_BLOCK  . . . . .  	Alias	 ERROR_INVALID_BLOCK		
DELLOOP  . . . . . . . . . . . .  	L NEAR	0016	CODE
DEVID_BLOCK_DEV  . . . . . . . .  	Number	001F	
DEVID_DEVICE . . . . . . . . . .  	Number	0080	
DEVID_DEVICE_CLOCK . . . . . . .  	Number	0008	
DEVID_DEVICE_CON_IN  . . . . . .  	Number	0001	
DEVID_DEVICE_CON_OUT . . . . . .  	Number	0002	
DEVID_DEVICE_EOF . . . . . . . .  	Number	0040	
DEVID_DEVICE_NULL  . . . . . . .  	Number	0004	
DEVID_DEVICE_RAW . . . . . . . .  	Number	0020	
DEVID_DEVICE_SPECIAL . . . . . .  	Number	0010	
DEVID_EOF  . . . . . . . . . . .  	Number	0040	
DEVID_FILE_CLEAN . . . . . . . .  	Number	0040	
DEVID_FILE_MASK_DRIVE  . . . . .  	Number	003F	
DEVID_ISCIN  . . . . . . . . . .  	Number	0001	
DEVID_ISCLK  . . . . . . . . . .  	Number	0008	
DEVID_ISCOT  . . . . . . . . . .  	Number	0002	
DEVID_ISDEV  . . . . . . . . . .  	Number	0080	
DEVID_ISNUL  . . . . . . . . . .  	Number	0004	
DEVID_RAW  . . . . . . . . . . .  	Number	0020	
DEVID_SPECIAL  . . . . . . . . .  	Number	0010	
DIRBUF . . . . . . . . . . . . .  	V WORD 	0000	CONST	External
DIRCHAR  . . . . . . . . . . . .  	V BYTE 	0000	CONST	External
DIRCNT . . . . . . . . . . . . .  	V WORD 	0000	CONST	External
DIRDONE  . . . . . . . . . . . .  	L NEAR	02B3	CODE
DIRECMES . . . . . . . . . . . .  	V BYTE 	0000	CONST	External
DIRPRI . . . . . . . . . . . . .  	Number	000F	
DIRPROC  . . . . . . . . . . . .  	L NEAR	0149	CODE	Global
DIRSIZ . . . . . . . . . . . . .  	V WORD 	0000	CONST	External
DIRSTRLEN  . . . . . . . . . . .  	Number	0040	
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 07:53:02

CHKPROC - Procedures called from chkdsk                     Symbols-8
                                                             

DIRTYFAT . . . . . . . . . . . .  	V BYTE 	0000	CONST	External
DIR_SEARCH_FIRST . . . . . . . .  	Number	0011	
DIR_SEARCH_NEXT  . . . . . . . .  	Number	0012	
DISK_RESET . . . . . . . . . . .  	Number	000D	
DISP16BITS . . . . . . . . . . .  	L NEAR	0000	CODE	External
DISPCLUS . . . . . . . . . . . .  	L NEAR	0000	CODE	External
DISPFRB  . . . . . . . . . . . .  	L NEAR	060A	CODE
DLINKOK  . . . . . . . . . . . .  	L NEAR	01EA	CODE
DOCRLF . . . . . . . . . . . . .  	L NEAR	0000	CODE	External
DODDH  . . . . . . . . . . . . .  	L NEAR	02B0	CODE
DOEXTMES1  . . . . . . . . . . .  	L NEAR	0048	CODE
DOEXTMES2  . . . . . . . . . . .  	L NEAR	00B9	CODE
DOEXTMES3  . . . . . . . . . . .  	L NEAR	012A	CODE
DOFIX  . . . . . . . . . . . . .  	V BYTE 	0000	CONST	External
DOINT26  . . . . . . . . . . . .  	L NEAR	0000	CODE	External
DONE . . . . . . . . . . . . . .  	L NEAR	07FD	CODE	Global
DOROOTDIR  . . . . . . . . . . .  	L NEAR	0888	CODE
DOS_MAJOR_VERSION  . . . . . . .  	Number	0002	
DOS_MINOR_VERSION  . . . . . . .  	Number	000B	
DOTCOMBMES . . . . . . . . . . .  	L NEAR	0000	CODE	External
DOTDOTHARDWAY  . . . . . . . . .  	L NEAR	0000	CODE
DOTDOTOK . . . . . . . . . . . .  	L NEAR	021B	CODE
DOTENT . . . . . . . . . . . . .  	V BYTE 	0000	CONST	External
DOTGOON  . . . . . . . . . . . .  	L NEAR	00A3	CODE
DOTMES . . . . . . . . . . . . .  	V BYTE 	0000	CONST	External
DOTOK  . . . . . . . . . . . . .  	L NEAR	01B2	CODE
DOTSBAD  . . . . . . . . . . . .  	L NEAR	0136	CODE
DOTSNOGOOD . . . . . . . . . . .  	V BYTE 	0000	DATA	External
DPBSIZ . . . . . . . . . . . . .  	Number	005E	
DPROC1 . . . . . . . . . . . . .  	L NEAR	0319	CODE
DPROC2 . . . . . . . . . . . . .  	L NEAR	0337	CODE
DRVCHAR  . . . . . . . . . . . .  	Number	003A	
DSIZE  . . . . . . . . . . . . .  	V WORD 	0000	DATA	External
DSIZOK . . . . . . . . . . . . .  	L NEAR	020E	CODE
DSKSIZ . . . . . . . . . . . . .  	Number	000D	
DUP2_INVALID_HANDLE  . . . . . .  	Alias	 ERROR_INVALID_HANDLE		
DUP_INVALID_HANDLE . . . . . . .  	Alias	 ERROR_INVALID_HANDLE		
DUP_PDB  . . . . . . . . . . . .  	Number	0055	
DUP_TOO_MANY_OPEN_FILES  . . . .  	Alias	 ERROR_TOO_MANY_OPEN_FILES		

ENTMADE  . . . . . . . . . . . .  	L NEAR	06FD	CODE
ENTRYPOINT . . . . . . . . . . .  	Number	00C0	
ENTSIZ . . . . . . . . . . . . .  	Number	0028	
EPRINT . . . . . . . . . . . . .  	L NEAR	0000	CODE	External
ERRCNT . . . . . . . . . . . . .  	V BYTE 	0000	DATA	External
ERREX  . . . . . . . . . . . . .  	L NEAR	08EE	CODE
ERRLOOP  . . . . . . . . . . . .  	L NEAR	093F	CODE
ERROR_ACCESS_DENIED  . . . . . .  	Number	0005	
ERROR_ARENA_TRASHED  . . . . . .  	Number	0007	
ERROR_BAD_ENVIRONMENT  . . . . .  	Number	000A	
ERROR_BAD_FORMAT . . . . . . . .  	Number	000B	
ERROR_CURRENT_DIRECTORY  . . . .  	Number	0010	
ERROR_FILE_NOT_FOUND . . . . . .  	Number	0002	
ERROR_INVALID_ACCESS . . . . . .  	Number	000C	
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 07:53:02

CHKPROC - Procedures called from chkdsk                     Symbols-9
                                                             

ERROR_INVALID_BLOCK  . . . . . .  	Number	0009	
ERROR_INVALID_DATA . . . . . . .  	Number	000D	
ERROR_INVALID_DRIVE  . . . . . .  	Number	000F	
ERROR_INVALID_FUNCTION . . . . .  	Number	0001	
ERROR_INVALID_HANDLE . . . . . .  	Number	0006	
ERROR_NOT_ENOUGH_MEMORY  . . . .  	Number	0008	
ERROR_NOT_SAME_DEVICE  . . . . .  	Number	0011	
ERROR_NO_MORE_FILES  . . . . . .  	Number	0012	
ERROR_PATH_NOT_FOUND . . . . . .  	Number	0003	
ERROR_TOO_MANY_OPEN_FILES  . . .  	Number	0004	
ERRSUB . . . . . . . . . . . . .  	V WORD 	0000	CONST	External
EXEC . . . . . . . . . . . . . .  	Number	004B	
EXEC_BAD_ENVIRONMENT . . . . . .  	Alias	 ERROR_BAD_ENVIRONMENT		
EXEC_BAD_FORMAT  . . . . . . . .  	Alias	 ERROR_BAD_FORMAT		
EXEC_FILE_NOT_FOUND  . . . . . .  	Alias	 ERROR_FILE_NOT_FOUND		
EXEC_FUNC_NO_EXECUTE . . . . . .  	Number	0001	
EXEC_FUNC_OVERLAY  . . . . . . .  	Number	0002	
EXEC_INVALID_FUNCTION  . . . . .  	Alias	 ERROR_INVALID_FUNCTION		
EXEC_NOT_ENOUGH_MEMORY . . . . .  	Alias	 ERROR_NOT_ENOUGH_MEMORY		
EXE_VALID_OLD_SIGNATURE  . . . .  	Number	4D5A	
EXE_VALID_SIGNATURE  . . . . . .  	Number	5A4D	
EXIT . . . . . . . . . . . . . .  	Number	004C	
EXIT_ABORT . . . . . . . . . . .  	Number	0000	
EXIT_CTRL_C  . . . . . . . . . .  	Number	0001	
EXIT_HARD_ERROR  . . . . . . . .  	Number	0002	
EXIT_KEEP_PROCESS  . . . . . . .  	Number	0003	
EXIT_TERMINATE . . . . . . . . .  	Number	0000	

FALSE  . . . . . . . . . . . . .  	Number	0000	
FAT  . . . . . . . . . . . . . .  	V WORD 	0000	DATA	External
FATAL  . . . . . . . . . . . . .  	L NEAR	094C	CODE	Global
FATALMES . . . . . . . . . . . .  	V BYTE 	0000	CONST	External
FATMAP . . . . . . . . . . . . .  	V WORD 	0000	DATA	External
FATPRI . . . . . . . . . . . . .  	Number	001E	
FCB_CLOSE  . . . . . . . . . . .  	Number	0010	
FCB_CREATE . . . . . . . . . . .  	Number	0016	
FCB_DELETE . . . . . . . . . . .  	Number	0013	
FCB_OPEN . . . . . . . . . . . .  	Number	000F	
FCB_RANDOM_READ  . . . . . . . .  	Number	0021	
FCB_RANDOM_READ_BLOCK  . . . . .  	Number	0027	
FCB_RANDOM_WRITE . . . . . . . .  	Number	0022	
FCB_RANDOM_WRITE_BLOCK . . . . .  	Number	0028	
FCB_RENAME . . . . . . . . . . .  	Number	0017	
FCB_SEQ_READ . . . . . . . . . .  	Number	0014	
FCB_SEQ_WRITE  . . . . . . . . .  	Number	0015	
FCB_TO_ASCZ  . . . . . . . . . .  	L NEAR	0000	CODE	External
FIGREC . . . . . . . . . . . . .  	L NEAR	0000	CODE	External
FILCNT . . . . . . . . . . . . .  	V WORD 	0000	CONST	External
FILDIRENT  . . . . . . . . . . .  	Number	0010	
FILETIMES_INVALID_FUNCTION . . .  	Alias	 ERROR_INVALID_FUNCTION		
FILETIMES_INVALID_HANDLE . . . .  	Alias	 ERROR_INVALID_HANDLE		
FILE_TIMES . . . . . . . . . . .  	Number	0057	
FILPERPROC . . . . . . . . . . .  	Number	0014	
FILSIZ . . . . . . . . . . . . .  	V WORD 	0000	CONST	External
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 07:53:02

CHKPROC - Procedures called from chkdsk                     Symbols-10
                                                             

FINDCHAIN  . . . . . . . . . . .  	L NEAR	060E	CODE	Global
FINDEND  . . . . . . . . . . . .  	L NEAR	0010	CODE
FINDFIRST_FILE_NOT_FOUND . . . .  	Alias	 ERROR_FILE_NOT_FOUND		
FINDFIRST_NO_MORE_FILES  . . . .  	Alias	 ERROR_NO_MORE_FILES		
FINDNEXT_NO_MORE_FILES . . . . .  	Alias	 ERROR_NO_MORE_FILES		
FIND_FIRST . . . . . . . . . . .  	Number	004E	
FIND_NEXT  . . . . . . . . . . .  	Number	004F	
FIXENT . . . . . . . . . . . . .  	L NEAR	0818	CODE
FIXENT2  . . . . . . . . . . . .  	L NEAR	0807	CODE
FIXMES . . . . . . . . . . . . .  	V BYTE 	0000	CONST	External
FIXMFLG  . . . . . . . . . . . .  	V BYTE 	0000	CONST	External
FPROC1 . . . . . . . . . . . . .  	L NEAR	02CE	CODE
FRAGMENT . . . . . . . . . . . .  	V BYTE 	0000	CONST	External
FREEBYMESF_POST  . . . . . . . .  	V BYTE 	0000	CONST	External
FREEBYMESF_PRE . . . . . . . . .  	V BYTE 	0000	CONST	External
FREEBYMES_POST . . . . . . . . .  	V BYTE 	0000	CONST	External
FREEBYMES_PRE  . . . . . . . . .  	V BYTE 	0000	CONST	External
FREEMES  . . . . . . . . . . . .  	V BYTE 	0000	CONST	External
FREEPRI  . . . . . . . . . . . .  	Number	0000	

GETENT . . . . . . . . . . . . .  	L NEAR	0842	CODE
GETEXTENDEDERROR . . . . . . . .  	Number	0059	
GETFILSIZ  . . . . . . . . . . .  	L NEAR	0743	CODE
GET_CURRENT_PDB  . . . . . . . .  	Number	0051	
GET_DATE . . . . . . . . . . . .  	Number	002A	
GET_DEFAULT_DPB  . . . . . . . .  	Number	001F	
GET_DEFAULT_DRIVE  . . . . . . .  	Number	0019	
GET_DMA  . . . . . . . . . . . .  	Number	002F	
GET_DPB  . . . . . . . . . . . .  	Number	0032	
GET_DRIVE_FREESPACE  . . . . . .  	Number	0036	
GET_FCB_FILE_LENGTH  . . . . . .  	Number	0023	
GET_FCB_POSITION . . . . . . . .  	Number	0024	
GET_INDOS_FLAG . . . . . . . . .  	Number	0034	
GET_INTERRUPT_VECTOR . . . . . .  	Number	0035	
GET_IN_VARS  . . . . . . . . . .  	Number	0052	
GET_TIME . . . . . . . . . . . .  	Number	002C	
GET_VERIFY_ON_WRITE  . . . . . .  	Number	0054	
GET_VERSION  . . . . . . . . . .  	Number	0030	
GOTCLUS  . . . . . . . . . . . .  	L NEAR	0884	CODE
GOTENT . . . . . . . . . . . . .  	L NEAR	06AF	CODE
GOTEOF . . . . . . . . . . . . .  	L NEAR	0756	CODE
GOTORPHNAM . . . . . . . . . . .  	L NEAR	06D5	CODE

HARDCH . . . . . . . . . . . . .  	V DWORD	0000	DATA	External
HAVCLUS  . . . . . . . . . . . .  	L NEAR	0519	CODE
HAVFIX . . . . . . . . . . . . .  	V BYTE 	0000	CONST	External
HECODE . . . . . . . . . . . . .  	V BYTE 	0000	CONST	External
HIDCNT . . . . . . . . . . . . .  	V WORD 	0000	CONST	External
HIDDN  . . . . . . . . . . . . .  	Number	0002	
HIDENFILE  . . . . . . . . . . .  	L NEAR	02F8	CODE
HIDSIZ . . . . . . . . . . . . .  	V WORD 	0000	CONST	External

INDENT . . . . . . . . . . . . .  	V BYTE 	0000	CONST	External
INSERTEOF  . . . . . . . . . . .  	L NEAR	0654	CODE
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 07:53:02

CHKPROC - Procedures called from chkdsk                     Symbols-11
                                                             

INTBASE  . . . . . . . . . . . .  	Number	0080	
INTERNATIONAL  . . . . . . . . .  	Number	0038	
INTERNATIONAL_INVALID_FUNCTION .  	Alias	 ERROR_INVALID_FUNCTION		
INTERNAT_BLOCK_MAX . . . . . . .  	Number	0020	
INTTAB . . . . . . . . . . . . .  	Number	0020	
INT_23 . . . . . . . . . . . . .  	L NEAR	097F	CODE	Global
INT_24 . . . . . . . . . . . . .  	F PROC	0963	CODE	Global	Length = 0012
INT_24_BACK  . . . . . . . . . .  	L NEAR	0975	CODE
INT_24_RETADDR . . . . . . . . .  	L WORD 	0961	CODE
INT_ABORT  . . . . . . . . . . .  	Alias	 INTTAB		
INT_COMMAND  . . . . . . . . . .  	Number	0021	
INT_CTRL_C . . . . . . . . . . .  	Number	0023	
INT_DISK_READ  . . . . . . . . .  	Number	0025	
INT_DISK_WRITE . . . . . . . . .  	Number	0026	
INT_FASTCON  . . . . . . . . . .  	Number	0029	
INT_FATAL_ABORT  . . . . . . . .  	Number	0024	
INT_KEEP_PROCESS . . . . . . . .  	Number	0027	
INT_SPOOLER  . . . . . . . . . .  	Number	0028	
INT_TERMINATE  . . . . . . . . .  	Number	0022	
IOCTL  . . . . . . . . . . . . .  	Number	0044	
IOCTL_INVALID_DATA . . . . . . .  	Alias	 ERROR_INVALID_DATA		
IOCTL_INVALID_FUNCTION . . . . .  	Alias	 ERROR_INVALID_FUNCTION		
IOCTL_INVALID_HANDLE . . . . . .  	Alias	 ERROR_INVALID_HANDLE		
IRETI  . . . . . . . . . . . . .  	L NEAR	097E	CODE
ISCROSS  . . . . . . . . . . . .  	V BYTE 	0000	DATA	External
ISDIR  . . . . . . . . . . . . .  	Number	0010	

KEEP_PROCESS . . . . . . . . . .  	Number	0031	

LBRPRI . . . . . . . . . . . . .  	Number	0002	
LBWPRI . . . . . . . . . . . . .  	Number	0004	
LCLUS  . . . . . . . . . . . . .  	V WORD 	0000	CONST	External
LOCKOPER . . . . . . . . . . . .  	Number	005C	
LPDONE . . . . . . . . . . . . .  	L NEAR	094B	CODE
LSEEK  . . . . . . . . . . . . .  	Number	0042	
LSEEK_INVALID_FUNCTION . . . . .  	Alias	 ERROR_INVALID_FUNCTION		
LSEEK_INVALID_HANDLE . . . . . .  	Alias	 ERROR_INVALID_HANDLE		

MAKFILLP . . . . . . . . . . . .  	L NEAR	069D	CODE
MAKFILLPJ  . . . . . . . . . . .  	L NEAR	0723	CODE
MAKORPHNAM . . . . . . . . . . .  	L NEAR	0730	CODE
MARKFAT  . . . . . . . . . . . .  	L NEAR	03F1	CODE
MARKMAP  . . . . . . . . . . . .  	L NEAR	0552	CODE
MCLUS  . . . . . . . . . . . . .  	V WORD 	0000	DATA	External
MESD1  . . . . . . . . . . . . .  	L NEAR	0054	CODE
MESD2  . . . . . . . . . . . . .  	L NEAR	00C5	CODE
MI_INT . . . . . . . . . . . . .  	Number	00CD	
MI_LONG_CALL . . . . . . . . . .  	Number	009A	
MI_LONG_JMP  . . . . . . . . . .  	Number	00EA	
MI_LONG_RET  . . . . . . . . . .  	Number	00CB	
MKDIR  . . . . . . . . . . . . .  	Number	0039	
MKDIR_ACCESS_DENIED  . . . . . .  	Alias	 ERROR_ACCESS_DENIED		
MKDIR_PATH_NOT_FOUND . . . . . .  	Alias	 ERROR_PATH_NOT_FOUND		
MOREDIR  . . . . . . . . . . . .  	L NEAR	02B9	CODE
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 07:53:02

CHKPROC - Procedures called from chkdsk                     Symbols-12
                                                             

MRKBAD . . . . . . . . . . . . .  	L NEAR	0438	CODE
MRKOK  . . . . . . . . . . . . .  	L NEAR	044F	CODE

NAM0 . . . . . . . . . . . . . .  	L NEAR	0734	CODE
NAMBUF . . . . . . . . . . . . .  	V BYTE 	0000	DATA	External
NAMMADE  . . . . . . . . . . . .  	L NEAR	0741	CODE
NCLUS  . . . . . . . . . . . . .  	L NEAR	0745	CODE
NDOTMES  . . . . . . . . . . . .  	V BYTE 	0000	CONST	External
NEWDIR . . . . . . . . . . . . .  	L NEAR	030D	CODE
NEXTCLUS . . . . . . . . . . . .  	L NEAR	05DF	CODE
NEXTCLUS2  . . . . . . . . . . .  	L NEAR	067A	CODE
NEXTENT  . . . . . . . . . . . .  	L NEAR	0710	CODE
NEXTORPH . . . . . . . . . . . .  	L NEAR	0726	CODE
NFIX . . . . . . . . . . . . . .  	L NEAR	0102	CODE
NOCHAINREC . . . . . . . . . . .  	L NEAR	05C2	CODE
NOCLUSTERS . . . . . . . . . . .  	L NEAR	04CB	CODE
NOCLUSTERSJ  . . . . . . . . . .  	L NEAR	03EE	CODE
NODDOT . . . . . . . . . . . . .  	L NEAR	00AC	CODE
NODDOTJ  . . . . . . . . . . . .  	L NEAR	0218	CODE
NODOT  . . . . . . . . . . . . .  	L NEAR	003B	CODE
NOISY  . . . . . . . . . . . . .  	V BYTE 	0000	CONST	External
NONULLDERR . . . . . . . . . . .  	L NEAR	01A2	CODE
NOPRINT  . . . . . . . . . . . .  	L NEAR	0183	CODE
NOPRINT2 . . . . . . . . . . . .  	L NEAR	02E7	CODE
NORECDDOT  . . . . . . . . . . .  	V BYTE 	0000	CONST	External
NORECDOT . . . . . . . . . . . .  	V BYTE 	0000	CONST	External
NORMFILE . . . . . . . . . . . .  	L NEAR	0302	CODE
NOSIZE . . . . . . . . . . . . .  	L NEAR	04C4	CODE
NOWRITE  . . . . . . . . . . . .  	L NEAR	07E8	CODE
NO_ERROR_OCCURRED  . . . . . . .  	Text  0                                                              ?		
NUL  . . . . . . . . . . . . . .  	V BYTE 	0000	CONST	External
NULDMES  . . . . . . . . . . . .  	V BYTE 	0000	CONST	External
NULLDIRERR . . . . . . . . . . .  	L NEAR	011E	CODE
NULNZ  . . . . . . . . . . . . .  	V BYTE 	0000	CONST	External
NXTORP . . . . . . . . . . . . .  	L NEAR	0713	CODE

OEM_C1 . . . . . . . . . . . . .  	Number	00F9	
OEM_C2 . . . . . . . . . . . . .  	Number	00FA	
OEM_C3 . . . . . . . . . . . . .  	Number	00FB	
OEM_C4 . . . . . . . . . . . . .  	Number	00FC	
OEM_C5 . . . . . . . . . . . . .  	Number	00FD	
OEM_C6 . . . . . . . . . . . . .  	Number	00FE	
OEM_C7 . . . . . . . . . . . . .  	Number	00FF	
OPAGAIN  . . . . . . . . . . . .  	L NEAR	06CA	CODE
OPEN . . . . . . . . . . . . . .  	Number	003D	
OPEN_ACCESS_DENIED . . . . . . .  	Alias	 ERROR_ACCESS_DENIED		
OPEN_FILE_NOT_FOUND  . . . . . .  	Alias	 ERROR_FILE_NOT_FOUND		
OPEN_FOR_BOTH  . . . . . . . . .  	Number	0002	
OPEN_FOR_READ  . . . . . . . . .  	Number	0000	
OPEN_FOR_WRITE . . . . . . . . .  	Number	0001	
OPEN_INVALID_ACCESS  . . . . . .  	Alias	 ERROR_INVALID_ACCESS		
OPEN_TOO_MANY_OPEN_FILES . . . .  	Alias	 ERROR_TOO_MANY_OPEN_FILES		
ORPHAN . . . . . . . . . . . . .  	L NEAR	0597	CODE
ORPHCNT  . . . . . . . . . . . .  	V WORD 	0000	CONST	External
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 07:53:02

CHKPROC - Procedures called from chkdsk                     Symbols-13
                                                             

ORPHEXT  . . . . . . . . . . . .  	V BYTE 	0000	CONST	External
ORPHFCB  . . . . . . . . . . . .  	V BYTE 	0000	CONST	External
ORPHSIZ  . . . . . . . . . . . .  	V WORD 	0000	CONST	External

PACK . . . . . . . . . . . . . .  	L NEAR	051E	CODE
PACKIN . . . . . . . . . . . . .  	L NEAR	054C	CODE
PARSE_FILE_DESCRIPTOR  . . . . .  	Number	0029	
PARSTR . . . . . . . . . . . . .  	V BYTE 	0000	CONST	External
PCURRLP  . . . . . . . . . . . .  	L NEAR	0924	CODE
PRINT  . . . . . . . . . . . . .  	L NEAR	0000	CODE	External
PRINTCURRDIR . . . . . . . . . .  	L NEAR	08FF	CODE
PRINTCURRDIRERR  . . . . . . . .  	L NEAR	08DC	CODE	Global
PRINTFMES  . . . . . . . . . . .  	L NEAR	05F6	CODE
PRINTTHISEL  . . . . . . . . . .  	L NEAR	08F2	CODE
PRINTTHISEL2 . . . . . . . . . .  	L NEAR	08F7	CODE	Global
PRINTTHISELERR . . . . . . . . .  	L NEAR	08E6	CODE
PRINTTRMES . . . . . . . . . . .  	L NEAR	0391	CODE
PROMPTYN . . . . . . . . . . . .  	L NEAR	0000	CODE	External
PRTCHR . . . . . . . . . . . . .  	L NEAR	0000	CODE	External
PTRANDIR . . . . . . . . . . . .  	V BYTE 	0000	CONST	External
PTRANDIR2  . . . . . . . . . . .  	V BYTE 	0000	CONST	External

RAW_CON_INPUT  . . . . . . . . .  	Number	0007	
RAW_CON_IO . . . . . . . . . . .  	Number	0006	
RDOK2  . . . . . . . . . . . . .  	L NEAR	08A7	CODE
RDONE  . . . . . . . . . . . . .  	L NEAR	099A	CODE	Global
RDONLY . . . . . . . . . . . . .  	Number	0001	
RDRETRY  . . . . . . . . . . . .  	L NEAR	0891	CODE
RDSKERR  . . . . . . . . . . . .  	L NEAR	0000	CODE	External
READ . . . . . . . . . . . . . .  	Number	003F	
READ_ACCESS_DENIED . . . . . . .  	Alias	 ERROR_ACCESS_DENIED		
READ_INVALID_HANDLE  . . . . . .  	Alias	 ERROR_INVALID_HANDLE		
RECOVER  . . . . . . . . . . . .  	L NEAR	05AE	CODE
RENAME . . . . . . . . . . . . .  	Number	0056	
RENAME_ACCESS_DENIED . . . . . .  	Alias	 ERROR_ACCESS_DENIED		
RENAME_FILE_NOT_FOUND  . . . . .  	Alias	 ERROR_FILE_NOT_FOUND		
RENAME_NOT_SAME_DEVICE . . . . .  	Alias	 ERROR_NOT_SAME_DEVICE		
RET100 . . . . . . . . . . . . .  	L NEAR	0722	CODE
RET14  . . . . . . . . . . . . .  	L NEAR	08DB	CODE
RET18  . . . . . . . . . . . . .  	L NEAR	05AD	CODE
RET20  . . . . . . . . . . . . .  	L NEAR	0817	CODE
RET8 . . . . . . . . . . . . . .  	L NEAR	0779	CODE
REWRITE  . . . . . . . . . . . .  	L NEAR	078A	CODE
RMDIR  . . . . . . . . . . . . .  	Number	003A	
RMDIR_ACCESS_DENIED  . . . . . .  	Alias	 ERROR_ACCESS_DENIED		
RMDIR_CURRENT_DIRECTORY  . . . .  	Alias	 ERROR_CURRENT_DIRECTORY		
RMDIR_PATH_NOT_FOUND . . . . . .  	Alias	 ERROR_PATH_NOT_FOUND		
ROOTDIR  . . . . . . . . . . . .  	L NEAR	028A	CODE
ROOTDIRJ . . . . . . . . . . . .  	L NEAR	0146	CODE
RPRI . . . . . . . . . . . . . .  	Number	0006	

SECBUF . . . . . . . . . . . . .  	V WORD 	0000	DATA	External
SECONDPASS . . . . . . . . . . .  	V BYTE 	0000	CONST	External
SERVERCALL . . . . . . . . . . .  	Number	005D	
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 07:53:02

CHKPROC - Procedures called from chkdsk                     Symbols-14
                                                             

SETBLOCK . . . . . . . . . . . .  	Number	004A	
SETBLOCK_ARENA_TRASHED . . . . .  	Alias	 ERROR_ARENA_TRASHED		
SETBLOCK_INVALID_BLOCK . . . . .  	Alias	 ERROR_INVALID_BLOCK		
SETBLOCK_INVALID_FUNCTION  . . .  	Alias	 ERROR_INVALID_FUNCTION		
SETBLOCK_NOT_ENOUGH_MEMORY . . .  	Alias	 ERROR_NOT_ENOUGH_MEMORY		
SETCURR  . . . . . . . . . . . .  	L NEAR	002A	CODE
SETDPB . . . . . . . . . . . . .  	Number	0053	
SETMARK  . . . . . . . . . . . .  	L NEAR	0567	CODE
SETROOT  . . . . . . . . . . . .  	L NEAR	0034	CODE
SETTERM  . . . . . . . . . . . .  	L NEAR	0027	CODE
SET_CTRL_C_TRAPPING  . . . . . .  	Number	0033	
SET_CURRENT_PDB  . . . . . . . .  	Number	0050	
SET_DATE . . . . . . . . . . . .  	Number	002B	
SET_DEFAULT_DRIVE  . . . . . . .  	Number	000E	
SET_DMA  . . . . . . . . . . . .  	Number	001A	
SET_INTERRUPT_VECTOR . . . . . .  	Number	0025	
SET_OEM_HANDLER  . . . . . . . .  	Number	00F8	
SET_TIME . . . . . . . . . . . .  	Number	002D	
SET_VERIFY_ON_WRITE  . . . . . .  	Number	002E	
SFCBSIZ  . . . . . . . . . . . .  	Number	002C	
SF_DEFAULT_NUMBER  . . . . . . .  	Number	0005	
SKIPLP . . . . . . . . . . . . .  	L NEAR	087B	CODE
SRFCBPT  . . . . . . . . . . . .  	V WORD 	0000	DATA	External
SSIZE  . . . . . . . . . . . . .  	V WORD 	0000	DATA	External
STACKISOK  . . . . . . . . . . .  	L NEAR	0166	CODE
STACKLIM . . . . . . . . . . . .  	V WORD 	0000	DATA	External
STACKMES . . . . . . . . . . . .  	V BYTE 	0000	CONST	External
STDAUX . . . . . . . . . . . . .  	Number	0003	
STDERR . . . . . . . . . . . . .  	Number	0002	
STDIN  . . . . . . . . . . . . .  	Number	0000	
STDOUT . . . . . . . . . . . . .  	Number	0001	
STDPRN . . . . . . . . . . . . .  	Number	0004	
STD_AUX_INPUT  . . . . . . . . .  	Number	0003	
STD_AUX_OUTPUT . . . . . . . . .  	Number	0004	
STD_CON_INPUT  . . . . . . . . .  	Number	0001	
STD_CON_INPUT_FLUSH  . . . . . .  	Number	000C	
STD_CON_INPUT_NO_ECHO  . . . . .  	Number	0008	
STD_CON_INPUT_STATUS . . . . . .  	Number	000B	
STD_CON_OUTPUT . . . . . . . . .  	Number	0002	
STD_CON_STRING_INPUT . . . . . .  	Number	000A	
STD_CON_STRING_OUTPUT  . . . . .  	Number	0009	
STD_PRINTER_OUTPUT . . . . . . .  	Number	0005	
SUBERRP  . . . . . . . . . . . .  	L NEAR	0000	CODE	External
SYSTM  . . . . . . . . . . . . .  	Number	0004	

THISDPB  . . . . . . . . . . . .  	V DWORD	0000	DATA	External
THISENT  . . . . . . . . . . . .  	Number	0017	
TRUE . . . . . . . . . . . . . .  	Number	FFFF	

UNLINK . . . . . . . . . . . . .  	Number	0041	
UNLINK_ACCESS_DENIED . . . . . .  	Alias	 ERROR_ACCESS_DENIED		
UNLINK_FILE_NOT_FOUND  . . . . .  	Alias	 ERROR_FILE_NOT_FOUND		
UNPACK . . . . . . . . . . . . .  	L NEAR	0500	CODE	Global
USERDEV  . . . . . . . . . . . .  	V BYTE 	0000	DATA	External
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 07:53:02

CHKPROC - Procedures called from chkdsk                     Symbols-15
                                                             

USERDIR  . . . . . . . . . . . .  	V BYTE 	0000	CONST	External
USERIDOPER . . . . . . . . . . .  	Number	005E	

VOLIDA . . . . . . . . . . . . .  	Number	0008	

WAIT . . . . . . . . . . . . . .  	Number	004D	
WANTROOT . . . . . . . . . . . .  	L NEAR	08AB	CODE
WDSKERR  . . . . . . . . . . . .  	L NEAR	0000	CODE	External
WPRI . . . . . . . . . . . . . .  	Number	0008	
WRITE  . . . . . . . . . . . . .  	Number	0040	
WRITE_ACCESS_DENIED  . . . . . .  	Alias	 ERROR_ACCESS_DENIED		
WRITE_INVALID_HANDLE . . . . . .  	Alias	 ERROR_INVALID_HANDLE		
WRTLOOP  . . . . . . . . . . . .  	L NEAR	07AD	CODE
WRTOK  . . . . . . . . . . . . .  	L NEAR	07D2	CODE

XDUP . . . . . . . . . . . . . .  	Number	0045	
XDUP2  . . . . . . . . . . . . .  	Number	0046	

ZEROTRUNC  . . . . . . . . . . .  	V BYTE 	0000	DATA	External


   2644 Source  Lines
   2706 Total   Lines
    752 Symbols

  14272 Bytes symbol space free

      0 Warning Errors
      0 Severe  Errors
