Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 17:21:29

RECOVER MS-DOS File/Disk Recovery Utility                   Page     1-1
                                                            

       1                                TITLE   RECOVER MS-DOS File/Disk Recove
					ry Utility 
       2                                ;--------------------------------------
					-------------------- 
       3                                ; 
       4                                ;       Recover - Program to rebuild an
					 ms.dos directory 
       5                                ; 
       6                                ;       Copyright 1982 by Microsoft Cor
					poration 
       7                                ;       Written by Chris Peters, April 
					1982 
       8                                ; 
       9                                ;--------------------------------------
					--------------------- 
      10                                ; 
      11                                ;REV 1.5 added header message ARR 
      12                                ; 
      13                                 
      14 = 0000                         FALSE   EQU     0 
      15 = FFFF                         TRUE    EQU     NOT FALSE 
      16                                 
      17                                 
      18 =                              IBMVER  EQU     true 
      19 =                              KANJI   EQU     FALSE 
      20                                 
      21 = 0021                         bdos    equ     21h 
      22 = 0020                         boot    equ     20h 
      23 = 0025                         aread   equ     25h 
      24 = 0026                         awrite  equ     26h 
      25                                 
      26                             C          INCLUDE DOSSYM.ASM 
      27                             C  include DOSMAC.ASM 
      28                             C  ; 
      29                             C  ; Macro file for MSDOS. 
      30                             C  ; 
      31                             C   
      32                             C  SUBTTL BREAK a listing into pages and g
					ive new subtitles 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 17:21:29

RECOVER MS-DOS File/Disk Recovery Utility                   Page     1-2
BREAK a listing into pages and give new subtitles           

      33                             C  PAGE 
      34                             C  BREAK MACRO subtitle 
      35                             C   SUBTTL subtitle 
      36                             C   PAGE 
      37                             C  ENDM 
      38                             C   
      39                             C  BREAK <I_NEED: declare a variable exter
					nal, if necessary, and allocate a size>
					 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 17:21:29

RECOVER MS-DOS File/Disk Recovery Utility                   Page     1-3
I_NEED: declare a variable external, if necessary, and alloc

      40                             C   
      41                             C  ; 
      42                             C  ; declare a variable external and alloc
					ate a size 
      43                             C  ; 
      44                             C  I_NEED MACRO sym,len 
      45                             C   DATA SEGMENT BYTE PUBLIC 'DATA' 
      46                             C   IFIDN <len>,<WORD> 
      47                             C   EXTRN &sym:WORD 
      48                             C   ELSE 
      49                             C   IFIDN <len>,<DWORD> 
      50                             C   EXTRN &sym:DWORD 
      51                             C   ELSE 
      52                             C   EXTRN &sym:BYTE 
      53                             C   ENDIF 
      54                             C   ENDIF 
      55                             C   DATA ENDS 
      56                             C  ENDM 
      57                             C   
      58                             C  ; 
      59                             C  ; call a procedure that may be external
					. The call will be short. 
      60                             C  ; 
      61                             C  invoke MACRO name 
      62                             C  .xcref 
      63                             C   IF2 
      64                             C   IFNDEF name 
      65                             C   EXTRN name:NEAR 
      66                             C   ENDIF 
      67                             C   ENDIF 
      68                             C  .cref 
      69                             C   CALL name 
      70                             C  ENDM 
      71                             C   
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 17:21:29

RECOVER MS-DOS File/Disk Recovery Utility                   Page     1-4
I_NEED: declare a variable external, if necessary, and alloc

      72                             C  PAGE 
      73                             C  ; 
      74                             C  ; jump to a label that may be external.
					 The jump will be near. 
      75                             C  ; 
      76                             C  transfer MACRO name 
      77                             C  .xcref 
      78                             C   IF2 
      79                             C   IFNDEF name 
      80                             C   EXTRN name:NEAR 
      81                             C   ENDIF 
      82                             C   ENDIF 
      83                             C  .cref 
      84                             C   JUMP name 
      85                             C  ENDM 
      86                             C   
      87                             C  ; 
      88                             C  ; get a short address in a word 
      89                             C  ; 
      90                             C  short_addr MACRO name 
      91                             C   IFDIF <name>,<?> 
      92                             C  .xcref 
      93                             C   IF2 
      94                             C   IFNDEF name 
      95                             C   EXTRN name:NEAR 
      96                             C   ENDIF 
      97                             C   ENDIF 
      98                             C  .cref 
      99                             C   DW OFFSET DOSGROUP:name 
     100                             C   ELSE 
     101                             C   DW ? 
     102                             C   ENDIF 
     103                             C  ENDM 
     104                             C   
     105                             C  ; 
     106                             C  ; get a long address in a dword 
     107                             C  ; 
     108                             C  long_addr MACRO name 
     109                             C  .xcref 
     110                             C   IF2 
     111                             C   IFNDEF name 
     112                             C   EXTRN name:NEAR 
     113                             C   ENDIF 
     114                             C  .cref 
     115                             C   DD name 
     116                             C  ENDM 
     117                             C   
     118                             C  ; 
     119                             C  ; declare a PROC near or far but PUBLIC
					 nonetheless 
     120                             C  ; 
     121                             C  procedure MACRO name,distance 
     122                             C   PUBLIC name 
     123                             C  name PROC distance 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 17:21:29

RECOVER MS-DOS File/Disk Recovery Utility                   Page     1-5
I_NEED: declare a variable external, if necessary, and alloc

     124                             C  ENDM 
     125                             C   
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 17:21:29

RECOVER MS-DOS File/Disk Recovery Utility                   Page     1-6
I_NEED: declare a variable external, if necessary, and alloc

     126                             C  PAGE 
     127                             C  ; 
     128                             C  ; define a data item to be public and o
					f an appropriate size/type 
     129                             C  ; 
     130                             C  I_AM MACRO name,size 
     131                             C   PUBLIC name 
     132                             C   
     133                             C   IFIDN <size>,<WORD> 
     134                             C  name DW ? 
     135                             C   ELSE 
     136                             C   IFIDN <size>,<DWORD> 
     137                             C  name DD ? 
     138                             C   ELSE 
     139                             C   IFIDN <size>,<BYTE> 
     140                             C  name DB ? 
     141                             C   ELSE 
     142                             C  name DB size DUP (?) 
     143                             C   ENDIF 
     144                             C   ENDIF 
     145                             C   ENDIF 
     146                             C  ENDM 
     147                             C   
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 17:21:29

RECOVER MS-DOS File/Disk Recovery Utility                   Page     1-7
I_NEED: declare a variable external, if necessary, and alloc

     148                             C  PAGE 
     149                             C  ; 
     150                             C  ; call the macro chain 
     151                             C  ; 
     152                             C  do_ext macro 
     153                             C  endm 
     154                             C   
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 17:21:29

RECOVER MS-DOS File/Disk Recovery Utility                   Page     1-8
I_NEED: declare a variable external, if necessary, and alloc

     155                             C  PAGE 
     156                             C   
     157                             C  ; 
     158                             C  ; define an entry in a procedure 
     159                             C  ; 
     160                             C  entry macro name 
     161                             C   PUBLIC name 
     162                             C  name: 
     163                             C  endm 
     164                             C   
     165                             C  BREAK <ERROR - print a message and then
					 jump to a label> 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 17:21:29

RECOVER MS-DOS File/Disk Recovery Utility                   Page     1-9
ERROR - print a message and then jump to a label            

     166                             C   
     167                             C  error macro code 
     168                             C   local a 
     169                             C  .xcref 
     170                             C   MOV AL,code 
     171                             C   transfer SYS_RET_ERR 
     172                             C  .cref 
     173                             C  ENDM 
     174                             C   
     175                             C  BREAK <JUMP - real jump that links up s
					hortwise> 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 17:21:29

RECOVER MS-DOS File/Disk Recovery Utility                   Page     1-10
JUMP - real jump that links up shortwise                    

     176                             C  ; 
     177                             C  ; given a label <lbl> either 2 byte jum
					p to another label <lbl>_J 
     178                             C  ; if it is near enough or 3 byte jump t
					o <lbl> 
     179                             C  ; 
     180                             C   
     181                             C  jump macro lbl 
     182                             C   local a 
     183                             C  .xcref 
     184                             C   a: 
     185                             C   ifndef lbl&_J ;; is this the first inv
					ocation 
     186                             C   JMP lbl 
     187                             C   ELSE 
     188                             C   IF lbl&_J GE $ 
     189                             C   JMP lbl 
     190                             C   ELSE 
     191                             C   IF ($-lbl&_J) GT 126 ;; is the jump to
					o far away? 
     192                             C   JMP lbl 
     193                             C   ELSE ;; do the short one... 
     194                             C   JMP lbl&_J 
     195                             C   ENDIF 
     196                             C   ENDIF 
     197                             C   ENDIF 
     198                             C   lbl&_j = a 
     199                             C  .cref 
     200                             C  endm 
     201                             C   
     202                             C  BREAK <RETURN - return from a function>
					 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 17:21:29

RECOVER MS-DOS File/Disk Recovery Utility                   Page     1-11
RETURN - return from a function                             

     203                             C   
     204                             C  return macro 
     205                             C   local a 
     206                             C  .xcref 
     207                             C  a: 
     208                             C   RET 
     209                             C  ret_l = a 
     210                             C  .cref 
     211                             C  endm 
     212                             C   
     213                             C  BREAK <CONDRET - conditional return> 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 17:21:29

RECOVER MS-DOS File/Disk Recovery Utility                   Page     1-12
CONDRET - conditional return                                

     214                             C   
     215                             C  makelab macro l,cc,ncc 
     216                             C   local a 
     217                             C   j&ncc a ;; j<NCC> a: 
     218                             C   return ;; return 
     219                             C   a: ;; a: 
     220                             C   ret_&cc = ret_l ;; define ret_<CC> to 
					be ret_l 
     221                             C  endm 
     222                             C   
     223                             C  condret macro cc,ncc 
     224                             C   local a,b 
     225                             C   ifdef ret_l ;; if ret_l is defined 
     226                             C   if (($ - ret_l) le 126) and ($ gt ret_
					l) 
     227                             C   ;; if ret_l is near enough then 
     228                             C   a: j&cc ret_l ;; a: j<CC> to ret_l 
     229                             C   ret_&cc = a ;; define ret_<CC> to be a
					: 
     230                             C   else 
     231                             C   makelab a,cc,ncc 
     232                             C   endif 
     233                             C   else 
     234                             C   ifdef ret_&cc ;; if ret_<CC> defined 
     235                             C   if (($ - ret_&cc) le 126) and ($ gt re
					t_&cc) 
     236                             C   ;; if ret_<CC> is near enough 
     237                             C   a: j&cc ret_&cc ;; a: j<CC> to ret_<CC
					> 
     238                             C   ret_&cc = a ;; define ret_<CC> to be a
					: 
     239                             C   else 
     240                             C   makelab a,cc,ncc 
     241                             C   endif 
     242                             C   else 
     243                             C   makelab a,cc,ncc 
     244                             C   endif 
     245                             C   endif 
     246                             C  endm 
     247                             C  ;condret macro cc,ncc 
     248                             C  ; local a,b 
     249                             C  ; ifdef ret_l ; if ret_l is defined 
     250                             C  ; if (($ - ret_l) le 126) and ($ gt ret
					_l) 
     251                             C  ; ; if ret_l is near enough then 
     252                             C  ; a: j&cc ret_l ; a: j<CC> to ret_l 
     253                             C  ; ret_&cc = a ; define ret_<CC> to be a
					: 
     254                             C  ; exitm 
     255                             C  ; endif 
     256                             C  ; endif 
     257                             C  ; ifdef ret_&cc ; if ret_<CC> defined 
     258                             C  ; if (($ - ret_&cc) le 126) and ($ gt r
					et_&cc) 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 17:21:29

RECOVER MS-DOS File/Disk Recovery Utility                   Page     1-13
CONDRET - conditional return                                

     259                             C  ; ; if ret_<CC> is near enough 
     260                             C  ; a: j&cc ret_&cc ; a: j<CC> to ret_<CC
					> 
     261                             C  ; ret_&cc = a ; define ret_<CC> to be a
					: 
     262                             C  ; exitm 
     263                             C  ; endif 
     264                             C  ; endif 
     265                             C  ; j&ncc a ; j<NCC> a: 
     266                             C  ; return ; return 
     267                             C  ; a: ; a: 
     268                             C  ; ret_&cc = ret_l ; define ret_<CC> to 
					be ret_l 
     269                             C  ;endm 
     270                             C  ; 
     271                             C  BREAK <RETZ - return if zero, links up 
					shortwise if necessary> 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 17:21:29

RECOVER MS-DOS File/Disk Recovery Utility                   Page     1-14
RETZ - return if zero, links up shortwise if necessary      

     272                             C   
     273                             C  retz macro 
     274                             C   condret z,nz 
     275                             C  endm 
     276                             C   
     277                             C  BREAK <RETNZ - return if not zero, link
					s up shortwise if necessary> 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 17:21:29

RECOVER MS-DOS File/Disk Recovery Utility                   Page     1-15
RETNZ - return if not zero, links up shortwise if necessary 

     278                             C   
     279                             C  retnz macro 
     280                             C   condret nz,z 
     281                             C  endm 
     282                             C   
     283                             C  BREAK <RETC - return if carry set, link
					s up shortwise if necessary> 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 17:21:29

RECOVER MS-DOS File/Disk Recovery Utility                   Page     1-16
RETC - return if carry set, links up shortwise if necessary 

     284                             C   
     285                             C  retc macro 
     286                             C   condret c,nc 
     287                             C  endm 
     288                             C   
     289                             C  BREAK <RETNC - return if not carry, lin
					ks up shortwise if necessary> 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 17:21:29

RECOVER MS-DOS File/Disk Recovery Utility                   Page     1-17
RETNC - return if not carry, links up shortwise if necessary

     290                             C   
     291                             C  retnc macro 
     292                             C   condret nc,c 
     293                             C  endm 
     294                             C   
     295                             C  BREAK <CONTEXT - set the DOS context to
					 a particular register> 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 17:21:29

RECOVER MS-DOS File/Disk Recovery Utility                   Page     1-18
CONTEXT - set the DOS context to a particular register      

     296                             C   
     297                             C  context macro r 
     298                             C   PUSH SS 
     299                             C   POP r 
     300                             C   ASSUME r:DOSGROUP 
     301                             C  endm 
     302                             C   
     303                             C  IF2 
     304                             C      %OUT    DOSSYM in Pass 2 
     305                             C  ENDIF 
     306                             C   
     307                             C  ENDIF 
     308                             C   
     309 = 0002                      C  DOS_MAJOR_VERSION   EQU      2 
     310 = 000B                      C  DOS_MINOR_VERSION   EQU     11 
     311                             C   
     312                             C  BREAK <Control character definitions> 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 17:21:29

RECOVER MS-DOS File/Disk Recovery Utility                   Page     1-19
Control character definitions                               

     313                             C   
     314 = 007F                      C  c_DEL       EQU     7Fh         ;    AS
					CII rubout or delete previous char 
     315 = 0008                      C  c_BS        EQU     08h         ; ^H AS
					CII backspace 
     316 = 000D                      C  c_CR        EQU     0Dh         ; ^M AS
					CII carriage return 
     317 = 000A                      C  c_LF        EQU     0Ah         ; ^J AS
					CII linefeed 
     318 = 0017                      C  c_ETB       EQU     17h         ; ^W AS
					CII end of transmission 
     319 = 0015                      C  c_NAK       EQU     15h         ; ^U AS
					CII negative acknowledge 
     320 = 0003                      C  c_ETX       EQU     03h         ; ^C AS
					CII end of text 
     321 = 0009                      C  c_HT        EQU     09h         ; ^I AS
					CII tab 
     322                             C   
     323                             C  BREAK <BPB Definition> 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 17:21:29

RECOVER MS-DOS File/Disk Recovery Utility                   Page     1-20
BPB Definition                                              

     324                             C   
     325                             C   
     326                             C  ;----+----+----+----+----+----+----+---
					-+----+----+----+----+----+----+----; 
     327                             C  ;                                      
					                                    ; 
     328                             C  ;            C  A  V  E  A  T     P  R 
					 O  G  R  A  M  M  E  R             ; 
     329                             C  ;                                      
					                                    ; 
     330                             C  ; Certain structures, constants and sys
					tem  calls  below  are  private  to ; 
     331                             C  ; the DOS  and  are  extremely  version
					-dependent.  They may change at any ; 
     332                             C  ; time at  the  implementors'  whim.   
					As  a  result,  they  must  not  be ; 
     333                             C  ; documented to  the  general  public. 
					  If  an  extreme case arises, they ; 
     334                             C  ; must be documented with this warning.
					                                    ; 
     335                             C  ;                                      
					                                    ; 
     336                             C  ; Those structures and constants that a
					re subject to  the  above  will  be ; 
     337                             C  ; marked and bracketed with the flag:  
					                                    ; 
     338                             C  ;                                      
					                                    ; 
     339                             C  ;            C  A  V  E  A  T     P  R 
					 O  G  R  A  M  M  E  R             ; 
     340                             C  ;                                      
					                                    ; 
     341                             C  ;----+----+----+----+----+----+----+---
					-+----+----+----+----+----+----+----; 
     342                             C   
     343                             C  BREAK  <Bios Parameter Block> 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 17:21:29

RECOVER MS-DOS File/Disk Recovery Utility                   Page     1-21
Bios Parameter Block                                        

     344                             C  ;----+----+----+----+----+----+----+---
					-+----+----+----+----+----+----+----; 
     345                             C  ;            C  A  V  E  A  T     P  R 
					 O  G  R  A  M  M  E  R             ; 
     346                             C  ;                                      
					                                    ; 
     347                             C   
     348                             C  ; Bios Parameter Block definition 
     349                             C  ; This structure is used to build a ful
					l DPB 
     350                             C   
     351                             C  BPBLOCK STRUC 
     352 0000  ????                  C  BPSECSZ DW      ?       ; Size in bytes
					 of physical sector 
     353 0002  ??                    C  BPCLUS  DB      ?       ; Sectors/Alloc
					 unit 
     354 0003  ????                  C  BPRES   DW      ?       ; Number of res
					erved sectors 
     355 0005  ??                    C  BPFTCNT DB      ?       ; Number of FAT
					s 
     356 0006  ????                  C  BPDRCNT DW      ?       ; Number of dir
					ectory entries 
     357 0008  ????                  C  BPSCCNT DW      ?       ; Total number 
					of sectors 
     358 000A  ??                    C  BPMEDIA DB      ?       ; Media descrip
					tor byte 
     359 000B  ????                  C  BPFTSEC DW      ?       ; Number of sec
					tors taken up by one FAT 
     360 000D                        C  BPBLOCK ENDS 
     361                             C  ;                                      
					                                    ; 
     362                             C  ;            C  A  V  E  A  T     P  R 
					 O  G  R  A  M  M  E  R             ; 
     363                             C  ;----+----+----+----+----+----+----+---
					-+----+----+----+----+----+----+----; 
     364                             C   
     365                             C  BREAK <Disk I/O Buffer Header> 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 17:21:29

RECOVER MS-DOS File/Disk Recovery Utility                   Page     1-22
Disk I/O Buffer Header                                      

     366                             C  ;----+----+----+----+----+----+----+---
					-+----+----+----+----+----+----+----; 
     367                             C  ;            C  A  V  E  A  T     P  R 
					 O  G  R  A  M  M  E  R             ; 
     368                             C  ;                                      
					                                    ; 
     369                             C   
     370                             C  ; Field definition for I/O buffer infor
					mation 
     371                             C   
     372                             C  BUFFINFO        STRUC 
     373 0000  ????????              C  NEXTBUF         DD      ?       ; Point
					er to next buffer in list 
     374                             C  ; The next two items are often refed as
					 a word 
     375 0004  ??                    C  BUFDRV          DB      ?       ; Logic
					al drive # assoc with buffer FF = free 
     376 0005  ??                    C  BUFDIRTY        DB      ?       ; Dirty
					 flag 
     377 0006  ??                    C  BUFPRI          DB      ?       ; Buffe
					r selection priority (see EQUs below) 
     378 0007  ??                    C  VISIT           DB      ?       ; Visit
					 flag for buffer pool scans 
     379 0008  ????                  C  BUFSECNO        DW      ?       ; Secto
					r number of buffer 
     380                             C  ; The next two items are often refed as
					 a word 
     381 000A  ??                    C  BUFWRTCNT       DB      ?       ; For F
					AT sectors, # times sector written out 
     382 000B  ??                    C  BUFWRTINC       DB      ?       ; "   "
					     "   , # sectors between each write
					 
     383 000C  ????????              C  BUFDRVDP        DD      ?       ; Point
					er to drive parameters 
     384 0010                        C  BUFFINFO        ENDS 
     385                             C   
     386 = 0010                      C  BUFINSIZ        EQU     SIZE BUFFINFO 
     387                             C                                  ; Size 
					of structure in bytes 
     388                             C   
     389 = 0000                      C  FREEPRI EQU     0 
     390 = 0002                      C  LBRPRI  EQU     2               ; Last 
					byte of buffer read 
     391 = 0004                      C  LBWPRI  EQU     4               ; Last 
					byte written 
     392 = 0006                      C  RPRI    EQU     6               ; Read 
					but not last byte 
     393 = 0008                      C  WPRI    EQU     8               ; Writt
					en but not last byte 
     394 = 000F                      C  DIRPRI  EQU     15              ; Direc
					tory Sector 
     395 = 001E                      C  FATPRI  EQU     30              ; FAT s
					ector 
     396                             C  ;                                      
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 17:21:29

RECOVER MS-DOS File/Disk Recovery Utility                   Page     1-23
Disk I/O Buffer Header                                      

					                                    ; 
     397                             C  ;            C  A  V  E  A  T     P  R 
					 O  G  R  A  M  M  E  R             ; 
     398                             C  ;----+----+----+----+----+----+----+---
					-+----+----+----+----+----+----+----; 
     399                             C   
     400                             C  BREAK <User stack inside of system call
					> 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 17:21:29

RECOVER MS-DOS File/Disk Recovery Utility                   Page     1-24
User stack inside of system call                            

     401                             C  ; Location of user registers relative u
					ser stack pointer 
     402                             C   
     403                             C  user_environ    STRUC 
     404 0000  ????                  C  user_AX     DW      ? 
     405 0002  ????                  C  user_BX     DW      ? 
     406 0004  ????                  C  user_CX     DW      ? 
     407 0006  ????                  C  user_DX     DW      ? 
     408 0008  ????                  C  user_SI     DW      ? 
     409 000A  ????                  C  user_DI     DW      ? 
     410 000C  ????                  C  user_BP     DW      ? 
     411 000E  ????                  C  user_DS     DW      ? 
     412 0010  ????                  C  user_ES     DW      ? 
     413 0012  ????                  C  user_IP     DW      ? 
     414 0014  ????                  C  user_CS     DW      ? 
     415 0016  ????                  C  user_F      DW      ? 
     416 0018                        C  user_environ    ENDS 
     417                             C   
     418                             C  BREAK <interrupt definitions> 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 17:21:29

RECOVER MS-DOS File/Disk Recovery Utility                   Page     1-25
interrupt definitions                                       

     419                             C   
     420 = 0020                      C  INTTAB          EQU     20H 
     421 = 0080                      C  INTBASE         EQU     4 * inttab 
     422 = 00C0                      C  ENTRYPOINT      EQU     INTBASE+40H 
     423                             C   
     424                             C          ENDIF 
     425                             C   
     426                             C  ; 
     427                             C  ; interrupt assignments 
     428                             C  ; 
     429                             C          IF      NOT ALTVECT 
     430 =                           C  int_abort           EQU     INTTAB     
					     ; abort process 
     431 = 0021                      C  int_command         EQU     int_abort+1
					     ; call MSDOS 
     432 = 0022                      C  int_terminate       EQU     int_abort+2
					     ; int to terminate address 
     433 = 0023                      C  int_ctrl_c          EQU     int_abort+3
					     ; ^c trapper 
     434 = 0024                      C  int_fatal_abort     EQU     int_abort+4
					     ; hard disk error 
     435 = 0025                      C  int_disk_read       EQU     int_abort+5
					     ; logical sector disk read 
     436 = 0026                      C  int_disk_write      EQU     int_abort+6
					     ; logical sector disk write 
     437 = 0027                      C  int_keep_process    EQU     int_abort+7
					     ; terminate program and stay 
     438                             C                                         
					     ; resident 
     439                             C  ;----+----+----+----+----+----+----+---
					-+----+----+----+----+----+----+----; 
     440                             C  ;            C  A  V  E  A  T     P  R 
					 O  G  R  A  M  M  E  R             ; 
     441                             C  ;                                      
					                                    ; 
     442 = 0028                      C  int_spooler         EQU     int_abort+8
					     ; spooler call 
     443 = 0029                      C  int_fastcon         EQU     int_abort+9
					     ; fast CON interrupt 
     444                             C  ;                                      
					                                    ; 
     445                             C  ;            C  A  V  E  A  T     P  R 
					 O  G  R  A  M  M  E  R             ; 
     446                             C  ;----+----+----+----+----+----+----+---
					-+----+----+----+----+----+----+----; 
     447                             C          ENDIF 
     448                             C   
     449 = 0080                      C  addr_int_abort          EQU    4 * int_
					abort 
     450 = 0084                      C  addr_int_command        EQU    4 * int_
					command 
     451 = 0088                      C  addr_int_terminate      EQU    4 * int_
					terminate 
     452 = 008C                      C  addr_int_ctrl_c         EQU    4 * int_
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 17:21:29

RECOVER MS-DOS File/Disk Recovery Utility                   Page     1-26
interrupt definitions                                       

					ctrl_c 
     453 = 0090                      C  addr_int_fatal_abort    EQU    4 * int_
					fatal_abort 
     454 = 0094                      C  addr_int_disk_read      EQU    4 * int_
					disk_read 
     455 = 0098                      C  addr_int_disk_write     EQU    4 * int_
					disk_write 
     456 = 009C                      C  addr_int_keep_process   EQU    4 * int_
					keep_process 
     457                             C  ;----+----+----+----+----+----+----+---
					-+----+----+----+----+----+----+----; 
     458                             C  ;            C  A  V  E  A  T     P  R 
					 O  G  R  A  M  M  E  R             ; 
     459                             C  ;                                      
					                                    ; 
     460 = 00A0                      C  addr_int_spooler        EQU    4 * int_
					spooler 
     461 = 00A4                      C  addr_int_fastcon        EQU    4 * int_
					fastcon 
     462                             C  ;                                      
					                                    ; 
     463                             C  ;            C  A  V  E  A  T     P  R 
					 O  G  R  A  M  M  E  R             ; 
     464                             C  ;----+----+----+----+----+----+----+---
					-+----+----+----+----+----+----+----; 
     465                             C   
     466                             C  BREAK <Disk map> 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 17:21:29

RECOVER MS-DOS File/Disk Recovery Utility                   Page     1-27
Disk map                                                    

     467                             C  ;  MSDOS partitions the disk into 4 sec
					tions: 
     468                             C  ; 
     469                             C  ;  phys sector 0:   +------------------
					-+ 
     470                             C  ;       |           | boot/reserved    
					 | 
     471                             C  ;       |           +------------------
					-+ 
     472                             C  ;       |           |  File allocation 
					 | 
     473                             C  ;       v           |      table(s)    
					 | 
     474                             C  ;                   |  (multiple copies
					 | 
     475                             C  ;                   |     are kept)    
					 | 
     476                             C  ;                   +------------------
					-+ 
     477                             C  ;                   |     Directory    
					 | 
     478                             C  ;                   +------------------
					-+ 
     479                             C  ;                   |     File space   
					 | 
     480                             C  ;                   +------------------
					-+ 
     481                             C  ;                   |   Unaddressable  
					 | 
     482                             C  ;                   |  (to end of disk)
					 | 
     483                             C  ;                   +------------------
					-+ 
     484                             C  ; 
     485                             C  ; All partition boundaries are sector b
					oundaries.  The size of the FAT is 
     486                             C  ; adjusted to maximize the file space a
					ddressable. 
     487                             C   
     488                             C  BREAK <Directory entry> 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 17:21:29

RECOVER MS-DOS File/Disk Recovery Utility                   Page     1-28
Directory entry                                             

     489                             C   
     490                             C  ; 
     491                             C  ;       +---------------------------+ 
     492                             C  ;       |  (12 BYTE) filename/ext   |  
					     0       0 
     493                             C  ;       +---------------------------+ 
     494                             C  ;       |     (BYTE) attributes     |  
					     11      B 
     495                             C  ;       +---------------------------+ 
     496                             C  ;       |    (10 BYTE) reserved     |  
					     12      C 
     497                             C  ;       +---------------------------+ 
     498                             C  ;       | (WORD) time of last write |  
					     22      16 
     499                             C  ;       +---------------------------+ 
     500                             C  ;       | (WORD) date of last write |  
					     24      18 
     501                             C  ;       +---------------------------+ 
     502                             C  ;       |   (WORD) First cluster    |  
					     26      1A 
     503                             C  ;       +---------------------------+ 
     504                             C  ;       |     (DWORD) file size     |  
					     28      1C 
     505                             C  ;       +---------------------------+ 
     506                             C  ; 
     507                             C  ;   First byte of filename  = E5 -> fre
					e directory entry 
     508                             C  ;                           = 00 -> end
					 of allocated directory 
     509                             C  ;   Time:   Bits 0-4=seconds/2, bits 5-
					10=minute, 11-15=hour 
     510                             C  ;   Date:   Bits 0-4=day, bits 5-8=mont
					h, bits 9-15=year-1980 
     511                             C  ; 
     512                             C  dir_entry   STRUC 
     513 0000  000B[                 C  dir_name    DB      11 DUP (?)         
					 ; file name 
     514            ??               C  
     515                         ]   C  
     516                             C  
     517 000B  ??                    C  dir_attr    DB      ?                  
					 ; attribute bits 
     518 000C  000A[                 C  dir_pad     DB      10 DUP (?)         
					 ; reserved for expansion 
     519            ??               C  
     520                         ]   C  
     521                             C  
     522 0016  ????                  C  dir_time    DW      ?                  
					 ; time of last write 
     523 0018  ????                  C  dir_date    DW      ?                  
					 ; date of last write 
     524 001A  ????                  C  dir_first   DW      ?                  
					 ; first allocation unit of file 
     525 001C  ????                  C  dir_size_l  DW      ?                  
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 17:21:29

RECOVER MS-DOS File/Disk Recovery Utility                   Page     1-29
Directory entry                                             

					 ; low 16 bits of file size 
     526 001E  ????                  C  dir_size_h  DW      ?                  
					 ; high 16 bits of file size 
     527 0020                        C  dir_entry   ENDS 
     528                             C   
     529 = 0001                      C  attr_read_only      EQU      1h 
     530 = 0002                      C  attr_hidden         EQU      2h 
     531 = 0004                      C  attr_system         EQU      4h 
     532 = 0008                      C  attr_volume_id      EQU      8h 
     533 = 0010                      C  attr_directory      EQU     10h 
     534 = 0020                      C  attr_archive        EQU     20h 
     535                             C   
     536 = 0016                      C  attr_all            EQU     attr_hidden
					+attr_system+attr_directory 
     537                             C                                         
					 ; OR of hard attributes for FINDENTRY 
     538                             C   
     539 = 0021                      C  attr_ignore         EQU     attr_read_o
					nly+attr_archive 
     540                             C                                         
					 ; ignore this(ese) attribute(s) during
					 
     541                             C                                         
					 ; search first/next 
     542                             C   
     543 = 0027                      C  attr_changeable     EQU     attr_read_o
					nly+attr_hidden+attr_system+attr_archiv
					e 
     544                             C                                         
					 ; changeable via CHMOD 
     545                             C   
     546                             C  BREAK <File allocation Table informatio
					n> 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 17:21:29

RECOVER MS-DOS File/Disk Recovery Utility                   Page     1-30
File allocation Table information                           

     547                             C  ; 
     548                             C  ; The File Allocation Table uses a 12-b
					it entry for each allocation unit on 
     549                             C  ; the disk.  These entries are packed, 
					two for every three bytes.  The content
					s 
     550                             C  ; of entry number N is found by 1) mult
					iplying N by 1.5; 2) adding the result 
     551                             C  ; to the base address of the Allocation
					 Table; 3) fetching the 16-bit word 
     552                             C  ; at this address; 4) If N was odd (so 
					that N*1.5 was not an integer), shift 
     553                             C  ; the word right four bits; 5) mask to 
					12 bits (AND with 0FFF hex).  Entry 
     554                             C  ; number zero is used as an end-of-file
					 trap in the OS and is passed to the 
     555                             C  ; BIOS to help determine disk format.  
					Entry 1 is reserved for future use. 
     556                             C  ; The first available allocation unit i
					s assigned entry number two, and even 
     557                             C  ; though it is the first, is called clu
					ster 2.  Entries greater than 0FF8H 
     558                             C  ; are end of file marks; entries of zer
					o are unallocated.  Otherwise, the 
     559                             C  ; contents of a FAT entry is the number
					 of the next cluster in the file. 
     560                             C  ; 
     561                             C  ; Clusters with bad sectors are tagged 
					with FF7H.  Any non-zero number would 
     562                             C  ; do because these clusters show as all
					ocated, but are not part of any 
     563                             C  ; allocation chain and thus will never 
					be allocated to a file.  A particular 
     564                             C  ; number is selected so that disk check
					ing programs know what to do (ie.  a 
     565                             C  ; cluster with entry FF7H which is not 
					in a chain is not an error). 
     566                             C   
     567                             C  BREAK <DPB structure> 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 17:21:29

RECOVER MS-DOS File/Disk Recovery Utility                   Page     1-31
DPB structure                                               

     568                             C  ;----+----+----+----+----+----+----+---
					-+----+----+----+----+----+----+----; 
     569                             C  ;            C  A  V  E  A  T     P  R 
					 O  G  R  A  M  M  E  R             ; 
     570                             C  ;                                      
					                                    ; 
     571                             C   
     572 = 0040                      C  DIRSTRLEN       EQU     64      ; Max l
					ength in bytes of directory strings 
     573                             C   
     574                             C  dpb     STRUC 
     575 0000  ??                    C  dpb_drive           DB      ?   ; Logic
					al drive # assoc with DPB (A=0,B=1,...)
					 
     576 0001  ??                    C  dpb_UNIT            DB      ?   ; Drive
					r unit number of DPB 
     577 0002  ????                  C  dpb_sector_size     DW      ?   ; Size 
					of physical sector in bytes 
     578 0004  ??                    C  dpb_cluster_mask    DB      ?   ; Secto
					rs/cluster - 1 
     579 0005  ??                    C  dpb_cluster_shift   DB      ?   ; Log2 
					of sectors/cluster 
     580 0006  ????                  C  dpb_first_FAT       DW      ?   ; Start
					ing record of FATs 
     581 0008  ??                    C  dpb_FAT_count       DB      ?   ; Numbe
					r of FATs for this drive 
     582 0009  ????                  C  dpb_root_entries    DW      ?   ; Numbe
					r of directory entries 
     583 000B  ????                  C  dpb_first_sector    DW      ?   ; First
					 sector of first cluster 
     584 000D  ????                  C  dpb_max_cluster     DW      ?   ; Numbe
					r of clusters on drive + 1 
     585 000F  ??                    C  dpb_FAT_size        DB      ?   ; Numbe
					r of records occupied by FAT 
     586 0010  ????                  C  dpb_dir_sector      DW      ?   ; Start
					ing record of directory 
     587 0012  ????????              C  dpb_driver_addr     DD      ?   ; Point
					er to driver 
     588 0016  ??                    C  dpb_media           DB      ?   ; Media
					 byte 
     589 0017  ??                    C  dpb_first_access    DB      ?   ; This 
					is initialized to -1 to force a media 
     590                             C                                  ; check
					 the first time this DPB is used 
     591 0018  ????????              C  dpb_next_dpb        DD      ?   ; Point
					er to next Drive parameter block 
     592 001C  ????                  C  dpb_current_dir     DW      ?   ; Clust
					er number of start of current directory
					 
     593                             C                                  ; 0 ind
					icates root, -1 indicates invalid (disk
					 
     594                             C                                  ; ?  ch
					anged) 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 17:21:29

RECOVER MS-DOS File/Disk Recovery Utility                   Page     1-32
DPB structure                                               

     595 001E  0040[                 C  dpb_dir_text        DB      DIRSTRLEN D
					UP(?) 
     596            ??               C  
     597                         ]   C  
     598                             C  
     599                             C                                  ; ASCIZ
					 string of current directory 
     600 005E                        C  dpb     ENDS 
     601                             C   
     602 = 005E                      C  DPBSIZ  EQU     SIZE dpb        ; Size 
					of the structure in bytes 
     603                             C   
     604 = 000D                      C  DSKSIZ  =       dpb_max_cluster ; Size 
					of disk (temp used during init only) 
     605                             C  ;                                      
					                                    ; 
     606                             C  ;            C  A  V  E  A  T     P  R 
					 O  G  R  A  M  M  E  R             ; 
     607                             C  ;----+----+----+----+----+----+----+---
					-+----+----+----+----+----+----+----; 
     608                             C   
     609                             C  BREAK <File Control Block definition> 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 17:21:29

RECOVER MS-DOS File/Disk Recovery Utility                   Page     1-33
File Control Block definition                               

     610                             C  ; 
     611                             C  ; Field definition for FCBs 
     612                             C  ; The FCB has the following structure: 
     613                             C  ; 
     614                             C  ;       +---------------------------+ 
     615                             C  ;       |   Drive indicator(byte)   | 
     616                             C  ;       +---------------------------+ 
     617                             C  ;       |    Filename (8 chars)     | 
     618                             C  ;       +---------------------------+ 
     619                             C  ;       |    Extension (3 chars)    | 
     620                             C  ;       +---------------------------+ 
     621                             C  ;       |   Current Extent(word)    | 
     622                             C  ;       +---------------------------+ 
     623                             C  ;       |    Record size (word)     | 
     624                             C  ;       +---------------------------+ 
     625                             C  ;       |    File Size (2 words)    | 
     626                             C  ;       +---------------------------+ 
     627                             C  ;       |       Date of write       | 
     628                             C  ;       +---------------------------+ 
     629                             C  ;       |       Time of write       | 
     630                             C  ;       +---------------------------+ 
     631                             C  ;----+----+----+----+----+----+----+---
					-+----+----+----+----+----+----+----; 
     632                             C  ;            C  A  V  E  A  T     P  R 
					 O  G  R  A  M  M  E  R             ; 
     633                             C  ;                                      
					                                    ; 
     634                             C  ;       | Flags:                    | 
     635                             C  ;       |  bit 7=0 file/1 device    | 
     636                             C  ;       |  bit 6=0 if dirty         | 
     637                             C  ;       |  bits 0-5 deviceid        | 
     638                             C  ;       +---------------------------+ 
     639                             C  ;       |   first cluster in file   | 
     640                             C  ;       +---------------------------+ 
     641                             C  ;       | position of last cluster  | 
     642                             C  ;       +---------------------------+ 
     643                             C  ;       |   last cluster accessed   |  
					 12 bit-+--- packed in 3 bytes 
     644                             C  ;       +---------------------------+  
					        | 
     645                             C  ;       |     parent directory      |  
					 <------+ 
     646                             C  ;       +---------------------------+ 
     647                             C  ;                                      
					                                    ; 
     648                             C  ;            C  A  V  E  A  T     P  R 
					 O  G  R  A  M  M  E  R             ; 
     649                             C  ;----+----+----+----+----+----+----+---
					-+----+----+----+----+----+----+----; 
     650                             C  ;       |    next record number     | 
     651                             C  ;       +---------------------------+ 
     652                             C  ;       |   random record number    | 
     653                             C  ;       +---------------------------+ 
     654                             C  ; 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 17:21:29

RECOVER MS-DOS File/Disk Recovery Utility                   Page     1-34
File Control Block definition                               

     655                             C   
     656                             C  sys_fcb     STRUC 
     657 0000  ??                    C  fcb_drive   DB      ? 
     658 0001  0008[                 C  fcb_name    DB      8 DUP (?) 
     659            ??               C  
     660                         ]   C  
     661                             C  
     662 0009  0003[                 C  fcb_ext     DB      3 DUP (?) 
     663            ??               C  
     664                         ]   C  
     665                             C  
     666 000C  ????                  C  fcb_EXTENT  DW      ? 
     667 000E  ????                  C  fcb_RECSIZ  DW      ?       ; Size of r
					ecord (user settable) 
     668 0010  ????                  C  fcb_FILSIZ  DW      ?       ; Size of f
					ile in bytes; used with the following 
     669                             C                              ; word 
     670 0012  ????                  C  fcb_DRVBP   DW      ?       ; BP for SE
					ARCH FIRST and SEARCH NEXT 
     671 0014  ????                  C  fcb_FDATE   DW      ?       ; Date of l
					ast writing 
     672 0016  ????                  C  fcb_FTIME   DW      ?       ; Time of l
					ast writing 
     673                             C  ;----+----+----+----+----+----+----+---
					-+----+----+----+----+----+----+----; 
     674                             C  ;            C  A  V  E  A  T     P  R 
					 O  G  R  A  M  M  E  R             ; 
     675                             C  ;                                      
					                                    ; 
     676 0018  ??                    C  fcb_DEVID   DB      ?       ; Device ID
					 number, bits 0-5 if file. 
     677                             C                              ; bit 7=0 f
					or file, bit 7=1 for I/O device 
     678                             C                              ; If file, 
					bit 6=0 if dirty 
     679                             C                              ; If I/O de
					vice, bit 6=0 if EOF (input) 
     680                             C                              ;          
					     Bit 5=1 if Raw mode 
     681                             C                              ;          
					     Bit 0=1 if console input device 
     682                             C                              ;          
					     Bit 1=1 if console output device 
     683                             C                              ;          
					     Bit 2=1 if null device 
     684                             C                              ;          
					     Bit 3=1 if clock device 
     685 0019  ????                  C  fcb_FIRCLUS DW      ?       ; First clu
					ster of file 
     686 001B  ????                  C  fcb_CLUSPOS DW      ?       ; Position 
					of last cluster accessed 
     687 001D  ????                  C  fcb_LSTCLUS DW      ?       ; Last clus
					ter accessed and directory pack 2 12 
     688 001F  ??                    C              DB      ?       ; bit numbe
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 17:21:29

RECOVER MS-DOS File/Disk Recovery Utility                   Page     1-35
File Control Block definition                               

					rs into 24 bits... 
     689                             C  ;                                      
					                                    ; 
     690                             C  ;            C  A  V  E  A  T     P  R 
					 O  G  R  A  M  M  E  R             ; 
     691                             C  ;----+----+----+----+----+----+----+---
					-+----+----+----+----+----+----+----; 
     692 0020  ??                    C  fcb_NR      DB      ?       ; Next reco
					rd 
     693 0021  0004[                 C  fcb_RR      DB      4 DUP (?)          
					     ; Random record 
     694            ??               C  
     695                         ]   C  
     696                             C  
     697 0025                        C  sys_fcb     ENDS 
     698                             C   
     699 = 0010                      C  FILDIRENT       = fcb_FILSIZ           
					 ; Used only by SEARCH FIRST and SEARCH
					 
     700                             C                                         
					 ; NEXT 
     701                             C   
     702                             C  ;----+----+----+----+----+----+----+---
					-+----+----+----+----+----+----+----; 
     703                             C  ;            C  A  V  E  A  T     P  R 
					 O  G  R  A  M  M  E  R             ; 
     704                             C  ;                                      
					                                    ; 
     705 = 0040                      C  devid_file_clean        EQU     40h    
					 ; true if file and not written 
     706 = 003F                      C  devid_file_mask_drive   EQU     3Fh    
					 ; mask for drive number 
     707                             C   
     708 = 0080                      C  devid_device            EQU     80h    
					 ; true if a device 
     709 = 0040                      C  devid_device_EOF        EQU     40h    
					 ; true if end of file reached 
     710 = 0020                      C  devid_device_raw        EQU     20h    
					 ; true if in raw mode 
     711 = 0010                      C  devid_device_special    EQU     10h    
					 ; true if special device 
     712 = 0008                      C  devid_device_clock      EQU     08h    
					 ; true if clock device 
     713 = 0004                      C  devid_device_null       EQU     04h    
					 ; true if null device 
     714 = 0002                      C  devid_device_con_out    EQU     02h    
					 ; true if console output 
     715 = 0001                      C  devid_device_con_in     EQU     01h    
					 ; true if consle input 
     716                             C   
     717                             C  ; 
     718                             C  ; structure of devid field as returned 
					by IOCTL is: 
     719                             C  ; 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 17:21:29

RECOVER MS-DOS File/Disk Recovery Utility                   Page     1-36
File Control Block definition                               

     720                             C  ;       BIT     7   6   5   4   3   2  
					 1   0 
     721                             C  ;             |---|---|---|---|---|---|
					---|---| 
     722                             C  ;             | I | E | R | S | I | I |
					 I | I | 
     723                             C  ;             | S | O | A | P | S | S |
					 S | S | 
     724                             C  ;             | D | F | W | E | C | N |
					 C | C | 
     725                             C  ;             | E |   |   | C | L | U |
					 O | I | 
     726                             C  ;             | V |   |   | L | K | L |
					 T | N | 
     727                             C  ;             |---|---|---|---|---|---|
					---|---| 
     728                             C  ;       ISDEV = 1 if this channel is a 
					device 
     729                             C  ;             = 0 if this channel is a 
					disk file 
     730                             C  ; 
     731                             C  ;       If ISDEV = 1 
     732                             C  ; 
     733                             C  ;             EOF = 0 if End Of File on
					 input 
     734                             C  ;             RAW = 1 if this device is
					 in Raw mode 
     735                             C  ;                 = 0 if this device is
					 cooked 
     736                             C  ;             ISCLK = 1 if this device 
					is the clock device 
     737                             C  ;             ISNUL = 1 if this device 
					is the null device 
     738                             C  ;             ISCOT = 1 if this device 
					is the console output 
     739                             C  ;             ISCIN = 1 if this device 
					is the console input 
     740                             C  ; 
     741                             C  ;       If ISDEV = 0 
     742                             C  ;             EOF = 0 if channel has be
					en written 
     743                             C  ;             Bits 0-5  are  the  block
					  device  number  for 
     744                             C  ;                 the channel (0 = A, 1
					 = B, ...) 
     745                             C  ; 
     746 = 0080                      C  devid_ISDEV     EQU     80h 
     747 = 0040                      C  devid_EOF       EQU     40h 
     748 = 0020                      C  devid_RAW       EQU     20h 
     749 = 0010                      C  devid_SPECIAL   EQU     10H 
     750 = 0008                      C  devid_ISCLK     EQU     08h 
     751 = 0004                      C  devid_ISNUL     EQU     04h 
     752 = 0002                      C  devid_ISCOT     EQU     02h 
     753 = 0001                      C  devid_ISCIN     EQU     01h 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 17:21:29

RECOVER MS-DOS File/Disk Recovery Utility                   Page     1-37
File Control Block definition                               

     754                             C   
     755 = 001F                      C  devid_block_dev EQU     1Fh            
					 ; mask for block device number 
     756                             C   
     757                             C  ; 
     758                             C  ; find first/next buffer 
     759                             C  ; 
     760                             C  find_buf    STRUC 
     761 0000  ??                    C  find_buf_sattr      DB  ?           ; a
					ttribute of search 
     762 0001  ??                    C  find_buf_drive      DB  ?           ; d
					rive of search 
     763 0002  000B[                 C  find_buf_name       DB  11 DUP (?)  ; f
					ormatted name 
     764            ??               C  
     765                         ]   C  
     766                             C  
     767 000D  ????                  C  find_buf_LastEnt    DW  ?           ; L
					astEnt 
     768 000F  ????????              C  find_buf_ThisDPB    DD  ?           ; T
					his DPB 
     769 0013  ????                  C  find_buf_DirStart   DW  ?           ; D
					irStart 
     770                             C  ;                                      
					                                    ; 
     771                             C  ;            C  A  V  E  A  T     P  R 
					 O  G  R  A  M  M  E  R             ; 
     772                             C  ;----+----+----+----+----+----+----+---
					-+----+----+----+----+----+----+----; 
     773                             C   
     774 0015  ??                    C  find_buf_attr       DB  ?           ; a
					ttribute found 
     775 0016  ????                  C  find_buf_time       DW  ?           ; t
					ime 
     776 0018  ????                  C  find_buf_date       DW  ?           ; d
					ate 
     777 001A  ????                  C  find_buf_size_l     DW  ?           ; l
					ow(size) 
     778 001C  ????                  C  find_buf_size_h     DW  ?           ; h
					igh(size) 
     779 001E  000D[                 C  find_buf_pname      DB  13 DUP (?)  ; p
					acked name 
     780            ??               C  
     781                         ]   C  
     782                             C  
     783 002B                        C  find_buf    ENDS 
     784                             C   
     785                             C  BREAK <Process data block> 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 17:21:29

RECOVER MS-DOS File/Disk Recovery Utility                   Page     1-38
Process data block                                          

     786                             C  ; 
     787                             C  ; Process data block (otherwise known a
					s program header) 
     788                             C  ; 
     789                             C   
     790 = 0014                      C  FilPerProc          EQU     20 
     791                             C   
     792                             C  Process_data_block  STRUC 
     793 0000  ????                  C  PDB_Exit_Call       DW      ?          
					 ; INT int_abort system terminate 
     794 0002  ????                  C  PDB_block_len       DW      ?          
					 ; size of execution block 
     795 0004  ??                    C                      DB      ? 
     796 0005  0005[                 C  PDB_CPM_Call        DB  5 DUP (?)      
					 ; ancient call to system 
     797            ??               C  
     798                         ]   C  
     799                             C  
     800 000A  ????????              C  PDB_Exit            DD      ?          
					 ; pointer to exit routine 
     801 000E  ????????              C  PDB_Ctrl_C          DD      ?          
					 ; pointer to ^C routine 
     802 0012  ????????              C  PDB_Fatal_abort     DD      ?          
					 ; pointer to fatal error 
     803                             C  ;----+----+----+----+----+----+----+---
					-+----+----+----+----+----+----+----; 
     804                             C  ;            C  A  V  E  A  T     P  R 
					 O  G  R  A  M  M  E  R             ; 
     805                             C  ;                                      
					                                    ; 
     806 0016  ????                  C  PDB_Parent_PID      DW      ?          
					 ; PID of parent (terminate PID) 
     807 0018  0014[                 C  PDB_JFN_Table       DB  FilPerProc DUP 
					(?) 
     808            ??               C  
     809                         ]   C  
     810                             C  
     811                             C                                         
					 ; indices into system table 
     812                             C  ;                                      
					                                    ; 
     813                             C  ;            C  A  V  E  A  T     P  R 
					 O  G  R  A  M  M  E  R             ; 
     814                             C  ;----+----+----+----+----+----+----+---
					-+----+----+----+----+----+----+----; 
     815 002C  ????                  C  PDB_environ         DW      ?          
					 ; seg addr of environment 
     816                             C  ;----+----+----+----+----+----+----+---
					-+----+----+----+----+----+----+----; 
     817                             C  ;            C  A  V  E  A  T     P  R 
					 O  G  R  A  M  M  E  R             ; 
     818                             C  ;                                      
					                                    ; 
     819 002E  ????????              C  PDB_User_stack      DD      ?          
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 17:21:29

RECOVER MS-DOS File/Disk Recovery Utility                   Page     1-39
Process data block                                          

					 ; stack of self during system calls 
     820 0032  001E[                 C  PDB_PAD1            DB      1Eh DUP (?)
					 
     821            ??               C  
     822                         ]   C  
     823                             C  
     824                             C  ;                                      
					                                    ; 
     825                             C  ;            C  A  V  E  A  T     P  R 
					 O  G  R  A  M  M  E  R             ; 
     826                             C  ;----+----+----+----+----+----+----+---
					-+----+----+----+----+----+----+----; 
     827 0050  0005[                 C  PDB_Call_system     DB      5 DUP (?)  
					 ; portable method of system call 
     828            ??               C  
     829                         ]   C  
     830                             C  
     831                             C  ;----+----+----+----+----+----+----+---
					-+----+----+----+----+----+----+----; 
     832                             C  ;            C  A  V  E  A  T     P  R 
					 O  G  R  A  M  M  E  R             ; 
     833                             C  ;                                      
					                                    ; 
     834 0055  0006[                 C  PDB_PAD2            DB      6h DUP (?) 
					 ; 
     835            ??               C  
     836                         ]   C  
     837                             C  
     838                             C  ;                                      
					                                    ; 
     839                             C  ;            C  A  V  E  A  T     P  R 
					 O  G  R  A  M  M  E  R             ; 
     840                             C  ;----+----+----+----+----+----+----+---
					-+----+----+----+----+----+----+----; 
     841 005B                        C  Process_data_block  ENDS 
     842                             C   
     843                             C  BREAK <EXEC and EXE file structures> 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 17:21:29

RECOVER MS-DOS File/Disk Recovery Utility                   Page     1-40
EXEC and EXE file structures                                

     844                             C  ; 
     845                             C  ; EXEC arg block - load/go program 
     846                             C  ; 
     847                             C   
     848                             C  ; 
     849                             C  ; The following get used as arguments t
					o the EXEC system call.  They indicate 
     850                             C  ; whether or not the program is execute
					d or whether or not a program header 
     851                             C  ; gets created. 
     852                             C  ; 
     853 = 0001                      C  exec_func_no_execute    EQU 1          
					 ; no execute bit 
     854 = 0002                      C  exec_func_overlay       EQU 2          
					 ; overlay bit 
     855                             C   
     856                             C  Exec0           STRUC 
     857 0000  ????                  C  Exec0_environ   DW      ?              
					 ; seg addr of environment 
     858 0002  ????????              C  Exec0_com_line  DD      ?              
					 ; pointer to asciz command line 
     859 0006  ????????              C  Exec0_5C_FCB    DD      ?              
					 ; default fcb at 5C 
     860 000A  ????????              C  Exec0_6C_FCB    DD      ?              
					 ; default fcb at 6C 
     861 000E                        C  Exec0           ENDS 
     862                             C   
     863                             C  Exec1           STRUC 
     864 0000  ????                  C  Exec1_environ   DW      ?              
					 ; seg addr of environment 
     865 0002  ????????              C  Exec1_com_line  DD      ?              
					 ; pointer to asciz command line 
     866 0006  ????????              C  Exec1_5C_FCB    DD      ?              
					 ; default fcb at 5C 
     867 000A  ????????              C  Exec1_6C_FCB    DD      ?              
					 ; default fcb at 6C 
     868 000E  ????                  C  Exec1_SP        DW      ?              
					 ; stack pointer of program 
     869 0010  ????                  C  Exec1_SS        DW      ?              
					 ; stack seg register of program 
     870 0012  ????                  C  Exec1_IP        DW      ?              
					 ; entry point IP 
     871 0014  ????                  C  Exec1_CS        DW      ?              
					 ; entry point CS 
     872 0016                        C  Exec1           ENDS 
     873                             C   
     874                             C  Exec3           STRUC 
     875 0000  ????                  C  Exec3_load_addr DW      ?              
					 ; seg address of load point 
     876 0002  ????                  C  Exec3_reloc_fac DW      ?              
					 ; relocation factor 
     877 0004                        C  Exec3           ENDS 
     878                             C   
     879                             C  ; 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 17:21:29

RECOVER MS-DOS File/Disk Recovery Utility                   Page     1-41
EXEC and EXE file structures                                

     880                             C  ; Exit codes in upper byte 
     881                             C  ; 
     882 = 0000                      C  Exit_terminate      EQU     0 
     883 = 0000                      C  Exit_abort          EQU     0 
     884 = 0001                      C  Exit_Ctrl_C         EQU     1 
     885 = 0002                      C  Exit_Hard_Error     EQU     2 
     886 = 0003                      C  Exit_Keep_process   EQU     3 
     887                             C   
     888                             C  ; 
     889                             C  ; EXE file header 
     890                             C  ; 
     891                             C   
     892                             C  EXE_file    STRUC 
     893 0000  ????                  C  exe_signature   DW  ?                  
					 ; must contain 4D5A  (yay zibo!) 
     894 0002  ????                  C  exe_len_mod_512 DW  ?                  
					 ; low 9 bits of length 
     895 0004  ????                  C  exe_pages       DW  ?                  
					 ; number of 512b pages in file 
     896 0006  ????                  C  exe_rle_count   DW  ?                  
					 ; count of reloc entries 
     897 0008  ????                  C  exe_par_dir     DW  ?                  
					 ; number of paragraphs before image 
     898 000A  ????                  C  exe_min_BSS     DW  ?                  
					 ; minimum number of para of BSS 
     899 000C  ????                  C  exe_max_BSS     DW  ?                  
					 ; max number of para of BSS 
     900 000E  ????                  C  exe_SS          DW  ?                  
					 ; stack of image 
     901 0010  ????                  C  exe_SP          DW  ?                  
					 ; SP of image 
     902 0012  ????                  C  exe_chksum      DW  ?                  
					 ; checksum  of file (ignored) 
     903 0014  ????                  C  exe_IP          DW  ?                  
					 ; IP of entry 
     904 0016  ????                  C  exe_CS          DW  ?                  
					 ; CS of entry 
     905 0018  ????                  C  exe_rle_table   DW  ?                  
					 ; byte offset of reloc table 
     906 001A  ????                  C  exe_iov         DW  ?                  
					 ; overlay number (0 for root) 
     907 001C  ????????              C  exe_sym_tab     DD  ?                  
					 ; offset of symbol table in file 
     908 0020                        C  EXE_file    ENDS 
     909                             C   
     910 = 5A4D                      C  exe_valid_signature     EQU 5A4Dh 
     911 = 4D5A                      C  exe_valid_old_signature EQU 4D5Ah 
     912                             C   
     913                             C  symbol_entry    STRUC 
     914 0000  ????????              C  sym_value       DD  ? 
     915 0004  ????                  C  sym_type        DW  ? 
     916 0006  ??                    C  sym_len         DB  ? 
     917 0007  00FF[                 C  sym_name        DB  255 dup (?) 
     918            ??               C  
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 17:21:29

RECOVER MS-DOS File/Disk Recovery Utility                   Page     1-42
EXEC and EXE file structures                                

     919                         ]   C  
     920                             C  
     921 0106                        C  symbol_entry    ENDS 
     922                             C   
     923                             C  BREAK <Internal system file table forma
					t> 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 17:21:29

RECOVER MS-DOS File/Disk Recovery Utility                   Page     1-43
Internal system file table format                           

     924                             C  ;----+----+----+----+----+----+----+---
					-+----+----+----+----+----+----+----; 
     925                             C  ;            C  A  V  E  A  T     P  R 
					 O  G  R  A  M  M  E  R             ; 
     926                             C  ;                                      
					                                    ; 
     927                             C  ; 
     928                             C  ; system file table 
     929                             C  ; 
     930                             C   
     931                             C  sft             STRUC 
     932 0000  ????????              C  sft_link        DD      ? 
     933 0004  ????                  C  sft_count       DW      ?              
					 ; number of entries 
     934 0006  ????                  C  sft_table       DW      ?              
					 ; beginning of array of the following 
     935 0008                        C  sft             ENDS 
     936                             C   
     937                             C  ; 
     938                             C  ; system file table entry 
     939                             C  ; 
     940                             C   
     941                             C  sf_entry        STRUC 
     942 0000  ??                    C  sf_ref_count    DB      ?              
					 ; number of processes sharing fcb 
     943 0001  ??                    C  sf_mode         DB      ?              
					 ; mode of access 
     944 0002  ??                    C  sf_attr         DB      ?              
					 ; attribute of file 
     945 0003  0025[                 C  sf_fcb          DB      (SIZE sys_fcb) 
					DUP (?) 
     946            ??               C  
     947                         ]   C  
     948                             C  
     949                             C                                         
					 ; actual FCB 
     950 0028                        C  sf_entry        ENDS 
     951                             C   
     952 = 0005                      C  sf_default_number   EQU     5h 
     953                             C  ;                                      
					                                    ; 
     954                             C  ;            C  A  V  E  A  T     P  R 
					 O  G  R  A  M  M  E  R             ; 
     955                             C  ;----+----+----+----+----+----+----+---
					-+----+----+----+----+----+----+----; 
     956                             C   
     957                             C  BREAK <Memory arena structure> 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 17:21:29

RECOVER MS-DOS File/Disk Recovery Utility                   Page     1-44
Memory arena structure                                      

     958                             C  ;----+----+----+----+----+----+----+---
					-+----+----+----+----+----+----+----; 
     959                             C  ;            C  A  V  E  A  T     P  R 
					 O  G  R  A  M  M  E  R             ; 
     960                             C  ;                                      
					                                    ; 
     961                             C  ; 
     962                             C  ; arena item 
     963                             C  ; 
     964                             C  arena   STRUC 
     965 0000  ??                    C  arena_signature     DB  ?              
					 ; 4D for valid item, 5A for last item 
     966 0001  ????                  C  arena_owner         DW  ?              
					 ; owner of arena item 
     967 0003  ????                  C  arena_size          DW  ?              
					 ; size in paragraphs of item 
     968 0005                        C  arena   ENDS 
     969                             C   
     970                             C  ; 
     971                             C  ; Current structure of the data returne
					d by the international call 
     972                             C  ; 
     973                             C   
     974                             C  internat_block STRUC 
     975 0000  ????                  C  Date_tim_format DW      ?           ; 0
					-USA, 1-EUR, 2-JAP 
     976 0002  ??                    C  Currency_sym    DB      ?           ; C
					urrency Symbol 5 bytes 
     977 0003  ??                    C                  DB      ? 
     978 0004  ??                    C                  DB      ? 
     979 0005  ??                    C                  DB      ? 
     980 0006  ??                    C                  DB      ? 
     981 0007  ??                    C  Thous_sep       DB      ?           ; T
					housands separator 2 bytes 
     982 0008  ??                    C                  DB      ? 
     983 0009  ??                    C  Decimal_sep     DB      ?           ; D
					ecimal separator 2 bytes 
     984 000A  ??                    C                  DB      ? 
     985 000B  ??                    C  Date_sep        DB      ?           ; D
					ate separator 2 bytes 
     986 000C  ??                    C                  DB      ? 
     987 000D  ??                    C  Time_sep        DB      ?           ; D
					ecimal separator 2 bytes 
     988 000E  ??                    C                  DB      ? 
     989 000F  ??                    C  Bit_feild       DB      ?           ; B
					it values 
     990                             C                                      ;  
					 Bit 0 = 0 if currency symbol first 
     991                             C                                      ;  
					       = 1 if currency symbol last 
     992                             C                                      ;  
					 Bit 1 = 0 if No space after currency s
					ymbol 
     993                             C                                      ;  
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 17:21:29

RECOVER MS-DOS File/Disk Recovery Utility                   Page     1-45
Memory arena structure                                      

					       = 1 if space after currency symb
					ol 
     994 0010  ??                    C  Currency_cents  DB      ?           ; N
					umber of places after currency dec poin
					t 
     995 0011  ??                    C  Time_24         DB      ?           ; 1
					 if 24 hour time, 0 if 12 hour time 
     996 0012  ????                  C  Map_call        DW      ?           ; A
					ddress of case mapping call (DWORD) 
     997 0014  ????                  C                  DW      ?           ; T
					HIS IS TWO WORDS SO IT CAN BE INITIALIZ
					ED 
     998                             C                                      ;  
					in pieces. 
     999 0016  ??                    C  Data_sep        DB      ?           ; D
					ata list separator character 
    1000 0017  ??                    C                  DB      ? 
    1001 0018                        C  internat_block ENDS 
    1002                             C   
    1003                             C  ; 
    1004                             C  ; Max size of the block returned by the
					 INTERNATIONAL call 
    1005                             C  ; 
    1006 = 0020                      C  internat_block_max      EQU     32 
    1007                             C   
    1008                             C  ; 
    1009                             C  ; CAUTION: The routines in ALLOC.ASM re
					ly on the fact that arena_signature 
    1010                             C  ; and arena_owner_system are all equal 
					to zero and are contained in DI.  Chang
					e 
    1011                             C  ; them and change ALLOC.ASM. 
    1012                             C   
    1013 = 0000                      C  arena_owner_system  EQU 0              
					 ; free block indication 
    1014                             C   
    1015 = 004D                      C  arena_signature_normal  EQU 4Dh        
					 ; valid signature, not end of arena 
    1016 = 005A                      C  arena_signature_end     EQU 5Ah        
					 ; valid signature, last block in arena
					 
    1017                             C  ;                                      
					                                    ; 
    1018                             C  ;            C  A  V  E  A  T     P  R 
					 O  G  R  A  M  M  E  R             ; 
    1019                             C  ;----+----+----+----+----+----+----+---
					-+----+----+----+----+----+----+----; 
    1020                             C   
    1021                             C  BREAK <Machine instruction definitions>
					 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 17:21:29

RECOVER MS-DOS File/Disk Recovery Utility                   Page     1-46
Machine instruction definitions                             

    1022                             C   
    1023 = 00CD                      C  mi_INT          EQU     0CDh 
    1024 = 00EA                      C  mi_Long_JMP     EQU     0EAh 
    1025 = 009A                      C  mi_Long_CALL    EQU     09Ah 
    1026 = 00CB                      C  mi_Long_RET     EQU     0CBh 
    1027                             C   
    1028                             C  BREAK <Standard I/O assignments> 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 17:21:29

RECOVER MS-DOS File/Disk Recovery Utility                   Page     1-47
Standard I/O assignments                                    

    1029                             C   
    1030 = 0000                      C  stdin       EQU     0 
    1031 = 0001                      C  stdout      EQU     1 
    1032 = 0002                      C  stderr      EQU     2 
    1033 = 0003                      C  stdaux      EQU     3 
    1034 = 0004                      C  stdprn      EQU     4 
    1035                             C   
    1036                             C  BREAK <Xenix subfunction assignments> 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 17:21:29

RECOVER MS-DOS File/Disk Recovery Utility                   Page     1-48
Xenix subfunction assignments                               

    1037                             C   
    1038 = 0000                      C  open_for_read   EQU 0 
    1039 = 0001                      C  open_for_write  EQU 1 
    1040 = 0002                      C  open_for_both   EQU 2 
    1041                             C   
    1042                             C  BREAK <Xenix error codes> 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 17:21:29

RECOVER MS-DOS File/Disk Recovery Utility                   Page     1-49
Xenix error codes                                           

    1043                             C   
    1044                             C  ; 
    1045                             C  ; XENIX calls all return error codes th
					rough AX.  If an error occurred then 
    1046                             C  ; the carry bit will be set and the err
					or code is in AX.  If no error occurred
					 
    1047                             C  ; then the carry bit is reset and AX co
					ntains returned info. 
    1048                             C  ; 
    1049                             C   
    1050 =                           C  no_error_occurred               EQU    
					 0                                     
					                         ? 
    1051                             C   
    1052 = 0001                      C  error_invalid_function          EQU    
					 1 
    1053 = 0002                      C  error_file_not_found            EQU    
					 2 
    1054 = 0003                      C  error_path_not_found            EQU    
					 3 
    1055 = 0004                      C  error_too_many_open_files       EQU    
					 4 
    1056 = 0005                      C  error_access_denied             EQU    
					 5 
    1057 = 0006                      C  error_invalid_handle            EQU    
					 6 
    1058 = 0007                      C  error_arena_trashed             EQU    
					 7 
    1059 = 0008                      C  error_not_enough_memory         EQU    
					 8 
    1060 = 0009                      C  error_invalid_block             EQU    
					 9 
    1061 = 000A                      C  error_bad_environment           EQU    
					 10 
    1062 = 000B                      C  error_bad_format                EQU    
					 11 
    1063 = 000C                      C  error_invalid_access            EQU    
					 12 
    1064 = 000D                      C  error_invalid_data              EQU    
					 13 
    1065                             C  ;**** unused                    EQU    
					 14 
    1066 = 000F                      C  error_invalid_drive             EQU    
					 15 
    1067 = 0010                      C  error_current_directory         EQU    
					 16 
    1068 = 0011                      C  error_not_same_device           EQU    
					 17 
    1069 = 0012                      C  error_no_more_files             EQU    
					 18 
    1070                             C   
    1071 =                           C  country_not_found               EQU    
					 error_file_not_found 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 17:21:29

RECOVER MS-DOS File/Disk Recovery Utility                   Page     1-50
Xenix error codes                                           

    1072 =                           C  alloc_not_enough_memory         EQU    
					 error_not_enough_memory 
    1073 =                           C  alloc_arena_trashed             EQU    
					 error_arena_trashed 
    1074                             C   
    1075 =                           C  close_invalid_handle            EQU    
					 error_invalid_handle 
    1076 =                           C  close_invalid_function          EQU    
					 error_invalid_function 
    1077                             C   
    1078 =                           C  chdir_path_not_found            EQU    
					 error_path_not_found 
    1079                             C   
    1080 =                           C  chmod_path_not_found            EQU    
					 error_path_not_found 
    1081 =                           C  chmod_access_denied             EQU    
					 error_access_denied 
    1082 =                           C  chmod_invalid_function          EQU    
					 error_invalid_function 
    1083                             C   
    1084 =                           C  creat_access_denied             EQU    
					 error_access_denied 
    1085 =                           C  creat_path_not_found            EQU    
					 error_path_not_found 
    1086 =                           C  creat_too_many_open_files       EQU    
					 error_too_many_open_files 
    1087                             C   
    1088 =                           C  curdir_invalid_drive            EQU    
					 error_invalid_drive 
    1089                             C   
    1090 =                           C  dealloc_invalid_block           EQU    
					 error_invalid_block 
    1091 =                           C  dealloc_arena_trashed           EQU    
					 error_arena_trashed 
    1092                             C   
    1093 =                           C  dup_invalid_handle              EQU    
					 error_invalid_handle 
    1094 =                           C  dup_too_many_open_files         EQU    
					 error_too_many_open_files 
    1095                             C   
    1096 =                           C  dup2_invalid_handle             EQU    
					 error_invalid_handle 
    1097                             C   
    1098 =                           C  exec_invalid_function           EQU    
					 error_invalid_function 
    1099 =                           C  exec_bad_environment            EQU    
					 error_bad_environment 
    1100 =                           C  exec_bad_format                 EQU    
					 error_bad_format 
    1101 =                           C  exec_not_enough_memory          EQU    
					 error_not_enough_memory 
    1102 =                           C  exec_file_not_found             EQU    
					 error_file_not_found 
    1103                             C   
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 17:21:29

RECOVER MS-DOS File/Disk Recovery Utility                   Page     1-51
Xenix error codes                                           

    1104 =                           C  filetimes_invalid_function      EQU    
					 error_invalid_function 
    1105 =                           C  filetimes_invalid_handle        EQU    
					 error_invalid_handle 
    1106                             C   
    1107 =                           C  findfirst_file_not_found        EQU    
					 error_file_not_found 
    1108 =                           C  findfirst_no_more_files         EQU    
					 error_no_more_files 
    1109 =                           C  findnext_no_more_files          EQU    
					 error_no_more_files 
    1110                             C   
    1111 =                           C  international_invalid_function  EQU    
					 error_invalid_function 
    1112                             C   
    1113 =                           C  ioctl_invalid_handle            EQU    
					 error_invalid_handle 
    1114 =                           C  ioctl_invalid_function          EQU    
					 error_invalid_function 
    1115 =                           C  ioctl_invalid_data              EQU    
					 error_invalid_data 
    1116                             C   
    1117 =                           C  lseek_invalid_handle            EQU    
					 error_invalid_handle 
    1118 =                           C  lseek_invalid_function          EQU    
					 error_invalid_function 
    1119                             C   
    1120 =                           C  mkdir_path_not_found            EQU    
					 error_path_not_found 
    1121 =                           C  mkdir_access_denied             EQU    
					 error_access_denied 
    1122                             C   
    1123 =                           C  open_invalid_access             EQU    
					 error_invalid_access 
    1124 =                           C  open_file_not_found             EQU    
					 error_file_not_found 
    1125 =                           C  open_access_denied              EQU    
					 error_access_denied 
    1126 =                           C  open_too_many_open_files        EQU    
					 error_too_many_open_files 
    1127                             C   
    1128 =                           C  read_invalid_handle             EQU    
					 error_invalid_handle 
    1129 =                           C  read_access_denied              EQU    
					 error_access_denied 
    1130                             C   
    1131 =                           C  rename_file_not_found           EQU    
					 error_file_not_found 
    1132 =                           C  rename_not_same_device          EQU    
					 error_not_same_device 
    1133 =                           C  rename_access_denied            EQU    
					 error_access_denied 
    1134                             C   
    1135 =                           C  rmdir_path_not_found            EQU    
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 17:21:29

RECOVER MS-DOS File/Disk Recovery Utility                   Page     1-52
Xenix error codes                                           

					 error_path_not_found 
    1136 =                           C  rmdir_access_denied             EQU    
					 error_access_denied 
    1137 =                           C  rmdir_current_directory         EQU    
					 error_current_directory 
    1138                             C   
    1139 =                           C  setblock_invalid_block          EQU    
					 error_invalid_block 
    1140 =                           C  setblock_arena_trashed          EQU    
					 error_arena_trashed 
    1141 =                           C  setblock_not_enough_memory      EQU    
					 error_not_enough_memory 
    1142 =                           C  setblock_invalid_function       EQU    
					 error_invalid_function 
    1143                             C   
    1144 =                           C  unlink_file_not_found           EQU    
					 error_file_not_found 
    1145 =                           C  unlink_access_denied            EQU    
					 error_access_denied 
    1146                             C   
    1147 =                           C  write_invalid_handle            EQU    
					 error_invalid_handle 
    1148 =                           C  write_access_denied             EQU    
					 error_access_denied 
    1149                             C   
    1150                             C  BREAK <system call definitions> 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 17:21:29

RECOVER MS-DOS File/Disk Recovery Utility                   Page     1-53
system call definitions                                     

    1151                             C   
    1152 = 0000                      C  Abort                           EQU 0  
					 ;  0      0 
    1153 = 0001                      C  Std_Con_Input                   EQU 1  
					 ;  1      1 
    1154 = 0002                      C  Std_Con_Output                  EQU 2  
					 ;  2      2 
    1155 = 0003                      C  Std_Aux_Input                   EQU 3  
					 ;  3      3 
    1156 = 0004                      C  Std_Aux_Output                  EQU 4  
					 ;  4      4 
    1157 = 0005                      C  Std_Printer_Output              EQU 5  
					 ;  5      5 
    1158 = 0006                      C  Raw_Con_IO                      EQU 6  
					 ;  6      6 
    1159 = 0007                      C  Raw_Con_Input                   EQU 7  
					 ;  7      7 
    1160 = 0008                      C  Std_Con_Input_No_Echo           EQU 8  
					 ;  8      8 
    1161 = 0009                      C  Std_Con_String_Output           EQU 9  
					 ;  9      9 
    1162 = 000A                      C  Std_Con_String_Input            EQU 10 
					 ; 10      A 
    1163 = 000B                      C  Std_Con_Input_Status            EQU 11 
					 ; 11      B 
    1164 = 000C                      C  Std_Con_Input_Flush             EQU 12 
					 ; 12      C 
    1165 = 000D                      C  Disk_Reset                      EQU 13 
					 ; 13      D 
    1166 = 000E                      C  Set_Default_Drive               EQU 14 
					 ; 14      E 
    1167 = 000F                      C  FCB_Open                        EQU 15 
					 ; 15      F 
    1168 = 0010                      C  FCB_Close                       EQU 16 
					 ; 16     10 
    1169 = 0011                      C  Dir_Search_First                EQU 17 
					 ; 17     11 
    1170 = 0012                      C  Dir_Search_Next                 EQU 18 
					 ; 18     12 
    1171 = 0013                      C  FCB_Delete                      EQU 19 
					 ; 19     13 
    1172 = 0014                      C  FCB_Seq_Read                    EQU 20 
					 ; 20     14 
    1173 = 0015                      C  FCB_Seq_Write                   EQU 21 
					 ; 21     15 
    1174 = 0016                      C  FCB_Create                      EQU 22 
					 ; 22     16 
    1175 = 0017                      C  FCB_Rename                      EQU 23 
					 ; 23     17 
    1176 = 0019                      C  Get_Default_Drive               EQU 25 
					 ; 25     19 
    1177 = 001A                      C  Set_DMA                         EQU 26 
					 ; 26     1A 
    1178                             C  ;----+----+----+----+----+----+----+---
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 17:21:29

RECOVER MS-DOS File/Disk Recovery Utility                   Page     1-54
system call definitions                                     

					-+----+----+----+----+----+----+----; 
    1179                             C  ;            C  A  V  E  A  T     P  R 
					 O  G  R  A  M  M  E  R             ; 
    1180                             C  ;                                      
					                                    ; 
    1181 = 001F                      C  Get_Default_DPB                 EQU 31 
					 ; 31     1F 
    1182                             C  ;                                      
					                                    ; 
    1183                             C  ;            C  A  V  E  A  T     P  R 
					 O  G  R  A  M  M  E  R             ; 
    1184                             C  ;----+----+----+----+----+----+----+---
					-+----+----+----+----+----+----+----; 
    1185 = 0021                      C  FCB_Random_Read                 EQU 33 
					 ; 33     21 
    1186 = 0022                      C  FCB_Random_Write                EQU 34 
					 ; 34     22 
    1187 = 0023                      C  Get_FCB_File_Length             EQU 35 
					 ; 35     23 
    1188 = 0024                      C  Get_FCB_Position                EQU 36 
					 ; 36     24 
    1189 = 0025                      C  Set_Interrupt_Vector            EQU 37 
					 ; 37     25 
    1190 = 0026                      C  Create_Process_Data_Block       EQU 38 
					 ; 38     26 
    1191 = 0027                      C  FCB_Random_Read_Block           EQU 39 
					 ; 39     27 
    1192 = 0028                      C  FCB_Random_Write_Block          EQU 40 
					 ; 40     28 
    1193 = 0029                      C  Parse_File_Descriptor           EQU 41 
					 ; 41     29 
    1194 = 002A                      C  Get_Date                        EQU 42 
					 ; 42     2A 
    1195 = 002B                      C  Set_Date                        EQU 43 
					 ; 43     2B 
    1196 = 002C                      C  Get_Time                        EQU 44 
					 ; 44     2C 
    1197 = 002D                      C  Set_Time                        EQU 45 
					 ; 45     2D 
    1198 = 002E                      C  Set_Verify_On_Write             EQU 46 
					 ; 46     2E 
    1199                             C  ; Extended functionality group 
    1200 = 002F                      C  Get_DMA                         EQU 47 
					 ; 47     2F 
    1201 = 0030                      C  Get_Version                     EQU 48 
					 ; 48     30 
    1202 = 0031                      C  Keep_Process                    EQU 49 
					 ; 49     31 
    1203                             C  ;----+----+----+----+----+----+----+---
					-+----+----+----+----+----+----+----; 
    1204                             C  ;            C  A  V  E  A  T     P  R 
					 O  G  R  A  M  M  E  R             ; 
    1205                             C  ;                                      
					                                    ; 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 17:21:29

RECOVER MS-DOS File/Disk Recovery Utility                   Page     1-55
system call definitions                                     

    1206 = 0032                      C  Get_DPB                         EQU 50 
					 ; 50     32 
    1207                             C  ;                                      
					                                    ; 
    1208                             C  ;            C  A  V  E  A  T     P  R 
					 O  G  R  A  M  M  E  R             ; 
    1209                             C  ;----+----+----+----+----+----+----+---
					-+----+----+----+----+----+----+----; 
    1210 = 0033                      C  Set_CTRL_C_Trapping             EQU 51 
					 ; 51     33 
    1211 = 0034                      C  Get_InDOS_Flag                  EQU 52 
					 ; 52     34 
    1212 = 0035                      C  Get_Interrupt_Vector            EQU 53 
					 ; 53     35 
    1213 = 0036                      C  Get_Drive_Freespace             EQU 54 
					 ; 54     36 
    1214 = 0037                      C  Char_Oper                       EQU 55 
					 ; 55     37 
    1215 = 0038                      C  International                   EQU 56 
					 ; 56     38 
    1216                             C  ;   Directory Group 
    1217 = 0039                      C  MKDir                           EQU 57 
					 ; 57     39 
    1218 = 003A                      C  RMDir                           EQU 58 
					 ; 58     3A 
    1219 = 003B                      C  CHDir                           EQU 59 
					 ; 59     3B 
    1220                             C  ;   File Group 
    1221 = 003C                      C  Creat                           EQU 60 
					 ; 60     3C 
    1222 = 003D                      C  Open                            EQU 61 
					 ; 61     3D 
    1223 = 003E                      C  Close                           EQU 62 
					 ; 62     3E 
    1224 = 003F                      C  Read                            EQU 63 
					 ; 63     3F 
    1225 = 0040                      C  Write                           EQU 64 
					 ; 64     40 
    1226 = 0041                      C  Unlink                          EQU 65 
					 ; 65     41 
    1227 = 0042                      C  LSeek                           EQU 66 
					 ; 66     42 
    1228 = 0043                      C  CHMod                           EQU 67 
					 ; 67     43 
    1229 = 0044                      C  IOCtl                           EQU 68 
					 ; 68     44 
    1230 = 0045                      C  XDup                            EQU 69 
					 ; 69     45 
    1231 = 0046                      C  XDup2                           EQU 70 
					 ; 70     46 
    1232 = 0047                      C  Current_Dir                     EQU 71 
					 ; 71     47 
    1233                             C  ;    Memory Group 
    1234 = 0048                      C  Alloc                           EQU 72 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 17:21:29

RECOVER MS-DOS File/Disk Recovery Utility                   Page     1-56
system call definitions                                     

					 ; 72     48 
    1235 = 0049                      C  Dealloc                         EQU 73 
					 ; 73     49 
    1236 = 004A                      C  Setblock                        EQU 74 
					 ; 74     4A 
    1237                             C  ;    Process Group 
    1238 = 004B                      C  Exec                            EQU 75 
					 ; 75     4B 
    1239 = 004C                      C  Exit                            EQU 76 
					 ; 76     4C 
    1240 = 004D                      C  Wait                            EQU 77 
					 ; 77     4D 
    1241 = 004E                      C  Find_First                      EQU 78 
					 ; 78     4E 
    1242                             C  ;   Special Group 
    1243 = 004F                      C  Find_Next                       EQU 79 
					 ; 79     4F 
    1244                             C  ; SPECIAL SYSTEM GROUP 
    1245                             C  ;----+----+----+----+----+----+----+---
					-+----+----+----+----+----+----+----; 
    1246                             C  ;            C  A  V  E  A  T     P  R 
					 O  G  R  A  M  M  E  R             ; 
    1247                             C  ;                                      
					                                    ; 
    1248 = 0050                      C  Set_Current_PDB                 EQU 80 
					 ; 80     50 
    1249 = 0051                      C  Get_Current_PDB                 EQU 81 
					 ; 81     51 
    1250 = 0052                      C  Get_In_Vars                     EQU 82 
					 ; 82     52 
    1251 = 0053                      C  SetDPB                          EQU 83 
					 ; 83     53 
    1252                             C  ;                                      
					                                    ; 
    1253                             C  ;            C  A  V  E  A  T     P  R 
					 O  G  R  A  M  M  E  R             ; 
    1254                             C  ;----+----+----+----+----+----+----+---
					-+----+----+----+----+----+----+----; 
    1255 = 0054                      C  Get_Verify_On_Write             EQU 84 
					 ; 84     54 
    1256                             C  ;----+----+----+----+----+----+----+---
					-+----+----+----+----+----+----+----; 
    1257                             C  ;            C  A  V  E  A  T     P  R 
					 O  G  R  A  M  M  E  R             ; 
    1258                             C  ;                                      
					                                    ; 
    1259 = 0055                      C  Dup_PDB                         EQU 85 
					 ; 85     55 
    1260                             C  ;                                      
					                                    ; 
    1261                             C  ;            C  A  V  E  A  T     P  R 
					 O  G  R  A  M  M  E  R             ; 
    1262                             C  ;----+----+----+----+----+----+----+---
					-+----+----+----+----+----+----+----; 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 17:21:29

RECOVER MS-DOS File/Disk Recovery Utility                   Page     1-57
system call definitions                                     

    1263 = 0056                      C  Rename                          EQU 86 
					 ; 86     56 
    1264 = 0057                      C  File_Times                      EQU 87 
					 ; 87     57 
    1265 = 0058                      C  AllocOper                       EQU 88 
					 ; 88     58 
    1266                             C  ; Network extention system calls 
    1267 = 0059                      C  GetExtendedError                EQU 89 
					 ; 89     59 
    1268 = 005A                      C  CreateTempFile                  EQU 90 
					 ; 90     5A 
    1269 = 005B                      C  CreateNewFile                   EQU 91 
					 ; 91     5B 
    1270 = 005C                      C  LockOper                        EQU 92 
					 ; 92     5C Lock and Unlock 
    1271 = 005D                      C  ServerCall                      EQU 93 
					 ; 93     5D CommitAll, ServerDOSCall, 
    1272                             C                                         
					 ;           CloseByName, CloseUser, 
    1273                             C                                         
					 ;           CloseUserProcess, 
    1274                             C                                         
					 ;           GetOpenFileList 
    1275 = 005E                      C  UserIDOper                      EQU 94 
					 ; 94     5E Get and Set 
    1276 = 005F                      C  AssignOper                      EQU 95 
					 ; 95     5F On, Off, Get, Set, Cancel 
    1277                             C   
    1278 = 00F8                      C  Set_Oem_Handler                 EQU 248
					 ; 248    F8 
    1279 = 00F9                      C  OEM_C1                          EQU 249
					 ; 249    F9 
    1280 = 00FA                      C  OEM_C2                          EQU 250
					 ; 250    FA 
    1281 = 00FB                      C  OEM_C3                          EQU 251
					 ; 251    FB 
    1282 = 00FC                      C  OEM_C4                          EQU 252
					 ; 252    FC 
    1283 = 00FD                      C  OEM_C5                          EQU 253
					 ; 253    FD 
    1284 = 00FE                      C  OEM_C6                          EQU 254
					 ; 254    FE 
    1285 = 00FF                      C  OEM_C7                          EQU 255
					 ; 255    FF 
    1286                             C  SUBTTL 
    1287                                 
    1288                                 
    1289                                ; 
    1290 = 000D                         cr      equ     0dh 
    1291 = 000A                         lf      equ     0ah 
    1292                                ; 
    1293 = 005C                         fcb     equ     5ch 
    1294                                 
    1295 0000                           code    segment public 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 17:21:29

RECOVER MS-DOS File/Disk Recovery Utility                   Page     1-58
                                                            

    1296 0000                           code    ends 
    1297                                 
    1298 0000                           const   segment public byte 
    1299 0000                           const   ends 
    1300                                 
    1301 0000                           data    segment public byte 
    1302 0000                           data    ends 
    1303                                 
    1304                                 
    1305                                dg      group   code,const,data 
    1306                                 
    1307 0000                           code    segment public 
    1308                                        assume  cs:dg,ds:dg,es:dg,ss:dg
					 
    1309                                 
    1310                                        PUBLIC  PCRLF,PRINT,INT_23,conv
					ert 
    1311                                        EXTRN   dskwrt:NEAR,dskrd:NEAR,
					DSKERR:NEAR,report:NEAR 
    1312                                 
    1313 0100                                   org     100h 
    1314                                 
    1315 0100  E9 02EA R                recover:jmp     rec_start 
    1316                                 
    1317 0103  56 65 72 73 20 31 2E     HEADER  DB      "Vers 1.50" 
    1318       35 30                    
    1319                                 
    1320                                ;--------------------------------------
					---------------------------------; 
    1321 010C  ????????                 hardch  dd      ? 
    1322                                 
    1323 0110  00                       the_root db     0                      
					 ;root directory flag 
    1324                                 
    1325 0111  00                       fudge   db      0                      
					 ;directory changed flag 
    1326 0112  00                       user_drive      db      0 
    1327 0113  00                       drive   db      0 
    1328                                 
    1329                                 
    1330 0114  2F 00                    dirchar db      "/",0 
    1331                                 
    1332                                 
    1333 0116  2F 00                    userdir db      "/",0 
    1334 0118  0040[                            db      (dirstrlen) dup(0) 
    1335            00                  
    1336                         ]      
    1337                                
    1338                                 
    1339 0158  0080[                    fname_buffer db 128 dup(0) 
    1340            00                  
    1341                         ]      
    1342                                
    1343                                ;--------------------------------------
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 17:21:29

RECOVER MS-DOS File/Disk Recovery Utility                   Page     1-59
                                                            

					---------------------------------; 
    1344                                 
    1345 01D8  BA 0000 E                pcrlf:  mov     dx,offset dg: crlf 
    1346 01DB  B4 09                    print:  mov     ah,STD_CON_STRING_OUTPU
					T 
    1347 01DD  CD 21                            int     bdos 
    1348 01DF  C3                       pret:   ret 
    1349                                ; 
    1350 01E0  53                       convert:push    bx 
    1351 01E1  33 C0                            xor     ax,ax 
    1352 01E3  8B D8                            mov     bx,ax 
    1353 01E5  8B E8                            mov     bp,ax 
    1354 01E7  B9 0020                          mov     cx,32 
    1355 01EA  D1 E6                    convlp: shl     si,1 
    1356 01EC  D1 D7                            rcl     di,1 
    1357 01EE  95                               xchg    ax,bp 
    1358 01EF  E8 0241 R                        call    convwrd 
    1359 01F2  95                               xchg    ax,bp 
    1360 01F3  93                               xchg    ax,bx 
    1361 01F4  E8 0241 R                        call    convwrd 
    1362 01F7  93                               xchg    ax,bx 
    1363 01F8  14 00                            adc     al,0 
    1364 01FA  E2 EE                            loop    convlp 
    1365                                 
    1366 01FC  B9 1810                          mov     cx,1810h 
    1367 01FF  92                               xchg    dx,ax 
    1368 0200  E8 0227 R                        call    digit 
    1369 0203  93                               xchg    ax,bx 
    1370 0204  E8 0211 R                        call    outword 
    1371 0207  8B C5                            mov     ax,bp 
    1372 0209  E8 0211 R                        call    outword 
    1373 020C  5A                               pop     dx 
    1374 020D  E8 01DB R                        call    print 
    1375 0210  C3                       ret2:   ret 
    1376                                ; 
    1377 0211  50                       outword:push    ax 
    1378 0212  8A D4                            mov     dl,ah 
    1379 0214  E8 0218 R                        call    outbyte 
    1380 0217  5A                               pop     dx 
    1381 0218  8A F2                    outbyte:mov     dh,dl 
    1382 021A  D0 EA                            shr     dl,1 
    1383 021C  D0 EA                            shr     dl,1 
    1384 021E  D0 EA                            shr     dl,1 
    1385 0220  D0 EA                            shr     dl,1 
    1386 0222  E8 0227 R                        call    digit 
    1387 0225  8A D6                            mov     dl,dh 
    1388 0227  80 E2 0F                 digit:  and     dl,0fh 
    1389 022A  74 02                            jz      blankzer 
    1390 022C  32 C9                            xor     cl,cl 
    1391 022E                           blankzer: 
    1392 022E  FE CD                            dec     ch 
    1393 0230  22 CD                            and     cl,ch 
    1394 0232  80 CA 30                         or      dl,30h 
    1395 0235  2A D1                            sub     dl,cl 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 17:21:29

RECOVER MS-DOS File/Disk Recovery Utility                   Page     1-60
                                                            

    1396 0237  80 FA 30                         cmp     dl,30h 
    1397 023A  7C D4                            jl      ret2 
    1398 023C  B4 02                            mov     ah,STD_CON_OUTPUT 
    1399 023E  CD 21                            int     bdos 
    1400 0240  C3                               ret 
    1401                                ; 
    1402 0241  12 C0                    convwrd:adc     al,al 
    1403 0243  27                               daa 
    1404 0244  86 C4                            xchg    al,ah 
    1405 0246  12 C0                            adc     al,al 
    1406 0248  27                               daa 
    1407 0249  86 C4                            xchg    al,ah 
    1408 024B  C3                               ret 
    1409                                ; 
    1410                                ;       bx = fat[ax] 
    1411                                ; 
    1412 024C  BB 0044 R                getfat: mov     bx,offset dg: fattbl 
    1413 024F  50                               push    ax 
    1414 0250  8B F0                            mov     si,ax 
    1415 0252  D1 F8                            sar     ax,1 
    1416 0254  9C                               pushf 
    1417 0255  03 F0                            add     si,ax 
    1418 0257  8B 18                            mov     bx,word ptr [bx][si] 
    1419 0259  9D                               popf 
    1420 025A  73 04                            jnc     getfat1 
    1421 025C  B1 04                            mov     cl,4 
    1422 025E  D3 EB                            shr     bx,cl 
    1423 0260  80 E7 0F                 getfat1:and     bh,00001111b 
    1424 0263  58                               pop     ax 
    1425 0264  8B 0E 0036 R                     mov     cx,secsiz 
    1426 0268  C3                               ret 
    1427                                ; 
    1428                                ;       fat[ax] = dx 
    1429                                ; 
    1430 0269  BB 0044 R                setfat: mov     bx,offset dg: fattbl 
    1431 026C  50                               push    ax 
    1432 026D  52                               push    dx 
    1433 026E  8B F0                            mov     si,ax 
    1434 0270  D1 F8                            sar     ax,1 
    1435 0272  9C                               pushf 
    1436 0273  03 F0                            add     si,ax 
    1437 0275  8B 00                            mov     ax,word ptr [bx][si] 
    1438 0277  9D                               popf 
    1439 0278  73 0E                            jnc     setfat2 
    1440 027A  25 000F                          and     ax,000fh 
    1441 027D  B1 04                            mov     cl,4 
    1442 027F  D3 E2                            shl     dx,cl 
    1443 0281  0B C2                    setfat1:or      ax,dx 
    1444 0283  89 00                            mov     word ptr [bx][si],ax 
    1445 0285  5A                               pop     dx 
    1446 0286  58                               pop     ax 
    1447 0287  C3                               ret 
    1448                                 
    1449 0288  25 F000                  setfat2:and     ax,0f000h 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 17:21:29

RECOVER MS-DOS File/Disk Recovery Utility                   Page     1-61
                                                            

    1450 028B  EB F4                            jmp     setfat1 
    1451                                 
    1452 028D  8B 16 0028 R             load:   mov     dx,firfat 
    1453 0291  A0 0025 R                        mov     al,byte ptr fatnum 
    1454 0294  A2 0024 R                        mov     byte ptr fatcnt,al 
    1455 0297  A0 0113 R                        mov     al,byte ptr drive 
    1456 029A  8B 0E 0026 R                     mov     cx,fatsiz 
    1457 029E  BB 0044 R                        mov     bx,offset dg: fattbl 
    1458 02A1  C3                       ret66:  ret 
    1459                                 
    1460 02A2  E8 028D R                readft: call    load 
    1461 02A5  E8 0000 E                readit: call    dskrd 
    1462 02A8  83 3E 0020 R 00                  cmp     [fndfat],0      ;save l
					ocation of readable fat sector 
    1463 02AD  75 04                            jnz     fdfat 
    1464 02AF  89 16 0020 R                     mov     [fndfat],dx 
    1465 02B3  83 7F 01 FF              fdfat:  cmp     word ptr [bx+1],-1 
    1466 02B7  74 E8                            jz      ret66 
    1467                                 
    1468 02B9  03 D1                            add     dx,cx           ;try to
					 read the other fats 
    1469 02BB  FE 0E 0024 R                     dec     byte ptr fatcnt 
    1470 02BF  75 E4                            jnz     readit 
    1471                                 
    1472 02C1  8B 16 0020 R                     mov     dx,[fndfat]     ;see if
					 any readable at all 
    1473 02C5  0B D2                            or      dx,dx 
    1474 02C7  74 D9                            jz      readft          ;if not
					 disk is blown, keep trying 
    1475 02C9  E8 0000 E                        call    dskrd 
    1476 02CC  C3                               ret 
    1477                                 
    1478 02CD  E8 028D R                wrtfat: call    load 
    1479 02D0  50                       wrtit:  push    ax 
    1480 02D1  53                               push    bx 
    1481 02D2  51                               push    cx 
    1482 02D3  52                               push    dx 
    1483 02D4  E8 0000 E                        call    dskwrt 
    1484 02D7  5A                               pop     dx 
    1485 02D8  59                               pop     cx 
    1486 02D9  5B                               pop     bx 
    1487 02DA  58                               pop     ax 
    1488                                 
    1489 02DB  03 D1                    wrtok:  add     dx,cx 
    1490 02DD  FE 0E 0024 R                     dec     byte ptr fatcnt 
    1491 02E1  75 ED                            jnz     wrtit 
    1492 02E3  C3                               ret 
    1493                                 
    1494 02E4                           printerr: 
    1495 02E4  E8 01DB R                        call    print 
    1496 02E7  E9 0708 R                        jmp     rabort 
    1497                                 
    1498                                 
    1499 02EA                           rec_start: 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 17:21:29

RECOVER MS-DOS File/Disk Recovery Utility                   Page     1-62
                                                            

    1500                                 
    1501                                ;Code to print header 
    1502                                ;       PUSH    AX 
    1503                                ;       MOV     DX,OFFSET DG:HEADER 
    1504                                ;       CALL    print 
    1505                                ;       POP     AX 
    1506                                 
    1507 = 0200                         DOSVER_HIGH     EQU  0200H   ;2.00 in h
					ex 
    1508 02EA  50                               PUSH    AX              ;Save D
					RIVE validity info 
    1509 02EB  B4 30                            MOV     AH,GET_VERSION 
    1510 02ED  CD 21                            INT     21H 
    1511 02EF  86 E0                            XCHG    AH,AL           ;Turn i
					t around to AH.AL 
    1512 02F1  3D 0200                          CMP     AX,DOSVER_HIGH 
    1513 02F4  73 08                            JAE     OKDOS 
    1514 02F6                           GOTBADDOS: 
    1515 02F6  BA 0000 E                        MOV     DX,OFFSET DG:BADVER 
    1516 02F9  E8 01DB R                        CALL    PRINT 
    1517 02FC  CD 20                            INT     20H 
    1518                                 
    1519 02FE  58                       OKDOS:  POP     AX 
    1520                                 
    1521 02FF  3C FF                            cmp     al,0ffH 
    1522 0301  74 18                            JZ      BADDRVSPECJ 
    1523 0303  BE 0080                          mov     si,80h 
    1524 0306  AC                               lodsb 
    1525 0307  0A C0                            or      al,al 
    1526 0309  74 0D                            jz      noparm 
    1527 030B  AC                       look:   lodsb 
    1528 030C  3C 20                            cmp     al," " 
    1529 030E  74 FB                            jz      look 
    1530 0310  3C 09                            cmp     al,9 
    1531 0312  74 F7                            jz      look 
    1532 0314  3C 0D                            cmp     al,13 
    1533 0316  75 06                            jnz     gotparm 
    1534 0318                           noparm: 
    1535 0318  E9 048D R                        jmp     noname 
    1536                                 
    1537 031B  E9 0412 R                BADDRVSPECJ: JMP BADDRVSPEC 
    1538                                 
    1539 031E                           gotparm: 
    1540 031E  B4 0D                            mov     ah,DISK_RESET 
    1541 0320  CD 21                            int     bdos                   
					 ;empty buffer queue 
    1542                                 
    1543 0322  B4 19                            mov     ah,get_default_drive   
					 ;save current drive 
    1544 0324  CD 21                            int     21h 
    1545 0326  A2 0112 R                        mov     [user_drive],al 
    1546                                 
    1547 0329  BB 005C                          mov     bx,fcb                 
					 ;determine input command 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 17:21:29

RECOVER MS-DOS File/Disk Recovery Utility                   Page     1-63
                                                            

    1548 032C  8A 07                            mov     al,[bx] 
    1549 032E  FE C8                            dec     al 
    1550 0330  3C FF                            cmp     al,-1 
    1551 0332  75 03                            jnz     drvok1 
    1552 0334  A0 0112 R                        mov     al,[user_drive] 
    1553 0337                           drvok1: 
    1554 0337  A2 0113 R                        mov     [drive],al 
    1555 033A  00 06 0000 E                     add     [drvlet],al 
    1556 033E  00 06 0000 E                     add     [drvlet1],al 
    1557 0342  BA 0000 E                        mov     dx,offset dg: askmsg 
    1558 0345  E8 01DB R                        call    print 
    1559 0348  B4 0C                            mov     ah,STD_CON_INPUT_FLUSH 
    1560 034A  B0 01                            mov     al,1                   
					 ;wait for a key 
    1561 034C  CD 21                            int     bdos 
    1562                                 
    1563 034E  3C 17                            cmp     al,17h 
    1564 0350  75 3F                            jnz     drvok2 
    1565 0352  BA 0357 R                        mov     dx,offset dg: egomes 
    1566 0355  EB 8D                            jmp     printerr 
    1567 0357  43 68 72 69 73 20 50     egomes: db      "Chris Peters helped wi
					th the new dos!",cr,lf 
    1568       65 74 65 72 73 20 68     
    1569       65 6C 70 65 64 20 77     
    1570       69 74 68 20 74 68 65     
    1571       20 6E 65 77 20 64 6F     
    1572       73 21 0D 0A              
    1573 037E  4D 69 63 72 6F 73 6F             db      "Microsoft rules ok$" 
    1574       66 74 20 72 75 6C 65     
    1575       73 20 6F 6B 24           
    1576                                 
    1577 0391                           drvok2: 
    1578                                        IF      IBMVER 
    1579 0391  A0 0113 R                        MOV     AL,DRIVE               
					 ;This is for ibm's single drive sys 
    1580 0394  1E                               PUSH    DS 
    1581 0395  BB 0050                          MOV     BX,50H 
    1582 0398  8E DB                            MOV     DS,BX 
    1583 039A  A2 0004                          MOV     DS:(BYTE PTR 4),AL     
					         ;Indicate drive changed 
    1584 039D  1F                               POP     DS 
    1585                                        ENDIF 
    1586                                 
    1587                                ;----- Process Pathnames --------------
					---------------------------------; 
    1588 039E  B8 3700                          mov     ax,(char_oper shl 8)   
					 ;get switch character 
    1589 03A1  CD 21                            int     21h 
    1590 03A3  80 FA 2F                         cmp     dl,"/" 
    1591 03A6  75 0A                            jnz     slashok                
					 ;if not / , then not PC 
    1592 03A8  C6 06 0114 R 5C                  mov     [dirchar],"\"          
					 ;in PC, dir separator = \ 
    1593 03AD  C6 06 0116 R 5C                  mov     [userdir],"\" 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 17:21:29

RECOVER MS-DOS File/Disk Recovery Utility                   Page     1-64
                                                            

    1594                                 
    1595 03B2                           slashok: 
    1596 03B2  BE 0081                          mov     si,81h                 
					 ;point to cammand line 
    1597 03B5  BF 0158 R                        mov     di,offset dg: fname_buf
					fer 
    1598 03B8  33 C9                            xor     cx,cx                  
					 ;zero pathname length 
    1599                                 
    1600 03BA                           kill_bl: 
    1601 03BA  AC                               lodsb                          
					 ;get rid of blanks 
    1602 03BB  3C 09                            cmp     al,9 
    1603 03BD  74 FB                            je      kill_bl 
    1604 03BF  3C 20                            cmp     al,' ' 
    1605 03C1  74 F7                            je      kill_bl 
    1606 03C3  3C 0D                            cmp     al,13                  
					 ;A carriage return? 
    1607 03C5  75 03                            jne     next_char 
    1608 03C7  E9 048D R                        jmp     noname                 
					 ;yes, file name missing 
    1609                                 
    1610 03CA                           next_char: 
    1611 03CA  AA                               stosb                          
					 ;put patname in buffer 
    1612 03CB  41                               inc     cx 
    1613 03CC  AC                               lodsb 
    1614 03CD  3C 20                            cmp     al,' ' 
    1615 03CF  74 08                            je      name_copied 
    1616 03D1  3C 09                            cmp     al,9 
    1617 03D3  74 04                            je      name_copied 
    1618 03D5  3C 0D                            cmp     al,13                  
					 ; a CR ? 
    1619 03D7  75 F1                            jne     next_char 
    1620                                 
    1621 03D9                           name_copied: 
    1622 03D9  C6 05 00                         mov     byte ptr [di],0        
					 ;nul terminate the pathname 
    1623 03DC  4F                               dec     di                     
					 ;adjust to the end of the pathname 
    1624                                 
    1625                                ;----- Scan for directory -------------
					---------------------------------; 
    1626                                 
    1627                                        ELSE 
    1628 03DD  A0 0114 R                        mov     al,[dirchar]           
					 ;get directory separator character 
    1629 03E0  FD                               std                            
					 ;scan backwards 
    1630 03E1  F2/ AE                           repnz   scasb                  
					 ;(cx has the pathname length) 
    1631 03E3  FC                               cld                            
					 ;reset direction, just in case 
    1632 03E4  74 03                            jz      sja 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 17:21:29

RECOVER MS-DOS File/Disk Recovery Utility                   Page     1-65
                                                            

    1633                                        ENDIF 
    1634                                 
    1635 03E6  E9 047E R                        jmp     same_dir               
					 ;no dir separator char. found, the 
    1636                                                                       
					 ; file is in the current directory 
    1637                                                                       
					 ; of the corresponding drive. Ergo, 
    1638                                                                       
					 ; the FCB contains the data already. 
    1639                                 
    1640 03E9                           sja: 
    1641 03E9  E3 05                            jcxz    sjb                    
					 ;no more chars left, it refers to root
					 
    1642 03EB  80 3D 3A                         cmp     byte ptr [di],':'      
					 ;is the prvious character a disk def? 
    1643 03EE  75 05                            jne     not_root 
    1644 03F0                           sjb: 
    1645 03F0  C6 06 0110 R 01                  mov     [the_root],01h         
					 ;file is in the root 
    1646 03F5                           not_root: 
    1647 03F5  47                               inc     di                     
					 ;point to dir separator char. 
    1648 03F6  B0 00                            mov     al,0 
    1649 03F8  AA                               stosb                          
					 ;nul terminate directory name 
    1650 03F9  58                               pop     ax 
    1651 03FA  57                               push    di                     
					 ;save pointer to file name 
    1652 03FB  C6 06 0111 R 01                  mov     [fudge],01h            
					 ;remember that the current directory 
    1653                                                                       
					 ; has been changed. 
    1654                                 
    1655                                ;----- Save current directory for exit 
					---------------------------------; 
    1656 0400  8A 16 005C                       mov     dl,byte ptr ds:[fcb]   
					 ;get specified drive if any 
    1657 0404  0A D2                            or      dl,dl                  
					 ;default disk? 
    1658 0406  74 10                            jz      same_drive 
    1659 0408  FE CA                            dec     dl                     
					 ;adjust to real drive (a=0,b=1,...) 
    1660 040A  B4 0E                            mov     ah,set_default_drive   
					 ;change disks 
    1661 040C  CD 21                            int     21h 
    1662 040E  3C FF                            cmp     al,-1                  
					 ;error? 
    1663 0410  75 06                            jne     same_drive 
    1664 0412                           BADDRVSPEC: 
    1665 0412  BA 0000 E                        mov     dx,offset dg: baddrv 
    1666 0415  E9 02E4 R                        jmp     printerr 
    1667                                 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 17:21:29

RECOVER MS-DOS File/Disk Recovery Utility                   Page     1-66
                                                            

    1668 0418                           same_drive: 
    1669 0418  B4 1F                            mov     ah,get_default_dpb 
    1670 041A  CD 21                            int     21h 
    1671                                 
    1672                                assume  ds:nothing 
    1673                                 
    1674 041C  3C FF                            cmp     al,-1                  
					 ;bad drive? (should always be ok) 
    1675 041E  75 06                            jne     drvisok 
    1676 0420  BA 0000 E                        mov     dx,offset dg: baddrv 
    1677 0423  E9 02E4 R                        jmp     printerr 
    1678                                 
    1679 0426                           drvisok: 
    1680 0426  83 7F 1C 00                      cmp     [bx.dpb_current_dir],0 
    1681 042A  74 0E                            je      curr_is_root 
    1682 042C  8B F3                            mov     si,bx 
    1683 042E  83 C6 1E                         add     si,dpb_dir_text 
    1684 0431  BF 0117 R                        mov     di,offset dg: userdir +
					 1 
    1685                                 
    1686 0434                           dir_save_loop: 
    1687 0434  AC                               lodsb 
    1688 0435  AA                               stosb 
    1689 0436  0A C0                            or      al,al 
    1690 0438  75 FA                            jnz     dir_save_loop 
    1691                                 
    1692 043A                           curr_is_root: 
    1693 043A  0E                               push    cs 
    1694 043B  1F                               pop     ds 
    1695                                 
    1696                                assume  ds:dg 
    1697                                 
    1698                                 
    1699                                ;----- Change directories -------------
					---------------------------------; 
    1700 043C  80 3E 0110 R 01                  cmp     [the_root],01h 
    1701 0441  BA 0114 R                        mov     dx,offset dg: [dirchar]
					            ;assume the root 
    1702 0444  74 03                            je      sj1 
    1703 0446  BA 0158 R                        mov     dx,offset dg: [fname_bu
					ffer] 
    1704 0449                           sj1: 
    1705 0449  B4 3B                            mov     ah,chdir               
					         ;change directory 
    1706 044B  CD 21                            int     21h 
    1707 044D  BA 0000 E                        mov     dx,offset dg: baddrv 
    1708 0450  73 03                            jnc     no_errors 
    1709 0452  E9 02E4 R                        jmp     printerr 
    1710 0455                           no_errors: 
    1711                                 
    1712                                ;----- Set Up int 24 intercept --------
					---------------------------------; 
    1713                                 
    1714 0455  B8 3524                          mov     ax,(get_interrupt_vecto
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 17:21:29

RECOVER MS-DOS File/Disk Recovery Utility                   Page     1-67
                                                            

					r shl 8) or 24h 
    1715 0458  CD 21                            int     21h 
    1716 045A  89 1E 010C R                     mov     word ptr [hardch],bx 
    1717 045E  8C 06 010E R                     mov     word ptr [hardch+2],es 
    1718 0462  B8 2523                          mov     ax,(set_interrupt_vecto
					r shl 8) or 23h 
    1719 0465  BA 0705 R                        mov     dx,offset dg: int_23 
    1720 0468  CD 21                            int     21h 
    1721 046A  B8 2524                          mov     ax,(set_interrupt_vecto
					r shl 8) or 24h 
    1722 046D  BA 072E R                        mov     dx,offset dg: int_24 
    1723 0470  CD 21                            int     21h 
    1724 0472  0E                               push    cs 
    1725 0473  07                               pop     es 
    1726                                 
    1727                                ;----- Parse filename to FCB ----------
					---------------------------------; 
    1728 0474  5E                               pop     si 
    1729 0475  BF 005C                          mov     di,fcb 
    1730 0478  B8 2901                          mov     ax,(parse_file_descript
					or shl 8) or 1 
    1731 047B  CD 21                            int     21h 
    1732 047D  50                               push    ax 
    1733                                ;--------------------------------------
					---------------------------------; 
    1734 047E                           same_dir: 
    1735 047E  58                               pop     ax 
    1736                                 
    1737 047F  BB 005C                          mov     bx,fcb 
    1738 0482  80 7F 01 20                      cmp     byte ptr [bx+1],' '    
					 ;must specify file name 
    1739 0486  75 0E                            jnz     drvok 
    1740 0488  80 3F 00                         cmp     byte ptr [bx],0        
					 ;or drive specifier 
    1741 048B  75 09                            jnz     drvok 
    1742 048D  BA 0000 E                noname: mov     dx,offset dg: drverr 
    1743 0490  E8 01DB R                        call    print 
    1744 0493  E9 0705 R                        jmp     int_23 
    1745                                 
    1746 0496  1E                       drvok:  push    ds 
    1747 0497  8A 16 0113 R                     mov     dl,drive 
    1748 049B  FE C2                            inc     dl 
    1749 049D  B4 32                            mov     ah,GET_DPB 
    1750 049F  CD 21                            int     bdos 
    1751 04A1  8B 47 02                         mov     ax,word ptr [bx+2]     
					 ;get physical sector size 
    1752 04A4  8A 4F 04                         mov     cl,byte ptr [bx+4]     
					 ;get sectors/cluster - 1 
    1753 04A7  32 ED                            xor     ch,ch 
    1754 04A9  41                               inc     cx 
    1755 04AA  2E: 89 0E 002C R                 mov     cs:secall,cx           
					 ;save sectors per cluster 
    1756 04AF  F7 E1                            mul     cx                     
					 ;ax = bytes per cluster 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 17:21:29

RECOVER MS-DOS File/Disk Recovery Utility                   Page     1-68
                                                            

    1757 04B1  8B 6F 0B                         mov     bp,word ptr [bx+11]    
					 ;get record of first sector 
    1758 04B4  8B 57 10                         mov     dx,word ptr [bx+16]    
					 ;get record of first directory entry 
    1759 04B7  8B 77 06                         mov     si,word ptr [bx+6]     
					 ;get record of first fat 
    1760 04BA  8A 4F 0F                         mov     cl,byte ptr [bx+15]    
					 ;get size of fat 
    1761 04BD  8B 7F 0D                         mov     di,word ptr [bx+13]    
					 ;get number of clusters 
    1762 04C0  8A 6F 08                         mov     ch,byte ptr [bx+8]     
					 ;get number of fats on drive 
    1763 04C3  8B 5F 09                         mov     bx,word ptr [bx+9]     
					 ;get max number of dir entries 
    1764 04C6  1F                               pop     ds 
    1765                                 
    1766 04C7  89 1E 0030 R                     mov     maxent,bx 
    1767 04CB  89 36 0028 R                     mov     firfat,si 
    1768 04CF  89 2E 0032 R                     mov     firrec,bp 
    1769 04D3  89 16 0034 R                     mov     firdir,dx 
    1770 04D7  88 0E 0026 R                     mov     byte ptr fatsiz,cl 
    1771 04DB  89 3E 0040 R                     mov     lastfat,di             
					 ;number of fat entries 
    1772 04DF  88 2E 0025 R                     mov     byte ptr fatnum,ch     
					 ;save number of fats on disk 
    1773                                 
    1774 04E3  A3 0036 R                        mov     secsiz,ax 
    1775                                 
    1776 04E6  8B 3E 0042 R                     mov     di,table               
					 ;di points into constructed directory 
    1777 04EA  B8 E5E5                          mov     ax,0e5e5h              
					 ;deleted file magic number 
    1778 04ED  D1 E3                            shl     bx,1                   
					 ;16 words in a dir entry 
    1779 04EF  D1 E3                            shl     bx,1 
    1780 04F1  D1 E3                            shl     bx,1 
    1781 04F3  D1 E3                            shl     bx,1 
    1782 04F5  8B CB                            mov     cx,bx 
    1783 04F7  F3/ AB                           rep     stosw 
    1784                                 
    1785 04F9  E8 02A2 R                        call    readft 
    1786 04FC  BB 005C                          mov     bx,fcb 
    1787 04FF  80 7F 01 20                      cmp     byte ptr [bx+1],' ' 
    1788 0503  74 03                            jz      recdsk 
    1789 0505  E9 060E R                        jmp     recfil 
    1790                                 
    1791 0508  8B 3E 0042 R             recdsk: mov     di,table 
    1792 050C  C7 06 002A R 0002                mov     fatptr,2 
    1793 0512  A1 002A R                        mov     ax,fatptr 
    1794 0515  E8 024C R                step1:  call    getfat 
    1795 0518  81 FB 0FFF                       cmp     bx,0fffh 
    1796 051C  74 03                            jz      step1a 
    1797 051E  E9 05C8 R                        jmp     step6 
    1798 0521  C7 06 003C R 0000        step1a: mov     filsiz,0 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 17:21:29

RECOVER MS-DOS File/Disk Recovery Utility                   Page     1-69
                                                            

    1799 0527  C7 06 003E R 0000                mov     word ptr filsiz+2,0 
    1800 052D  8B 16 0040 R                     mov     dx,lastfat 
    1801 0531  A3 002E R                        mov     target,ax 
    1802 0534  B8 0002                  step2:  mov     ax,2 
    1803 0537  01 0E 003C R                     add     filsiz,cx 
    1804 053B  83 16 003E R 00                  adc     word ptr filsiz+2,0 
    1805 0540  E8 024C R                step3:  call    getfat 
    1806 0543  3B 1E 002E R                     cmp     bx,target 
    1807 0547  75 05                            jne     step4 
    1808 0549  A3 002E R                        mov     target,ax 
    1809 054C  EB E6                            jmp     step2 
    1810 054E  40                       step4:  inc     ax 
    1811 054F  3B C2                            cmp     ax,dx 
    1812 0551  7E ED                            jle     step3 
    1813                                ; 
    1814                                ;       at this point target = head of 
					list, filsiz = file size 
    1815                                ; 
    1816 0553  FF 06 0022 R                     inc     filcnt                 
					 ;increment file count 
    1817 0557  A1 0030 R                        mov     ax,maxent 
    1818 055A  39 06 0022 R                     cmp     filcnt,ax              
					 ;compare with max number of entries 
    1819 055E  77 78                            ja      direrr 
    1820                                 
    1821 0560  BE 0007 R                        mov     si,(offset dg: dirent)+
					7 
    1822 0563  FE 04                    nam0:   inc     byte ptr [si]          
					 ;increment file name 
    1823 0565  80 3C 39                         cmp     byte ptr [si],'9' 
    1824 0568  7E 06                            jle     nam1 
    1825 056A  C6 04 30                         mov     byte ptr [si],'0' 
    1826 056D  4E                               dec     si 
    1827 056E  EB F3                            jmp     nam0 
    1828                                 
    1829 0570  B4 2A                    nam1:   mov     ah,GET_DATE 
    1830 0572  CD 21                            int     bdos                   
					 ;set the date 
    1831 0574  81 E9 07BC                       sub     cx,1980 
    1832 0578  02 F6                            add     dh,dh 
    1833 057A  02 F6                            add     dh,dh 
    1834 057C  02 F6                            add     dh,dh 
    1835 057E  02 F6                            add     dh,dh 
    1836 0580  02 F6                            add     dh,dh 
    1837 0582  D0 D1                            rcl     cl,1 
    1838 0584  0A F2                            or      dh,dl 
    1839 0586  88 36 0018 R                     mov     byte ptr dirent+24,dh 
    1840 058A  88 0E 0019 R                     mov     byte ptr dirent+25,cl 
    1841 058E  B4 2C                            mov     ah,GET_TIME 
    1842 0590  CD 21                            int     bdos                   
					 ;set the time 
    1843 0592  D0 EE                            shr     dh,1 
    1844 0594  02 C9                            add     cl,cl 
    1845 0596  02 C9                            add     cl,cl 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 17:21:29

RECOVER MS-DOS File/Disk Recovery Utility                   Page     1-70
                                                            

    1846 0598  02 C9                            add     cl,cl 
    1847 059A  D0 D5                            rcl     ch,1 
    1848 059C  02 C9                            add     cl,cl 
    1849 059E  D0 D5                            rcl     ch,1 
    1850 05A0  02 C9                            add     cl,cl 
    1851 05A2  D0 D5                            rcl     ch,1 
    1852 05A4  0A F1                            or      dh,cl 
    1853 05A6  88 36 0016 R                     mov     byte ptr dirent+22,dh 
    1854 05AA  88 2E 0017 R                     mov     byte ptr dirent+23,ch 
    1855                                 
    1856 05AE  A1 003C R                        mov     ax,filsiz              
					         ;set file size 
    1857 05B1  A3 001C R                        mov     word ptr dirent+28,ax 
    1858 05B4  A1 003E R                        mov     ax,word ptr filsiz+2 
    1859 05B7  A3 001E R                        mov     word ptr dirent+30,ax 
    1860 05BA  A1 002E R                        mov     ax,target              
					         ;set first cluster location 
    1861 05BD  A3 001A R                        mov     word ptr dirent+26,ax 
    1862                                 
    1863 05C0  BE 0000 R                        mov     si,offset dg: dirent   
					             ;copy in new dir entry 
    1864 05C3  B9 0020                          mov     cx,32 
    1865 05C6  F3/ A4                           rep     movsb 
    1866                                 
    1867 05C8  FF 06 002A R             step6:  inc     fatptr                 
					         ;keep looking for eof's 
    1868 05CC  A1 002A R                        mov     ax,fatptr 
    1869 05CF  3B 06 0040 R                     cmp     ax,lastfat 
    1870 05D3  7F 0D                            jg      step7 
    1871 05D5  E9 0515 R                        jmp     step1 
    1872                                 
    1873 05D8  FF 0E 0022 R             direrr: dec     filcnt 
    1874 05DC  BA 0000 E                        mov     dx,offset dg: dirmsg 
    1875 05DF  E8 01DB R                        call    print 
    1876                                 
    1877 05E2                           step7: 
    1878 05E2  A0 0113 R                        mov     al,drive 
    1879 05E5  8B 16 0034 R                     mov     dx,firdir              
					 ;write out constructed directory 
    1880 05E9  8B 0E 0032 R                     mov     cx,firrec 
    1881 05ED  2B CA                            sub     cx,dx 
    1882 05EF  8B 1E 0042 R                     mov     bx,table 
    1883 05F3  E8 0000 E                        call    dskwrt 
    1884 05F6  E8 01D8 R                        call    pcrlf 
    1885 05F9  BA 0000 E                        mov     dx,offset dg: recmsg_pr
					e 
    1886 05FC  E8 01DB R                        call    print 
    1887 05FF  BB 0000 E                        mov     bx,offset dg: recmsg_po
					st 
    1888 0602  8B 36 0022 R                     mov     si,filcnt 
    1889 0606  33 FF                            xor     di,di                  
					 ;output number of files created 
    1890 0608  E8 01E0 R                        call    convert 
    1891 060B  E9 06FE R                        jmp     rexit 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 17:21:29

RECOVER MS-DOS File/Disk Recovery Utility                   Page     1-71
                                                            

    1892 060E  BA 005C                  recfil: mov     dx,fcb 
    1893 0611  B4 0F                            mov     ah,FCB_OPEN 
    1894 0613  CD 21                            int     bdos 
    1895 0615  FE C0                            inc     al 
    1896 0617  75 09                            jnz     recfil0 
    1897 0619  BA 0000 E                        mov     dx,offset dg: opnerr 
    1898 061C  E8 01DB R                        call    print 
    1899 061F  E9 06FE R                        jmp     rexit 
    1900                                 
    1901 0622  C7 06 0040 R 0001        recfil0:mov     lastfat,1              
					 ;indicate location of list head 
    1902 0628  BF 005C                          mov     di,fcb 
    1903 062B  8B 45 10                         mov     ax,[di+16]             
					 ;get file size 
    1904 062E  A3 003C R                        mov     filsiz,ax 
    1905 0631  A3 0038 R                        mov     siztmp,ax 
    1906 0634  8B 45 12                         mov     ax,[di+18] 
    1907 0637  A3 003E R                        mov     filsiz+2,ax 
    1908 063A  A3 003A R                        mov     siztmp+2,ax 
    1909 063D  8B 45 19                         mov     ax,[di+25]             
					 ;get list head 
    1910 0640  0B C0                            or      ax,ax 
    1911 0642  A3 002A R                        mov     fatptr,ax 
    1912 0645  75 03                            jnz     recfil1 
    1913 0647  E9 06F1 R                recvec: jmp     recfil6 
    1914                                 
    1915 064A  81 3E 002A R 0FFF        recfil1:cmp     fatptr,0fffh 
    1916 0650  74 F5                            jz      recvec                 
					 ;terminate loop at e-o-f 
    1917                                 
    1918 0652  8B 0E 002C R                     mov     cx,secall 
    1919 0656  A1 002A R                        mov     ax,fatptr 
    1920 0659  48                               dec     ax 
    1921 065A  48                               dec     ax 
    1922 065B  F7 E1                            mul     cx 
    1923 065D  03 06 0032 R                     add     ax,firrec 
    1924 0661  8B D0                            mov     dx,ax 
    1925 0663  8B 1E 0042 R                     mov     bx,table 
    1926 0667  A0 0113 R                        mov     al,drive 
    1927 066A  CD 25                            int     aread 
    1928 066C  5F                               pop     di                     
					 ;restore stack pointer 
    1929 066D  BF 005C                          mov     di,fcb                 
					 ;restore pointer to fcb 
    1930 0670  73 59                            jnc     recfil4                
					 ;if no error continue reading 
    1931                                 
    1932 0672  A1 002A R                        mov     ax,fatptr 
    1933 0675  E8 024C R                        call    getfat 
    1934 0678  83 3E 0040 R 01                  cmp     lastfat,1 
    1935 067D  75 0E                            jnz     recfil2 
    1936                                 
    1937 067F  81 FB 0FFF                       cmp     bx,0fffh 
    1938 0683  75 02                            jnz     noteof 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 17:21:29

RECOVER MS-DOS File/Disk Recovery Utility                   Page     1-72
                                                            

    1939 0685  33 DB                            xor     bx,bx 
    1940 0687  89 5D 19                 noteof: mov     word ptr [di+25],bx 
    1941 068A  EB 09 90                         jmp     recfil3 
    1942                                 
    1943 068D  8B D3                    recfil2:mov     dx,bx                  
					 ;jump around bad sector 
    1944 068F  A1 0040 R                        mov     ax,lastfat 
    1945 0692  E8 0269 R                        call    setfat 
    1946                                 
    1947 0695  A1 002A R                recfil3:mov     ax,fatptr              
					 ;mark sector bad 
    1948 0698  BA 0FF7                          mov     dx,0ff7h 
    1949 069B  E8 0269 R                        call    setfat 
    1950 069E  A1 0036 R                        mov     ax,secsiz              
					 ;prepare to dec filsiz by secsiz 
    1951 06A1  83 3E 003A R 00                  cmp     siztmp+2,0 
    1952 06A6  75 09                            jnz     recfilx 
    1953 06A8  39 06 0038 R                     cmp     siztmp,ax 
    1954 06AC  77 03                            ja      recfilx 
    1955 06AE  A1 0038 R                        mov     ax,siztmp 
    1956                                 
    1957 06B1  29 45 10                 recfilx:sub     word ptr [di+16],ax 
    1958 06B4  83 5D 12 00                      sbb     word ptr [di+18],0 
    1959 06B8  29 06 0038 R                     sub     siztmp,ax 
    1960 06BC  83 1E 0038 R 00                  sbb     siztmp,0 
    1961                                 
    1962 06C1  80 65 18 BF                      and     byte ptr [di+24],101111
					11b      ;mark file dirty 
    1963                                 
    1964 06C5  A1 0040 R                        mov     ax,lastfat             
					         ;point to next sector to check
					 
    1965 06C8  EB 1D 90                         jmp     recfil5 
    1966                                 
    1967 06CB                           recfil4: 
    1968 06CB  A1 0036 R                        mov     ax,secsiz              
					 ;set bytes remaining to be read 
    1969 06CE  29 06 0038 R                     sub     siztmp,ax 
    1970 06D2  83 1E 003A R 00                  sbb     siztmp+2,0 
    1971 06D7  73 08                            jnc     recok 
    1972 06D9  33 C0                            xor     ax,ax                  
					 ;if < 0, then set to zero 
    1973 06DB  A3 0038 R                        mov     siztmp,ax 
    1974 06DE  A3 003A R                        mov     siztmp+2,ax 
    1975                                 
    1976 06E1  A1 002A R                recok:  mov     ax,fatptr              
					 ;get next sector to test 
    1977 06E4  A3 0040 R                        mov     lastfat,ax 
    1978 06E7  E8 024C R                recfil5:call    getfat 
    1979 06EA  89 1E 002A R                     mov     fatptr,bx 
    1980 06EE  E9 064A R                        jmp     recfil1 
    1981                                 
    1982 06F1                           recfil6:                               
					 ;all done 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 17:21:29

RECOVER MS-DOS File/Disk Recovery Utility                   Page     1-73
                                                            

    1983 06F1  BA 005C                          mov     dx,fcb 
    1984 06F4  B4 10                            mov     ah,FCB_CLOSE 
    1985 06F6  CD 21                            int     bdos            ;close 
					the file 
    1986 06F8  E8 01D8 R                        call    pcrlf 
    1987 06FB  E8 0000 E                        call    report 
    1988                                 
    1989                                ; 
    1990 06FE  B4 0D                    rexit:  mov     ah,DISK_RESET 
    1991 0700  CD 21                            int     bdos 
    1992 0702  E8 02CD R                        call    wrtfat          ;save t
					he fat 
    1993 0705  E8 070A R                int_23: call    rest_dir 
    1994 0708  CD 20                    rabort: int     boot            ;home, 
					james... 
    1995                                 
    1996                                ;----- Restore INT 24 vector and old cu
					rrent directory -----------------; 
    1997 070A                           rest_dir: 
    1998 070A  80 3E 0111 R 00                  cmp     [fudge],0 
    1999 070F  74 1A                            je      no_fudge 
    2000                                 
    2001 0711  B8 2524                          mov     ax,(set_interrupt_vecto
					r shl 8) or 24h 
    2002 0714  C5 16 010C R                     lds     dx,[hardch] 
    2003 0718  CD 21                            int     21h 
    2004 071A  0E                               push    cs 
    2005 071B  1F                               pop     ds 
    2006                                 
    2007 071C  BA 0116 R                        mov     dx,offset dg: userdir  
					             ;restore directory 
    2008 071F  B4 3B                            mov     ah,chdir 
    2009 0721  CD 21                            int     21h 
    2010 0723  8A 16 0112 R                     mov     dl,[user_drive]        
					         ;restore old current drive 
    2011 0727  B4 0E                            mov     ah,set_default_drive 
    2012 0729  CD 21                            int     21h 
    2013                                 
    2014 072B                           no_fudge: 
    2015 072B  C3                               ret 
    2016                                 
    2017                                ;----- INT 24 Processing --------------
					---------------------------------; 
    2018                                 
    2019 072C  0740 R                   int_24_retaddr dw       int_24_back 
    2020                                 
    2021 072E                           int_24  proc    far 
    2022                                assume  ds:nothing,es:nothing,ss:nothin
					g 
    2023                                 
    2024 072E  9C                               pushf 
    2025 072F  0E                               push    cs 
    2026 0730  2E: FF 36 072C R                 push    [int_24_retaddr] 
    2027 0735  2E: FF 36 010E R                 push    word ptr [hardch+2] 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 17:21:29

RECOVER MS-DOS File/Disk Recovery Utility                   Page     1-74
                                                            

    2028 073A  2E: FF 36 010C R                 push    word ptr [hardch] 
    2029 073F  CB                               ret 
    2030                                int_24  endp 
    2031                                 
    2032 0740                           int_24_back: 
    2033 0740  3C 02                            cmp     al,2            ;abort?
					 
    2034 0742  75 07                            jnz     ireti 
    2035 0744  0E                               push    cs 
    2036 0745  1F                               pop     ds 
    2037                                 
    2038                                assume  ds:dg 
    2039                                 
    2040 0746  E8 070A R                        call    rest_dir 
    2041 0749  CD 20                            int     20h 
    2042 074B                           ireti: 
    2043 074B  CF                               iret 
    2044                                 
    2045                                        ENDIF 
    2046                                 
    2047 074C                           code  ends 
    2048                                 
    2049 0000                           const   segment public byte 
    2050                                 
    2051                                        EXTRN   BADVER:BYTE,askmsg:BYTE
					,drvlet:BYTE,dirmsg:BYTE 
    2052                                        EXTRN   recmsg_pre:BYTE,DRVLET1
					:BYTE,recmsg_post:BYTE 
    2053                                        EXTRN   crlf:BYTE,drverr:BYTE,b
					addrv:BYTE,opnerr:BYTE 
    2054                                 
    2055 0000                           const   ends 
    2056                                 
    2057 0000                           data    segment byte 
    2058                                 
    2059                                        PUBLIC  filsiz 
    2060                                 
    2061 0000  46 49 4C 45 30 30 30     dirent  db      'FILE0000REC' 
    2062       30 52 45 43              
    2063 000B  0015[                            db      21 dup (00) 
    2064            00                  
    2065                         ]      
    2066                                
    2067                                 
    2068 0020  0000                     fndfat  dw      0000                   
					 ;sector of first good fat 
    2069 0022  0000                     filcnt  dw      0000 
    2070 0024  00                       fatcnt  db      00 
    2071 0025  00                       fatnum  db      00 
    2072 0026  0000                     fatsiz  dw      0000 
    2073 0028  0000                     firfat  dw      0000 
    2074 002A  0000                     fatptr  dw      0000 
    2075 002C  0000                     secall  dw      0000                   
					 ;sectors per cluster 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 17:21:29

RECOVER MS-DOS File/Disk Recovery Utility                   Page     1-75
                                                            

    2076 002E  0000                     target  dw      0000 
    2077 0030  0000                     maxent  dw      0000 
    2078 0032  0000                     firrec  dw      0000 
    2079 0034  0000                     firdir  dw      0000 
    2080 0036  0000                     secsiz  dw      0000 
    2081 0038  0000                     siztmp  dw      0000 
    2082 003A  0000                             dw      0000 
    2083 003C  0000                     filsiz  dw      0000 
    2084 003E  0000                             dw      0000 
    2085 0040  0000                     lastfat dw      0000 
    2086                                ; 
    2087 0042  1844 R                   table   dw      offset dg:fattbl + 6 * 
					1024 
    2088 0044  00                       fattbl  db      0 
    2089                                 
    2090 0045                           data    ends 
    2091                                 
    2092                                        end     recover 

Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 17:21:29

RECOVER MS-DOS File/Disk Recovery Utility                   Symbols-1
                                                             

Macros:

		N a m e			Lines

BREAK  . . . . . . . . . . . . .  	   2
CONDRET  . . . . . . . . . . . .  	  19
CONTEXT  . . . . . . . . . . . .  	   3
DO_EXT . . . . . . . . . . . . .  	   0
ENTRY  . . . . . . . . . . . . .  	   2
ERROR  . . . . . . . . . . . . .  	   4
INVOKE . . . . . . . . . . . . .  	   8
I_AM . . . . . . . . . . . . . .  	  14
I_NEED . . . . . . . . . . . . .  	  11
JUMP . . . . . . . . . . . . . .  	  17
LONG_ADDR  . . . . . . . . . . .  	   7
MAKELAB  . . . . . . . . . . . .  	   4
PROCEDURE  . . . . . . . . . . .  	   2
RETC . . . . . . . . . . . . . .  	   1
RETNC  . . . . . . . . . . . . .  	   1
RETNZ  . . . . . . . . . . . . .  	   1
RETURN . . . . . . . . . . . . .  	   5
RETZ . . . . . . . . . . . . . .  	   1
SHORT_ADDR . . . . . . . . . . .  	  12
TRANSFER . . . . . . . . . . . .  	   8

Structures and Records:

                N a m e                 Width   # fields
                                        Shift   Width   Mask    Initial

ARENA  . . . . . . . . . . . . .  	0005	0003
  ARENA_SIGNATURE  . . . . . . .  	0000
  ARENA_OWNER  . . . . . . . . .  	0001
  ARENA_SIZE . . . . . . . . . .  	0003
BPBLOCK  . . . . . . . . . . . .  	000D	0008
  BPSECSZ  . . . . . . . . . . .  	0000
  BPCLUS . . . . . . . . . . . .  	0002
  BPRES  . . . . . . . . . . . .  	0003
  BPFTCNT  . . . . . . . . . . .  	0005
  BPDRCNT  . . . . . . . . . . .  	0006
  BPSCCNT  . . . . . . . . . . .  	0008
  BPMEDIA  . . . . . . . . . . .  	000A
  BPFTSEC  . . . . . . . . . . .  	000B
BUFFINFO . . . . . . . . . . . .  	0010	0009
  NEXTBUF  . . . . . . . . . . .  	0000
  BUFDRV . . . . . . . . . . . .  	0004
  BUFDIRTY . . . . . . . . . . .  	0005
  BUFPRI . . . . . . . . . . . .  	0006
  VISIT  . . . . . . . . . . . .  	0007
  BUFSECNO . . . . . . . . . . .  	0008
  BUFWRTCNT  . . . . . . . . . .  	000A
  BUFWRTINC  . . . . . . . . . .  	000B
  BUFDRVDP . . . . . . . . . . .  	000C
DIR_ENTRY  . . . . . . . . . . .  	0020	0008
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 17:21:29

RECOVER MS-DOS File/Disk Recovery Utility                   Symbols-2
                                                             

  DIR_NAME . . . . . . . . . . .  	0000
  DIR_ATTR . . . . . . . . . . .  	000B
  DIR_PAD  . . . . . . . . . . .  	000C
  DIR_TIME . . . . . . . . . . .  	0016
  DIR_DATE . . . . . . . . . . .  	0018
  DIR_FIRST  . . . . . . . . . .  	001A
  DIR_SIZE_L . . . . . . . . . .  	001C
  DIR_SIZE_H . . . . . . . . . .  	001E
DPB  . . . . . . . . . . . . . .  	005E	0012
  DPB_DRIVE  . . . . . . . . . .  	0000
  DPB_UNIT . . . . . . . . . . .  	0001
  DPB_SECTOR_SIZE  . . . . . . .  	0002
  DPB_CLUSTER_MASK . . . . . . .  	0004
  DPB_CLUSTER_SHIFT  . . . . . .  	0005
  DPB_FIRST_FAT  . . . . . . . .  	0006
  DPB_FAT_COUNT  . . . . . . . .  	0008
  DPB_ROOT_ENTRIES . . . . . . .  	0009
  DPB_FIRST_SECTOR . . . . . . .  	000B
  DPB_MAX_CLUSTER  . . . . . . .  	000D
  DPB_FAT_SIZE . . . . . . . . .  	000F
  DPB_DIR_SECTOR . . . . . . . .  	0010
  DPB_DRIVER_ADDR  . . . . . . .  	0012
  DPB_MEDIA  . . . . . . . . . .  	0016
  DPB_FIRST_ACCESS . . . . . . .  	0017
  DPB_NEXT_DPB . . . . . . . . .  	0018
  DPB_CURRENT_DIR  . . . . . . .  	001C
  DPB_DIR_TEXT . . . . . . . . .  	001E
EXEC0  . . . . . . . . . . . . .  	000E	0004
  EXEC0_ENVIRON  . . . . . . . .  	0000
  EXEC0_COM_LINE . . . . . . . .  	0002
  EXEC0_5C_FCB . . . . . . . . .  	0006
  EXEC0_6C_FCB . . . . . . . . .  	000A
EXEC1  . . . . . . . . . . . . .  	0016	0008
  EXEC1_ENVIRON  . . . . . . . .  	0000
  EXEC1_COM_LINE . . . . . . . .  	0002
  EXEC1_5C_FCB . . . . . . . . .  	0006
  EXEC1_6C_FCB . . . . . . . . .  	000A
  EXEC1_SP . . . . . . . . . . .  	000E
  EXEC1_SS . . . . . . . . . . .  	0010
  EXEC1_IP . . . . . . . . . . .  	0012
  EXEC1_CS . . . . . . . . . . .  	0014
EXEC3  . . . . . . . . . . . . .  	0004	0002
  EXEC3_LOAD_ADDR  . . . . . . .  	0000
  EXEC3_RELOC_FAC  . . . . . . .  	0002
EXE_FILE . . . . . . . . . . . .  	0020	000F
  EXE_SIGNATURE  . . . . . . . .  	0000
  EXE_LEN_MOD_512  . . . . . . .  	0002
  EXE_PAGES  . . . . . . . . . .  	0004
  EXE_RLE_COUNT  . . . . . . . .  	0006
  EXE_PAR_DIR  . . . . . . . . .  	0008
  EXE_MIN_BSS  . . . . . . . . .  	000A
  EXE_MAX_BSS  . . . . . . . . .  	000C
  EXE_SS . . . . . . . . . . . .  	000E
  EXE_SP . . . . . . . . . . . .  	0010
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 17:21:29

RECOVER MS-DOS File/Disk Recovery Utility                   Symbols-3
                                                             

  EXE_CHKSUM . . . . . . . . . .  	0012
  EXE_IP . . . . . . . . . . . .  	0014
  EXE_CS . . . . . . . . . . . .  	0016
  EXE_RLE_TABLE  . . . . . . . .  	0018
  EXE_IOV  . . . . . . . . . . .  	001A
  EXE_SYM_TAB  . . . . . . . . .  	001C
FIND_BUF . . . . . . . . . . . .  	002B	000C
  FIND_BUF_SATTR . . . . . . . .  	0000
  FIND_BUF_DRIVE . . . . . . . .  	0001
  FIND_BUF_NAME  . . . . . . . .  	0002
  FIND_BUF_LASTENT . . . . . . .  	000D
  FIND_BUF_THISDPB . . . . . . .  	000F
  FIND_BUF_DIRSTART  . . . . . .  	0013
  FIND_BUF_ATTR  . . . . . . . .  	0015
  FIND_BUF_TIME  . . . . . . . .  	0016
  FIND_BUF_DATE  . . . . . . . .  	0018
  FIND_BUF_SIZE_L  . . . . . . .  	001A
  FIND_BUF_SIZE_H  . . . . . . .  	001C
  FIND_BUF_PNAME . . . . . . . .  	001E
INTERNAT_BLOCK . . . . . . . . .  	0018	0015
  DATE_TIM_FORMAT  . . . . . . .  	0000
  CURRENCY_SYM . . . . . . . . .  	0002
  THOUS_SEP  . . . . . . . . . .  	0007
  DECIMAL_SEP  . . . . . . . . .  	0009
  DATE_SEP . . . . . . . . . . .  	000B
  TIME_SEP . . . . . . . . . . .  	000D
  BIT_FEILD  . . . . . . . . . .  	000F
  CURRENCY_CENTS . . . . . . . .  	0010
  TIME_24  . . . . . . . . . . .  	0011
  MAP_CALL . . . . . . . . . . .  	0012
  DATA_SEP . . . . . . . . . . .  	0016
PROCESS_DATA_BLOCK . . . . . . .  	005B	000E
  PDB_EXIT_CALL  . . . . . . . .  	0000
  PDB_BLOCK_LEN  . . . . . . . .  	0002
  PDB_CPM_CALL . . . . . . . . .  	0005
  PDB_EXIT . . . . . . . . . . .  	000A
  PDB_CTRL_C . . . . . . . . . .  	000E
  PDB_FATAL_ABORT  . . . . . . .  	0012
  PDB_PARENT_PID . . . . . . . .  	0016
  PDB_JFN_TABLE  . . . . . . . .  	0018
  PDB_ENVIRON  . . . . . . . . .  	002C
  PDB_USER_STACK . . . . . . . .  	002E
  PDB_PAD1 . . . . . . . . . . .  	0032
  PDB_CALL_SYSTEM  . . . . . . .  	0050
  PDB_PAD2 . . . . . . . . . . .  	0055
SFT  . . . . . . . . . . . . . .  	0008	0003
  SFT_LINK . . . . . . . . . . .  	0000
  SFT_COUNT  . . . . . . . . . .  	0004
  SFT_TABLE  . . . . . . . . . .  	0006
SF_ENTRY . . . . . . . . . . . .  	0028	0004
  SF_REF_COUNT . . . . . . . . .  	0000
  SF_MODE  . . . . . . . . . . .  	0001
  SF_ATTR  . . . . . . . . . . .  	0002
  SF_FCB . . . . . . . . . . . .  	0003
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 17:21:29

RECOVER MS-DOS File/Disk Recovery Utility                   Symbols-4
                                                             

SYMBOL_ENTRY . . . . . . . . . .  	0106	0004
  SYM_VALUE  . . . . . . . . . .  	0000
  SYM_TYPE . . . . . . . . . . .  	0004
  SYM_LEN  . . . . . . . . . . .  	0006
  SYM_NAME . . . . . . . . . . .  	0007
SYS_FCB  . . . . . . . . . . . .  	0025	0010
  FCB_DRIVE  . . . . . . . . . .  	0000
  FCB_NAME . . . . . . . . . . .  	0001
  FCB_EXT  . . . . . . . . . . .  	0009
  FCB_EXTENT . . . . . . . . . .  	000C
  FCB_RECSIZ . . . . . . . . . .  	000E
  FCB_FILSIZ . . . . . . . . . .  	0010
  FCB_DRVBP  . . . . . . . . . .  	0012
  FCB_FDATE  . . . . . . . . . .  	0014
  FCB_FTIME  . . . . . . . . . .  	0016
  FCB_DEVID  . . . . . . . . . .  	0018
  FCB_FIRCLUS  . . . . . . . . .  	0019
  FCB_CLUSPOS  . . . . . . . . .  	001B
  FCB_LSTCLUS  . . . . . . . . .  	001D
  FCB_NR . . . . . . . . . . . .  	0020
  FCB_RR . . . . . . . . . . . .  	0021
USER_ENVIRON . . . . . . . . . .  	0018	000C
  USER_AX  . . . . . . . . . . .  	0000
  USER_BX  . . . . . . . . . . .  	0002
  USER_CX  . . . . . . . . . . .  	0004
  USER_DX  . . . . . . . . . . .  	0006
  USER_SI  . . . . . . . . . . .  	0008
  USER_DI  . . . . . . . . . . .  	000A
  USER_BP  . . . . . . . . . . .  	000C
  USER_DS  . . . . . . . . . . .  	000E
  USER_ES  . . . . . . . . . . .  	0010
  USER_IP  . . . . . . . . . . .  	0012
  USER_CS  . . . . . . . . . . .  	0014
  USER_F . . . . . . . . . . . .  	0016

Segments and Groups:

                N a m e         	Size	Align	Combine Class

DG . . . . . . . . . . . . . . .  	GROUP
  CODE . . . . . . . . . . . . .  	074C	PARA	PUBLIC	
  CONST  . . . . . . . . . . . .  	0000	BYTE	PUBLIC	
  DATA . . . . . . . . . . . . .  	0045	BYTE	PUBLIC	

Symbols:            

                N a m e         	Type	Value	Attr         

ABORT  . . . . . . . . . . . . .  	Number	0000	
ADDR_INT_ABORT . . . . . . . . .  	Number	0080	
ADDR_INT_COMMAND . . . . . . . .  	Number	0084	
ADDR_INT_CTRL_C  . . . . . . . .  	Number	008C	
ADDR_INT_DISK_READ . . . . . . .  	Number	0094	
ADDR_INT_DISK_WRITE  . . . . . .  	Number	0098	
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 17:21:29

RECOVER MS-DOS File/Disk Recovery Utility                   Symbols-5
                                                             

ADDR_INT_FASTCON . . . . . . . .  	Number	00A4	
ADDR_INT_FATAL_ABORT . . . . . .  	Number	0090	
ADDR_INT_KEEP_PROCESS  . . . . .  	Number	009C	
ADDR_INT_SPOOLER . . . . . . . .  	Number	00A0	
ADDR_INT_TERMINATE . . . . . . .  	Number	0088	
ALLOC  . . . . . . . . . . . . .  	Number	0048	
ALLOCOPER  . . . . . . . . . . .  	Number	0058	
ALLOC_ARENA_TRASHED  . . . . . .  	Alias	 ERROR_ARENA_TRASHED		
ALLOC_NOT_ENOUGH_MEMORY  . . . .  	Alias	 ERROR_NOT_ENOUGH_MEMORY		
ALTVECT  . . . . . . . . . . . .  	Number	0000	
AREAD  . . . . . . . . . . . . .  	Number	0025	
ARENA_OWNER_SYSTEM . . . . . . .  	Number	0000	
ARENA_SIGNATURE_END  . . . . . .  	Number	005A	
ARENA_SIGNATURE_NORMAL . . . . .  	Number	004D	
ASKMSG . . . . . . . . . . . . .  	V BYTE 	0000	CONST	External
ASSIGNOPER . . . . . . . . . . .  	Number	005F	
ATTR_ALL . . . . . . . . . . . .  	Number	0016	
ATTR_ARCHIVE . . . . . . . . . .  	Number	0020	
ATTR_CHANGEABLE  . . . . . . . .  	Number	0027	
ATTR_DIRECTORY . . . . . . . . .  	Number	0010	
ATTR_HIDDEN  . . . . . . . . . .  	Number	0002	
ATTR_IGNORE  . . . . . . . . . .  	Number	0021	
ATTR_READ_ONLY . . . . . . . . .  	Number	0001	
ATTR_SYSTEM  . . . . . . . . . .  	Number	0004	
ATTR_VOLUME_ID . . . . . . . . .  	Number	0008	
AWRITE . . . . . . . . . . . . .  	Number	0026	

BADDRV . . . . . . . . . . . . .  	V BYTE 	0000	CONST	External
BADDRVSPEC . . . . . . . . . . .  	L NEAR	0412	CODE
BADDRVSPECJ  . . . . . . . . . .  	L NEAR	031B	CODE
BADVER . . . . . . . . . . . . .  	V BYTE 	0000	CONST	External
BDOS . . . . . . . . . . . . . .  	Number	0021	
BLANKZER . . . . . . . . . . . .  	L NEAR	022E	CODE
BOOT . . . . . . . . . . . . . .  	Number	0020	
BUFINSIZ . . . . . . . . . . . .  	Number	0010	

CHAR_OPER  . . . . . . . . . . .  	Number	0037	
CHDIR  . . . . . . . . . . . . .  	Number	003B	
CHDIR_PATH_NOT_FOUND . . . . . .  	Alias	 ERROR_PATH_NOT_FOUND		
CHMOD  . . . . . . . . . . . . .  	Number	0043	
CHMOD_ACCESS_DENIED  . . . . . .  	Alias	 ERROR_ACCESS_DENIED		
CHMOD_INVALID_FUNCTION . . . . .  	Alias	 ERROR_INVALID_FUNCTION		
CHMOD_PATH_NOT_FOUND . . . . . .  	Alias	 ERROR_PATH_NOT_FOUND		
CLOSE  . . . . . . . . . . . . .  	Number	003E	
CLOSE_INVALID_FUNCTION . . . . .  	Alias	 ERROR_INVALID_FUNCTION		
CLOSE_INVALID_HANDLE . . . . . .  	Alias	 ERROR_INVALID_HANDLE		
CONVERT  . . . . . . . . . . . .  	L NEAR	01E0	CODE	Global
CONVLP . . . . . . . . . . . . .  	L NEAR	01EA	CODE
CONVWRD  . . . . . . . . . . . .  	L NEAR	0241	CODE
COUNTRY_NOT_FOUND  . . . . . . .  	Alias	 ERROR_FILE_NOT_FOUND		
CR . . . . . . . . . . . . . . .  	Number	000D	
CREAT  . . . . . . . . . . . . .  	Number	003C	
CREATENEWFILE  . . . . . . . . .  	Number	005B	
CREATETEMPFILE . . . . . . . . .  	Number	005A	
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 17:21:29

RECOVER MS-DOS File/Disk Recovery Utility                   Symbols-6
                                                             

CREATE_PROCESS_DATA_BLOCK  . . .  	Number	0026	
CREAT_ACCESS_DENIED  . . . . . .  	Alias	 ERROR_ACCESS_DENIED		
CREAT_PATH_NOT_FOUND . . . . . .  	Alias	 ERROR_PATH_NOT_FOUND		
CREAT_TOO_MANY_OPEN_FILES  . . .  	Alias	 ERROR_TOO_MANY_OPEN_FILES		
CRLF . . . . . . . . . . . . . .  	V BYTE 	0000	CONST	External
CURDIR_INVALID_DRIVE . . . . . .  	Alias	 ERROR_INVALID_DRIVE		
CURRENT_DIR  . . . . . . . . . .  	Number	0047	
CURR_IS_ROOT . . . . . . . . . .  	L NEAR	043A	CODE
C_BS . . . . . . . . . . . . . .  	Number	0008	
C_CR . . . . . . . . . . . . . .  	Number	000D	
C_DEL  . . . . . . . . . . . . .  	Number	007F	
C_ETB  . . . . . . . . . . . . .  	Number	0017	
C_ETX  . . . . . . . . . . . . .  	Number	0003	
C_HT . . . . . . . . . . . . . .  	Number	0009	
C_LF . . . . . . . . . . . . . .  	Number	000A	
C_NAK  . . . . . . . . . . . . .  	Number	0015	

DEALLOC  . . . . . . . . . . . .  	Number	0049	
DEALLOC_ARENA_TRASHED  . . . . .  	Alias	 ERROR_ARENA_TRASHED		
DEALLOC_INVALID_BLOCK  . . . . .  	Alias	 ERROR_INVALID_BLOCK		
DEVID_BLOCK_DEV  . . . . . . . .  	Number	001F	
DEVID_DEVICE . . . . . . . . . .  	Number	0080	
DEVID_DEVICE_CLOCK . . . . . . .  	Number	0008	
DEVID_DEVICE_CON_IN  . . . . . .  	Number	0001	
DEVID_DEVICE_CON_OUT . . . . . .  	Number	0002	
DEVID_DEVICE_EOF . . . . . . . .  	Number	0040	
DEVID_DEVICE_NULL  . . . . . . .  	Number	0004	
DEVID_DEVICE_RAW . . . . . . . .  	Number	0020	
DEVID_DEVICE_SPECIAL . . . . . .  	Number	0010	
DEVID_EOF  . . . . . . . . . . .  	Number	0040	
DEVID_FILE_CLEAN . . . . . . . .  	Number	0040	
DEVID_FILE_MASK_DRIVE  . . . . .  	Number	003F	
DEVID_ISCIN  . . . . . . . . . .  	Number	0001	
DEVID_ISCLK  . . . . . . . . . .  	Number	0008	
DEVID_ISCOT  . . . . . . . . . .  	Number	0002	
DEVID_ISDEV  . . . . . . . . . .  	Number	0080	
DEVID_ISNUL  . . . . . . . . . .  	Number	0004	
DEVID_RAW  . . . . . . . . . . .  	Number	0020	
DEVID_SPECIAL  . . . . . . . . .  	Number	0010	
DIGIT  . . . . . . . . . . . . .  	L NEAR	0227	CODE
DIRCHAR  . . . . . . . . . . . .  	L BYTE 	0114	CODE
DIRENT . . . . . . . . . . . . .  	L BYTE 	0000	DATA
DIRERR . . . . . . . . . . . . .  	L NEAR	05D8	CODE
DIRMSG . . . . . . . . . . . . .  	V BYTE 	0000	CONST	External
DIRPRI . . . . . . . . . . . . .  	Number	000F	
DIRSTRLEN  . . . . . . . . . . .  	Number	0040	
DIR_SAVE_LOOP  . . . . . . . . .  	L NEAR	0434	CODE
DIR_SEARCH_FIRST . . . . . . . .  	Number	0011	
DIR_SEARCH_NEXT  . . . . . . . .  	Number	0012	
DISK_RESET . . . . . . . . . . .  	Number	000D	
DOSVER_HIGH  . . . . . . . . . .  	Number	0200	
DOS_MAJOR_VERSION  . . . . . . .  	Number	0002	
DOS_MINOR_VERSION  . . . . . . .  	Number	000B	
DPBSIZ . . . . . . . . . . . . .  	Number	005E	
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 17:21:29

RECOVER MS-DOS File/Disk Recovery Utility                   Symbols-7
                                                             

DRIVE  . . . . . . . . . . . . .  	L BYTE 	0113	CODE
DRVERR . . . . . . . . . . . . .  	V BYTE 	0000	CONST	External
DRVISOK  . . . . . . . . . . . .  	L NEAR	0426	CODE
DRVLET . . . . . . . . . . . . .  	V BYTE 	0000	CONST	External
DRVLET1  . . . . . . . . . . . .  	V BYTE 	0000	CONST	External
DRVOK  . . . . . . . . . . . . .  	L NEAR	0496	CODE
DRVOK1 . . . . . . . . . . . . .  	L NEAR	0337	CODE
DRVOK2 . . . . . . . . . . . . .  	L NEAR	0391	CODE
DSKERR . . . . . . . . . . . . .  	L NEAR	0000	CODE	External
DSKRD  . . . . . . . . . . . . .  	L NEAR	0000	CODE	External
DSKSIZ . . . . . . . . . . . . .  	Number	000D	
DSKWRT . . . . . . . . . . . . .  	L NEAR	0000	CODE	External
DUP2_INVALID_HANDLE  . . . . . .  	Alias	 ERROR_INVALID_HANDLE		
DUP_INVALID_HANDLE . . . . . . .  	Alias	 ERROR_INVALID_HANDLE		
DUP_PDB  . . . . . . . . . . . .  	Number	0055	
DUP_TOO_MANY_OPEN_FILES  . . . .  	Alias	 ERROR_TOO_MANY_OPEN_FILES		

EGOMES . . . . . . . . . . . . .  	L NEAR	0357	CODE
ENTRYPOINT . . . . . . . . . . .  	Number	00C0	
ERROR_ACCESS_DENIED  . . . . . .  	Number	0005	
ERROR_ARENA_TRASHED  . . . . . .  	Number	0007	
ERROR_BAD_ENVIRONMENT  . . . . .  	Number	000A	
ERROR_BAD_FORMAT . . . . . . . .  	Number	000B	
ERROR_CURRENT_DIRECTORY  . . . .  	Number	0010	
ERROR_FILE_NOT_FOUND . . . . . .  	Number	0002	
ERROR_INVALID_ACCESS . . . . . .  	Number	000C	
ERROR_INVALID_BLOCK  . . . . . .  	Number	0009	
ERROR_INVALID_DATA . . . . . . .  	Number	000D	
ERROR_INVALID_DRIVE  . . . . . .  	Number	000F	
ERROR_INVALID_FUNCTION . . . . .  	Number	0001	
ERROR_INVALID_HANDLE . . . . . .  	Number	0006	
ERROR_NOT_ENOUGH_MEMORY  . . . .  	Number	0008	
ERROR_NOT_SAME_DEVICE  . . . . .  	Number	0011	
ERROR_NO_MORE_FILES  . . . . . .  	Number	0012	
ERROR_PATH_NOT_FOUND . . . . . .  	Number	0003	
ERROR_TOO_MANY_OPEN_FILES  . . .  	Number	0004	
EXEC . . . . . . . . . . . . . .  	Number	004B	
EXEC_BAD_ENVIRONMENT . . . . . .  	Alias	 ERROR_BAD_ENVIRONMENT		
EXEC_BAD_FORMAT  . . . . . . . .  	Alias	 ERROR_BAD_FORMAT		
EXEC_FILE_NOT_FOUND  . . . . . .  	Alias	 ERROR_FILE_NOT_FOUND		
EXEC_FUNC_NO_EXECUTE . . . . . .  	Number	0001	
EXEC_FUNC_OVERLAY  . . . . . . .  	Number	0002	
EXEC_INVALID_FUNCTION  . . . . .  	Alias	 ERROR_INVALID_FUNCTION		
EXEC_NOT_ENOUGH_MEMORY . . . . .  	Alias	 ERROR_NOT_ENOUGH_MEMORY		
EXE_VALID_OLD_SIGNATURE  . . . .  	Number	4D5A	
EXE_VALID_SIGNATURE  . . . . . .  	Number	5A4D	
EXIT . . . . . . . . . . . . . .  	Number	004C	
EXIT_ABORT . . . . . . . . . . .  	Number	0000	
EXIT_CTRL_C  . . . . . . . . . .  	Number	0001	
EXIT_HARD_ERROR  . . . . . . . .  	Number	0002	
EXIT_KEEP_PROCESS  . . . . . . .  	Number	0003	
EXIT_TERMINATE . . . . . . . . .  	Number	0000	

FALSE  . . . . . . . . . . . . .  	Number	0000	
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 17:21:29

RECOVER MS-DOS File/Disk Recovery Utility                   Symbols-8
                                                             

FATCNT . . . . . . . . . . . . .  	L BYTE 	0024	DATA
FATNUM . . . . . . . . . . . . .  	L BYTE 	0025	DATA
FATPRI . . . . . . . . . . . . .  	Number	001E	
FATPTR . . . . . . . . . . . . .  	L WORD 	002A	DATA
FATSIZ . . . . . . . . . . . . .  	L WORD 	0026	DATA
FATTBL . . . . . . . . . . . . .  	L BYTE 	0044	DATA
FCB  . . . . . . . . . . . . . .  	Number	005C	
FCB_CLOSE  . . . . . . . . . . .  	Number	0010	
FCB_CREATE . . . . . . . . . . .  	Number	0016	
FCB_DELETE . . . . . . . . . . .  	Number	0013	
FCB_OPEN . . . . . . . . . . . .  	Number	000F	
FCB_RANDOM_READ  . . . . . . . .  	Number	0021	
FCB_RANDOM_READ_BLOCK  . . . . .  	Number	0027	
FCB_RANDOM_WRITE . . . . . . . .  	Number	0022	
FCB_RANDOM_WRITE_BLOCK . . . . .  	Number	0028	
FCB_RENAME . . . . . . . . . . .  	Number	0017	
FCB_SEQ_READ . . . . . . . . . .  	Number	0014	
FCB_SEQ_WRITE  . . . . . . . . .  	Number	0015	
FDFAT  . . . . . . . . . . . . .  	L NEAR	02B3	CODE
FILCNT . . . . . . . . . . . . .  	L WORD 	0022	DATA
FILDIRENT  . . . . . . . . . . .  	Number	0010	
FILETIMES_INVALID_FUNCTION . . .  	Alias	 ERROR_INVALID_FUNCTION		
FILETIMES_INVALID_HANDLE . . . .  	Alias	 ERROR_INVALID_HANDLE		
FILE_TIMES . . . . . . . . . . .  	Number	0057	
FILPERPROC . . . . . . . . . . .  	Number	0014	
FILSIZ . . . . . . . . . . . . .  	L WORD 	003C	DATA	Global
FINDFIRST_FILE_NOT_FOUND . . . .  	Alias	 ERROR_FILE_NOT_FOUND		
FINDFIRST_NO_MORE_FILES  . . . .  	Alias	 ERROR_NO_MORE_FILES		
FINDNEXT_NO_MORE_FILES . . . . .  	Alias	 ERROR_NO_MORE_FILES		
FIND_FIRST . . . . . . . . . . .  	Number	004E	
FIND_NEXT  . . . . . . . . . . .  	Number	004F	
FIRDIR . . . . . . . . . . . . .  	L WORD 	0034	DATA
FIRFAT . . . . . . . . . . . . .  	L WORD 	0028	DATA
FIRREC . . . . . . . . . . . . .  	L WORD 	0032	DATA
FNAME_BUFFER . . . . . . . . . .  	L BYTE 	0158	CODE	Length = 0080
FNDFAT . . . . . . . . . . . . .  	L WORD 	0020	DATA
FREEPRI  . . . . . . . . . . . .  	Number	0000	
FUDGE  . . . . . . . . . . . . .  	L BYTE 	0111	CODE

GETEXTENDEDERROR . . . . . . . .  	Number	0059	
GETFAT . . . . . . . . . . . . .  	L NEAR	024C	CODE
GETFAT1  . . . . . . . . . . . .  	L NEAR	0260	CODE
GET_CURRENT_PDB  . . . . . . . .  	Number	0051	
GET_DATE . . . . . . . . . . . .  	Number	002A	
GET_DEFAULT_DPB  . . . . . . . .  	Number	001F	
GET_DEFAULT_DRIVE  . . . . . . .  	Number	0019	
GET_DMA  . . . . . . . . . . . .  	Number	002F	
GET_DPB  . . . . . . . . . . . .  	Number	0032	
GET_DRIVE_FREESPACE  . . . . . .  	Number	0036	
GET_FCB_FILE_LENGTH  . . . . . .  	Number	0023	
GET_FCB_POSITION . . . . . . . .  	Number	0024	
GET_INDOS_FLAG . . . . . . . . .  	Number	0034	
GET_INTERRUPT_VECTOR . . . . . .  	Number	0035	
GET_IN_VARS  . . . . . . . . . .  	Number	0052	
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 17:21:29

RECOVER MS-DOS File/Disk Recovery Utility                   Symbols-9
                                                             

GET_TIME . . . . . . . . . . . .  	Number	002C	
GET_VERIFY_ON_WRITE  . . . . . .  	Number	0054	
GET_VERSION  . . . . . . . . . .  	Number	0030	
GOTBADDOS  . . . . . . . . . . .  	L NEAR	02F6	CODE
GOTPARM  . . . . . . . . . . . .  	L NEAR	031E	CODE

HARDCH . . . . . . . . . . . . .  	L DWORD	010C	CODE
HEADER . . . . . . . . . . . . .  	L BYTE 	0103	CODE

IBMVER . . . . . . . . . . . . .  	Alias	 TRUE		
INTBASE  . . . . . . . . . . . .  	Number	0080	
INTERNATIONAL  . . . . . . . . .  	Number	0038	
INTERNATIONAL_INVALID_FUNCTION .  	Alias	 ERROR_INVALID_FUNCTION		
INTERNAT_BLOCK_MAX . . . . . . .  	Number	0020	
INTTAB . . . . . . . . . . . . .  	Number	0020	
INT_23 . . . . . . . . . . . . .  	L NEAR	0705	CODE	Global
INT_24 . . . . . . . . . . . . .  	F PROC	072E	CODE	Length = 0012
INT_24_BACK  . . . . . . . . . .  	L NEAR	0740	CODE
INT_24_RETADDR . . . . . . . . .  	L WORD 	072C	CODE
INT_ABORT  . . . . . . . . . . .  	Alias	 INTTAB		
INT_COMMAND  . . . . . . . . . .  	Number	0021	
INT_CTRL_C . . . . . . . . . . .  	Number	0023	
INT_DISK_READ  . . . . . . . . .  	Number	0025	
INT_DISK_WRITE . . . . . . . . .  	Number	0026	
INT_FASTCON  . . . . . . . . . .  	Number	0029	
INT_FATAL_ABORT  . . . . . . . .  	Number	0024	
INT_KEEP_PROCESS . . . . . . . .  	Number	0027	
INT_SPOOLER  . . . . . . . . . .  	Number	0028	
INT_TERMINATE  . . . . . . . . .  	Number	0022	
IOCTL  . . . . . . . . . . . . .  	Number	0044	
IOCTL_INVALID_DATA . . . . . . .  	Alias	 ERROR_INVALID_DATA		
IOCTL_INVALID_FUNCTION . . . . .  	Alias	 ERROR_INVALID_FUNCTION		
IOCTL_INVALID_HANDLE . . . . . .  	Alias	 ERROR_INVALID_HANDLE		
IRETI  . . . . . . . . . . . . .  	L NEAR	074B	CODE

KANJI  . . . . . . . . . . . . .  	Alias	 FALSE		
KEEP_PROCESS . . . . . . . . . .  	Number	0031	
KILL_BL  . . . . . . . . . . . .  	L NEAR	03BA	CODE

LASTFAT  . . . . . . . . . . . .  	L WORD 	0040	DATA
LBRPRI . . . . . . . . . . . . .  	Number	0002	
LBWPRI . . . . . . . . . . . . .  	Number	0004	
LF . . . . . . . . . . . . . . .  	Number	000A	
LOAD . . . . . . . . . . . . . .  	L NEAR	028D	CODE
LOCKOPER . . . . . . . . . . . .  	Number	005C	
LOOK . . . . . . . . . . . . . .  	L NEAR	030B	CODE
LSEEK  . . . . . . . . . . . . .  	Number	0042	
LSEEK_INVALID_FUNCTION . . . . .  	Alias	 ERROR_INVALID_FUNCTION		
LSEEK_INVALID_HANDLE . . . . . .  	Alias	 ERROR_INVALID_HANDLE		

MAXENT . . . . . . . . . . . . .  	L WORD 	0030	DATA
MI_INT . . . . . . . . . . . . .  	Number	00CD	
MI_LONG_CALL . . . . . . . . . .  	Number	009A	
MI_LONG_JMP  . . . . . . . . . .  	Number	00EA	
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 17:21:29

RECOVER MS-DOS File/Disk Recovery Utility                   Symbols-10
                                                             

MI_LONG_RET  . . . . . . . . . .  	Number	00CB	
MKDIR  . . . . . . . . . . . . .  	Number	0039	
MKDIR_ACCESS_DENIED  . . . . . .  	Alias	 ERROR_ACCESS_DENIED		
MKDIR_PATH_NOT_FOUND . . . . . .  	Alias	 ERROR_PATH_NOT_FOUND		

NAM0 . . . . . . . . . . . . . .  	L NEAR	0563	CODE
NAM1 . . . . . . . . . . . . . .  	L NEAR	0570	CODE
NAME_COPIED  . . . . . . . . . .  	L NEAR	03D9	CODE
NEXT_CHAR  . . . . . . . . . . .  	L NEAR	03CA	CODE
NONAME . . . . . . . . . . . . .  	L NEAR	048D	CODE
NOPARM . . . . . . . . . . . . .  	L NEAR	0318	CODE
NOTEOF . . . . . . . . . . . . .  	L NEAR	0687	CODE
NOT_ROOT . . . . . . . . . . . .  	L NEAR	03F5	CODE
NO_ERRORS  . . . . . . . . . . .  	L NEAR	0455	CODE
NO_ERROR_OCCURRED  . . . . . . .  	Text  0                                                              ?		
NO_FUDGE . . . . . . . . . . . .  	L NEAR	072B	CODE

OEM_C1 . . . . . . . . . . . . .  	Number	00F9	
OEM_C2 . . . . . . . . . . . . .  	Number	00FA	
OEM_C3 . . . . . . . . . . . . .  	Number	00FB	
OEM_C4 . . . . . . . . . . . . .  	Number	00FC	
OEM_C5 . . . . . . . . . . . . .  	Number	00FD	
OEM_C6 . . . . . . . . . . . . .  	Number	00FE	
OEM_C7 . . . . . . . . . . . . .  	Number	00FF	
OKDOS  . . . . . . . . . . . . .  	L NEAR	02FE	CODE
OPEN . . . . . . . . . . . . . .  	Number	003D	
OPEN_ACCESS_DENIED . . . . . . .  	Alias	 ERROR_ACCESS_DENIED		
OPEN_FILE_NOT_FOUND  . . . . . .  	Alias	 ERROR_FILE_NOT_FOUND		
OPEN_FOR_BOTH  . . . . . . . . .  	Number	0002	
OPEN_FOR_READ  . . . . . . . . .  	Number	0000	
OPEN_FOR_WRITE . . . . . . . . .  	Number	0001	
OPEN_INVALID_ACCESS  . . . . . .  	Alias	 ERROR_INVALID_ACCESS		
OPEN_TOO_MANY_OPEN_FILES . . . .  	Alias	 ERROR_TOO_MANY_OPEN_FILES		
OPNERR . . . . . . . . . . . . .  	V BYTE 	0000	CONST	External
OUTBYTE  . . . . . . . . . . . .  	L NEAR	0218	CODE
OUTWORD  . . . . . . . . . . . .  	L NEAR	0211	CODE

PARSE_FILE_DESCRIPTOR  . . . . .  	Number	0029	
PCRLF  . . . . . . . . . . . . .  	L NEAR	01D8	CODE	Global
PRET . . . . . . . . . . . . . .  	L NEAR	01DF	CODE
PRINT  . . . . . . . . . . . . .  	L NEAR	01DB	CODE	Global
PRINTERR . . . . . . . . . . . .  	L NEAR	02E4	CODE

RABORT . . . . . . . . . . . . .  	L NEAR	0708	CODE
RAW_CON_INPUT  . . . . . . . . .  	Number	0007	
RAW_CON_IO . . . . . . . . . . .  	Number	0006	
READ . . . . . . . . . . . . . .  	Number	003F	
READFT . . . . . . . . . . . . .  	L NEAR	02A2	CODE
READIT . . . . . . . . . . . . .  	L NEAR	02A5	CODE
READ_ACCESS_DENIED . . . . . . .  	Alias	 ERROR_ACCESS_DENIED		
READ_INVALID_HANDLE  . . . . . .  	Alias	 ERROR_INVALID_HANDLE		
RECDSK . . . . . . . . . . . . .  	L NEAR	0508	CODE
RECFIL . . . . . . . . . . . . .  	L NEAR	060E	CODE
RECFIL0  . . . . . . . . . . . .  	L NEAR	0622	CODE
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 17:21:29

RECOVER MS-DOS File/Disk Recovery Utility                   Symbols-11
                                                             

RECFIL1  . . . . . . . . . . . .  	L NEAR	064A	CODE
RECFIL2  . . . . . . . . . . . .  	L NEAR	068D	CODE
RECFIL3  . . . . . . . . . . . .  	L NEAR	0695	CODE
RECFIL4  . . . . . . . . . . . .  	L NEAR	06CB	CODE
RECFIL5  . . . . . . . . . . . .  	L NEAR	06E7	CODE
RECFIL6  . . . . . . . . . . . .  	L NEAR	06F1	CODE
RECFILX  . . . . . . . . . . . .  	L NEAR	06B1	CODE
RECMSG_POST  . . . . . . . . . .  	V BYTE 	0000	CONST	External
RECMSG_PRE . . . . . . . . . . .  	V BYTE 	0000	CONST	External
RECOK  . . . . . . . . . . . . .  	L NEAR	06E1	CODE
RECOVER  . . . . . . . . . . . .  	L NEAR	0100	CODE
RECVEC . . . . . . . . . . . . .  	L NEAR	0647	CODE
REC_START  . . . . . . . . . . .  	L NEAR	02EA	CODE
RENAME . . . . . . . . . . . . .  	Number	0056	
RENAME_ACCESS_DENIED . . . . . .  	Alias	 ERROR_ACCESS_DENIED		
RENAME_FILE_NOT_FOUND  . . . . .  	Alias	 ERROR_FILE_NOT_FOUND		
RENAME_NOT_SAME_DEVICE . . . . .  	Alias	 ERROR_NOT_SAME_DEVICE		
REPORT . . . . . . . . . . . . .  	L NEAR	0000	CODE	External
REST_DIR . . . . . . . . . . . .  	L NEAR	070A	CODE
RET2 . . . . . . . . . . . . . .  	L NEAR	0210	CODE
RET66  . . . . . . . . . . . . .  	L NEAR	02A1	CODE
REXIT  . . . . . . . . . . . . .  	L NEAR	06FE	CODE
RMDIR  . . . . . . . . . . . . .  	Number	003A	
RMDIR_ACCESS_DENIED  . . . . . .  	Alias	 ERROR_ACCESS_DENIED		
RMDIR_CURRENT_DIRECTORY  . . . .  	Alias	 ERROR_CURRENT_DIRECTORY		
RMDIR_PATH_NOT_FOUND . . . . . .  	Alias	 ERROR_PATH_NOT_FOUND		
RPRI . . . . . . . . . . . . . .  	Number	0006	

SAME_DIR . . . . . . . . . . . .  	L NEAR	047E	CODE
SAME_DRIVE . . . . . . . . . . .  	L NEAR	0418	CODE
SECALL . . . . . . . . . . . . .  	L WORD 	002C	DATA
SECSIZ . . . . . . . . . . . . .  	L WORD 	0036	DATA
SERVERCALL . . . . . . . . . . .  	Number	005D	
SETBLOCK . . . . . . . . . . . .  	Number	004A	
SETBLOCK_ARENA_TRASHED . . . . .  	Alias	 ERROR_ARENA_TRASHED		
SETBLOCK_INVALID_BLOCK . . . . .  	Alias	 ERROR_INVALID_BLOCK		
SETBLOCK_INVALID_FUNCTION  . . .  	Alias	 ERROR_INVALID_FUNCTION		
SETBLOCK_NOT_ENOUGH_MEMORY . . .  	Alias	 ERROR_NOT_ENOUGH_MEMORY		
SETDPB . . . . . . . . . . . . .  	Number	0053	
SETFAT . . . . . . . . . . . . .  	L NEAR	0269	CODE
SETFAT1  . . . . . . . . . . . .  	L NEAR	0281	CODE
SETFAT2  . . . . . . . . . . . .  	L NEAR	0288	CODE
SET_CTRL_C_TRAPPING  . . . . . .  	Number	0033	
SET_CURRENT_PDB  . . . . . . . .  	Number	0050	
SET_DATE . . . . . . . . . . . .  	Number	002B	
SET_DEFAULT_DRIVE  . . . . . . .  	Number	000E	
SET_DMA  . . . . . . . . . . . .  	Number	001A	
SET_INTERRUPT_VECTOR . . . . . .  	Number	0025	
SET_OEM_HANDLER  . . . . . . . .  	Number	00F8	
SET_TIME . . . . . . . . . . . .  	Number	002D	
SET_VERIFY_ON_WRITE  . . . . . .  	Number	002E	
SF_DEFAULT_NUMBER  . . . . . . .  	Number	0005	
SIZTMP . . . . . . . . . . . . .  	L WORD 	0038	DATA
SJ1  . . . . . . . . . . . . . .  	L NEAR	0449	CODE
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 17:21:29

RECOVER MS-DOS File/Disk Recovery Utility                   Symbols-12
                                                             

SJA  . . . . . . . . . . . . . .  	L NEAR	03E9	CODE
SJB  . . . . . . . . . . . . . .  	L NEAR	03F0	CODE
SLASHOK  . . . . . . . . . . . .  	L NEAR	03B2	CODE
STDAUX . . . . . . . . . . . . .  	Number	0003	
STDERR . . . . . . . . . . . . .  	Number	0002	
STDIN  . . . . . . . . . . . . .  	Number	0000	
STDOUT . . . . . . . . . . . . .  	Number	0001	
STDPRN . . . . . . . . . . . . .  	Number	0004	
STD_AUX_INPUT  . . . . . . . . .  	Number	0003	
STD_AUX_OUTPUT . . . . . . . . .  	Number	0004	
STD_CON_INPUT  . . . . . . . . .  	Number	0001	
STD_CON_INPUT_FLUSH  . . . . . .  	Number	000C	
STD_CON_INPUT_NO_ECHO  . . . . .  	Number	0008	
STD_CON_INPUT_STATUS . . . . . .  	Number	000B	
STD_CON_OUTPUT . . . . . . . . .  	Number	0002	
STD_CON_STRING_INPUT . . . . . .  	Number	000A	
STD_CON_STRING_OUTPUT  . . . . .  	Number	0009	
STD_PRINTER_OUTPUT . . . . . . .  	Number	0005	
STEP1  . . . . . . . . . . . . .  	L NEAR	0515	CODE
STEP1A . . . . . . . . . . . . .  	L NEAR	0521	CODE
STEP2  . . . . . . . . . . . . .  	L NEAR	0534	CODE
STEP3  . . . . . . . . . . . . .  	L NEAR	0540	CODE
STEP4  . . . . . . . . . . . . .  	L NEAR	054E	CODE
STEP6  . . . . . . . . . . . . .  	L NEAR	05C8	CODE
STEP7  . . . . . . . . . . . . .  	L NEAR	05E2	CODE

TABLE  . . . . . . . . . . . . .  	L WORD 	0042	DATA
TARGET . . . . . . . . . . . . .  	L WORD 	002E	DATA
THE_ROOT . . . . . . . . . . . .  	L BYTE 	0110	CODE
TRUE . . . . . . . . . . . . . .  	Number	FFFF	

UNLINK . . . . . . . . . . . . .  	Number	0041	
UNLINK_ACCESS_DENIED . . . . . .  	Alias	 ERROR_ACCESS_DENIED		
UNLINK_FILE_NOT_FOUND  . . . . .  	Alias	 ERROR_FILE_NOT_FOUND		
USERDIR  . . . . . . . . . . . .  	L BYTE 	0116	CODE
USERIDOPER . . . . . . . . . . .  	Number	005E	
USER_DRIVE . . . . . . . . . . .  	L BYTE 	0112	CODE

WAIT . . . . . . . . . . . . . .  	Number	004D	
WPRI . . . . . . . . . . . . . .  	Number	0008	
WRITE  . . . . . . . . . . . . .  	Number	0040	
WRITE_ACCESS_DENIED  . . . . . .  	Alias	 ERROR_ACCESS_DENIED		
WRITE_INVALID_HANDLE . . . . . .  	Alias	 ERROR_INVALID_HANDLE		
WRTFAT . . . . . . . . . . . . .  	L NEAR	02CD	CODE
WRTIT  . . . . . . . . . . . . .  	L NEAR	02D0	CODE
WRTOK  . . . . . . . . . . . . .  	L NEAR	02DB	CODE

XDUP . . . . . . . . . . . . . .  	Number	0045	
XDUP2  . . . . . . . . . . . . .  	Number	0046	


   2112 Source  Lines
   2174 Total   Lines
    624 Symbols

  19210 Bytes symbol space free

      0 Warning Errors
      0 Severe  Errors
