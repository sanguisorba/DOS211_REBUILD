Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 16:29:35

File Compare Routine for MSDOS 2.0                          Page     1-1
                                                            

       1                                        title   File Compare Routine fo
					r MSDOS 2.0 
       2                                 
       3                                ;--------------------------------------
					---------------------------------; 
       4                                ; Revision History:                    
					                                 ; 
       5                                ;                                      
					                                 ; 
       6                                ; V1.0  Rev. 0  10/27/82        M.A.Ull
					oa                               ; 
       7                                ;                                      
					                                 ; 
       8                                ;       Rev. 1  10/28/82        M.A.Ull
					oa                               ; 
       9                                ;         Changed switch names and adde
					d binary compare using the       ; 
      10                                ;       -b switch.                     
					                                 ; 
      11                                ;                                      
					                                 ; 
      12                                ;       Rev. 1  11/4/82         A.R. Re
					ynolds                           ; 
      13                                ;         Messages in separate module  
					                                 ; 
      14                                ;       Also added header for MSVER    
					                                 ; 
      15                                ;                                      
					                                 ; 
      16                                ;       Rev. 2  11/29/82        M.A. Ul
					loa                              ; 
      17                                ;         Corrected sysntex problem wit
					h references to [base...]        ; 
      18                                ;                                      
					                                 ; 
      19                                ;       Rev. 3  01/03/83        M.A. Ul
					loa                              ; 
      20                                ;         Stack is right size now.     
					                                 ; 
      21                                ;                                      
					                                 ; 
      22                                ;--------------------------------------
					---------------------------------; 
      23                                 
      24 = 0000                         FALSE   equ     0 
      25 = 00FF                         TRUE    equ     0ffh 
      26                                 
      27                                 
      28 = 1000                         buf_size equ    4096                   
					 ;buffer size 
      29                                 
      30                                 
      31                                ;--------------------------------------
					---------------------------------; 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 16:29:35

File Compare Routine for MSDOS 2.0                          Page     1-2
                                                            

      32                                ;               Description            
					                                 ; 
      33                                ;                                      
					                                 ; 
      34                                ;       FC [-# -b -w -c] <file1> <file2
					>                                ; 
      35                                ;                                      
					                                 ; 
      36                                ; Options:                             
					                                 ; 
      37                                ;                                      
					                                 ; 
      38                                ;       -# were # is a number from 1 to
					 9, how many lines have to       ; 
      39                                ; before the end of an area of differen
					ce ends.                         ; 
      40                                ;                                      
					                                 ; 
      41                                ;       -b will force a binary comparat
					ion of both files.               ; 
      42                                ;                                      
					                                 ; 
      43                                ;       -w will cause all spaces and ta
					bs to be compressed to a single  ; 
      44                                ; space before comparing. All leading a
					nd trailing spaces and/or tabs   ; 
      45                                ; in a line are ignored.               
					                                 ; 
      46                                ;                                      
					                                 ; 
      47                                ;       -c will cause FC to ignore the 
					case of the letters.             ; 
      48                                ;                                      
					                                 ; 
      49                                ; Algorithm for text compare: (The one 
					for binary comp. is trivial)     ; 
      50                                ;                                      
					                                 ; 
      51                                ;       The files are read into two sep
					arate buffers and the            ; 
      52                                ; comparation starts. If two lines are 
					found to be different in the     ; 
      53                                ; two buffers, say line i of buffer A a
					nd line j of buffer B differ.    ; 
      54                                ; The program will try to match line i 
					with line j+1, then with line    ; 
      55                                ; j+2 and so on, if the end of buffer i
					s reached the program will       ; 
      56                                ; recompact the buffer and try to read 
					more lines into the buffer, if   ; 
      57                                ; no more lines can be read because eit
					her the buffer is full, or the   ; 
      58                                ; end of file was reached, then it will
					 revert and try to match line    ; 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 16:29:35

File Compare Routine for MSDOS 2.0                          Page     1-3
                                                            

      59                                ; j of buffer B to line i+1, i+2 and so
					 on of buffer A. If an end of    ; 
      60                                ; buffer is found, it tries to refill i
					t as before. If no matches are   ; 
      61                                ; found, then it will try to match line
					 i+1 of buffer A to line j+1,    ; 
      62                                ; j+2, j+3, .... of buffer B, if still 
					no matches are found, it reverts ; 
      63                                ; again and tries to match line j+1 of 
					buffer B with lines i+2, i+3,... ; 
      64                                ; of buffer A. And so on till a match i
					s found.                         ; 
      65                                ;                                      
					                                 ; 
      66                                ;       Once a match is found it contin
					ues chcking pairs of lines till  ; 
      67                                ; the specified number are matched (opt
					ion #, 3 by default), and then   ; 
      68                                ; it prints the differing area in both 
					files, each followed by the      ; 
      69                                ; first line matched.                  
					                                 ; 
      70                                ;                                      
					                                 ; 
      71                                ;       If no match is found (the diffe
					rence is bigger than the buffer) ; 
      72                                ; a "files different" message is printe
					d.                               ; 
      73                                ;                                      
					                                 ; 
      74                                ;       If one of the files finishes be
					fore another the remaining       ; 
      75                                ; portion of the file (plus any ongoing
					 difference) is printed out.     ; 
      76                                ;                                      
					                                 ; 
      77                                ;--------------------------------------
					---------------------------------; 
      78                                 
      79                                 
      80                                        subttl  Debug Macros 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 16:29:35

File Compare Routine for MSDOS 2.0                          Page     1-4
Debug Macros                                                

      81                                        page 
      82                                 
      83                                m_debug macro   str 
      84                                        local   a,b 
      85                                        jmp     short b 
      86                                a       db      str,0dh,0ah,"$" 
      87                                b:      pushf 
      88                                        push    dx 
      89                                        mov     dx,offset code:a 
      90                                        push    ds 
      91                                        push    cs 
      92                                        pop     ds 
      93                                        push    ax 
      94                                        mov     ah,9h 
      95                                        int     21h 
      96                                        pop     ax 
      97                                        pop     ds 
      98                                        pop     dx 
      99                                        popf 
     100                                        endm 
     101                                 
     102                                 
     103                                m_bname macro 
     104                                        local   a0,a1,a2,b1,b2 
     105                                        jmp     short a0 
     106                                b1      db      "------ buffer 1",0dh,0
					ah,"$" 
     107                                b2      db      "------ buffer 2",0dh,0
					ah,"$" 
     108                                a0:     pushf 
     109                                        push    dx 
     110                                        cmp     bx,offset dg:buf1 
     111                                        je      a1 
     112                                        mov     dx,offset code:b2 
     113                                        jmp     short a2 
     114                                a1:     mov     dx,offset code:b1 
     115                                a2:     push    ds 
     116                                        push    cs 
     117                                        pop     ds 
     118                                        push    ax 
     119                                        mov     ah,9h 
     120                                        int     21h 
     121                                        pop     ax 
     122                                        pop     ds 
     123                                        pop     dx 
     124                                        popf 
     125                                        endm 
     126                                 
     127                                 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 16:29:35

File Compare Routine for MSDOS 2.0                          Page     1-5
Debug Macros                                                

     128                                        page 
     129                                 
     130                                        .SALL 
     131                                        .LIST 
     132                                 
     133                                        subttl  General Definitions 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 16:29:35

File Compare Routine for MSDOS 2.0                          Page     1-6
General Definitions                                         

     134                                        page 
     135                                 
     136 = 000D                         CR      equ     0dh 
     137 = 000A                         LF      equ     0ah 
     138                                 
     139                                 
     140                                ;--------------------------------------
					---------------------------------; 
     141                                ;       Offsets to buffer structure 
     142                                ;       For text comparations: 
     143                                 
     144 = 0000                         fname      equ  0               ;file n
					ame ptr 
     145 = 0002                         fname_len  equ  2               ;file n
					ame length 
     146 = 0004                         handle     equ  4               ;handle
					 
     147 = 0006                         curr       equ  6               ;curren
					t line ptr 
     148 = 0008                         lst_curr   equ  8               ;last c
					urrent line ptr 
     149 = 000A                         fst_sinc   equ  10              ;first 
					line towards a sinc ptr 
     150 = 000C                         fst_nosinc equ  12              ;first 
					line out of sinc ptr 
     151 = 000E                         dat_end    equ  14              ;ptr to
					 last char of the buffer 
     152 = 0010                         buf_end    equ  16              ;pointe
					r to the end of the buffer 
     153 = 0012                         buf        equ  18              ;pointe
					r to the buffer 
     154                                 
     155                                ;       For binary comparations: 
     156                                 
     157 = 0006                         by_read    equ  6               ;bytes 
					read into buffer 
     158                                 
     159                                ;--------------------------------------
					---------------------------------; 
     160                                 
     161                                 
     162 0000                           code    segment word 
     163 0000                           code    ends 
     164                                 
     165 0000                           const   segment public word 
     166 0000                           const   ends 
     167                                 
     168 0000                           data    segment word 
     169 0000                           data    ends 
     170                                 
     171                                dg      group   code,const,data 
     172                                 
     173                                 
     174                                        subttl  Constants Area 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 16:29:35

File Compare Routine for MSDOS 2.0                          Page     1-7
Constants Area                                              

     175                                        page 
     176                                 
     177 0000                           const   segment public word 
     178                                 
     179 0000  4D 41 55 6C 6C 6F 61     make    db      "MAUlloa/Microsoft/V10"
					 
     180       2F 4D 69 63 72 6F 73     
     181       6F 66 74 2F 56 31 30     
     182                                
     183 0015  32                       rev     db      "2" 
     184                                 
     185                                ;----- CAREFULL WITH PRESERVING THE ORD
					ER OF THE TABLE ----- 
     186 = 0016                         opt_tbl equ     $                      
					 ;option table 
     187                                 
     188 0016  00                       flg_b   db      FALSE 
     189 0017  00                       flg_c   db      FALSE 
     190 0018  00                       flg_s   db      FALSE 
     191 0019  00                       flg_w   db      FALSE 
     192                                ;--------------------------------------
					--------------------- 
     193                                 
     194 001A  00                       ib_first1 db    FALSE                  
					 ;flags used when comparing lines 
     195 001B  00                       ib_first2 db    FALSE                  
					 ; while in ignore white mode. 
     196                                 
     197 001C  0003                     m_num   dw      3                      
					 ;lines that have to match before 
     198                                                                       
					 ; reporting a match 
     199                                 
     200 001E  0000                     mtch_cntr dw    0                      
					 ;matches towards a sinc 
     201                                 
     202 0020  00                       mode    db      FALSE                  
					 ;If false then trying to match a line 
     203                                                                       
					 ; from buf1 to lines in buf2. If true 
     204                                                                       
					 ; then viceversa. 
     205                                 
     206 0021  FF                       sinc    db      TRUE                   
					 ;Sinc flag, start IN SINC 
     207                                 
     208 0022  00                       bend    db      0                      
					 ;binary end of file flag, 0= none yet,
					 
     209                                                                       
					 ; 1= file 1 ended, 2= file 2 ended 
     210                                 
     211 0023  00 00 00 00              base    dd      0                      
					 ;base address of files for binary 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 16:29:35

File Compare Routine for MSDOS 2.0                          Page     1-8
Constants Area                                              

     212                                                                       
					 ; comparations 
     213                                 
     214 0027  00                       bhead_flg db    false                  
					 ;true if heading for binary comp. 
     215                                                                       
					 ; has been printed already. 
     216                                 
     217                                ;--------------------------------------
					--------------------- 
     218 = 0028                         bp_buf  equ     $                      
					 ;binary compare difference template 
     219                                 
     220 0028  0008[                    bp_buf1 db      8 dup(' ')             
					 ;file address 
     221            20                  
     222                         ]      
     223                                
     224 0030  0003[                            db      3 dup(' ') 
     225            20                  
     226                         ]      
     227                                
     228 0033  0002[                    bp_buf2 db      2 dup(' ')             
					 ;byte of file 1 
     229            20                  
     230                         ]      
     231                                
     232 0035  0003[                            db      3 dup(' ') 
     233            20                  
     234                         ]      
     235                                
     236 0038  0002[                    bp_buf3 db      2 dup(' ')             
					 ;byte of file 1 
     237            20                  
     238                         ]      
     239                                
     240 003A  0D 0A                            db      CR,LF 
     241                                 
     242 = 0014                         bp_buf_len equ  $ - bp_buf             
					 ;length of template 
     243                                ;--------------------------------------
					--------------------- 
     244                                 
     245                                        EXTRN   vers_err:byte,opt_err:b
					yte,opt_e:byte,crlf:byte,opt_err_len:by
					te 
     246                                        EXTRN   bhead_len:byte 
     247                                        EXTRN   found_err_pre:byte,foun
					d_err_pre_len:byte 
     248                                        EXTRN   found_err_post:byte,fou
					nd_err_post_len:byte 
     249                                        EXTRN   read_err_pre:byte,read_
					err_pre_len:byte 
     250                                        EXTRN   read_err_post:byte,read
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 16:29:35

File Compare Routine for MSDOS 2.0                          Page     1-9
Constants Area                                              

					_err_post_len:byte 
     251                                        EXTRN   file_err:byte,file_err_
					len:byte 
     252                                        EXTRN   bf1ne:byte,bf1ne_len:by
					te,bf2ne:byte,bf2ne_len:byte,bhead:byte
					 
     253                                        EXTRN   int_err:byte,int_err_le
					n:byte,dif_err:byte,dif_err_len:byte 
     254                                        EXTRN   args_err:byte,args_err_
					len:byte,fname_sep:byte,fname_sep_len:b
					yte 
     255                                        EXTRN   diff_sep:byte,diff_sep_
					len:byte 
     256                                 
     257 003C                           const   ends 
     258                                 
     259                                 
     260                                 
     261                                        subttl  Data Area 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 16:29:35

File Compare Routine for MSDOS 2.0                          Page     1-10
Data Area                                                   

     262                                        page 
     263                                 
     264 0000                           data    segment word 
     265                                 
     266 0000  0080[                    com_buf db      128 dup(?)      ;comman
					d line buffer 
     267            ??                  
     268                         ]      
     269                                
     270                                 
     271                                ;----- Buffer structures 
     272 0080  000B[                    buf1    dw      11 dup(?) 
     273            ????                
     274                         ]      
     275                                
     276 0096  000B[                    buf2    dw      11 dup(?) 
     277            ????                
     278                         ]      
     279                                
     280                                 
     281                                ; two extra for guard in case of need t
					o insert a CR,LF pair 
     282 00AC  1000[                    b1      db      buf_size dup(?) 
     283            ??                  
     284                         ]      
     285                                
     286 10AC  0002[                    end_b1  db      2 dup(?) 
     287            ??                  
     288                         ]      
     289                                
     290 10AE  1000[                    b2      db      buf_size dup(?) 
     291            ??                  
     292                         ]      
     293                                
     294 20AE  0002[                    end_b2  db      2 dup(?) 
     295            ??                  
     296                         ]      
     297                                
     298                                 
     299 20B0                           data    ends 
     300                                 
     301                                 
     302                                 
     303                                        subttl  MAIN Routine 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 16:29:35

File Compare Routine for MSDOS 2.0                          Page     1-11
MAIN Routine                                                

     304                                        page 
     305                                 
     306 0000                           code    segment 
     307                                assume  cs:dg,ds:nothing,es:nothing,ss:
					stack 
     308                                 
     309 0000                           start: 
     310 0000  EB 09                            jmp     short FCSTRT 
     311                                ;--------------------------------------
					---------------------------------; 
     312                                ;       Check version number 
     313                                 
     314 0002  56 65 72 73 20 31 2E     HEADER  DB      "Vers 1.00" 
     315       30 30                    
     316                                 
     317 000B                           FCSTRT: 
     318                                ;Code to print header 
     319                                ;       PUSH    DS 
     320                                ;       push    cs 
     321                                ;       pop     ds 
     322                                ;       MOV     DX,OFFSET DG:HEADER 
     323                                ;       mov     ah,std_con_string_outpu
					t 
     324                                ;       int     21h 
     325                                ;       POP     DS 
     326                                 
     327 000B  B4 30                            mov     ah,get_version 
     328 000D  CD 21                            int     21h 
     329 000F  3C 02                            cmp     al,2 
     330 0011  7D 0C                            jge     vers_ok 
     331 0013  BA 0000 E                        mov     dx,offset dg:vers_err 
     332 0016  B4 09                            mov     ah,std_con_string_outpu
					t 
     333 0018  CD 21                            int     21h 
     334 001A  06                               push    es                     
					 ;bad vers, exit a la 1.x 
     335 001B  33 C0                            xor     ax,ax 
     336 001D  50                               push    ax 
     337                                 
     338 001E                           badvex  proc    far 
     339 001E  CB                               ret 
     340                                badvex  endp 
     341                                 
     342                                 
     343 001F                           vers_ok: 
     344 001F  0E                               push    cs 
     345 0020  07                               pop     es 
     346                                 
     347                                assume  es:dg 
     348                                 
     349                                ;--------------------------------------
					---------------------------------; 
     350                                ;       Copy command line 
     351                                 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 16:29:35

File Compare Routine for MSDOS 2.0                          Page     1-12
MAIN Routine                                                

     352 0021  BE 0080                          mov     si,80h                 
					 ;command line address 
     353 0024  FC                               cld 
     354 0025  AC                               lodsb                          
					 ;get char count 
     355 0026  8A C8                            mov     cl,al 
     356 0028  32 ED                            xor     ch,ch 
     357 002A  41                               inc     cx                     
					 ;include the CR 
     358 002B  BF 0000 R                        mov     di,offset dg:com_buf 
     359 002E  FC                               cld 
     360 002F  F3/ A4                           rep     movsb 
     361                                 
     362 0031  0E                               push    cs 
     363 0032  1F                               pop     ds 
     364                                 
     365                                assume  ds:dg 
     366                                 
     367                                 
     368                                 
     369                                ;--------------------------------------
					---------------------------------; 
     370                                ;       Initialize buffer structures 
     371                                 
     372 0033  BB 0080 R                        mov     bx,offset dg:buf1 
     373 0036  C7 47 12 00AC R                  mov     word ptr [bx].buf,offse
					t dg:b1 
     374 003B  C7 47 10 10AC R                  mov     word ptr [bx].buf_end,o
					ffset dg:end_b1 
     375 0040  BB 0096 R                        mov     bx,offset dg:buf2 
     376 0043  C7 47 12 10AE R                  mov     word ptr [bx].buf,offse
					t dg:b2 
     377 0048  C7 47 10 20AE R                  mov     word ptr [bx].buf_end,o
					ffset dg:end_b2 
     378                                 
     379                                 
     380                                ;--------------------------------------
					---------------------------------; 
     381                                ;       Process options 
     382                                 
     383 004D  B4 37                            mov     ah,char_oper 
     384 004F  B0 00                            mov     al,0 
     385 0051  CD 21                            int     21h                    
					 ;get switch character 
     386 0053  BE 0000 R                        mov     si,offset dg:com_buf 
     387                                 
     388 0056                           cont_opt: 
     389 0056  E8 0356 R                        call    kill_bl 
     390 0059  72 55                            jc      bad_args               
					 ;arguments missing 
     391 005B  3A C2                            cmp     al,dl                  
					 ;switch character? 
     392 005D  75 5B                            jne     get_file               
					 ;no, process file names 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 16:29:35

File Compare Routine for MSDOS 2.0                          Page     1-13
MAIN Routine                                                

     393 005F  FC                               cld 
     394 0060  AC                               lodsb                          
					 ;get option 
     395 0061  E8 034B R                        call    make_caps              
					 ;capitalize option 
     396 0064  BB 0016 R                        mov     bx,offset dg:opt_tbl 
     397                                 
     398 0067  3C 42                            cmp     al,'B' 
     399 0069  74 2E                            je      b_opt 
     400 006B  3C 43                            cmp     al,'C' 
     401 006D  74 2F                            je      c_opt 
     402 006F  3C 53                            cmp     al,'S' 
     403 0071  74 30                            je      s_opt 
     404 0073  3C 57                            cmp     al,'W' 
     405 0075  74 31                            je      w_opt 
     406 0077  3C 31                            cmp     al,'1'                 
					 ;a number option? 
     407 0079  72 0D                            jb      bad_opt 
     408 007B  3C 39                            cmp     al,'9' 
     409 007D  77 09                            ja      bad_opt 
     410 007F  24 0F                            and     al,0fh                 
					 ;a number option, convert to binary 
     411 0081  32 E4                            xor     ah,ah                  
					 ;zero high nibble 
     412 0083  A3 001C R                        mov     [m_num],ax 
     413 0086  EB CE                            jmp     short cont_opt 
     414                                 
     415 0088                           bad_opt:                               
					 ;a bad option: 
     416 0088  52                               push    dx                     
					 ; save switch character 
     417 0089  A2 0000 E                        mov     [opt_e],al             
					 ; option in error 
     418 008C  BA 0000 E                        mov     dx,offset dg:opt_err 
     419 008F  8A 0E 0000 E                     mov     cl,opt_err_len 
     420 0093  E8 06A0 R                        call    prt_err                
					 ; print error message 
     421 0096  5A                               pop     dx 
     422 0097  EB BD                            jmp     short cont_opt         
					 ; process rest of options 
     423                                 
     424 0099                           b_opt: 
     425 0099  BF 0000                          mov     di,0 
     426 009C  EB 0D                            jmp     short opt_dispatch 
     427                                 
     428 009E                           c_opt: 
     429 009E  BF 0001                          mov     di,1 
     430 00A1  EB 08                            jmp     short opt_dispatch 
     431                                 
     432 00A3                           s_opt: 
     433 00A3  BF 0002                          mov     di,2 
     434 00A6  EB 03                            jmp     short opt_dispatch 
     435                                 
     436 00A8                           w_opt: 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 16:29:35

File Compare Routine for MSDOS 2.0                          Page     1-14
MAIN Routine                                                

     437 00A8  BF 0003                          mov     di,3 
     438                                 
     439 00AB                           opt_dispatch: 
     440 00AB  C6 01 FF                         mov     byte ptr dg:[bx+di],TRU
					E        ;set the corresponding flag 
     441 00AE  EB A6                            jmp     short cont_opt 
     442                                 
     443                                 
     444 00B0                           bad_args: 
     445 00B0  BA 0000 E                        mov     dx,offset dg:args_err 
     446 00B3  8A 0E 0000 E                     mov     cl,args_err_len 
     447 00B7  EB 6B 90                         jmp     an_err 
     448                                 
     449                                 
     450                                 
     451                                ;--------------------------------------
					---------------------------------; 
     452                                ;       Get the file names 
     453                                 
     454 00BA                           get_file: 
     455 00BA  4E                               dec     si                     
					 ;adjust pointer 
     456 00BB  E8 0367 R                        call    find_nonb              
					 ;find first non blank in com. buffer 
     457 00BE  72 F0                            jc      bad_args               
					 ;file (or files) missing 
     458 00C0  C6 05 00                         mov     byte ptr [di],0        
					 ;nul terminate 
     459 00C3  8B D6                            mov     dx,si                  
					 ;pointer to file name 
     460 00C5  BB 0080 R                        mov     bx,offset dg:buf1 
     461 00C8  89 17                            mov     word ptr [bx].fname,dx 
					         ;save pointer to file name 
     462 00CA  89 4F 02                         mov     word ptr [bx].fname_len
					,cx      ;file name length 
     463 00CD  B4 3D                            mov     ah,open 
     464 00CF  B0 00                            mov     al,0                   
					 ;open for reading 
     465 00D1  CD 21                            int     21h 
     466 00D3  72 29                            jc      bad_file 
     467 00D5  89 47 04                         mov     word ptr [bx].handle,ax
					         ;save the handle 
     468                                 
     469 00D8  8B F7                            mov     si,di 
     470 00DA  46                               inc     si                     
					 ;point past the nul 
     471 00DB  E8 0356 R                        call    kill_bl                
					 ;find other file name 
     472 00DE  72 D0                            jc      bad_args               
					 ;a CR found: file name missing 
     473 00E0  4E                               dec     si                     
					 ;adjust pointer 
     474 00E1  E8 0367 R                        call    find_nonb 
     475 00E4  C6 05 00                         mov     byte ptr [di],0        
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 16:29:35

File Compare Routine for MSDOS 2.0                          Page     1-15
MAIN Routine                                                

					 ;nul terminate the file name 
     476 00E7  8B D6                            mov     dx,si 
     477 00E9  BB 0096 R                        mov     bx,offset dg:buf2 
     478 00EC  89 17                            mov     word ptr [bx].fname,dx 
					         ;save pointer to file name 
     479 00EE  89 4F 02                         mov     word ptr [bx].fname_len
					,cx      ;file name length 
     480 00F1  B4 3D                            mov     ah,open 
     481 00F3  B0 00                            mov     al,0                   
					 ;open for reading 
     482 00F5  CD 21                            int     21h 
     483 00F7  72 05                            jc      bad_file 
     484 00F9  89 47 04                         mov     word ptr [bx].handle,ax
					         ;save the handle 
     485 00FC  EB 2F                            jmp     short go_compare 
     486                                 
     487 00FE                           bad_file: 
     488 00FE  3D 0002                          cmp     ax,error_file_not_found
					 
     489 0101  74 09                            je      sj01 
     490 0103  BA 0000 E                        mov     dx,offset dg:int_err 
     491 0106  8A 0E 0000 E                     mov     cl,int_err_len 
     492 010A  EB 18                            jmp     short an_err 
     493 010C                           sj01: 
     494 010C  51                               push    cx                     
					 ;save file name length 
     495 010D  BA 0000 E                        mov     dx,offset dg:found_err_
					pre 
     496 0110  8A 0E 0000 E                     mov     cl,found_err_pre_len 
     497 0114  E8 06A0 R                        call    prt_err 
     498 0117  59                               pop     cx 
     499 0118  8B D6                            mov     dx,si                  
					 ;pointer to file name length 
     500 011A  E8 06A0 R                        call    prt_err 
     501 011D  BA 0000 E                        mov     dx,offset dg:found_err_
					post 
     502 0120  8A 0E 0000 E                     mov     cl,found_err_post_len 
     503 0124                           an_err: 
     504 0124  E8 06A0 R                        call    prt_err 
     505 0127  B0 FF                            mov     al,-1                  
					 ;return an error code 
     506 0129  B4 4C                            mov     ah,exit 
     507 012B  CD 21                            int     21h 
     508                                 
     509                                 
     510                                 
     511                                ;--------------------------------------
					---------------------------------; 
     512                                ;               CHECK COMPARE MODE 
     513                                 
     514 012D                           go_compare: 
     515 012D  80 3E 0016 R FF                  cmp     [flg_b],true           
					 ;do we do a binary comparation? 
     516 0132  74 03                            je      bin_compare 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 16:29:35

File Compare Routine for MSDOS 2.0                          Page     1-16
MAIN Routine                                                

     517 0134  E9 01D1 R                        jmp     txt_compare 
     518                                 
     519                                 
     520                                        subttl  Binary Compare Routine 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 16:29:35

File Compare Routine for MSDOS 2.0                          Page     1-17
Binary Compare Routine                                      

     521                                        page 
     522                                 
     523                                ;--------------------------------------
					---------------------------------; 
     524                                ;       COMPARE BUFFERS IN BINARY MODE 
     525                                 
     526 0137                           bin_compare: 
     527                                 
     528                                ;----- Fill in the buffers 
     529                                 
     530 0137  BB 0080 R                        mov     bx,offset dg:buf1      
					 ;pointer to buffer structure 
     531 013A  8B 57 12                         mov     dx,word ptr[bx].buf    
					 ;pointer to buffer 
     532 013D  8B F2                            mov     si,dx                  
					 ;save for latter comparation 
     533 013F  E8 05B5 R                        call    read_dat               
					 ;read into buffer 
     534 0142  72 0F                            jc      bad_datj               
					 ;an error 
     535 0144  89 47 06                         mov     word ptr[bx].by_read,AX
					    ;save ammount read 
     536 0147  50                               push    ax                     
					 ;save for now 
     537                                 
     538 0148  BB 0096 R                        mov     bx,offset dg:buf2      
					 ;pointer to buffer structure 
     539 014B  8B 57 12                         mov     dx,word ptr[bx].buf    
					 ;pointer to buffer 
     540 014E  8B FA                            mov     di,dx                  
					 ;save for comparation 
     541 0150  E8 05B5 R                        call    read_dat               
					 ;read into buffer 
     542 0153  72 72                    bad_datj: jc    bad_dat                
					 ;an error 
     543 0155  89 47 06                         mov     word ptr[bx].by_read,AX
					    ;save ammount read 
     544                                 
     545 0158  59                               pop     cx                     
					 ;restore byte count of buffer1 
     546 0159  3B C1                            cmp     ax,cx                  
					 ;compare byte counts 
     547 015B  77 09                            ja      morein_b2 
     548 015D  72 0E                            jb      morein_b1 
     549 015F  0B C0                            or      ax,ax                  
					 ;the same ammount, is it 0? 
     550 0161  75 11                            jne     go_bcomp               
					 ;no,compare 
     551 0163  E9 0345 R                        jmp     go_quit                
					 ;yes, all done.... 
     552                                 
     553 0166                           morein_b2: 
     554 0166  C6 06 0022 R 01                  mov     [bend],1               
					 ;file 1 ended 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 16:29:35

File Compare Routine for MSDOS 2.0                          Page     1-18
Binary Compare Routine                                      

     555 016B  EB 07                            jmp     short go_bcomp 
     556                                 
     557 016D                           morein_b1: 
     558 016D  C6 06 0022 R 02                  mov     [bend],2               
					 ;file 2 ended 
     559 0172  8B C8                            mov     cx,ax 
     560                                 
     561                                ;----- Compare data in buffers 
     562                                 
     563 0174                           go_bcomp: 
     564 0174  A1 0023 R                        mov     ax,word ptr [base]     
					 ;load base addrs. to AX,BX pair 
     565 0177  8B 1E 0025 R                     mov     bx,word ptr [base+2] 
     566 017B  03 D9                            add     bx,cx                  
					 ;add to base num. of bytes to 
     567 017D  15 0000                          adc     ax,0                   
					 ; compare. 
     568 0180  A3 0023 R                        mov     word ptr [base],ax     
					 ;save total 
     569 0183  89 1E 0025 R                     mov     word ptr [base+2],bx 
     570                                 
     571 0187                           next_bcomp: 
     572 0187  FC                               cld 
     573 0188  E3 17                            jcxz    end_check 
     574 018A  F3/ A6                           repz    cmpsb                  
					 ;compare both buffers 
     575 018C  74 13                            jz      end_check              
					 ;all bytes match 
     576 018E  51                               push    cx                     
					 ;save count so far 
     577 018F  50                               push    ax 
     578 0190  53                               push    bx 
     579 0191  41                               inc     cx 
     580 0192  2B D9                            sub     bx,cx                  
					 ;get file address of bytes that 
     581 0194  1D 0000                          sbb     ax,0                   
					 ; are different. 
     582 0197  E8 0387 R                        call    prt_bdif               
					 ;print difference 
     583 019A  5B                               pop     bx 
     584 019B  58                               pop     ax 
     585 019C  59                               pop     cx                     
					 ;restore on-going comparation count 
     586 019D  EB E8                            jmp     short next_bcomp 
     587                                 
     588 019F                           bnot_yet: 
     589 019F  EB 96                            jmp     bin_compare 
     590                                 
     591 01A1                           end_check: 
     592 01A1  80 3E 0022 R 00                  cmp     [bend],0               
					 ;have any file ended yet? 
     593 01A6  74 F7                            je      bnot_yet               
					 ;no, read in more data 
     594 01A8  80 3E 0022 R 01                  cmp     [bend],1               
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 16:29:35

File Compare Routine for MSDOS 2.0                          Page     1-19
Binary Compare Routine                                      

					 ;yes, was it file 1? 
     595 01AD  74 09                            je      bf1_ended              
					 ;yes, data left in file 2 
     596 01AF  BA 0000 E                        mov     dx,offset dg:bf1ne 
     597 01B2  8A 0E 0000 E                     mov     cl,bf1ne_len 
     598 01B6  EB 07                            jmp     short bend_mes 
     599                                 
     600 01B8                           bf1_ended: 
     601 01B8  BA 0000 E                        mov     dx,offset dg:bf2ne 
     602 01BB  8A 0E 0000 E                     mov     cl,bf2ne_len 
     603                                 
     604 01BF                           bend_mes: 
     605 01BF  32 ED                            xor     ch,ch 
     606 01C1  E8 0696 R                        call    prout 
     607 01C4  E9 0345 R                        jmp     go_quit 
     608                                 
     609                                 
     610                                 
     611                                        subttl  Text Compare Routine 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 16:29:35

File Compare Routine for MSDOS 2.0                          Page     1-20
Text Compare Routine                                        

     612                                        page 
     613                                 
     614                                ;--------------------------------------
					---------------------------------; 
     615                                ;               Fill in the buffers 
     616                                 
     617 01C7                           bad_dat: 
     618 01C7  BA 0000 E                        mov     dx,offset dg:file_err 
     619 01CA  8A 0E 0000 E                     mov     cl,file_err_len 
     620 01CE  E9 0124 R                        jmp     an_err 
     621                                 
     622                                 
     623 01D1                           txt_compare: 
     624                                 
     625 01D1  BB 0080 R                        mov     bx,offset dg:buf1 
     626 01D4  8B 57 12                         mov     dx,word ptr [bx].buf 
     627 01D7  89 57 0C                         mov     word ptr [bx].fst_nosin
					c,dx 
     628 01DA  89 57 06                         mov     word ptr [bx].curr,dx 
     629                                 
     630 01DD  E8 055E R                        call    fill_buffer 
     631 01E0  72 E5                            jc      bad_dat 
     632                                 
     633 01E2  BB 0096 R                        mov     bx,offset dg:buf2 
     634 01E5  8B 57 12                         mov     dx,word ptr [bx].buf 
     635 01E8  89 57 0C                         mov     word ptr [bx].fst_nosin
					c,dx 
     636 01EB  89 57 06                         mov     word ptr [bx].curr,dx 
     637                                 
     638 01EE  E8 055E R                        call    fill_buffer 
     639 01F1  72 D4                            jc      bad_dat 
     640                                 
     641                                 
     642                                ;--------------------------------------
					---------------------------------; 
     643                                ;       COMPARE BUFFERS IN TEXT MODE 
     644                                 
     645 01F3                           another_line: 
     646 01F3  E8 03F5 R                        call    go_match               
					 ;try to match both current lines 
     647 01F6  72 03                            jc      sj02                   
					 ;a match 
     648 01F8  EB 4B 90                         jmp     no_match               
					 ;no match, continue.... 
     649 01FB                           sj02: 
     650 01FB  80 3E 0021 R FF                  cmp     byte ptr[sinc],true    
					 ;are we in SINC? 
     651 0200  74 25                            je      sj04 
     652 0202  A1 001E R                        mov     ax,[mtch_cntr] 
     653 0205  0B C0                            or      ax,ax                  
					 ;first line of a possible SINC? 
     654 0207  75 0C                            jnz     sj03 
     655 0209  BB 0080 R                        mov     bx,offset dg:buf1 
     656 020C  89 77 0A                         mov     word ptr [bx].fst_sinc,
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 16:29:35

File Compare Routine for MSDOS 2.0                          Page     1-21
Text Compare Routine                                        

					si       ;yes, save curr line buffer 1 
     657 020F  BB 0096 R                        mov     bx,offset dg:buf2 
     658 0212  89 7F 0A                         mov     word ptr [bx].fst_sinc,
					di       ;save curr line buffer 2 
     659 0215                           sj03: 
     660 0215  40                               inc     ax                     
					 ;increment match counter 
     661 0216  A3 001E R                        mov     [mtch_cntr],ax         
					 ;save number of matches 
     662 0219  39 06 001C R                     cmp     m_num,ax               
					 ;enough lines matched for a SINC? 
     663 021D  75 08                            jne     sj04                   
					 ;not yet, match some more 
     664 021F  C6 06 0021 R FF                  mov     [sinc],true            
					 ;yes, flag we are now in sinc 
     665 0224  E8 060F R                        call    print_diff             
					 ;print mismatched lines 
     666                                 
     667                                 
     668                                 
     669                                ;--------------------------------------
					---------------------------------; 
     670                                ;       Advance current line pointer in
					 both buffers 
     671                                 
     672 0227                           sj04: 
     673 0227  BB 0080 R                        mov     bx,offset dg:buf1 
     674 022A  E8 04FE R                        call    adv_b 
     675 022D  73 03                            jnc     sj05 
     676 022F  E9 02C8 R                        jmp     no_more1 
     677 0232                           sj05: 
     678 0232  89 77 06                         mov     word ptr[bx].curr,si 
     679 0235  BB 0096 R                        mov     bx,offset dg:buf2 
     680 0238  E8 04FE R                        call    adv_b 
     681 023B  73 03                            jnc     sj051 
     682 023D  E9 02F7 R                        jmp     no_more2 
     683 0240                           sj051: 
     684 0240  89 77 06                         mov     word ptr[bx].curr,si 
     685 0243  EB AE                            jmp     another_line           
					 ;continue matching 
     686                                 
     687                                 
     688                                 
     689                                ;--------------------------------------
					---------------------------------; 
     690                                ;               Process a mismatch 
     691                                 
     692 0245                           no_match: 
     693 0245  80 3E 0021 R FF                  cmp     [sinc],true            
					 ;are we in SINC? 
     694 024A  75 17                            jne     sj06 
     695 024C  C6 06 0021 R 00                  mov     [sinc],false           
					 ;not any more.... 
     696 0251  BB 0080 R                        mov     bx,offset dg:buf1 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 16:29:35

File Compare Routine for MSDOS 2.0                          Page     1-22
Text Compare Routine                                        

     697 0254  89 77 0C                         mov     word ptr [bx].fst_nosin
					c,si     ;save current lines 
     698 0257  89 77 08                         mov     word ptr [bx].lst_curr,
					si 
     699 025A  BB 0096 R                        mov     bx,offset dg:buf2 
     700 025D  89 7F 0C                         mov     word ptr [bx].fst_nosin
					c,di 
     701 0260  89 7F 08                         mov     word ptr [bx].lst_curr,
					di 
     702 0263                           sj06: 
     703 0263  C7 06 001E R 0000                mov     [mtch_cntr],0          
					 ;reset match counter 
     704 0269  80 3E 0020 R FF                  cmp     [mode],true 
     705 026E  74 2C                            je      sj09 
     706                                 
     707                                ;----- MODE A ----- 
     708 0270  BB 0096 R                        mov     bx,offset dg:buf2 
     709 0273  E8 04FE R                        call    adv_b                  
					 ;get next line in buffer (or file) 
     710 0276  72 06                            jc      sj08                   
					 ;no more lines in buffer 
     711 0278                           sj07: 
     712 0278  89 77 06                         mov     word ptr [bx].curr,si 
     713 027B  E9 01F3 R                        jmp     another_line 
     714 027E                           sj08: 
     715 027E  C6 06 0020 R FF                  mov     [mode],true            
					 ;change mode 
     716 0283  8B 77 08                         mov     si,word ptr [bx].lst_cu
					rr 
     717 0286  89 77 06                         mov     word ptr [bx].curr,si 
     718 0289  BB 0080 R                        mov     bx,offset dg:buf1 
     719 028C  8B 77 08                         mov     si,word ptr [bx].lst_cu
					rr 
     720 028F  89 77 06                         mov     word ptr [bx].curr,si 
     721 0292  E8 04FE R                        call    adv_b                  
					 ;get next line 
     722 0295  72 31                            jc      no_more1               
					 ;no more lines fit in buffer 1 
     723 0297  89 77 08                         mov     word ptr [bx].lst_curr,
					si 
     724 029A  EB 08                            jmp     short sj10 
     725                                 
     726                                ;----- MODE B ----- 
     727 029C                           sj09: 
     728 029C  BB 0080 R                        mov     bx,offset dg:buf1 
     729 029F  E8 04FE R                        call    adv_b                  
					 ;get next line in buffer (or file) 
     730 02A2  72 06                            jc      sj11                   
					 ;no more lines in buffer 
     731 02A4                           sj10: 
     732 02A4  89 77 06                         mov     word ptr [bx].curr,si 
     733 02A7  E9 01F3 R                        jmp     another_line 
     734                                 
     735 02AA                           sj11: 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 16:29:35

File Compare Routine for MSDOS 2.0                          Page     1-23
Text Compare Routine                                        

     736 02AA  C6 06 0020 R 00                  mov     [mode],false 
     737 02AF  8B 77 08                         mov     si,word ptr [bx].lst_cu
					rr 
     738 02B2  89 77 06                         mov     word ptr [bx].curr,si 
     739 02B5  BB 0096 R                        mov     bx,offset dg:buf2 
     740 02B8  8B 77 08                         mov     si,word ptr [bx].lst_cu
					rr 
     741 02BB  89 77 06                         mov     word ptr [bx].curr,si 
     742 02BE  E8 04FE R                        call    adv_b                  
					 ;get next line 
     743 02C1  72 34                            jc      no_more2               
					 ;no more lines fit in buffer 2 
     744 02C3  89 77 08                         mov     word ptr [bx].lst_curr,
					si 
     745 02C6  EB B0                            jmp     sj07 
     746                                 
     747                                 
     748                                 
     749                                ;--------------------------------------
					---------------------------------; 
     750                                ;               Process end of files 
     751                                 
     752 02C8                           no_more1: 
     753 02C8  3D 0000                          cmp     ax,0                   
					 ;end of file reached? 
     754 02CB  74 03                            jz      xj1 
     755 02CD  EB 6C 90                         jmp     dif_files              
					 ;no, difference was too big 
     756 02D0                           xj1: 
     757 02D0  80 3E 0021 R FF                  cmp     [sinc],true            
					 ;file1 ended, are we in SINC? 
     758 02D5  74 03                            je      xj3 
     759 02D7  EB 4D 90                         jmp     no_sinc 
     760 02DA                           xj3: 
     761 02DA  BB 0096 R                        mov     bx,offset dg:buf2 
     762 02DD  E8 04FE R                        call    adv_b                  
					 ;advance current line in buf2 
     763 02E0  73 03                            jnc     xj5 
     764 02E2  EB 61 90                         jmp     go_quit                
					 ;file2 ended too, terminate prog. 
     765 02E5                           xj5: 
     766                                 
     767                                ;----- File 1 ended but NOT file 2 
     768 02E5  BB 0080 R                        mov     bx,offset dg:buf1 
     769 02E8  E8 0648 R                        call    print_head 
     770 02EB  BB 0096 R                        mov     bx,offset dg:buf2 
     771 02EE  E8 0648 R                        call    print_head 
     772 02F1  E8 0666 R                        call    print_all              
					 ;print the rest of file2 
     773 02F4  EB 4F 90                         jmp     go_quit 
     774                                 
     775                                 
     776 02F7                           no_more2: 
     777 02F7  3D 0000                          cmp     ax,0                   
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 16:29:35

File Compare Routine for MSDOS 2.0                          Page     1-24
Text Compare Routine                                        

					 ;end of file reached? 
     778 02FA  74 03                            jz      xj2 
     779 02FC  EB 3D 90                         jmp     dif_files              
					 ;no, difference was too big 
     780 02FF                           xj2: 
     781 02FF  80 3E 0021 R FF                  cmp     [sinc],true            
					 ;file1 ended, are we in SINC? 
     782 0304  74 03                            je      xj4 
     783 0306  EB 1E 90                         jmp     no_sinc 
     784 0309                           xj4: 
     785 0309  BB 0080 R                        mov     bx,offset dg:buf1 
     786 030C  E8 04FE R                        call    adv_b                  
					 ;advance current line in buf2 
     787 030F  73 03                            jnc     xj6 
     788 0311  EB 32 90                         jmp     go_quit                
					 ;file2 ended too, terminate prog. 
     789 0314                           xj6: 
     790                                 
     791                                ;----- File 2 ended but NOT file 1 
     792 0314  BB 0080 R                        mov     bx,offset dg:buf1 
     793 0317  E8 0648 R                        call    print_head 
     794 031A  E8 0666 R                        call    print_all              
					 ;print the rest of file1 
     795 031D  BB 0096 R                        mov     bx,offset dg:buf2 
     796 0320  E8 0648 R                        call    print_head 
     797 0323  EB 20 90                         jmp     go_quit 
     798                                 
     799                                 
     800                                 
     801 0326                           no_sinc: 
     802 0326  BB 0080 R                        mov     bx,offset dg:buf1 
     803 0329  E8 0648 R                        call    print_head 
     804 032C  E8 0666 R                        call    print_all 
     805 032F  BB 0096 R                        mov     bx,offset dg:buf2 
     806 0332  E8 0648 R                        call    print_head 
     807 0335  E8 0666 R                        call    print_all 
     808 0338  EB 0B 90                         jmp     go_quit 
     809                                 
     810                                 
     811                                 
     812 033B                           dif_files: 
     813 033B  BA 0000 E                        mov     dx,offset dg:dif_err 
     814 033E  8A 0E 0000 E                     mov     cl,dif_err_len 
     815 0342  E9 0124 R                        jmp     an_err 
     816                                 
     817 0345                           go_quit: 
     818 0345  B0 00                            mov     al,0 
     819 0347  B4 4C                            mov     ah,exit 
     820 0349  CD 21                            int     21h 
     821                                 
     822                                 
     823                                        subttl  Subroutines: make caps 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 16:29:35

File Compare Routine for MSDOS 2.0                          Page     1-25
Subroutines: make caps                                      

     824                                        page 
     825                                 
     826                                ;--------------------------------------
					---------------------------------; 
     827                                ;       CAPIALIZES THE CHARACTER IN AL 
					                                 ; 
     828                                ;                                      
					                                 ; 
     829                                ;       entry:                         
					                                 ; 
     830                                ;               AL      has the charact
					er to Capitalize                 ; 
     831                                ;                                      
					                                 ; 
     832                                ;       exit:                          
					                                 ; 
     833                                ;               AL      has the capital
					ized character                   ; 
     834                                ;                                      
					                                 ; 
     835                                ;       Called from MAIN and go_match  
					                                 ; 
     836                                ;--------------------------------------
					---------------------------------; 
     837 034B                           make_caps: 
     838 034B  3C 61                            cmp     al,'a' 
     839 034D  72 06                            jb      sa1 
     840 034F  3C 7A                            cmp     al,'z' 
     841 0351  7F 02                            jg      sa1 
     842 0353  24 DF                            and     al,0dfh 
     843 0355  C3                       sa1:    ret 
     844                                 
     845                                 
     846                                        subttl  Subroutines: kill_bl 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 16:29:35

File Compare Routine for MSDOS 2.0                          Page     1-26
Subroutines: kill_bl                                        

     847                                        page 
     848                                 
     849                                ;--------------------------------------
					---------------------------------; 
     850                                ;            Get rid of blanks in comma
					nd line.                         ; 
     851                                ;                                      
					                                 ; 
     852                                ; entry:                               
					                                 ; 
     853                                ;       SI      points to the first cha
					racter on the line to scan.      ; 
     854                                ;                                      
					                                 ; 
     855                                ; exit:                                
					                                 ; 
     856                                ;       SI      points to the next char
					 after the first non-blank       ; 
     857                                ;                 char found.          
					                                 ; 
     858                                ;       Carry Set  if a CR found       
					                                 ; 
     859                                ;                                      
					                                 ; 
     860                                ; modifies:                            
					                                 ; 
     861                                ;       SI and AX                      
					                                 ; 
     862                                ;                                      
					                                 ; 
     863                                ;       Called from MAIN               
					                                 ; 
     864                                ;--------------------------------------
					---------------------------------; 
     865 0356                           kill_bl: 
     866 0356  FC                               cld                            
					 ;increment 
     867 0357  AC                       sb1:    lodsb                          
					 ;get rid of blanks 
     868 0358  3C 20                            cmp     al,' ' 
     869 035A  74 FB                            je      sb1 
     870 035C  3C 09                            cmp     al,9 
     871 035E  74 F7                            je      sb1 
     872 0360  3C 0D                            cmp     al,CR 
     873 0362  F8                               clc                            
					 ;assume not a CR 
     874 0363  75 01                            jne     sb2 
     875 0365  F9                               stc                            
					 ;a CR found, set carry 
     876 0366  C3                       sb2:    ret 
     877                                 
     878                                 
     879                                        subttl  Subroutines: find_nonb 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 16:29:35

File Compare Routine for MSDOS 2.0                          Page     1-27
Subroutines: find_nonb                                      

     880                                        page 
     881                                 
     882                                ;--------------------------------------
					---------------------------------; 
     883                                ;       Find the first non-blank in a l
					ine                              ; 
     884                                ;                                      
					                                 ; 
     885                                ; entry:                               
					                                 ; 
     886                                ;       SI      points to the line buff
					er                               ; 
     887                                ;                                      
					                                 ; 
     888                                ; exit:                                
					                                 ; 
     889                                ;       DI      pointer to the first bl
					ank found (incl. CR)             ; 
     890                                ;       CX      character count of non-
					blanks                           ; 
     891                                ;       Carry Set if a CR was found    
					                                 ; 
     892                                ;                                      
					                                 ; 
     893                                ; modifies:                            
					                                 ; 
     894                                ;       AX                             
					                                 ; 
     895                                ;                                      
					                                 ; 
     896                                ;       Called from MAIN               
					                                 ; 
     897                                ;--------------------------------------
					---------------------------------; 
     898 0367                           find_nonb: 
     899 0367  56                               push    si              ;save p
					ointer 
     900 0368  33 C9                            xor     cx,cx           ;zero c
					haracter count 
     901 036A  FC                               cld 
     902 036B                           sc1: 
     903 036B  AC                               lodsb 
     904 036C  3C 20                            cmp     al,' ' 
     905 036E  74 0B                            je      sc2 
     906 0370  3C 09                            cmp     al,9 
     907 0372  74 07                            je      sc2 
     908 0374  3C 0D                            cmp     al,CR 
     909 0376  74 03                            je      sc2 
     910 0378  41                               inc     cx              ;inc ch
					aracter count 
     911 0379  EB F0                            jmp     short sc1 
     912 037B                           sc2: 
     913 037B  4E                               dec     si 
     914 037C  8B FE                            mov     di,si 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 16:29:35

File Compare Routine for MSDOS 2.0                          Page     1-28
Subroutines: find_nonb                                      

     915 037E  5E                               pop     si 
     916 037F  3C 0D                            cmp     al,CR 
     917 0381  75 02                            jne     sc3 
     918 0383  F9                               stc 
     919 0384  C3                               ret 
     920 0385                           sc3: 
     921 0385  F8                               clc 
     922 0386  C3                               ret 
     923                                 
     924                                 
     925                                        subttl  Subroutines: prt_bdif 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 16:29:35

File Compare Routine for MSDOS 2.0                          Page     1-29
Subroutines: prt_bdif                                       

     926                                        page 
     927                                 
     928                                ;--------------------------------------
					---------------------------------; 
     929                                ;       Print a binary difference      
					                                 ; 
     930                                ;                                      
					                                 ; 
     931                                ; entry:                               
					                                 ; 
     932                                ;       AX,BX   file address of diferen
					ce                               ; 
     933                                ;       SI      pointer to one past byt
					e in buffer1                     ; 
     934                                ;       DI      pointer to one past byt
					e in buffer2                     ; 
     935                                ;                                      
					                                 ; 
     936                                ; modifies:                            
					                                 ; 
     937                                ;       AX, DX and CX                  
					                                 ; 
     938                                ;                                      
					                                 ; 
     939                                ;       called from bin_compare        
					                                 ; 
     940                                ;--------------------------------------
					---------------------------------; 
     941 0387                           prt_bdif: 
     942 0387  80 3E 0027 R FF                  cmp     [bhead_flg],true       
					 ;have we peinted head yet? 
     943 038C  74 13                            je      bhead_ok 
     944 038E  C6 06 0027 R FF                  mov     [bhead_flg],true       
					 ;no, set flag 
     945 0393  50                               push    ax                     
					 ;print heading 
     946 0394  BA 0000 E                        mov     dx,offset dg:bhead 
     947 0397  8A 0E 0000 E                     mov     cl,bhead_len 
     948 039B  32 ED                            xor     ch,ch 
     949 039D  E8 0696 R                        call    prout 
     950 03A0  58                               pop     ax 
     951                                 
     952 03A1                           bhead_ok: 
     953 03A1  8B D7                            mov     dx,di                  
					 ;conver file address 
     954 03A3  BF 0028 R                        mov     di,offset dg:bp_buf1 
     955 03A6  50                               push    ax 
     956 03A7  8A C4                            mov     al,ah 
     957 03A9  E8 03DC R                        call    bin2hex 
     958 03AC  58                               pop     ax 
     959 03AD  E8 03DC R                        call    bin2hex 
     960 03B0  8A C7                            mov     al,bh 
     961 03B2  E8 03DC R                        call    bin2hex 
     962 03B5  8A C3                            mov     al,bl 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 16:29:35

File Compare Routine for MSDOS 2.0                          Page     1-30
Subroutines: prt_bdif                                       

     963 03B7  E8 03DC R                        call    bin2hex 
     964                                 
     965 03BA  BF 0033 R                        mov     di,offset dg:bp_buf2   
					 ;convert byte from file 1 
     966 03BD  8A 44 FF                         mov     al, byte ptr[si-1] 
     967 03C0  E8 03DC R                        call    bin2hex 
     968                                 
     969 03C3  BF 0038 R                        mov     di,offset dg:bp_buf3   
					 ;convert byte from file 2 
     970 03C6  56                               push    si 
     971 03C7  8B F2                            mov     si,dx 
     972 03C9  8A 44 FF                         mov     al, byte ptr[si-1] 
     973 03CC  5E                               pop     si 
     974 03CD  E8 03DC R                        call    bin2hex 
     975                                 
     976 03D0  8B FA                            mov     di,dx                  
					 ;print result 
     977 03D2  BA 0028 R                        mov     dx,offset dg:bp_buf 
     978 03D5  B9 0014                          mov     cx,bp_buf_len 
     979 03D8  E8 0696 R                        call    prout 
     980 03DB  C3                               ret 
     981                                 
     982                                 
     983                                        subttl  Subroutines: bin2hex 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 16:29:35

File Compare Routine for MSDOS 2.0                          Page     1-31
Subroutines: bin2hex                                        

     984                                        page 
     985                                 
     986                                ;--------------------------------------
					---------------------------------; 
     987                                ;               Binary to ASCII hex con
					version                          ; 
     988                                ;                                      
					                                 ; 
     989                                ; entry:                               
					                                 ; 
     990                                ;       AL      byte to convert        
					                                 ; 
     991                                ;       DI      pointer to were the two
					 result ASCII bytes should go    ; 
     992                                ;                                      
					                                 ; 
     993                                ; exit:                                
					                                 ; 
     994                                ;       DI      points to one past were
					 the last result byte whent      ; 
     995                                ;                                      
					                                 ; 
     996                                ; modifies:                            
					                                 ; 
     997                                ;       AH and CL                      
					                                 ; 
     998                                ;                                      
					                                 ; 
     999                                ;       Called from prt_bdif           
					                                 ; 
    1000                                ;--------------------------------------
					---------------------------------; 
    1001 03DC                           bin2hex: 
    1002 03DC  B1 04                            mov     cl,4 
    1003 03DE  D3 C8                            ror     ax,cl           ;get th
					e high nibble 
    1004 03E0  24 0F                            and     al,0fh          ;mask o
					f high nible 
    1005 03E2  E8 03E9 R                        call    pt_hex 
    1006 03E5  D3 C0                            rol     ax,cl           ;get th
					e low nibble 
    1007 03E7  24 0F                            and     al,0fh          ;mask..
					.. 
    1008                                 
    1009 03E9                           pt_hex: 
    1010 03E9  3C 0A                            cmp     al,0ah          ;is it 
					past an A ? 
    1011 03EB  73 04                            jae     pasta 
    1012 03ED  04 30                            add     al,30h 
    1013 03EF  EB 02                            jmp     short put_hex 
    1014 03F1                           pasta: 
    1015 03F1  04 37                            add     al,37h 
    1016 03F3                           put_hex: 
    1017 03F3  AA                               stosb                   ;place 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 16:29:35

File Compare Routine for MSDOS 2.0                          Page     1-32
Subroutines: bin2hex                                        

					in buffer 
    1018 03F4  C3                               ret 
    1019                                 
    1020                                 
    1021                                        subttl  Subroutines: go_match 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 16:29:35

File Compare Routine for MSDOS 2.0                          Page     1-33
Subroutines: go_match                                       

    1022                                        page 
    1023                                 
    1024                                ;--------------------------------------
					---------------------------------; 
    1025                                ;               Match current lines    
					                                 ; 
    1026                                ;                                      
					                                 ; 
    1027                                ; exit:                                
					                                 ; 
    1028                                ;       Carry set if the match reset ot
					herwise                          ; 
    1029                                ;       SI      Current line of buff1  
					                                 ; 
    1030                                ;       DI      Current line of buff2  
					                                 ; 
    1031                                ;                                      
					                                 ; 
    1032                                ;                                      
					                                 ; 
    1033                                ; modifies:                            
					                                 ; 
    1034                                ;       AX,BX,CX,DX and BP             
					                                 ; 
    1035                                ;                                      
					                                 ; 
    1036                                ;       Called from txt_compare        
					                                 ; 
    1037                                ;--------------------------------------
					---------------------------------; 
    1038 03F5                           go_match: 
    1039 03F5  BB 0080 R                        mov     bx,offset dg:buf1 
    1040 03F8  8B 77 06                         mov     si,word ptr[bx].curr 
    1041 03FB  56                               push    si 
    1042 03FC  8B EE                            mov     bp,si                  
					 ;save line pointer 
    1043 03FE  E8 04F2 R                        call    find_eol 
    1044 0401  8B D1                            mov     dx,cx                  
					 ;save length of line 
    1045 0403  BB 0096 R                        mov     bx,offset dg:buf2 
    1046 0406  8B 77 06                         mov     si,word ptr[bx].curr 
    1047 0409  56                               push    si 
    1048 040A  8B FE                            mov     di,si 
    1049 040C  E8 04F2 R                        call    find_eol 
    1050 040F  3B CA                            cmp     cx,dx                  
					 ;compare lengths 
    1051 0411  75 0B                            jne     sd1                    
					 ;they do not match 
    1052 0413  8B F5                            mov     si,bp                  
					 ;restore line pointer 
    1053 0415  E3 18                            jcxz    sd4                    
					 ;both length = 0, they match 
    1054 0417  51                               push    cx                     
					 ;save the length 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 16:29:35

File Compare Routine for MSDOS 2.0                          Page     1-34
Subroutines: go_match                                       

    1055 0418  FC                               cld 
    1056 0419  F3/ A6                           repz    cmpsb                  
					 ;compare strings 
    1057 041B  59                               pop     cx                     
					 ;restore the length 
    1058 041C  74 11                            jz      sd4                    
					 ;they match 
    1059 041E                           sd1: 
    1060 041E  80 3E 0019 R FF                  cmp     [flg_w],true           
					 ;do we ignore multiple whites? 
    1061 0423  74 28                            je      ib_compare             
					 ;yes, go compare 
    1062 0425  80 3E 0017 R FF                  cmp     [flg_c],true           
					 ;do we ignore case differences? 
    1063 042A  74 07                            je      ic_compare             
					 ;yes, go compare 
    1064 042C                           sd3: 
    1065 042C  F8                               clc                            
					 ;they don't match 
    1066 042D  EB 01                            jmp     short sd5 
    1067 042F                           sd4: 
    1068 042F  F9                               stc 
    1069 0430                           sd5: 
    1070 0430  5F                               pop     di                     
					 ;curr2 
    1071 0431  5E                               pop     si                     
					 ;curr1 
    1072 0432  C3                               ret 
    1073                                 
    1074                                 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 16:29:35

File Compare Routine for MSDOS 2.0                          Page     1-35
Subroutines: go_match                                       

    1075                                        page 
    1076                                 
    1077                                ;--------------------------------------
					---------------------------------; 
    1078                                ;       Compare ignoring case differenc
					es. 
    1079                                 
    1080 0433                           ic_compare: 
    1081 0433  5F                               pop     di                     
					 ;get pointer to lines 
    1082 0434  5E                               pop     si 
    1083 0435  56                               push    si                     
					 ;re-save pointers 
    1084 0436  57                               push    di 
    1085 0437                           sd8: 
    1086 0437  8A 04                            mov     al,byte ptr [si]       
					 ;get next char. of first line 
    1087 0439  E8 034B R                        call    make_caps 
    1088 043C  8A D8                            mov     bl,al                  
					 ;save capitalized char 
    1089 043E  8A 05                            mov     al,byte ptr [di]       
					 ;get next chra. of second line 
    1090 0440  E8 034B R                        call    make_caps 
    1091 0443  3A C3                            cmp     al,bl 
    1092 0445  75 E5                            jne     sd3                    
					 ;they do not match.... 
    1093 0447  46                               inc     si                     
					 ;advance pointers 
    1094 0448  47                               inc     di 
    1095 0449  E2 EC                            loop    sd8                    
					 ;loop for the line lengths 
    1096 044B  EB E2                            jmp     short sd4              
					 ;they match 
    1097                                 
    1098                                 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 16:29:35

File Compare Routine for MSDOS 2.0                          Page     1-36
Subroutines: go_match                                       

    1099                                        page 
    1100                                 
    1101                                ;--------------------------------------
					---------------------------------; 
    1102                                ;       Compare compressing whites and 
					ignoring case differences if 
    1103                                ; desired too. 
    1104                                 
    1105 044D                           ib_compare: 
    1106 044D  C6 06 001A R FF                  mov     [ib_first1],true       
					 ;we start by the first char in the 
    1107 0452  C6 06 001B R FF                  mov     [ib_first2],true       
					 ; in the lines. 
    1108 0457  5F                               pop     di                     
					 ;get pointer to lines 
    1109 0458  5E                               pop     si 
    1110 0459  56                               push    si                     
					 ;re-save pointers 
    1111 045A  57                               push    di 
    1112 045B                           sd9: 
    1113 045B  8A 04                            mov     al,byte ptr [si]       
					 ;get next char. of first line 
    1114 045D  E8 04E6 R                        call    isa_white              
					 ;is it a white? 
    1115 0460  73 1E                            jnc     sd12                   
					 ;no, compare.... 
    1116 0462                           sd10: 
    1117 0462  8A 44 01                         mov     al,byte ptr [si+1]     
					 ;peek to next, 
    1118 0465  E8 04E6 R                        call    isa_white              
					 ; it is a white too? 
    1119 0468  73 03                            jnc     sd11 
    1120 046A  46                               inc     si                     
					 ; yes, 
    1121 046B  EB F5                            jmp     short sd10             
					 ; compress all whites to a blank 
    1122 046D                           sd11: 
    1123 046D  80 3E 001A R FF                  cmp     [ib_first1],true       
					 ;is this the first char. of the line? 
    1124 0472  75 03                            jne     sd111                  
					 ;no, it stays a white 
    1125 0474  46                               inc     si                     
					 ;ignore the white 
    1126 0475  EB 09                            jmp     short sd12 
    1127 0477                           sd111: 
    1128 0477  3C 0D                            cmp     al,CR                  
					 ;is this the last char. of the line 
    1129 0479  75 03                            jne     sd112                  
					 ;no, it stays a white 
    1130 047B  46                               inc     si                     
					 ;yes, ignore the whites 
    1131 047C  EB 02                            jmp     short sd12 
    1132 047E                           sd112: 
    1133 047E  B0 20                            mov     al,' '                 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 16:29:35

File Compare Routine for MSDOS 2.0                          Page     1-37
Subroutines: go_match                                       

					 ;no more whites found 
    1134                                 
    1135 0480                           sd12: 
    1136 0480  80 3E 001A R FF                  cmp     [ib_first1],true       
					 ;is this the first char. of the line? 
    1137 0485  75 05                            jne     sd121                  
					 ;no, continue 
    1138 0487  C6 06 001A R 00                  mov     [ib_first1],false      
					 ;yes, reset the flag 
    1139 048C                           sd121: 
    1140 048C  80 3E 0017 R FF                  cmp     [flg_c],true           
					 ;do we ignore case? 
    1141 0491  75 03                            jne     sd122                  
					 ;no,.... 
    1142 0493  E8 034B R                        call    make_caps 
    1143 0496                           sd122: 
    1144 0496  8A D8                            mov     bl,al                  
					 ;save char 
    1145 0498  8A 05                            mov     al,byte ptr [di]       
					 ;get next chra. of second line 
    1146 049A  E8 04E6 R                        call    isa_white 
    1147 049D  73 1E                            jnc     sd15 
    1148 049F                           sd13: 
    1149 049F  8A 45 01                         mov     al,byte ptr [di+1]     
					 ;peek to next as before 
    1150 04A2  E8 04E6 R                        call    isa_white 
    1151 04A5  73 03                            jnc     sd14 
    1152 04A7  47                               inc     di 
    1153 04A8  EB F5                            jmp     short sd13 
    1154 04AA                           sd14: 
    1155 04AA  80 3E 001B R FF                  cmp     [ib_first2],true       
					 ;is this the first char. of the line? 
    1156 04AF  75 03                            jne     sd141                  
					 ;no, it stays a white 
    1157 04B1  47                               inc     di                     
					 ;ignore the white 
    1158 04B2  EB 09                            jmp     short sd15 
    1159 04B4                           sd141: 
    1160 04B4  3C 0D                            cmp     al,CR                  
					 ;is this the last char. of the line 
    1161 04B6  75 03                            jne     sd142                  
					 ;no, it stays a white 
    1162 04B8  46                               inc     si                     
					 ;yes, ignore the whites 
    1163 04B9  EB 02                            jmp     short sd15 
    1164 04BB                           sd142: 
    1165 04BB  B0 20                            mov     al,' ' 
    1166                                 
    1167 04BD                           sd15: 
    1168 04BD  80 3E 001B R FF                  cmp     [ib_first2],true       
					 ;is this the first char. of the line? 
    1169 04C2  75 05                            jne     sd151                  
					 ;no, continue 
    1170 04C4  C6 06 001B R 00                  mov     [ib_first2],false      
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 16:29:35

File Compare Routine for MSDOS 2.0                          Page     1-38
Subroutines: go_match                                       

					 ;yes, reset the flag 
    1171 04C9                           sd151: 
    1172 04C9  80 3E 0017 R FF                  cmp     [flg_c],true           
					 ;do we ignore case? 
    1173 04CE  75 03                            jne     sd152                  
					 ;no,.... 
    1174 04D0  E8 034B R                        call    make_caps 
    1175 04D3                           sd152: 
    1176 04D3  3A C3                            cmp     al,bl 
    1177 04D5  74 03                            je      sd153 
    1178 04D7  E9 042C R                        jmp     sd3                    
					 ;they do not match.... 
    1179 04DA                           sd153: 
    1180 04DA  3C 0D                            cmp     al,CR                  
					 ;have we reached the end? 
    1181 04DC  75 03                            jne     sd154                  
					 ;no, continue.... 
    1182 04DE  E9 042F R                        jmp     sd4                    
					 ;yes, they match 
    1183 04E1                           sd154: 
    1184 04E1  46                               inc     si                     
					 ;no, advance pointers 
    1185 04E2  47                               inc     di 
    1186 04E3  E9 045B R                        jmp     sd9                    
					 ;loop for the line lengths 
    1187                                 
    1188                                 
    1189 04E6                           isa_white: 
    1190 04E6  3C 20                            cmp     al,' '                 
					 ;is it a space? 
    1191 04E8  74 06                            je      sdx1 
    1192 04EA  3C 09                            cmp     al,09h                 
					 ;is it a tab? 
    1193 04EC  74 02                            je      sdx1 
    1194 04EE  F8                               clc                            
					 ;if not a white return with carry clea
					r 
    1195 04EF  C3                               ret 
    1196 04F0                           sdx1: 
    1197 04F0  F9                               stc                            
					 ;is a white return with carry set 
    1198 04F1  C3                               ret 
    1199                                 
    1200                                 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 16:29:35

File Compare Routine for MSDOS 2.0                          Page     1-39
Subroutines: go_match                                       

    1201                                        page 
    1202                                 
    1203                                ;--------------------------------------
					---------------------------------; 
    1204 04F2                           find_eol: 
    1205 04F2  33 C9                            xor     cx,cx                  
					 ;zero count 
    1206 04F4  FC                               cld 
    1207 04F5                           sd6: 
    1208 04F5  AC                               lodsb 
    1209 04F6  3C 0D                            cmp     al,CR 
    1210 04F8  74 03                            je      sd7 
    1211 04FA  41                               inc     cx 
    1212 04FB  EB F8                            jmp     short sd6 
    1213 04FD                           sd7: 
    1214 04FD  C3                               ret 
    1215                                 
    1216                                 
    1217                                        subttl  Subroutines: adv_b 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 16:29:35

File Compare Routine for MSDOS 2.0                          Page     1-40
Subroutines: adv_b                                          

    1218                                        page 
    1219                                 
    1220                                ;--------------------------------------
					---------------------------------; 
    1221                                ;               Get the next line in th
					e buffer                         ; 
    1222                                ;                                      
					                                 ; 
    1223                                ;       It will attempt to get the next
					 current line from the buffer    ; 
    1224                                ; if it fails, it will force a refill, 
					and if some data is read in      ; 
    1225                                ; then it will return the next current 
					line.                            ; 
    1226                                ;                                      
					                                 ; 
    1227                                ; entry:                               
					                                 ; 
    1228                                ;       BX      pointer to buffer struc
					ture                             ; 
    1229                                ;                                      
					                                 ; 
    1230                                ; exit:                                
					                                 ; 
    1231                                ;       SI      pointer to next line  (
					if any)                          ; 
    1232                                ;       Carry set if no more lines avai
					lable. If carry set then:        ; 
    1233                                ;       AX      End Code: 0 = end of fi
					le reached                       ; 
    1234                                ;                         1 = no room i
					n buffer for a line              ; 
    1235                                ;                                      
					                                 ; 
    1236                                ; modifies:                            
					                                 ; 
    1237                                ;       CX,DX and DI                   
					                                 ; 
    1238                                ;                                      
					                                 ; 
    1239                                ;       Called from txt_compare        
					                                 ; 
    1240                                ;--------------------------------------
					---------------------------------; 
    1241 04FE                           adv_b: 
    1242 04FE  E8 050E R                        call    get_nextl 
    1243 0501  72 01                            jc      se1 
    1244 0503  C3                               ret 
    1245 0504                           se1: 
    1246 0504  E8 0526 R                        call    refill 
    1247 0507  73 01                            jnc     se0 
    1248 0509  C3                               ret 
    1249 050A                           se0: 
    1250 050A  E8 050E R                        call    get_nextl 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 16:29:35

File Compare Routine for MSDOS 2.0                          Page     1-41
Subroutines: adv_b                                          

    1251 050D  C3                               ret 
    1252                                 
    1253                                 
    1254                                        subttl  Subroutines: get_nextl 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 16:29:35

File Compare Routine for MSDOS 2.0                          Page     1-42
Subroutines: get_nextl                                      

    1255                                        page 
    1256                                 
    1257                                ;--------------------------------------
					---------------------------------; 
    1258                                ;               Returns the next line i
					n a buffer                       ; 
    1259                                ;           (next from current or next 
					from pointer)                    ; 
    1260                                ;                                      
					                                 ; 
    1261                                ; entry:                               
					                                 ; 
    1262                                ;       BX      pointer to buffer struc
					ture                             ; 
    1263                                ;      (SI      pointer to line, if cal
					ling get_next)                   ; 
    1264                                ;                                      
					                                 ; 
    1265                                ; exit:                                
					                                 ; 
    1266                                ;       SI      pointer to next line   
					                                 ; 
    1267                                ;       Carry set if no more lines avai
					lable                            ; 
    1268                                ;                                      
					                                 ; 
    1269                                ; modifies:                            
					                                 ; 
    1270                                ;       DI and CX                      
					                                 ; 
    1271                                ;                                      
					                                 ; 
    1272                                ;       Called from adv_b and print_dif
					f (in the case of get_next)      ; 
    1273                                ;--------------------------------------
					---------------------------------; 
    1274 050E                           get_nextl: 
    1275 050E  8B 77 06                         mov     si,word ptr [bx].curr 
    1276 0511                           get_next: 
    1277 0511  8B 4F 0E                         mov     cx,word ptr [bx].dat_en
					d 
    1278 0514  2B CE                            sub     cx,si 
    1279 0516  8B FE                            mov     di,si 
    1280 0518  B0 0A                            mov     al,LF 
    1281 051A  FC                               cld 
    1282 051B  F2/ AE                           repnz   scasb 
    1283 051D  8B F7                            mov     si,di                  
					 ;pointer to next line 
    1284 051F  75 02                            jnz     se2                    
					 ;not found 
    1285 0521  F8                               clc 
    1286 0522  C3                               ret 
    1287 0523                           se2: 
    1288 0523  46                               inc     si                     
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 16:29:35

File Compare Routine for MSDOS 2.0                          Page     1-43
Subroutines: get_nextl                                      

					 ;point past the LF 
    1289 0524  F9                               stc 
    1290 0525  C3                               ret 
    1291                                 
    1292                                 
    1293                                        subttl  Subroutines: refill 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 16:29:35

File Compare Routine for MSDOS 2.0                          Page     1-44
Subroutines: refill                                         

    1294                                        page 
    1295                                 
    1296                                ;--------------------------------------
					---------------------------------; 
    1297                                ;               Refill a buffer        
					                                 ; 
    1298                                ;                                      
					                                 ; 
    1299                                ;       It will refill a buffer with da
					ta from the corresponding        ; 
    1300                                ; file. It will first recompact the buf
					fer to make room for the new     ; 
    1301                                ; data. If in SINC then it will move th
					e current line to the top of     ; 
    1302                                ; the buffer, and read the data from th
					e end of this line till the      ; 
    1303                                ; end of the buffer.                   
					                                 ; 
    1304                                ;       If NOT in SINC then it will rec
					ompact the buffer by moving      ; 
    1305                                ; all lines between the first to go out
					 of SINC till the current line   ; 
    1306                                ; to the top of the buffer, and then re
					ading data after the current     ; 
    1307                                ; line.                                
					                                 ; 
    1308                                ;       When recompacting the buffer it
					 relocates all pointers to       ; 
    1309                                ; point to the new locations of the res
					pective lines.                   ; 
    1310                                ;       Some of the pointers may be poi
					nting to meaningless locations   ; 
    1311                                ; before the relocation, and consecuent
					ly they will be pointing to      ; 
    1312                                ; even less meaningfull locations after
					 relocation.                     ; 
    1313                                ;       After reading the data it norma
					lizes the buffer to make sure    ; 
    1314                                ; that no partially full lines are pres
					ent at the end of the buffer. If ; 
    1315                                ; after recompacting and reading some c
					haracter  it is found that the   ; 
    1316                                ; characters read do not constitute a f
					ull line, then it will return    ; 
    1317                                ; with an error code. It will also retu
					rn with an error code if it      ; 
    1318                                ; attempts to read past the end of file
					.                                ; 
    1319                                ;                                      
					                                 ; 
    1320                                ; entry:                               
					                                 ; 
    1321                                ;       BX      pointer to buffer struc
					ture                             ; 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 16:29:35

File Compare Routine for MSDOS 2.0                          Page     1-45
Subroutines: refill                                         

    1322                                ;                                      
					                                 ; 
    1323                                ; exit:                                
					                                 ; 
    1324                                ;       Carry set if no chars read into
					 the buffer. If carry set then:  ; 
    1325                                ;       AX      End Code: 0 = end of fi
					le reached                       ; 
    1326                                ;                         1 = no room i
					n the buffer for a line          ; 
    1327                                ;                                      
					                                 ; 
    1328                                ; modifies:                            
					                                 ; 
    1329                                ;       CX,DX,SI and DI                
					                                 ; 
    1330                                ;                                      
					                                 ; 
    1331                                ;       Called from adv_b              
					                                 ; 
    1332                                ;--------------------------------------
					---------------------------------; 
    1333 0526                           refill: 
    1334                                 
    1335                                ;----- Calculate ammount to move & poin
					ter relocation factor. 
    1336                                 
    1337 0526  80 3E 0021 R FF                  cmp     [sinc],true 
    1338 052B  75 05                            jne     sf1 
    1339 052D  8B 77 06                         mov     si,word ptr [bx].curr 
    1340 0530  EB 03                            jmp     short sf2 
    1341 0532                           sf1: 
    1342 0532  8B 77 0C                         mov     si,word ptr [bx].fst_no
					sinc 
    1343 0535                           sf2: 
    1344 0535  8B 7F 12                         mov     di,word ptr [bx].buf 
    1345 0538  8B 4F 0E                         mov     cx,word ptr [bx].dat_en
					d 
    1346                                 
    1347 053B  8B D6                            mov     dx,si                  
					 ;calculate pointer relocation factor 
    1348 053D  2B D7                            sub     dx,di                  
					 ;DX = factor 
    1349 053F  74 15                            jz      sf3                    
					 ;no room in buffer 
    1350 0541  2B CE                            sub     cx,si                  
					 ;calculate ammount of data to move 
    1351 0543  41                               inc     cx                     
					 ;CX = ammount 
    1352                                 
    1353                                ;----- Move data 
    1354                                 
    1355 0544  FC                               cld                            
					 ;auto decrement 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 16:29:35

File Compare Routine for MSDOS 2.0                          Page     1-46
Subroutines: refill                                         

    1356 0545  F3/ A4                           rep     movsb 
    1357                                 
    1358                                ;----- Relocate pointers 
    1359                                 
    1360 0547  29 57 06                         sub     word ptr [bx].curr,dx 
    1361 054A  29 57 08                         sub     word ptr [bx].lst_curr,
					dx 
    1362 054D  29 57 0A                         sub     word ptr [bx].fst_sinc,
					dx 
    1363 0550  29 57 0C                         sub     word ptr [bx].fst_nosin
					c,dx 
    1364 0553  29 57 0E                         sub     word ptr [bx].dat_end,d
					x 
    1365                                 
    1366 0556                           sf3: 
    1367 0556  8B 57 0E                         mov     dx,word ptr [bx].dat_en
					d 
    1368 0559  42                               inc     dx                     
					         ;empty part starts here 
    1369                                 
    1370                                ;----- fill the buffer 
    1371                                 
    1372 055A  E8 055E R                        call    fill_buffer 
    1373 055D  C3                               ret 
    1374                                 
    1375                                 
    1376                                        subttl  Subroutines: fill_buffe
					r 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 16:29:35

File Compare Routine for MSDOS 2.0                          Page     1-47
Subroutines: fill_buffer                                    

    1377                                        page 
    1378                                 
    1379                                ;--------------------------------------
					---------------------------------; 
    1380                                ;               Fill the data buffers  
					                                 ; 
    1381                                ;                                      
					                                 ; 
    1382                                ;       It will fill the buffer from th
					e pointer to the end of buffer   ; 
    1383                                ; and normalize the buffer.            
					                                 ; 
    1384                                ;                                      
					                                 ; 
    1385                                ; entry:                               
					                                 ; 
    1386                                ;       BX      pointer to buffer struc
					ture                             ; 
    1387                                ;       DX      pointer to buffer (or p
					art of buffer)                   ; 
    1388                                ;                                      
					                                 ; 
    1389                                ; exit:                                
					                                 ; 
    1390                                ;       Carry set if no chars read into
					 the buffer. If carry set then:  ; 
    1391                                ;       AX      End Code: 0 = end of fi
					le reached                       ; 
    1392                                ;                         1 = no room i
					n the buffer for a line          ; 
    1393                                ;                                      
					                                 ; 
    1394                                ; modifies:                            
					                                 ; 
    1395                                ;       AX,CX,DX and DI                
					                                 ; 
    1396                                ;                                      
					                                 ; 
    1397                                ;       Called from txt_compare and ref
					ill                              ; 
    1398                                ;--------------------------------------
					---------------------------------; 
    1399 055E                           fill_buffer: 
    1400 055E  53                               push    bx 
    1401 055F  E8 05B5 R                        call    read_dat               
					 ;get data 
    1402 0562  72 2A                            jc      bad_read 
    1403 0564  0B C0                            or      ax,ax                  
					 ;zero chars read? 
    1404 0566  74 48                            jz      rd_past_eof 
    1405 0568  E8 05C2 R                        call    nor_buf 
    1406 056B  8B F9                            mov     di,cx                  
					 ;save normalized char. count 
    1407 056D  8B EA                            mov     bp,dx                  
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 16:29:35

File Compare Routine for MSDOS 2.0                          Page     1-48
Subroutines: fill_buffer                                    

					 ;save data end for now 
    1408                                 
    1409                                ;----- seek for old partial line 
    1410                                 
    1411 056F  0B C0                            or      ax,ax                  
					 ;is the seek value = 0 ? 
    1412 0571  74 0F                            jz      sg1                    
					 ;yes, do not seek 
    1413 0573  8B D0                            mov     dx,ax 
    1414 0575  F7 DA                            neg     dx 
    1415 0577  B9 FFFF                          mov     cx,-1 
    1416 057A  B0 01                            mov     al,1                   
					 ;seek from current position 
    1417 057C  B4 42                            mov     ah,lseek 
    1418 057E  CD 21                            int     21h 
    1419 0580  72 0C                            jc      bad_read               
					 ;error mesage (BX already in stack) 
    1420                                 
    1421 0582                           sg1: 
    1422 0582  8B CF                            mov     cx,di                  
					 ;restore normalized char count. 
    1423 0584  0B C9                            or      cx,cx                  
					 ;char count = 0 due to normalization? 
    1424 0586  74 23                            jz      no_room 
    1425                                 
    1426 0588  5B                               pop     bx 
    1427 0589  89 6F 0E                         mov     word ptr [bx].dat_end,b
					p 
    1428 058C  F8                               clc 
    1429 058D  C3                               ret 
    1430                                 
    1431 058E                           bad_read: 
    1432 058E  BA 0000 E                        mov     dx,offset dg:read_err_p
					re 
    1433 0591  8A 0E 0000 E                     mov     cl,read_err_pre_len 
    1434 0595  E8 06A0 R                        call    prt_err                
					 ;print error message 
    1435 0598  5B                               pop     bx 
    1436 0599  8B 17                            mov     dx,word ptr[bx].fname 
    1437 059B  8B 4F 02                         mov     cx,word ptr[bx].fname_l
					en 
    1438 059E  E8 06A0 R                        call    prt_err                
					 ;print file name 
    1439 05A1  BA 0000 E                        mov     dx,offset dg:read_err_p
					ost 
    1440 05A4  8A 0E 0000 E                     mov     cl,read_err_post_len 
    1441 05A8  E9 0124 R                        jmp     an_err 
    1442                                 
    1443 05AB                           no_room: 
    1444 05AB  B8 0001                          mov     ax,1 
    1445 05AE  EB 02                            jmp     short sg2 
    1446                                 
    1447 05B0                           rd_past_eof: 
    1448 05B0  33 C0                            xor     ax,ax 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 16:29:35

File Compare Routine for MSDOS 2.0                          Page     1-49
Subroutines: fill_buffer                                    

    1449 05B2                           sg2: 
    1450 05B2  5B                               pop     bx 
    1451 05B3  F9                               stc 
    1452 05B4  C3                               ret 
    1453                                 
    1454                                 
    1455                                        subttl  Subroutines: read_dat 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 16:29:35

File Compare Routine for MSDOS 2.0                          Page     1-50
Subroutines: read_dat                                       

    1456                                        page 
    1457                                 
    1458                                ;--------------------------------------
					---------------------------------; 
    1459                                ;                                      
					                                 ; 
    1460                                ; entry:                               
					                                 ; 
    1461                                ;       DX      pointer to data area (b
					uffer or part of buffer)         ; 
    1462                                ;                                      
					                                 ; 
    1463                                ; exit:                                
					                                 ; 
    1464                                ;       AX      character count or erro
					r code (from DOS read)           ; 
    1465                                ;       Carry set if error condition   
					                                 ; 
    1466                                ;                                      
					                                 ; 
    1467                                ; modifies:                            
					                                 ; 
    1468                                ;       BX and CX                      
					                                 ; 
    1469                                ;                                      
					                                 ; 
    1470                                ;       Called from fill_buffer, print_
					all and bin_compare              ; 
    1471                                ;--------------------------------------
					---------------------------------; 
    1472 05B5                           read_dat: 
    1473 05B5  8B 4F 10                         mov     cx,word ptr [bx].buf_en
					d 
    1474 05B8  8B 5F 04                         mov     bx,word ptr [bx].handle
					 
    1475 05BB  2B CA                            sub     cx,dx                  
					 ;ammount to read to buff1 
    1476 05BD  B4 3F                            mov     ah,read 
    1477 05BF  CD 21                            int     21h 
    1478 05C1  C3                               ret 
    1479                                 
    1480                                 
    1481                                        subttl  Subroutines: nor_buf 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 16:29:35

File Compare Routine for MSDOS 2.0                          Page     1-51
Subroutines: nor_buf                                        

    1482                                        page 
    1483                                 
    1484                                ;--------------------------------------
					---------------------------------; 
    1485                                ;       Normalize buffers so they do no
					t have partially full            ; 
    1486                                ; lines at the end. If character count 
					is less than the buffer size     ; 
    1487                                ; then it checks that the last line is 
					terminated by a CR,LF pair.      ; 
    1488                                ; If it is not it inserts a CR,LF at th
					e end. It returns a seek value   ; 
    1489                                ; for the buffer corresponding to the n
					umber of characters in the       ; 
    1490                                ; incomplete line at the end of the buf
					fer (if any). This can be used   ; 
    1491                                ; to start reading from the beggining o
					f the incomplete line on next    ; 
    1492                                ; time the buffer is loaded.           
					                                 ; 
    1493                                ;                                      
					                                 ; 
    1494                                ; ENTRY:                               
					                                 ; 
    1495                                ;       DX      buffer pointer         
					                                 ; 
    1496                                ;       AX      character count read   
					                                 ; 
    1497                                ;       CX      character count request
					ed                               ; 
    1498                                ;                                      
					                                 ; 
    1499                                ; EXIT:                                
					                                 ; 
    1500                                ;       DX      pointer to last char in
					 buffer (normalized)             ; 
    1501                                ;       CX      character count (normal
					ized)                            ; 
    1502                                ;       AX      seek value             
					                                 ; 
    1503                                ;                                      
					                                 ; 
    1504                                ; MODIFIES:                            
					                                 ; 
    1505                                ;       DI                             
					                                 ; 
    1506                                ;                                      
					                                 ; 
    1507                                ;       Called from fill_buffer        
					                                 ; 
    1508                                ;--------------------------------------
					---------------------------------; 
    1509 05C2                           nor_buf: 
    1510 05C2  8B FA                            mov     di,dx 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 16:29:35

File Compare Routine for MSDOS 2.0                          Page     1-52
Subroutines: nor_buf                                        

    1511 05C4  03 F8                            add     di,ax 
    1512 05C6  4F                               dec     di                     
					 ;points to last char in buffer 
    1513 05C7  3B C1                            cmp     ax,cx                  
					 ;were all chars. requested read? 
    1514 05C9  74 2F                            je      sm7                    
					 ;yes, buffer full 
    1515 05CB  80 3D 1A                         cmp     byte ptr[di],1ah       
					 ;terminated with a ^Z ? 
    1516 05CE  75 02                            jne     sm1 
    1517 05D0  4F                               dec     di                     
					 ;point to previous character 
    1518 05D1  48                               dec     ax                     
					 ;decrement character count 
    1519 05D2  80 3D 0A                 sm1:    cmp     byte ptr[di],lf        
					 ;is last char a LF? 
    1520 05D5  74 1A                            je      sm6 
    1521 05D7  80 3D 0D                         cmp     byte ptr[di],cr        
					 ;is it a CR then? 
    1522 05DA  74 12                            je      sm5 
    1523 05DC  05 0002                          add     ax,2                   
					 ;two more chars in buffer 
    1524 05DF  47                               inc     di 
    1525 05E0  C6 05 0D                 sm2:    mov     byte ptr[di],cr 
    1526 05E3  47                       sm3:    inc     di 
    1527 05E4  C6 05 0A                         mov     byte ptr[di],lf 
    1528 05E7  8B C8                    sm4:    mov     cx,ax                  
					 ;new character count 
    1529 05E9  8B D7                            mov     dx,di                  
					 ;pointer to last char 
    1530 05EB  33 C0                            xor     ax,ax                  
					 ;seek = 0 
    1531 05ED  C3                               ret 
    1532                                 
    1533 05EE                           sm5: 
    1534 05EE  40                               inc     ax                     
					 ;one more char in buffer 
    1535 05EF  EB F2                            jmp     short   sm3 
    1536                                 
    1537 05F1                           sm6: 
    1538 05F1  80 7D FF 0D                      cmp     byte ptr[di-1],cr      
					 ;is previous char a CR? 
    1539 05F5  74 F0                            je      sm4 
    1540 05F7  40                               inc     ax                     
					 ;no, one more char in buffer 
    1541 05F8  EB E6                            jmp     short sm2 
    1542                                 
    1543 05FA                           sm7: 
    1544 05FA  50                               push    ax                     
					 ;save char count 
    1545 05FB  8B C8                            mov     cx,ax 
    1546 05FD  B0 0A                            mov     al,LF 
    1547 05FF  FD                               std 
    1548 0600  F2/ AE                           repnz   scasb                  
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 16:29:35

File Compare Routine for MSDOS 2.0                          Page     1-53
Subroutines: nor_buf                                        

					 ;search for last LF 
    1549 0602  58                               pop     ax                     
					 ;restore char count 
    1550 0603  75 07                            jnz     bad_line               
					 ;none found, line too big 
    1551 0605  47                               inc     di                     
					 ;point to last LF 
    1552 0606  8B D7                            mov     dx,di 
    1553 0608  41                               inc     cx                     
					 ;ammount of chars in buffer 
    1554 0609  2B C1                            sub     ax,cx                  
					 ;seek value 
    1555 060B  C3                               ret 
    1556                                 
    1557 060C                           bad_line:                              
					 ;full line not possible, return 
    1558 060C  8B D7                            mov     dx,di                  
					 ; with AX=count, CX=0 and DX= 
    1559 060E  C3                               ret                            
					 ; old last char in buffer pointer. 
    1560                                 
    1561                                 
    1562                                 
    1563                                        subttl  Subroutines: print_diff
					 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 16:29:35

File Compare Routine for MSDOS 2.0                          Page     1-54
Subroutines: print_diff                                     

    1564                                        page 
    1565                                 
    1566                                ;--------------------------------------
					---------------------------------; 
    1567                                ;               print the difference be
					tween buffers                    ; 
    1568                                ;                                      
					                                 ; 
    1569                                ;       It will print the mismatched li
					nes. First it prints a heading   ; 
    1570                                ; with the first file name, then the li
					nes that differ from file 1,     ; 
    1571                                ; then a heading with the second file n
					ame, and then the lines that     ; 
    1572                                ; differ in file 2 .                   
					                                 ; 
    1573                                ;       The lines that differ are consi
					dered to start from fst_nosinc   ; 
    1574                                ; till fst_sinc.                       
					                                 ; 
    1575                                ;                                      
					                                 ; 
    1576                                ;       Called from txt_compare        
					                                 ; 
    1577                                ;--------------------------------------
					---------------------------------; 
    1578 060F                           print_diff: 
    1579 060F  BB 0080 R                        mov     bx,offset dg:buf1 
    1580 0612  E8 0648 R                        call    print_head             
					 ;print heading for file 1 
    1581 0615  8B 57 0C                         mov     dx,word ptr [bx].fst_no
					sinc 
    1582 0618  8B 77 0A                         mov     si,word ptr [bx].fst_si
					nc 
    1583 061B  E8 0511 R                        call    get_next               
					 ;get pointer to next line 
    1584 061E  8B CE                            mov     cx,si 
    1585 0620  2B CA                            sub     cx,dx                  
					 ;get character count 
    1586 0622  E8 0696 R                        call    prout 
    1587 0625  BB 0096 R                        mov     bx,offset dg:buf2 
    1588 0628  E8 0648 R                        call    print_head             
					 ;print heading for file 1 
    1589 062B  8B 57 0C                         mov     dx,word ptr [bx].fst_no
					sinc 
    1590 062E  8B 77 0A                         mov     si,word ptr [bx].fst_si
					nc 
    1591 0631  E8 0511 R                        call    get_next               
					 ;get pointer to next line 
    1592 0634  8B CE                            mov     cx,si 
    1593 0636  2B CA                            sub     cx,dx                  
					 ;get character count 
    1594 0638  E8 0696 R                        call    prout 
    1595 063B  BA 0000 E                        mov     dx,offset dg:diff_sep 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 16:29:35

File Compare Routine for MSDOS 2.0                          Page     1-55
Subroutines: print_diff                                     

    1596 063E  8A 0E 0000 E                     mov     cl,diff_sep_len 
    1597 0642  32 ED                            xor     ch,ch 
    1598 0644  E8 0696 R                        call    prout                  
					 ;print difference separator 
    1599 0647  C3                               ret 
    1600                                 
    1601                                 
    1602                                        subttl  Subroutines: print_head
					 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 16:29:35

File Compare Routine for MSDOS 2.0                          Page     1-56
Subroutines: print_head                                     

    1603                                        page 
    1604                                 
    1605                                ;--------------------------------------
					---------------------------------; 
    1606                                ;               Print heading for diffe
					rence                            ; 
    1607                                ;                                      
					                                 ; 
    1608                                ; entry:                               
					                                 ; 
    1609                                ;       BX      pointer to buffer struc
					ture                             ; 
    1610                                ;                                      
					                                 ; 
    1611                                ; modifies:                            
					                                 ; 
    1612                                ;       AX,CX and DX                   
					                                 ; 
    1613                                ;                                      
					                                 ; 
    1614                                ;       Called from txt_compare and pri
					nt_diff                          ; 
    1615                                ;--------------------------------------
					---------------------------------; 
    1616 0648                           print_head: 
    1617 0648  BA 0000 E                        mov     dx,offset dg:fname_sep 
    1618 064B  8A 0E 0000 E                     mov     cl,fname_sep_len 
    1619 064F  32 ED                            xor     ch,ch 
    1620 0651  E8 0696 R                        call    prout 
    1621 0654  8B 17                            mov     dx,word ptr [bx].fname 
    1622 0656  8B 4F 02                         mov     cx,word ptr [bx].fname_
					len 
    1623 0659  E8 0696 R                        call    prout 
    1624 065C  BA 0000 E                        mov     dx,offset dg:CRLF 
    1625 065F  B9 0002                          mov     cx,2 
    1626 0662  E8 0696 R                        call    prout 
    1627 0665  C3                               ret 
    1628                                 
    1629                                 
    1630                                        subttl  Subroutines: print_all 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 16:29:35

File Compare Routine for MSDOS 2.0                          Page     1-57
Subroutines: print_all                                      

    1631                                        page 
    1632                                 
    1633                                ;--------------------------------------
					---------------------------------; 
    1634                                ;               Print the rest of a fil
					e                                ; 
    1635                                ;                                      
					                                 ; 
    1636                                ;       If in SINC it will print the fi
					le from the fst_nosinc line      ; 
    1637                                ; till the end of the file. If NOT in S
					INC then it will print from      ; 
    1638                                ; the current line of the buffer to the
					 end of the file.                ; 
    1639                                ;                                      
					                                 ; 
    1640                                ; entry:                               
					                                 ; 
    1641                                ;       BX      pointer to buffer struc
					ture                             ; 
    1642                                ;                                      
					                                 ; 
    1643                                ; modifies:                            
					                                 ; 
    1644                                ;       AX,CX and DX                   
					                                 ; 
    1645                                ;                                      
					                                 ; 
    1646                                ;       Called from txt_compare        
					                                 ; 
    1647                                ;--------------------------------------
					---------------------------------; 
    1648 0666                           print_all: 
    1649 0666  80 3E 0021 R FF                  cmp     [sinc],true            
					 ;are we in SINC? 
    1650 066B  75 05                            jne     so1 
    1651 066D  8B 57 06                         mov     dx,word ptr [bx].curr 
    1652 0670  EB 03                            jmp     short so2 
    1653 0672                           so1: 
    1654 0672  8B 57 0C                         mov     dx,word ptr [bx].fst_no
					sinc 
    1655 0675                           so2: 
    1656 0675  8B 4F 0E                         mov     cx,word ptr [bx].dat_en
					d 
    1657 0678  41                               inc     cx 
    1658                                 
    1659 0679                           prt_again: 
    1660 0679  2B CA                            sub     cx,dx                  
					 ;ammount of data to write 
    1661 067B  E8 0696 R                        call    prout                  
					 ;write it out 
    1662                                 
    1663                                ;----- Read more data to the buffer 
    1664 067E  53                               push    bx                     
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 16:29:35

File Compare Routine for MSDOS 2.0                          Page     1-58
Subroutines: print_all                                      

					 ;save pointer to buffer struct 
    1665 067F  8B 57 12                         mov     dx,word ptr [bx].buf 
    1666 0682  E8 05B5 R                        call    read_dat 
    1667 0685  73 03                            jnc     so3 
    1668 0687  E9 058E R                        jmp     bad_read               
					 ;print error (BX in stack) 
    1669 068A                           so3: 
    1670 068A  0B C0                            or      ax,ax                  
					 ;zero chars read? 
    1671 068C  75 02                            jne     so4 
    1672 068E  5B                               pop     bx                     
					 ;all done writting 
    1673 068F  C3                               ret 
    1674 0690                           so4: 
    1675 0690  5B                               pop     bx 
    1676 0691  8B 4F 10                         mov     cx,word ptr [bx].buf_en
					d 
    1677 0694  EB E3                            jmp     short prt_again        
					 ;print next buffer full 
    1678                                 
    1679                                 
    1680                                        subttl  Subroutines: prout and 
					prt_err 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 16:29:35

File Compare Routine for MSDOS 2.0                          Page     1-59
Subroutines: prout and prt_err                              

    1681                                        page 
    1682                                 
    1683                                ;--------------------------------------
					---------------------------------; 
    1684                                ;                                      
					                                 ; 
    1685                                ;--------------------------------------
					---------------------------------; 
    1686 0696                           prout: 
    1687 0696  53                               push    bx 
    1688 0697  BB 0001                          mov     bx,stdout 
    1689 069A  B4 40                            mov     ah,write 
    1690 069C  CD 21                            int     21h 
    1691 069E  5B                               pop     bx 
    1692 069F  C3                               ret 
    1693                                 
    1694                                 
    1695                                ;--------------------------------------
					---------------------------------; 
    1696                                ;                                      
					                                 ; 
    1697                                ;--------------------------------------
					---------------------------------; 
    1698 06A0                           prt_err: 
    1699 06A0  53                               push    bx 
    1700 06A1  32 ED                            xor     ch,ch 
    1701 06A3  E3 07                            jcxz    retpbx 
    1702 06A5  BB 0002                          mov     bx,stderr 
    1703 06A8  B4 40                            mov     ah,write 
    1704 06AA  CD 21                            int     21h 
    1705 06AC                           retpbx: 
    1706 06AC  5B                               pop     bx 
    1707 06AD  C3                               ret 
    1708                                 
    1709 06AE                           code    ends 
    1710                                 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 16:29:35

File Compare Routine for MSDOS 2.0                          Page     1-60
Subroutines: prout and prt_err                              

    1711                                        page 
    1712                                 
    1713                                 
    1714 0000                           stack   segment stack 
    1715                                 
    1716 0000  0080[                            dw      128 dup(?) 
    1717            ????                
    1718                         ]      
    1719                                
    1720                                 
    1721 0100                           stack   ends 
    1722                                 
    1723                                 
    1724                                        end     start 

Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 16:29:35

File Compare Routine for MSDOS 2.0                          Symbols-1
                                                             

Macros:

		N a m e			Lines

BREAK  . . . . . . . . . . . . .  	   2
CONDRET  . . . . . . . . . . . .  	  19
CONTEXT  . . . . . . . . . . . .  	   3
DO_EXT . . . . . . . . . . . . .  	   0
ENTRY  . . . . . . . . . . . . .  	   2
ERROR  . . . . . . . . . . . . .  	   4
INVOKE . . . . . . . . . . . . .  	   8
I_AM . . . . . . . . . . . . . .  	  14
I_NEED . . . . . . . . . . . . .  	  11
JUMP . . . . . . . . . . . . . .  	  17
LONG_ADDR  . . . . . . . . . . .  	   7
MAKELAB  . . . . . . . . . . . .  	   4
M_BNAME  . . . . . . . . . . . .  	  20
M_DEBUG  . . . . . . . . . . . .  	  15
PROCEDURE  . . . . . . . . . . .  	   2
RETC . . . . . . . . . . . . . .  	   1
RETNC  . . . . . . . . . . . . .  	   1
RETNZ  . . . . . . . . . . . . .  	   1
RETURN . . . . . . . . . . . . .  	   5
RETZ . . . . . . . . . . . . . .  	   1
SHORT_ADDR . . . . . . . . . . .  	  12
TRANSFER . . . . . . . . . . . .  	   8

Structures and Records:

                N a m e                 Width   # fields
                                        Shift   Width   Mask    Initial

ARENA  . . . . . . . . . . . . .  	0005	0003
  ARENA_SIGNATURE  . . . . . . .  	0000
  ARENA_OWNER  . . . . . . . . .  	0001
  ARENA_SIZE . . . . . . . . . .  	0003
BPBLOCK  . . . . . . . . . . . .  	000D	0008
  BPSECSZ  . . . . . . . . . . .  	0000
  BPCLUS . . . . . . . . . . . .  	0002
  BPRES  . . . . . . . . . . . .  	0003
  BPFTCNT  . . . . . . . . . . .  	0005
  BPDRCNT  . . . . . . . . . . .  	0006
  BPSCCNT  . . . . . . . . . . .  	0008
  BPMEDIA  . . . . . . . . . . .  	000A
  BPFTSEC  . . . . . . . . . . .  	000B
BUFFINFO . . . . . . . . . . . .  	0010	0009
  NEXTBUF  . . . . . . . . . . .  	0000
  BUFDRV . . . . . . . . . . . .  	0004
  BUFDIRTY . . . . . . . . . . .  	0005
  BUFPRI . . . . . . . . . . . .  	0006
  VISIT  . . . . . . . . . . . .  	0007
  BUFSECNO . . . . . . . . . . .  	0008
  BUFWRTCNT  . . . . . . . . . .  	000A
  BUFWRTINC  . . . . . . . . . .  	000B
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 16:29:35

File Compare Routine for MSDOS 2.0                          Symbols-2
                                                             

  BUFDRVDP . . . . . . . . . . .  	000C
DIR_ENTRY  . . . . . . . . . . .  	0020	0008
  DIR_NAME . . . . . . . . . . .  	0000
  DIR_ATTR . . . . . . . . . . .  	000B
  DIR_PAD  . . . . . . . . . . .  	000C
  DIR_TIME . . . . . . . . . . .  	0016
  DIR_DATE . . . . . . . . . . .  	0018
  DIR_FIRST  . . . . . . . . . .  	001A
  DIR_SIZE_L . . . . . . . . . .  	001C
  DIR_SIZE_H . . . . . . . . . .  	001E
DPB  . . . . . . . . . . . . . .  	005E	0012
  DPB_DRIVE  . . . . . . . . . .  	0000
  DPB_UNIT . . . . . . . . . . .  	0001
  DPB_SECTOR_SIZE  . . . . . . .  	0002
  DPB_CLUSTER_MASK . . . . . . .  	0004
  DPB_CLUSTER_SHIFT  . . . . . .  	0005
  DPB_FIRST_FAT  . . . . . . . .  	0006
  DPB_FAT_COUNT  . . . . . . . .  	0008
  DPB_ROOT_ENTRIES . . . . . . .  	0009
  DPB_FIRST_SECTOR . . . . . . .  	000B
  DPB_MAX_CLUSTER  . . . . . . .  	000D
  DPB_FAT_SIZE . . . . . . . . .  	000F
  DPB_DIR_SECTOR . . . . . . . .  	0010
  DPB_DRIVER_ADDR  . . . . . . .  	0012
  DPB_MEDIA  . . . . . . . . . .  	0016
  DPB_FIRST_ACCESS . . . . . . .  	0017
  DPB_NEXT_DPB . . . . . . . . .  	0018
  DPB_CURRENT_DIR  . . . . . . .  	001C
  DPB_DIR_TEXT . . . . . . . . .  	001E
EXEC0  . . . . . . . . . . . . .  	000E	0004
  EXEC0_ENVIRON  . . . . . . . .  	0000
  EXEC0_COM_LINE . . . . . . . .  	0002
  EXEC0_5C_FCB . . . . . . . . .  	0006
  EXEC0_6C_FCB . . . . . . . . .  	000A
EXEC1  . . . . . . . . . . . . .  	0016	0008
  EXEC1_ENVIRON  . . . . . . . .  	0000
  EXEC1_COM_LINE . . . . . . . .  	0002
  EXEC1_5C_FCB . . . . . . . . .  	0006
  EXEC1_6C_FCB . . . . . . . . .  	000A
  EXEC1_SP . . . . . . . . . . .  	000E
  EXEC1_SS . . . . . . . . . . .  	0010
  EXEC1_IP . . . . . . . . . . .  	0012
  EXEC1_CS . . . . . . . . . . .  	0014
EXEC3  . . . . . . . . . . . . .  	0004	0002
  EXEC3_LOAD_ADDR  . . . . . . .  	0000
  EXEC3_RELOC_FAC  . . . . . . .  	0002
EXE_FILE . . . . . . . . . . . .  	0020	000F
  EXE_SIGNATURE  . . . . . . . .  	0000
  EXE_LEN_MOD_512  . . . . . . .  	0002
  EXE_PAGES  . . . . . . . . . .  	0004
  EXE_RLE_COUNT  . . . . . . . .  	0006
  EXE_PAR_DIR  . . . . . . . . .  	0008
  EXE_MIN_BSS  . . . . . . . . .  	000A
  EXE_MAX_BSS  . . . . . . . . .  	000C
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 16:29:35

File Compare Routine for MSDOS 2.0                          Symbols-3
                                                             

  EXE_SS . . . . . . . . . . . .  	000E
  EXE_SP . . . . . . . . . . . .  	0010
  EXE_CHKSUM . . . . . . . . . .  	0012
  EXE_IP . . . . . . . . . . . .  	0014
  EXE_CS . . . . . . . . . . . .  	0016
  EXE_RLE_TABLE  . . . . . . . .  	0018
  EXE_IOV  . . . . . . . . . . .  	001A
  EXE_SYM_TAB  . . . . . . . . .  	001C
FIND_BUF . . . . . . . . . . . .  	002B	000C
  FIND_BUF_SATTR . . . . . . . .  	0000
  FIND_BUF_DRIVE . . . . . . . .  	0001
  FIND_BUF_NAME  . . . . . . . .  	0002
  FIND_BUF_LASTENT . . . . . . .  	000D
  FIND_BUF_THISDPB . . . . . . .  	000F
  FIND_BUF_DIRSTART  . . . . . .  	0013
  FIND_BUF_ATTR  . . . . . . . .  	0015
  FIND_BUF_TIME  . . . . . . . .  	0016
  FIND_BUF_DATE  . . . . . . . .  	0018
  FIND_BUF_SIZE_L  . . . . . . .  	001A
  FIND_BUF_SIZE_H  . . . . . . .  	001C
  FIND_BUF_PNAME . . . . . . . .  	001E
INTERNAT_BLOCK . . . . . . . . .  	0018	0015
  DATE_TIM_FORMAT  . . . . . . .  	0000
  CURRENCY_SYM . . . . . . . . .  	0002
  THOUS_SEP  . . . . . . . . . .  	0007
  DECIMAL_SEP  . . . . . . . . .  	0009
  DATE_SEP . . . . . . . . . . .  	000B
  TIME_SEP . . . . . . . . . . .  	000D
  BIT_FEILD  . . . . . . . . . .  	000F
  CURRENCY_CENTS . . . . . . . .  	0010
  TIME_24  . . . . . . . . . . .  	0011
  MAP_CALL . . . . . . . . . . .  	0012
  DATA_SEP . . . . . . . . . . .  	0016
PROCESS_DATA_BLOCK . . . . . . .  	005B	000E
  PDB_EXIT_CALL  . . . . . . . .  	0000
  PDB_BLOCK_LEN  . . . . . . . .  	0002
  PDB_CPM_CALL . . . . . . . . .  	0005
  PDB_EXIT . . . . . . . . . . .  	000A
  PDB_CTRL_C . . . . . . . . . .  	000E
  PDB_FATAL_ABORT  . . . . . . .  	0012
  PDB_PARENT_PID . . . . . . . .  	0016
  PDB_JFN_TABLE  . . . . . . . .  	0018
  PDB_ENVIRON  . . . . . . . . .  	002C
  PDB_USER_STACK . . . . . . . .  	002E
  PDB_PAD1 . . . . . . . . . . .  	0032
  PDB_CALL_SYSTEM  . . . . . . .  	0050
  PDB_PAD2 . . . . . . . . . . .  	0055
SFT  . . . . . . . . . . . . . .  	0008	0003
  SFT_LINK . . . . . . . . . . .  	0000
  SFT_COUNT  . . . . . . . . . .  	0004
  SFT_TABLE  . . . . . . . . . .  	0006
SF_ENTRY . . . . . . . . . . . .  	0028	0004
  SF_REF_COUNT . . . . . . . . .  	0000
  SF_MODE  . . . . . . . . . . .  	0001
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 16:29:35

File Compare Routine for MSDOS 2.0                          Symbols-4
                                                             

  SF_ATTR  . . . . . . . . . . .  	0002
  SF_FCB . . . . . . . . . . . .  	0003
SYMBOL_ENTRY . . . . . . . . . .  	0106	0004
  SYM_VALUE  . . . . . . . . . .  	0000
  SYM_TYPE . . . . . . . . . . .  	0004
  SYM_LEN  . . . . . . . . . . .  	0006
  SYM_NAME . . . . . . . . . . .  	0007
SYS_FCB  . . . . . . . . . . . .  	0025	0010
  FCB_DRIVE  . . . . . . . . . .  	0000
  FCB_NAME . . . . . . . . . . .  	0001
  FCB_EXT  . . . . . . . . . . .  	0009
  FCB_EXTENT . . . . . . . . . .  	000C
  FCB_RECSIZ . . . . . . . . . .  	000E
  FCB_FILSIZ . . . . . . . . . .  	0010
  FCB_DRVBP  . . . . . . . . . .  	0012
  FCB_FDATE  . . . . . . . . . .  	0014
  FCB_FTIME  . . . . . . . . . .  	0016
  FCB_DEVID  . . . . . . . . . .  	0018
  FCB_FIRCLUS  . . . . . . . . .  	0019
  FCB_CLUSPOS  . . . . . . . . .  	001B
  FCB_LSTCLUS  . . . . . . . . .  	001D
  FCB_NR . . . . . . . . . . . .  	0020
  FCB_RR . . . . . . . . . . . .  	0021
USER_ENVIRON . . . . . . . . . .  	0018	000C
  USER_AX  . . . . . . . . . . .  	0000
  USER_BX  . . . . . . . . . . .  	0002
  USER_CX  . . . . . . . . . . .  	0004
  USER_DX  . . . . . . . . . . .  	0006
  USER_SI  . . . . . . . . . . .  	0008
  USER_DI  . . . . . . . . . . .  	000A
  USER_BP  . . . . . . . . . . .  	000C
  USER_DS  . . . . . . . . . . .  	000E
  USER_ES  . . . . . . . . . . .  	0010
  USER_IP  . . . . . . . . . . .  	0012
  USER_CS  . . . . . . . . . . .  	0014
  USER_F . . . . . . . . . . . .  	0016

Segments and Groups:

                N a m e         	Size	Align	Combine Class

DG . . . . . . . . . . . . . . .  	GROUP
  CODE . . . . . . . . . . . . .  	06AE	WORD	NONE	
  CONST  . . . . . . . . . . . .  	003C	WORD	PUBLIC	
  DATA . . . . . . . . . . . . .  	20B0	WORD	NONE	
STACK  . . . . . . . . . . . . .  	0100	PARA	STACK	

Symbols:            

                N a m e         	Type	Value	Attr         

ABORT  . . . . . . . . . . . . .  	Number	0000	
ADDR_INT_ABORT . . . . . . . . .  	Number	0080	
ADDR_INT_COMMAND . . . . . . . .  	Number	0084	
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 16:29:35

File Compare Routine for MSDOS 2.0                          Symbols-5
                                                             

ADDR_INT_CTRL_C  . . . . . . . .  	Number	008C	
ADDR_INT_DISK_READ . . . . . . .  	Number	0094	
ADDR_INT_DISK_WRITE  . . . . . .  	Number	0098	
ADDR_INT_FASTCON . . . . . . . .  	Number	00A4	
ADDR_INT_FATAL_ABORT . . . . . .  	Number	0090	
ADDR_INT_KEEP_PROCESS  . . . . .  	Number	009C	
ADDR_INT_SPOOLER . . . . . . . .  	Number	00A0	
ADDR_INT_TERMINATE . . . . . . .  	Number	0088	
ADV_B  . . . . . . . . . . . . .  	L NEAR	04FE	CODE
ALLOC  . . . . . . . . . . . . .  	Number	0048	
ALLOCOPER  . . . . . . . . . . .  	Number	0058	
ALLOC_ARENA_TRASHED  . . . . . .  	Alias	 ERROR_ARENA_TRASHED		
ALLOC_NOT_ENOUGH_MEMORY  . . . .  	Alias	 ERROR_NOT_ENOUGH_MEMORY		
ALTVECT  . . . . . . . . . . . .  	Number	0000	
ANOTHER_LINE . . . . . . . . . .  	L NEAR	01F3	CODE
AN_ERR . . . . . . . . . . . . .  	L NEAR	0124	CODE
ARENA_OWNER_SYSTEM . . . . . . .  	Number	0000	
ARENA_SIGNATURE_END  . . . . . .  	Number	005A	
ARENA_SIGNATURE_NORMAL . . . . .  	Number	004D	
ARGS_ERR . . . . . . . . . . . .  	V BYTE 	0000	CONST	External
ARGS_ERR_LEN . . . . . . . . . .  	V BYTE 	0000	CONST	External
ASSIGNOPER . . . . . . . . . . .  	Number	005F	
ATTR_ALL . . . . . . . . . . . .  	Number	0016	
ATTR_ARCHIVE . . . . . . . . . .  	Number	0020	
ATTR_CHANGEABLE  . . . . . . . .  	Number	0027	
ATTR_DIRECTORY . . . . . . . . .  	Number	0010	
ATTR_HIDDEN  . . . . . . . . . .  	Number	0002	
ATTR_IGNORE  . . . . . . . . . .  	Number	0021	
ATTR_READ_ONLY . . . . . . . . .  	Number	0001	
ATTR_SYSTEM  . . . . . . . . . .  	Number	0004	
ATTR_VOLUME_ID . . . . . . . . .  	Number	0008	

B1 . . . . . . . . . . . . . . .  	L BYTE 	00AC	DATA	Length = 1000
B2 . . . . . . . . . . . . . . .  	L BYTE 	10AE	DATA	Length = 1000
BADVEX . . . . . . . . . . . . .  	F PROC	001E	CODE	Length = 0001
BAD_ARGS . . . . . . . . . . . .  	L NEAR	00B0	CODE
BAD_DAT  . . . . . . . . . . . .  	L NEAR	01C7	CODE
BAD_DATJ . . . . . . . . . . . .  	L NEAR	0153	CODE
BAD_FILE . . . . . . . . . . . .  	L NEAR	00FE	CODE
BAD_LINE . . . . . . . . . . . .  	L NEAR	060C	CODE
BAD_OPT  . . . . . . . . . . . .  	L NEAR	0088	CODE
BAD_READ . . . . . . . . . . . .  	L NEAR	058E	CODE
BASE . . . . . . . . . . . . . .  	L DWORD	0023	CONST
BEND . . . . . . . . . . . . . .  	L BYTE 	0022	CONST
BEND_MES . . . . . . . . . . . .  	L NEAR	01BF	CODE
BF1NE  . . . . . . . . . . . . .  	V BYTE 	0000	CONST	External
BF1NE_LEN  . . . . . . . . . . .  	V BYTE 	0000	CONST	External
BF1_ENDED  . . . . . . . . . . .  	L NEAR	01B8	CODE
BF2NE  . . . . . . . . . . . . .  	V BYTE 	0000	CONST	External
BF2NE_LEN  . . . . . . . . . . .  	V BYTE 	0000	CONST	External
BHEAD  . . . . . . . . . . . . .  	V BYTE 	0000	CONST	External
BHEAD_FLG  . . . . . . . . . . .  	L BYTE 	0027	CONST
BHEAD_LEN  . . . . . . . . . . .  	V BYTE 	0000	CONST	External
BHEAD_OK . . . . . . . . . . . .  	L NEAR	03A1	CODE
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 16:29:35

File Compare Routine for MSDOS 2.0                          Symbols-6
                                                             

BIN2HEX  . . . . . . . . . . . .  	L NEAR	03DC	CODE
BIN_COMPARE  . . . . . . . . . .  	L NEAR	0137	CODE
BNOT_YET . . . . . . . . . . . .  	L NEAR	019F	CODE
BP_BUF . . . . . . . . . . . . .  	NEAR 	0028	CONST
BP_BUF1  . . . . . . . . . . . .  	L BYTE 	0028	CONST	Length = 0008
BP_BUF2  . . . . . . . . . . . .  	L BYTE 	0033	CONST	Length = 0002
BP_BUF3  . . . . . . . . . . . .  	L BYTE 	0038	CONST	Length = 0002
BP_BUF_LEN . . . . . . . . . . .  	Number	0014	
BUF  . . . . . . . . . . . . . .  	Number	0012	
BUF1 . . . . . . . . . . . . . .  	L WORD 	0080	DATA	Length = 000B
BUF2 . . . . . . . . . . . . . .  	L WORD 	0096	DATA	Length = 000B
BUFINSIZ . . . . . . . . . . . .  	Number	0010	
BUF_END  . . . . . . . . . . . .  	Number	0010	
BUF_SIZE . . . . . . . . . . . .  	Number	1000	
BY_READ  . . . . . . . . . . . .  	Number	0006	
B_OPT  . . . . . . . . . . . . .  	L NEAR	0099	CODE

CHAR_OPER  . . . . . . . . . . .  	Number	0037	
CHDIR  . . . . . . . . . . . . .  	Number	003B	
CHDIR_PATH_NOT_FOUND . . . . . .  	Alias	 ERROR_PATH_NOT_FOUND		
CHMOD  . . . . . . . . . . . . .  	Number	0043	
CHMOD_ACCESS_DENIED  . . . . . .  	Alias	 ERROR_ACCESS_DENIED		
CHMOD_INVALID_FUNCTION . . . . .  	Alias	 ERROR_INVALID_FUNCTION		
CHMOD_PATH_NOT_FOUND . . . . . .  	Alias	 ERROR_PATH_NOT_FOUND		
CLOSE  . . . . . . . . . . . . .  	Number	003E	
CLOSE_INVALID_FUNCTION . . . . .  	Alias	 ERROR_INVALID_FUNCTION		
CLOSE_INVALID_HANDLE . . . . . .  	Alias	 ERROR_INVALID_HANDLE		
COM_BUF  . . . . . . . . . . . .  	L BYTE 	0000	DATA	Length = 0080
CONT_OPT . . . . . . . . . . . .  	L NEAR	0056	CODE
COUNTRY_NOT_FOUND  . . . . . . .  	Alias	 ERROR_FILE_NOT_FOUND		
CR . . . . . . . . . . . . . . .  	Number	000D	
CREAT  . . . . . . . . . . . . .  	Number	003C	
CREATENEWFILE  . . . . . . . . .  	Number	005B	
CREATETEMPFILE . . . . . . . . .  	Number	005A	
CREATE_PROCESS_DATA_BLOCK  . . .  	Number	0026	
CREAT_ACCESS_DENIED  . . . . . .  	Alias	 ERROR_ACCESS_DENIED		
CREAT_PATH_NOT_FOUND . . . . . .  	Alias	 ERROR_PATH_NOT_FOUND		
CREAT_TOO_MANY_OPEN_FILES  . . .  	Alias	 ERROR_TOO_MANY_OPEN_FILES		
CRLF . . . . . . . . . . . . . .  	V BYTE 	0000	CONST	External
CURDIR_INVALID_DRIVE . . . . . .  	Alias	 ERROR_INVALID_DRIVE		
CURR . . . . . . . . . . . . . .  	Number	0006	
CURRENT_DIR  . . . . . . . . . .  	Number	0047	
C_BS . . . . . . . . . . . . . .  	Number	0008	
C_CR . . . . . . . . . . . . . .  	Number	000D	
C_DEL  . . . . . . . . . . . . .  	Number	007F	
C_ETB  . . . . . . . . . . . . .  	Number	0017	
C_ETX  . . . . . . . . . . . . .  	Number	0003	
C_HT . . . . . . . . . . . . . .  	Number	0009	
C_LF . . . . . . . . . . . . . .  	Number	000A	
C_NAK  . . . . . . . . . . . . .  	Number	0015	
C_OPT  . . . . . . . . . . . . .  	L NEAR	009E	CODE

DAT_END  . . . . . . . . . . . .  	Number	000E	
DEALLOC  . . . . . . . . . . . .  	Number	0049	
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 16:29:35

File Compare Routine for MSDOS 2.0                          Symbols-7
                                                             

DEALLOC_ARENA_TRASHED  . . . . .  	Alias	 ERROR_ARENA_TRASHED		
DEALLOC_INVALID_BLOCK  . . . . .  	Alias	 ERROR_INVALID_BLOCK		
DEVID_BLOCK_DEV  . . . . . . . .  	Number	001F	
DEVID_DEVICE . . . . . . . . . .  	Number	0080	
DEVID_DEVICE_CLOCK . . . . . . .  	Number	0008	
DEVID_DEVICE_CON_IN  . . . . . .  	Number	0001	
DEVID_DEVICE_CON_OUT . . . . . .  	Number	0002	
DEVID_DEVICE_EOF . . . . . . . .  	Number	0040	
DEVID_DEVICE_NULL  . . . . . . .  	Number	0004	
DEVID_DEVICE_RAW . . . . . . . .  	Number	0020	
DEVID_DEVICE_SPECIAL . . . . . .  	Number	0010	
DEVID_EOF  . . . . . . . . . . .  	Number	0040	
DEVID_FILE_CLEAN . . . . . . . .  	Number	0040	
DEVID_FILE_MASK_DRIVE  . . . . .  	Number	003F	
DEVID_ISCIN  . . . . . . . . . .  	Number	0001	
DEVID_ISCLK  . . . . . . . . . .  	Number	0008	
DEVID_ISCOT  . . . . . . . . . .  	Number	0002	
DEVID_ISDEV  . . . . . . . . . .  	Number	0080	
DEVID_ISNUL  . . . . . . . . . .  	Number	0004	
DEVID_RAW  . . . . . . . . . . .  	Number	0020	
DEVID_SPECIAL  . . . . . . . . .  	Number	0010	
DIFF_SEP . . . . . . . . . . . .  	V BYTE 	0000	CONST	External
DIFF_SEP_LEN . . . . . . . . . .  	V BYTE 	0000	CONST	External
DIF_ERR  . . . . . . . . . . . .  	V BYTE 	0000	CONST	External
DIF_ERR_LEN  . . . . . . . . . .  	V BYTE 	0000	CONST	External
DIF_FILES  . . . . . . . . . . .  	L NEAR	033B	CODE
DIRPRI . . . . . . . . . . . . .  	Number	000F	
DIRSTRLEN  . . . . . . . . . . .  	Number	0040	
DIR_SEARCH_FIRST . . . . . . . .  	Number	0011	
DIR_SEARCH_NEXT  . . . . . . . .  	Number	0012	
DISK_RESET . . . . . . . . . . .  	Number	000D	
DOS_MAJOR_VERSION  . . . . . . .  	Number	0002	
DOS_MINOR_VERSION  . . . . . . .  	Number	000B	
DPBSIZ . . . . . . . . . . . . .  	Number	005E	
DSKSIZ . . . . . . . . . . . . .  	Number	000D	
DUP2_INVALID_HANDLE  . . . . . .  	Alias	 ERROR_INVALID_HANDLE		
DUP_INVALID_HANDLE . . . . . . .  	Alias	 ERROR_INVALID_HANDLE		
DUP_PDB  . . . . . . . . . . . .  	Number	0055	
DUP_TOO_MANY_OPEN_FILES  . . . .  	Alias	 ERROR_TOO_MANY_OPEN_FILES		

END_B1 . . . . . . . . . . . . .  	L BYTE 	10AC	DATA	Length = 0002
END_B2 . . . . . . . . . . . . .  	L BYTE 	20AE	DATA	Length = 0002
END_CHECK  . . . . . . . . . . .  	L NEAR	01A1	CODE
ENTRYPOINT . . . . . . . . . . .  	Number	00C0	
ERROR_ACCESS_DENIED  . . . . . .  	Number	0005	
ERROR_ARENA_TRASHED  . . . . . .  	Number	0007	
ERROR_BAD_ENVIRONMENT  . . . . .  	Number	000A	
ERROR_BAD_FORMAT . . . . . . . .  	Number	000B	
ERROR_CURRENT_DIRECTORY  . . . .  	Number	0010	
ERROR_FILE_NOT_FOUND . . . . . .  	Number	0002	
ERROR_INVALID_ACCESS . . . . . .  	Number	000C	
ERROR_INVALID_BLOCK  . . . . . .  	Number	0009	
ERROR_INVALID_DATA . . . . . . .  	Number	000D	
ERROR_INVALID_DRIVE  . . . . . .  	Number	000F	
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 16:29:35

File Compare Routine for MSDOS 2.0                          Symbols-8
                                                             

ERROR_INVALID_FUNCTION . . . . .  	Number	0001	
ERROR_INVALID_HANDLE . . . . . .  	Number	0006	
ERROR_NOT_ENOUGH_MEMORY  . . . .  	Number	0008	
ERROR_NOT_SAME_DEVICE  . . . . .  	Number	0011	
ERROR_NO_MORE_FILES  . . . . . .  	Number	0012	
ERROR_PATH_NOT_FOUND . . . . . .  	Number	0003	
ERROR_TOO_MANY_OPEN_FILES  . . .  	Number	0004	
EXEC . . . . . . . . . . . . . .  	Number	004B	
EXEC_BAD_ENVIRONMENT . . . . . .  	Alias	 ERROR_BAD_ENVIRONMENT		
EXEC_BAD_FORMAT  . . . . . . . .  	Alias	 ERROR_BAD_FORMAT		
EXEC_FILE_NOT_FOUND  . . . . . .  	Alias	 ERROR_FILE_NOT_FOUND		
EXEC_FUNC_NO_EXECUTE . . . . . .  	Number	0001	
EXEC_FUNC_OVERLAY  . . . . . . .  	Number	0002	
EXEC_INVALID_FUNCTION  . . . . .  	Alias	 ERROR_INVALID_FUNCTION		
EXEC_NOT_ENOUGH_MEMORY . . . . .  	Alias	 ERROR_NOT_ENOUGH_MEMORY		
EXE_VALID_OLD_SIGNATURE  . . . .  	Number	4D5A	
EXE_VALID_SIGNATURE  . . . . . .  	Number	5A4D	
EXIT . . . . . . . . . . . . . .  	Number	004C	
EXIT_ABORT . . . . . . . . . . .  	Number	0000	
EXIT_CTRL_C  . . . . . . . . . .  	Number	0001	
EXIT_HARD_ERROR  . . . . . . . .  	Number	0002	
EXIT_KEEP_PROCESS  . . . . . . .  	Number	0003	
EXIT_TERMINATE . . . . . . . . .  	Number	0000	

FALSE  . . . . . . . . . . . . .  	Number	0000	
FATPRI . . . . . . . . . . . . .  	Number	001E	
FCB_CLOSE  . . . . . . . . . . .  	Number	0010	
FCB_CREATE . . . . . . . . . . .  	Number	0016	
FCB_DELETE . . . . . . . . . . .  	Number	0013	
FCB_OPEN . . . . . . . . . . . .  	Number	000F	
FCB_RANDOM_READ  . . . . . . . .  	Number	0021	
FCB_RANDOM_READ_BLOCK  . . . . .  	Number	0027	
FCB_RANDOM_WRITE . . . . . . . .  	Number	0022	
FCB_RANDOM_WRITE_BLOCK . . . . .  	Number	0028	
FCB_RENAME . . . . . . . . . . .  	Number	0017	
FCB_SEQ_READ . . . . . . . . . .  	Number	0014	
FCB_SEQ_WRITE  . . . . . . . . .  	Number	0015	
FCSTRT . . . . . . . . . . . . .  	L NEAR	000B	CODE
FILDIRENT  . . . . . . . . . . .  	Number	0010	
FILETIMES_INVALID_FUNCTION . . .  	Alias	 ERROR_INVALID_FUNCTION		
FILETIMES_INVALID_HANDLE . . . .  	Alias	 ERROR_INVALID_HANDLE		
FILE_ERR . . . . . . . . . . . .  	V BYTE 	0000	CONST	External
FILE_ERR_LEN . . . . . . . . . .  	V BYTE 	0000	CONST	External
FILE_TIMES . . . . . . . . . . .  	Number	0057	
FILL_BUFFER  . . . . . . . . . .  	L NEAR	055E	CODE
FILPERPROC . . . . . . . . . . .  	Number	0014	
FINDFIRST_FILE_NOT_FOUND . . . .  	Alias	 ERROR_FILE_NOT_FOUND		
FINDFIRST_NO_MORE_FILES  . . . .  	Alias	 ERROR_NO_MORE_FILES		
FINDNEXT_NO_MORE_FILES . . . . .  	Alias	 ERROR_NO_MORE_FILES		
FIND_EOL . . . . . . . . . . . .  	L NEAR	04F2	CODE
FIND_FIRST . . . . . . . . . . .  	Number	004E	
FIND_NEXT  . . . . . . . . . . .  	Number	004F	
FIND_NONB  . . . . . . . . . . .  	L NEAR	0367	CODE
FLG_B  . . . . . . . . . . . . .  	L BYTE 	0016	CONST
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 16:29:35

File Compare Routine for MSDOS 2.0                          Symbols-9
                                                             

FLG_C  . . . . . . . . . . . . .  	L BYTE 	0017	CONST
FLG_S  . . . . . . . . . . . . .  	L BYTE 	0018	CONST
FLG_W  . . . . . . . . . . . . .  	L BYTE 	0019	CONST
FNAME  . . . . . . . . . . . . .  	Number	0000	
FNAME_LEN  . . . . . . . . . . .  	Number	0002	
FNAME_SEP  . . . . . . . . . . .  	V BYTE 	0000	CONST	External
FNAME_SEP_LEN  . . . . . . . . .  	V BYTE 	0000	CONST	External
FOUND_ERR_POST . . . . . . . . .  	V BYTE 	0000	CONST	External
FOUND_ERR_POST_LEN . . . . . . .  	V BYTE 	0000	CONST	External
FOUND_ERR_PRE  . . . . . . . . .  	V BYTE 	0000	CONST	External
FOUND_ERR_PRE_LEN  . . . . . . .  	V BYTE 	0000	CONST	External
FREEPRI  . . . . . . . . . . . .  	Number	0000	
FST_NOSINC . . . . . . . . . . .  	Number	000C	
FST_SINC . . . . . . . . . . . .  	Number	000A	

GETEXTENDEDERROR . . . . . . . .  	Number	0059	
GET_CURRENT_PDB  . . . . . . . .  	Number	0051	
GET_DATE . . . . . . . . . . . .  	Number	002A	
GET_DEFAULT_DPB  . . . . . . . .  	Number	001F	
GET_DEFAULT_DRIVE  . . . . . . .  	Number	0019	
GET_DMA  . . . . . . . . . . . .  	Number	002F	
GET_DPB  . . . . . . . . . . . .  	Number	0032	
GET_DRIVE_FREESPACE  . . . . . .  	Number	0036	
GET_FCB_FILE_LENGTH  . . . . . .  	Number	0023	
GET_FCB_POSITION . . . . . . . .  	Number	0024	
GET_FILE . . . . . . . . . . . .  	L NEAR	00BA	CODE
GET_INDOS_FLAG . . . . . . . . .  	Number	0034	
GET_INTERRUPT_VECTOR . . . . . .  	Number	0035	
GET_IN_VARS  . . . . . . . . . .  	Number	0052	
GET_NEXT . . . . . . . . . . . .  	L NEAR	0511	CODE
GET_NEXTL  . . . . . . . . . . .  	L NEAR	050E	CODE
GET_TIME . . . . . . . . . . . .  	Number	002C	
GET_VERIFY_ON_WRITE  . . . . . .  	Number	0054	
GET_VERSION  . . . . . . . . . .  	Number	0030	
GO_BCOMP . . . . . . . . . . . .  	L NEAR	0174	CODE
GO_COMPARE . . . . . . . . . . .  	L NEAR	012D	CODE
GO_MATCH . . . . . . . . . . . .  	L NEAR	03F5	CODE
GO_QUIT  . . . . . . . . . . . .  	L NEAR	0345	CODE

HANDLE . . . . . . . . . . . . .  	Number	0004	
HEADER . . . . . . . . . . . . .  	L BYTE 	0002	CODE

IB_COMPARE . . . . . . . . . . .  	L NEAR	044D	CODE
IB_FIRST1  . . . . . . . . . . .  	L BYTE 	001A	CONST
IB_FIRST2  . . . . . . . . . . .  	L BYTE 	001B	CONST
IC_COMPARE . . . . . . . . . . .  	L NEAR	0433	CODE
INTBASE  . . . . . . . . . . . .  	Number	0080	
INTERNATIONAL  . . . . . . . . .  	Number	0038	
INTERNATIONAL_INVALID_FUNCTION .  	Alias	 ERROR_INVALID_FUNCTION		
INTERNAT_BLOCK_MAX . . . . . . .  	Number	0020	
INTTAB . . . . . . . . . . . . .  	Number	0020	
INT_ABORT  . . . . . . . . . . .  	Alias	 INTTAB		
INT_COMMAND  . . . . . . . . . .  	Number	0021	
INT_CTRL_C . . . . . . . . . . .  	Number	0023	
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 16:29:35

File Compare Routine for MSDOS 2.0                          Symbols-10
                                                             

INT_DISK_READ  . . . . . . . . .  	Number	0025	
INT_DISK_WRITE . . . . . . . . .  	Number	0026	
INT_ERR  . . . . . . . . . . . .  	V BYTE 	0000	CONST	External
INT_ERR_LEN  . . . . . . . . . .  	V BYTE 	0000	CONST	External
INT_FASTCON  . . . . . . . . . .  	Number	0029	
INT_FATAL_ABORT  . . . . . . . .  	Number	0024	
INT_KEEP_PROCESS . . . . . . . .  	Number	0027	
INT_SPOOLER  . . . . . . . . . .  	Number	0028	
INT_TERMINATE  . . . . . . . . .  	Number	0022	
IOCTL  . . . . . . . . . . . . .  	Number	0044	
IOCTL_INVALID_DATA . . . . . . .  	Alias	 ERROR_INVALID_DATA		
IOCTL_INVALID_FUNCTION . . . . .  	Alias	 ERROR_INVALID_FUNCTION		
IOCTL_INVALID_HANDLE . . . . . .  	Alias	 ERROR_INVALID_HANDLE		
ISA_WHITE  . . . . . . . . . . .  	L NEAR	04E6	CODE

KEEP_PROCESS . . . . . . . . . .  	Number	0031	
KILL_BL  . . . . . . . . . . . .  	L NEAR	0356	CODE

LBRPRI . . . . . . . . . . . . .  	Number	0002	
LBWPRI . . . . . . . . . . . . .  	Number	0004	
LF . . . . . . . . . . . . . . .  	Number	000A	
LOCKOPER . . . . . . . . . . . .  	Number	005C	
LSEEK  . . . . . . . . . . . . .  	Number	0042	
LSEEK_INVALID_FUNCTION . . . . .  	Alias	 ERROR_INVALID_FUNCTION		
LSEEK_INVALID_HANDLE . . . . . .  	Alias	 ERROR_INVALID_HANDLE		
LST_CURR . . . . . . . . . . . .  	Number	0008	

MAKE . . . . . . . . . . . . . .  	L BYTE 	0000	CONST
MAKE_CAPS  . . . . . . . . . . .  	L NEAR	034B	CODE
MI_INT . . . . . . . . . . . . .  	Number	00CD	
MI_LONG_CALL . . . . . . . . . .  	Number	009A	
MI_LONG_JMP  . . . . . . . . . .  	Number	00EA	
MI_LONG_RET  . . . . . . . . . .  	Number	00CB	
MKDIR  . . . . . . . . . . . . .  	Number	0039	
MKDIR_ACCESS_DENIED  . . . . . .  	Alias	 ERROR_ACCESS_DENIED		
MKDIR_PATH_NOT_FOUND . . . . . .  	Alias	 ERROR_PATH_NOT_FOUND		
MODE . . . . . . . . . . . . . .  	L BYTE 	0020	CONST
MOREIN_B1  . . . . . . . . . . .  	L NEAR	016D	CODE
MOREIN_B2  . . . . . . . . . . .  	L NEAR	0166	CODE
MTCH_CNTR  . . . . . . . . . . .  	L WORD 	001E	CONST
M_NUM  . . . . . . . . . . . . .  	L WORD 	001C	CONST

NEXT_BCOMP . . . . . . . . . . .  	L NEAR	0187	CODE
NOR_BUF  . . . . . . . . . . . .  	L NEAR	05C2	CODE
NO_ERROR_OCCURRED  . . . . . . .  	Text  0                                                              ?		
NO_MATCH . . . . . . . . . . . .  	L NEAR	0245	CODE
NO_MORE1 . . . . . . . . . . . .  	L NEAR	02C8	CODE
NO_MORE2 . . . . . . . . . . . .  	L NEAR	02F7	CODE
NO_ROOM  . . . . . . . . . . . .  	L NEAR	05AB	CODE
NO_SINC  . . . . . . . . . . . .  	L NEAR	0326	CODE

OEM_C1 . . . . . . . . . . . . .  	Number	00F9	
OEM_C2 . . . . . . . . . . . . .  	Number	00FA	
OEM_C3 . . . . . . . . . . . . .  	Number	00FB	
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 16:29:35

File Compare Routine for MSDOS 2.0                          Symbols-11
                                                             

OEM_C4 . . . . . . . . . . . . .  	Number	00FC	
OEM_C5 . . . . . . . . . . . . .  	Number	00FD	
OEM_C6 . . . . . . . . . . . . .  	Number	00FE	
OEM_C7 . . . . . . . . . . . . .  	Number	00FF	
OPEN . . . . . . . . . . . . . .  	Number	003D	
OPEN_ACCESS_DENIED . . . . . . .  	Alias	 ERROR_ACCESS_DENIED		
OPEN_FILE_NOT_FOUND  . . . . . .  	Alias	 ERROR_FILE_NOT_FOUND		
OPEN_FOR_BOTH  . . . . . . . . .  	Number	0002	
OPEN_FOR_READ  . . . . . . . . .  	Number	0000	
OPEN_FOR_WRITE . . . . . . . . .  	Number	0001	
OPEN_INVALID_ACCESS  . . . . . .  	Alias	 ERROR_INVALID_ACCESS		
OPEN_TOO_MANY_OPEN_FILES . . . .  	Alias	 ERROR_TOO_MANY_OPEN_FILES		
OPT_DISPATCH . . . . . . . . . .  	L NEAR	00AB	CODE
OPT_E  . . . . . . . . . . . . .  	V BYTE 	0000	CONST	External
OPT_ERR  . . . . . . . . . . . .  	V BYTE 	0000	CONST	External
OPT_ERR_LEN  . . . . . . . . . .  	V BYTE 	0000	CONST	External
OPT_TBL  . . . . . . . . . . . .  	NEAR 	0016	CONST

PARSE_FILE_DESCRIPTOR  . . . . .  	Number	0029	
PASTA  . . . . . . . . . . . . .  	L NEAR	03F1	CODE
PRINT_ALL  . . . . . . . . . . .  	L NEAR	0666	CODE
PRINT_DIFF . . . . . . . . . . .  	L NEAR	060F	CODE
PRINT_HEAD . . . . . . . . . . .  	L NEAR	0648	CODE
PROUT  . . . . . . . . . . . . .  	L NEAR	0696	CODE
PRT_AGAIN  . . . . . . . . . . .  	L NEAR	0679	CODE
PRT_BDIF . . . . . . . . . . . .  	L NEAR	0387	CODE
PRT_ERR  . . . . . . . . . . . .  	L NEAR	06A0	CODE
PT_HEX . . . . . . . . . . . . .  	L NEAR	03E9	CODE
PUT_HEX  . . . . . . . . . . . .  	L NEAR	03F3	CODE

RAW_CON_INPUT  . . . . . . . . .  	Number	0007	
RAW_CON_IO . . . . . . . . . . .  	Number	0006	
RD_PAST_EOF  . . . . . . . . . .  	L NEAR	05B0	CODE
READ . . . . . . . . . . . . . .  	Number	003F	
READ_ACCESS_DENIED . . . . . . .  	Alias	 ERROR_ACCESS_DENIED		
READ_DAT . . . . . . . . . . . .  	L NEAR	05B5	CODE
READ_ERR_POST  . . . . . . . . .  	V BYTE 	0000	CONST	External
READ_ERR_POST_LEN  . . . . . . .  	V BYTE 	0000	CONST	External
READ_ERR_PRE . . . . . . . . . .  	V BYTE 	0000	CONST	External
READ_ERR_PRE_LEN . . . . . . . .  	V BYTE 	0000	CONST	External
READ_INVALID_HANDLE  . . . . . .  	Alias	 ERROR_INVALID_HANDLE		
REFILL . . . . . . . . . . . . .  	L NEAR	0526	CODE
RENAME . . . . . . . . . . . . .  	Number	0056	
RENAME_ACCESS_DENIED . . . . . .  	Alias	 ERROR_ACCESS_DENIED		
RENAME_FILE_NOT_FOUND  . . . . .  	Alias	 ERROR_FILE_NOT_FOUND		
RENAME_NOT_SAME_DEVICE . . . . .  	Alias	 ERROR_NOT_SAME_DEVICE		
RETPBX . . . . . . . . . . . . .  	L NEAR	06AC	CODE
REV  . . . . . . . . . . . . . .  	L BYTE 	0015	CONST
RMDIR  . . . . . . . . . . . . .  	Number	003A	
RMDIR_ACCESS_DENIED  . . . . . .  	Alias	 ERROR_ACCESS_DENIED		
RMDIR_CURRENT_DIRECTORY  . . . .  	Alias	 ERROR_CURRENT_DIRECTORY		
RMDIR_PATH_NOT_FOUND . . . . . .  	Alias	 ERROR_PATH_NOT_FOUND		
RPRI . . . . . . . . . . . . . .  	Number	0006	

Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 16:29:35

File Compare Routine for MSDOS 2.0                          Symbols-12
                                                             

SA1  . . . . . . . . . . . . . .  	L NEAR	0355	CODE
SB1  . . . . . . . . . . . . . .  	L NEAR	0357	CODE
SB2  . . . . . . . . . . . . . .  	L NEAR	0366	CODE
SC1  . . . . . . . . . . . . . .  	L NEAR	036B	CODE
SC2  . . . . . . . . . . . . . .  	L NEAR	037B	CODE
SC3  . . . . . . . . . . . . . .  	L NEAR	0385	CODE
SD1  . . . . . . . . . . . . . .  	L NEAR	041E	CODE
SD10 . . . . . . . . . . . . . .  	L NEAR	0462	CODE
SD11 . . . . . . . . . . . . . .  	L NEAR	046D	CODE
SD111  . . . . . . . . . . . . .  	L NEAR	0477	CODE
SD112  . . . . . . . . . . . . .  	L NEAR	047E	CODE
SD12 . . . . . . . . . . . . . .  	L NEAR	0480	CODE
SD121  . . . . . . . . . . . . .  	L NEAR	048C	CODE
SD122  . . . . . . . . . . . . .  	L NEAR	0496	CODE
SD13 . . . . . . . . . . . . . .  	L NEAR	049F	CODE
SD14 . . . . . . . . . . . . . .  	L NEAR	04AA	CODE
SD141  . . . . . . . . . . . . .  	L NEAR	04B4	CODE
SD142  . . . . . . . . . . . . .  	L NEAR	04BB	CODE
SD15 . . . . . . . . . . . . . .  	L NEAR	04BD	CODE
SD151  . . . . . . . . . . . . .  	L NEAR	04C9	CODE
SD152  . . . . . . . . . . . . .  	L NEAR	04D3	CODE
SD153  . . . . . . . . . . . . .  	L NEAR	04DA	CODE
SD154  . . . . . . . . . . . . .  	L NEAR	04E1	CODE
SD3  . . . . . . . . . . . . . .  	L NEAR	042C	CODE
SD4  . . . . . . . . . . . . . .  	L NEAR	042F	CODE
SD5  . . . . . . . . . . . . . .  	L NEAR	0430	CODE
SD6  . . . . . . . . . . . . . .  	L NEAR	04F5	CODE
SD7  . . . . . . . . . . . . . .  	L NEAR	04FD	CODE
SD8  . . . . . . . . . . . . . .  	L NEAR	0437	CODE
SD9  . . . . . . . . . . . . . .  	L NEAR	045B	CODE
SDX1 . . . . . . . . . . . . . .  	L NEAR	04F0	CODE
SE0  . . . . . . . . . . . . . .  	L NEAR	050A	CODE
SE1  . . . . . . . . . . . . . .  	L NEAR	0504	CODE
SE2  . . . . . . . . . . . . . .  	L NEAR	0523	CODE
SERVERCALL . . . . . . . . . . .  	Number	005D	
SETBLOCK . . . . . . . . . . . .  	Number	004A	
SETBLOCK_ARENA_TRASHED . . . . .  	Alias	 ERROR_ARENA_TRASHED		
SETBLOCK_INVALID_BLOCK . . . . .  	Alias	 ERROR_INVALID_BLOCK		
SETBLOCK_INVALID_FUNCTION  . . .  	Alias	 ERROR_INVALID_FUNCTION		
SETBLOCK_NOT_ENOUGH_MEMORY . . .  	Alias	 ERROR_NOT_ENOUGH_MEMORY		
SETDPB . . . . . . . . . . . . .  	Number	0053	
SET_CTRL_C_TRAPPING  . . . . . .  	Number	0033	
SET_CURRENT_PDB  . . . . . . . .  	Number	0050	
SET_DATE . . . . . . . . . . . .  	Number	002B	
SET_DEFAULT_DRIVE  . . . . . . .  	Number	000E	
SET_DMA  . . . . . . . . . . . .  	Number	001A	
SET_INTERRUPT_VECTOR . . . . . .  	Number	0025	
SET_OEM_HANDLER  . . . . . . . .  	Number	00F8	
SET_TIME . . . . . . . . . . . .  	Number	002D	
SET_VERIFY_ON_WRITE  . . . . . .  	Number	002E	
SF1  . . . . . . . . . . . . . .  	L NEAR	0532	CODE
SF2  . . . . . . . . . . . . . .  	L NEAR	0535	CODE
SF3  . . . . . . . . . . . . . .  	L NEAR	0556	CODE
SF_DEFAULT_NUMBER  . . . . . . .  	Number	0005	
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 16:29:35

File Compare Routine for MSDOS 2.0                          Symbols-13
                                                             

SG1  . . . . . . . . . . . . . .  	L NEAR	0582	CODE
SG2  . . . . . . . . . . . . . .  	L NEAR	05B2	CODE
SINC . . . . . . . . . . . . . .  	L BYTE 	0021	CONST
SJ01 . . . . . . . . . . . . . .  	L NEAR	010C	CODE
SJ02 . . . . . . . . . . . . . .  	L NEAR	01FB	CODE
SJ03 . . . . . . . . . . . . . .  	L NEAR	0215	CODE
SJ04 . . . . . . . . . . . . . .  	L NEAR	0227	CODE
SJ05 . . . . . . . . . . . . . .  	L NEAR	0232	CODE
SJ051  . . . . . . . . . . . . .  	L NEAR	0240	CODE
SJ06 . . . . . . . . . . . . . .  	L NEAR	0263	CODE
SJ07 . . . . . . . . . . . . . .  	L NEAR	0278	CODE
SJ08 . . . . . . . . . . . . . .  	L NEAR	027E	CODE
SJ09 . . . . . . . . . . . . . .  	L NEAR	029C	CODE
SJ10 . . . . . . . . . . . . . .  	L NEAR	02A4	CODE
SJ11 . . . . . . . . . . . . . .  	L NEAR	02AA	CODE
SM1  . . . . . . . . . . . . . .  	L NEAR	05D2	CODE
SM2  . . . . . . . . . . . . . .  	L NEAR	05E0	CODE
SM3  . . . . . . . . . . . . . .  	L NEAR	05E3	CODE
SM4  . . . . . . . . . . . . . .  	L NEAR	05E7	CODE
SM5  . . . . . . . . . . . . . .  	L NEAR	05EE	CODE
SM6  . . . . . . . . . . . . . .  	L NEAR	05F1	CODE
SM7  . . . . . . . . . . . . . .  	L NEAR	05FA	CODE
SO1  . . . . . . . . . . . . . .  	L NEAR	0672	CODE
SO2  . . . . . . . . . . . . . .  	L NEAR	0675	CODE
SO3  . . . . . . . . . . . . . .  	L NEAR	068A	CODE
SO4  . . . . . . . . . . . . . .  	L NEAR	0690	CODE
START  . . . . . . . . . . . . .  	L NEAR	0000	CODE
STDAUX . . . . . . . . . . . . .  	Number	0003	
STDERR . . . . . . . . . . . . .  	Number	0002	
STDIN  . . . . . . . . . . . . .  	Number	0000	
STDOUT . . . . . . . . . . . . .  	Number	0001	
STDPRN . . . . . . . . . . . . .  	Number	0004	
STD_AUX_INPUT  . . . . . . . . .  	Number	0003	
STD_AUX_OUTPUT . . . . . . . . .  	Number	0004	
STD_CON_INPUT  . . . . . . . . .  	Number	0001	
STD_CON_INPUT_FLUSH  . . . . . .  	Number	000C	
STD_CON_INPUT_NO_ECHO  . . . . .  	Number	0008	
STD_CON_INPUT_STATUS . . . . . .  	Number	000B	
STD_CON_OUTPUT . . . . . . . . .  	Number	0002	
STD_CON_STRING_INPUT . . . . . .  	Number	000A	
STD_CON_STRING_OUTPUT  . . . . .  	Number	0009	
STD_PRINTER_OUTPUT . . . . . . .  	Number	0005	
S_OPT  . . . . . . . . . . . . .  	L NEAR	00A3	CODE

TRUE . . . . . . . . . . . . . .  	Number	00FF	
TXT_COMPARE  . . . . . . . . . .  	L NEAR	01D1	CODE

UNLINK . . . . . . . . . . . . .  	Number	0041	
UNLINK_ACCESS_DENIED . . . . . .  	Alias	 ERROR_ACCESS_DENIED		
UNLINK_FILE_NOT_FOUND  . . . . .  	Alias	 ERROR_FILE_NOT_FOUND		
USERIDOPER . . . . . . . . . . .  	Number	005E	

VERS_ERR . . . . . . . . . . . .  	V BYTE 	0000	CONST	External
VERS_OK  . . . . . . . . . . . .  	L NEAR	001F	CODE
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 16:29:35

File Compare Routine for MSDOS 2.0                          Symbols-14
                                                             


WAIT . . . . . . . . . . . . . .  	Number	004D	
WPRI . . . . . . . . . . . . . .  	Number	0008	
WRITE  . . . . . . . . . . . . .  	Number	0040	
WRITE_ACCESS_DENIED  . . . . . .  	Alias	 ERROR_ACCESS_DENIED		
WRITE_INVALID_HANDLE . . . . . .  	Alias	 ERROR_INVALID_HANDLE		
W_OPT  . . . . . . . . . . . . .  	L NEAR	00A8	CODE

XDUP . . . . . . . . . . . . . .  	Number	0045	
XDUP2  . . . . . . . . . . . . .  	Number	0046	
XJ1  . . . . . . . . . . . . . .  	L NEAR	02D0	CODE
XJ2  . . . . . . . . . . . . . .  	L NEAR	02FF	CODE
XJ3  . . . . . . . . . . . . . .  	L NEAR	02DA	CODE
XJ4  . . . . . . . . . . . . . .  	L NEAR	0309	CODE
XJ5  . . . . . . . . . . . . . .  	L NEAR	02E5	CODE
XJ6  . . . . . . . . . . . . . .  	L NEAR	0314	CODE


   2920 Source  Lines
   2982 Total   Lines
    698 Symbols

  15384 Bytes symbol space free

      0 Warning Errors
      0 Severe  Errors
