Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 17:57:04

MS-DOS SYS Program                                          Page     1-1
                                                            

       1                                TITLE   MS-DOS SYS Program 
       2                                ; SYS - Copies system programs IBMBIO.C
					OM/IO.SYS and IBMDOS.COM/MSDOS.SYS 
       3                                ;   1.6     05/21/82  Added rev number 
					message 
       4                                ;   1.61    06/04/82  Allow SYS to blan
					k disk TimP at SCP 
       5                                ;   1.70    06/30/82  NON contiguous DO
					S allowed on 2.00 IBM.  Allows SYS to 
       6                                ;                     1.0 1.1 disks. 
       7                                ;   1.71    07/02/82  Put in CHDIRs to 
					make sure everything done in root dir. 
       8                                ;   1.80    04/26/83  MZ make sys work 
					in small machines; use full 2.0 system 
       9                                ;                     calls 
      10                                ;   1.81    07/22/83  ARR Added check i
					n IBM version for valid FAT ID on 
      11                                ;                     destination becau
					se of IBM problem with SYSing to 
      12                                ;                     unformatted disks
					 which are really formatted. 
      13                                ;                     Prints NoDest mes
					sage for ridic IBM reasons, should 
      14                                ;                     have a better mes
					sage. 
      15                                 
      16 = 0000                         FALSE   EQU     0 
      17 = FFFF                         TRUE    EQU     NOT FALSE 
      18                                 
      19 =                              IBMJAPVER EQU   FALSE 
      20 =                              IBMVER  EQU     FALSE 
      21 =                              MSVER   EQU     TRUE 
      22                                 
      23                                .list 
      24                                 
      25                                 
      26 = 0136                         DOSVER_LOW      EQU  0136H             
					 ; Lowest acceptable DOS version number
					 
      27 = 020B                         DOSVER_HIGH     EQU  020BH             
					 ; Highest acceptable DOS version 
      28                                 
      29 0000                           CODE    SEGMENT WORD PUBLIC 
      30 0000                           CODE    ENDS 
      31                                 
      32 0000                           CONST   SEGMENT BYTE PUBLIC 
      33 0000                           CONST   ENDS 
      34                                 
      35 0000                           DATA    SEGMENT BYTE PUBLIC 
      36 0000                           DATA    ENDS 
      37                                 
      38                                DG      GROUP   CODE,DATA,CONST 
      39                                 
      40 0000                           DATA   SEGMENT PUBLIC BYTE 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 17:57:04

MS-DOS SYS Program                                          Page     1-2
                                                            

      41                                 
      42                                        EXTRN   BADDRV:BYTE, BADDRVLen:
					WORD 
      43                                        EXTRN   BADPARM:BYTE, BADPARMLe
					n:WORD 
      44                                        EXTRN   GETSYS:BYTE, GETSYSLen:
					WORD 
      45                                        EXTRN   SYSDRV:BYTE 
      46                                        EXTRN   NODEST:BYTE, NODESTLen:
					WORD 
      47                                        EXTRN   BADSIZ:BYTE, BADSIZLen:
					WORD 
      48                                        EXTRN   DONE:BYTE, DONELen:WORD
					 
      49                                        EXTRN   BADVER:BYTE 
      50                                 
      51                                        ENDIF 
      52                                 
      53 0000  00                       DEFALT  DB      0 
      54                                        IF MSVER 
      55 0001  41 3A 5C 49 4F 2E 53     BIOSName    DB  "A:\IO.SYS",0 
      56       59 53 00                 
      57 000B  41 3A 5C 4D 53 44 4F     DOSName     DB  "A:\MSDOS.SYS",0 
      58       53 2E 53 59 53 00        
      59                                        ENDIF 
      60                                        ENDIF 
      61                                 
      62 0018  ????                     BIOSInFH    DW  ?                      
					 ; file handle of source BIOS 
      63 001A  0002[                    BIOSLenLow  DW  2 DUP (?)              
					 ; 32-bit length of BIOS 
      64            ????                
      65                         ]      
      66                                
      67 001E  0002[                    BIOSLenHigh DW  2 DUP (?)              
					 ; 32-bit length of BIOS 
      68            ????                
      69                         ]      
      70                                
      71 0022  0002[                    BIOSTime    DW  2 DUP (?)              
					 ; place to store time of BIOS write 
      72            ????                
      73                         ]      
      74                                
      75 0026  ????                     BIOSOutFH   DW  ?                      
					 ; fh of BIOS destination 
      76                                 
      77 0028  ????                     DOSInFH     DW  ?                      
					 ; file handle of source DOS 
      78 002A  0002[                    DOSLenLow   DW  2 DUP (?)              
					 ; 32-bit length of DOS 
      79            ????                
      80                         ]      
      81                                
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 17:57:04

MS-DOS SYS Program                                          Page     1-3
                                                            

      82 002E  0002[                    DOSLenHigh  DW  2 DUP (?)              
					 ; 32-bit length of DOS 
      83            ????                
      84                         ]      
      85                                
      86 0032  0002[                    DOSTime     DW  2 DUP (?)              
					 ; place to store time of DOS write 
      87            ????                
      88                         ]      
      89                                
      90 0036  ????                     DOSOutFH    DW  ?                      
					 ; fh of DOS destination 
      91                                 
      92 0038  41 3A 5C 2A 2E 2A 00     AllName     DB "A:\*.*",0 
      93                                 
      94 003F  ????                     cbBuf       DW  ?                      
					 ; number of bytes in buffer 
      95 0041  ????                     pDOS        DW  ?                      
					 ; offset of beginning of DOS in buffer
					 
      96 0043  ????                     pDOSEnd     DW  ?                      
					 ; offset of end of DOS in buffer 
      97                                 
      98                                        ENDIF 
      99                                 
     100                                        ENDIF 
     101                                 
     102 0045                           BUF     LABEL   BYTE                   
					 ; beginning of area for file reads 
     103                                 
     104 0045                           DATA    ENDS 
     105                                 
     106 0000                           CODE    SEGMENT PUBLIC 
     107                                 
     108                                        ASSUME  CS:DG,DS:DG,ES:DG,SS:DG
					 
     109                                 
     110 0100                                   ORG     100H 
     111                                 
     112 0100                           Start: 
     113 0100  EB 09                            JMP     SHORT CheckVersion 
     114                                 
     115                                        ENDIF 
     116 0102  56 65 72 73 20 31 2E     HEADER  DB      "Vers 1.81" 
     117       38 31                    
     118 010B                           CheckVersion: 
     119 010B  50                               PUSH    AX                     
					 ; save drive letter validity 
     120 010C  B4 30                            MOV     AH,GET_VERSION 
     121 010E  CD 21                            INT     21H                    
					 ; get dos version 
     122 0110  86 E0                            XCHG    AH,AL                  
					 ; Turn it around to AH.AL 
     123 0112  3D 0136                          CMP     AX,DOSVER_LOW          
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 17:57:04

MS-DOS SYS Program                                          Page     1-4
                                                            

					 ; is it too low? 
     124 0115  72 05                            JB      GOTBADDOS              
					 ; yes, error 
     125 0117  3D 020B                          CMP     AX,DOSVER_HIGH         
					 ; too high? 
     126 011A  76 09                            JBE     OKDOS                  
					 ; yes, go check drive letter 
     127 011C                           GOTBADDOS: 
     128 011C  BA 0000 E                        MOV     DX,OFFSET DG:BADVER    
					 ; message to dump 
     129 011F  B4 09                            MOV     AH,STD_CON_STRING_OUTPU
					T    ; standard output device 
     130 0121  CD 21                            INT     21H 
     131 0123  CD 20                            INT     20H                    
					 ; old style exit for compatability 
     132                                 
     133 0125  58                       OKDOS:  POP     AX                     
					 ; get drive validity 
     134 0126  EB 2F                            JMP     SHORT SYS              
					 ; go process 
     135                                 
     136 0128  BA 0000 E                ERR0:   MOV     DX,OFFSET DG:BADPARM   
					 ; no drive letter 
     137 012B  8B 0E 0000 E                     MOV     CX,BadParmLen 
     138 012F  E9 0277 R                        JMP     DisplayError 
     139                                 
     140 0132  BA 0000 E                ERR1:   MOV     DX,OFFSET DG:BADDRV    
					 ; drive letter invalid 
     141 0135  8B 0E 0000 E                     MOV     CX,BadDrvLen 
     142 0139  E9 0277 R                        JMP     DisplayError 
     143                                 
     144 013C  A0 0000 R                ERR2:   MOV     AL,DEFALT              
					 ; get default drive number 
     145 013F  04 40                            ADD     AL,'A'-1               
					 ; turn into letter 
     146 0141  A2 0000 E                        MOV     SYSDRV,AL              
					 ; place into middle of message 
     147 0144  BA 0000 E                        MOV     DX,OFFSET DG:GETSYS 
     148 0147  8B 0E 0000 E                     MOV     CX,GETSYSLen           
					 ; length for output 
     149 014B  BB 0002                          MOV     BX,stderr              
					 ; use stderr 
     150 014E  B4 40                            MOV     AH,Write               
					 ; Ask for system disk 
     151 0150  CD 21                            INT     21H 
     152 0152  E8 036C R                        CALL    GetKeystroke           
					 ; wait for him to type simething 
     153 0155  32 C0                            XOR     AL,AL                  
					 ; valid drive spec now... 
     154 0157                           SYS: 
     155 0157  80 3E 005D 20                    CMP     DS:(BYTE PTR 5DH)," "  
					 ; Was file specified? 
     156 015C  75 CA                            JNZ     ERR0                   
					 ; yes, no files are allowed -> error 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 17:57:04

MS-DOS SYS Program                                          Page     1-5
                                                            

     157 015E  3C FF                            CMP     AL,-1                  
					 ; Invalid drive spec? 
     158 0160  74 D0                            JZ      ERR1                   
					 ; yes, must have valid drive -> error 
     159 0162  80 3E 005C 00                    CMP     DS:(BYTE PTR 5CH),0    
					 ; No drive specified? 
     160 0167  74 C9                            JZ      ERR1                   
					 ; yes, cannot sys to default drive err
					or 
     161 0169  B4 19                            MOV     AH,GET_DEFAULT_DRIVE   
					 ; Get default drive 
     162 016B  CD 21                            INT     21H 
     163 016D  FE C0                            INC     AL                     
					 ; turn from phys drive to logical driv
					e 
     164 016F  A2 0000 R                        MOV     DEFALT,AL              
					 ; save it for possible printing 
     165 0172  38 06 005C                       CMP     DS:(BYTE PTR 5CH),AL   
					 ; did he specify the default drive? 
     166 0176  74 BA                            JZ      ERR1                   
					 ; yes, default drive not allowed 
     167                                 
     168                                        ENDIF 
     169                                 
     170 0178  04 40                            ADD     AL,'A'-1               
					 ; turn into letter 
     171 017A  A2 0001 R                        MOV     BIOSName,AL            
					 ; twiddle source name 
     172 017D  A2 000B R                        MOV     DOSName,AL             
					 ; twiddle source name 
     173 0180  FC                               CLD 
     174 0181  BA 0001 R                        MOV     DX,OFFSET DG:BIOSName  
					 ; source name 
     175 0184  BF 0018 R                        MOV     DI,OFFSET DG:BIOSInFH  
					 ; pointer to block of data 
     176 0187  E8 02D7 R                        CALL    OpenFile 
     177 018A  72 B0                            JC      Err2                   
					 ; not found, go and try again 
     178 018C  BA 000B R                        MOV     DX,OFFSET DG:DOSName   
					 ; source of DOS 
     179 018F  BF 0028 R                        MOV     DI,OFFSET DG:DOSInFH   
					 ; pointer to block of data 
     180 0192  E8 02D7 R                        CALL    OpenFile               
					 ; Look for DOS 
     181 0195  72 A5                            JC      ERR2                   
					 ; not there, go ask for a system disk 
     182 0197  8B CC                            MOV     CX,SP                  
					 ; get lowest available spot 
     183 0199  81 E9 0245 R                     SUB     CX,0200h+(OFFSET DG:BUF
					); leave room for all sorts of things 
     184 019D  89 0E 003F R                     MOV     cbBuf,CX               
					 ; store length away 
     185 01A1  E8 027B R                        CALL    FillMem                
					 ; load up memory with files 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 17:57:04

MS-DOS SYS Program                                          Page     1-6
                                                            

     186                                 
     187                                        ENDIF 
     188                                 
     189 01A4  A0 005C                          MOV     AL,DS:(BYTE PTR 5CH)   
					 ; get drive of destination 
     190                                 
     191                                        ENDIF 
     192                                 
     193 01A7  04 40                            ADD     AL,'A'-1               
					 ; convert to letter 
     194 01A9  A2 0001 R                        MOV     BIOSName,AL            
					 ; point names at destination drive 
     195 01AC  A2 000B R                        MOV     DOSName,AL 
     196 01AF  A2 0038 R                        MOV     AllName,AL             
					 ; look for any files 
     197                                 
     198 01B2  B4 4E                            MOV     AH,Find_First          
					 ; look for files 
     199 01B4  BA 0038 R                        MOV     DX,OFFSET DG:AllName   
					 ; path of where to look 
     200 01B7  B9 0006                          MOV     CX,Attr_Hidden+Attr_Sys
					tem  ; attributes to find 
     201 01BA  CD 21                            INT     21H 
     202 01BC  72 29                            JC      PutSys                 
					 ; no files - go and copy 
     203                                 
     204                                        IF      MSVER 
     205 01BE  8A 16 005C                       MOV     DL,DS:(BYTE PTR 5CH)   
					 ; get drive number 
     206 01C2  B4 36                            MOV     AH,GET_DRIVE_FREESPACE 
					 ; get free space available 
     207 01C4  CD 21                            INT     21H 
     208 01C6  F7 E1                            MUL     CX                     
					 ; Compute size of cluster (secsiz*secp
					erclus) 
     209 01C8  91                               XCHG    CX,AX                  
					 ; move it to correct spot 
     210 01C9  BA 0001 R                        MOV     DX,OFFSET DG:BIOSName  
					 ; who to open 
     211 01CC  A1 001C R                        MOV     AX,BIOSLenLow+2        
					 ; get low part of size 
     212 01CF  8B 1E 0020 R                     MOV     BX,BIOSLenHigh+2       
					 ; get high size 
     213 01D3  E8 0335 R                        CALL    CHKLEN                 
					 ; open and snoop size 
     214 01D6  75 55                            JNZ     ERR4                   
					 ; Must fit exact so MSDOS is in right 
					place 
     215 01D8  BA 000B R                        MOV     DX,OFFSET DG:DOSName   
					 ; other guy to open 
     216 01DB  A1 002C R                        MOV     AX,DOSLenLow+2         
					 ; get low part of size 
     217 01DE  8B 1E 0030 R                     MOV     BX,DOSLenHigh+2        
					 ; get high size 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 17:57:04

MS-DOS SYS Program                                          Page     1-7
                                                            

     218 01E2  E8 0335 R                        CALL    CHKLEN                 
					 ; open and snoop second size 
     219 01E5  77 46                            JA      ERR4                   
					 ; Must be enough (or too much) space 
     220                                        ENDIF 
     221                                 
     222                                        ENDIF 
     223                                 
     224 01E7                           PUTSYS: 
     225 01E7  BA 0001 R                        MOV     DX,OFFSET DG:BIOSName  
					 ; who to change mode 
     226 01EA  B9 0000                          MOV     CX,0                   
					 ; undo attributes 
     227 01ED  B8 4301                          MOV     AX,(ChMod SHL 8) + 1   
					 ; set the attributes 
     228 01F0  CD 21                            INT     21h 
     229 01F2  BA 000B R                        MOV     DX,OFFSET DG:DOSName   
					 ; who to change mode 
     230 01F5  B9 0000                          MOV     CX,0                   
					 ; undo attributes 
     231 01F8  B8 4301                          MOV     AX,(ChMod SHL 8) + 1   
					 ; set the attributes 
     232 01FB  CD 21                            INT     21h 
     233 01FD  BA 0001 R                        MOV     DX,OFFSET DG:BIOSName  
					 ; destination of BIOS 
     234 0200  B9 0007                          MOV     CX,7                   
					 ; fancy attributes 
     235 0203  B4 3C                            MOV     AH,Creat               
					 ; make a new one 
     236 0205  CD 21                            INT     21h 
     237 0207  A3 0026 R                        MOV     BIOSOutFH,AX           
					 ; save handle 
     238 020A  BA 000B R                        MOV     DX,OFFSET DG:DOSName   
					 ; destination of DOS 
     239 020D  B4 3C                            MOV     AH,Creat               
					 ; make a new one 
     240 020F  CD 21                            INT     21h 
     241 0211  A3 0036 R                        MOV     DOSOutFH,AX            
					 ; save handle 
     242 0214                           Copy: 
     243 0214  E8 030D R                        CALL    DumpMem                
					 ; flush out memory 
     244 0217  A1 002E R                        MOV     AX,DOSLenHigh          
					 ; more DOS? 
     245 021A  0B 06 002A R                     OR      AX,DOSLenLow           
					 ; more low dos 
     246 021E  0B 06 001E R                     OR      AX,BIOSLenHigh         
					 ; more high BIOS 
     247 0222  0B 06 001A R                     OR      AX,BIOSLenLow          
					 ; more low BIOS 
     248 0226  74 0F                            JZ      AllDone                
					 ; nope, all done 
     249 0228  E8 027B R                        CALL    FillMem                
					 ; reload world 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 17:57:04

MS-DOS SYS Program                                          Page     1-8
                                                            

     250 022B  EB E7                            JMP     Copy 
     251 022D                           ERR4: 
     252 022D  BA 0000 E                        MOV     DX,OFFSET DG:BADSIZ 
     253 0230  8B 0E 0000 E                     MOV     CX,BadSizLen 
     254 0234  EB 41 90                         JMP     DisplayError 
     255 0237                           AllDone: 
     256 0237  8B 0E 0022 R                     MOV     CX,BIOSTime            
					 ; get time and date 
     257 023B  8B 16 0024 R                     MOV     DX,BIOSTime+2 
     258 023F  8B 1E 0026 R                     MOV     BX,BIOSOutFH           
					 ; where to stuff the time 
     259 0243  B8 5701                          MOV     AX,(File_Times SHL 8) +
					 1 
     260 0246  CD 21                            INT     21h 
     261 0248  B4 3E                            MOV     AH,Close 
     262 024A  CD 21                            INT     21h 
     263                                 
     264 024C  8B 0E 0032 R                     MOV     CX,DOSTime             
					 ; get time and date 
     265 0250  8B 16 0034 R                     MOV     DX,DOSTime+2 
     266 0254  8B 1E 0036 R                     MOV     BX,DOSOutFH            
					 ; where to stuff the time 
     267 0258  B8 5701                          MOV     AX,(File_Times SHL 8) +
					 1 
     268 025B  CD 21                            INT     21h 
     269 025D  B4 3E                            MOV     AH,Close 
     270 025F  CD 21                            INT     21h 
     271                                 
     272                                        ENDIF 
     273                                 
     274 0261  BA 0000 E                        MOV     DX,OFFSET DG:DONE      
					 ; all finished message 
     275 0264  8B 0E 0000 E                     MOV     CX,DoneLen 
     276 0268  32 C0                            XOR     AL,AL                  
					 ; ok error code 
     277 026A                           SERROR: 
     278 026A  50                               PUSH    AX 
     279 026B  BB 0002                          MOV     BX,stderr 
     280 026E  B4 40                            MOV     AH,Write               
					 ; convenient place to display message 
     281 0270  CD 21                            INT     21H 
     282 0272  58                               POP     AX 
     283 0273                           ErrorExit: 
     284 0273  B4 4C                            MOV     AH,EXIT                
					 ; bye and return error code 
     285 0275  CD 21                            INT     21h 
     286                                 
     287 0277                           DisplayError: 
     288 0277  B0 01                            MOV     AL,1 
     289 0279  EB EF                            JMP     SERROR 
     290 027B                           FillMem: 
     291 027B  8B 0E 003F R                     MOV     CX,cbBuf               
					 ; get length of buffer 
     292 027F  8B 1E 0018 R                     MOV     BX,BIOSInFH            
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 17:57:04

MS-DOS SYS Program                                          Page     1-9
                                                            

					 ; get bios source handle 
     293 0283  BA 0045 R                        MOV     DX,OFFSET DG:BUF       
					 ; point to beginning of buffer 
     294 0286  51                               PUSH    CX                     
					 ; save away total length 
     295 0287  83 3E 001E R 00                  CMP     BIOSLenHigh,0          
					 ; > 64K to read? 
     296 028C  77 0A                            JA      UseCX                  
					 ; use CX 
     297 028E  39 0E 001A R                     CMP     BIOSLenLow,CX          
					 ; more left to read? 
     298 0292  77 04                            JA      UseCX                  
					 ; use CX 
     299 0294  8B 0E 001A R                     MOV     CX,BIOSLenLow          
					 ; move new 
     300 0298                           UseCX: 
     301 0298  B4 3F                            MOV     AH,Read 
     302 029A  CD 21                            INT     21h                    
					 ; read in what we can 
     303 029C  03 D0                            ADD     DX,AX                  
					 ; update pointer for DOS Read 
     304 029E  89 16 0041 R                     MOV     pDOS,DX                
					 ; point to beginning of DOS 
     305 02A2  29 06 001A R                     SUB     BIOSLenLow,AX          
					 ; decrement remaining 
     306 02A6  83 1E 001E R 00                  SBB     BIOSLenHigh,0          
					 ; do 32 bit 
     307 02AB  59                               POP     CX                     
					 ; get original length 
     308 02AC  2B C8                            SUB     CX,AX                  
					 ; this much is left 
     309                                 
     310 02AE  8B 1E 0028 R                     MOV     BX,DOSInFH             
					 ; get bios source handle 
     311 02B2  83 3E 002E R 00                  CMP     DOSLenHigh,0           
					 ; > 64K to read? 
     312 02B7  77 0A                            JA      UseCXDOS               
					 ; use CX 
     313 02B9  39 0E 002A R                     CMP     DOSLenLow,CX           
					 ; more left to read? 
     314 02BD  77 04                            JA      UseCXDOS               
					 ; use CX 
     315 02BF  8B 0E 002A R                     MOV     CX,DOSLenLow           
					 ; move new 
     316 02C3                           UseCXDOS: 
     317 02C3  B4 3F                            MOV     AH,Read 
     318 02C5  CD 21                            INT     21h                    
					 ; read in what we can 
     319 02C7  03 D0                            ADD     DX,AX                  
					 ; update pointer for DOS Read 
     320 02C9  89 16 0043 R                     MOV     pDOSEnd,DX             
					 ; point to End of dos DOS 
     321 02CD  29 06 002A R                     SUB     DOSLenLow,AX           
					 ; decrement remaining 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 17:57:04

MS-DOS SYS Program                                          Page     1-10
                                                            

     322 02D1  83 1E 002E R 00                  SBB     DOSLenHigh,0           
					 ; do 32 bit arithmetic 
     323                                        return 
     324 02D6                         1 ??0000:
     325 02D6  C3                     1  RET
     326                                 
     327 02D7                           OpenFile: 
     328 02D7  B8 3D00                          MOV     AX,(OPEN SHL 8) + 0    
					 ; open for reading only 
     329 02DA  CD 21                            INT     21H                    
					 ; Look for BIOS 
     330                                        retc                           
					 ; not found, go and try again 
     331 02DC  72 F8                  2  ??0001: jc ret_l
     332 02DE  AB                               STOSW                          
					 ; stash away handle 
     333 02DF  8B D8                            MOV     BX,AX                  
					 ; get ready for seeks 
     334 02E1  B8 4202                          MOV     AX,(LSeek SHL 8) + 2   
					 ; seek relative to eof 
     335 02E4  33 C9                            XOR     CX,CX                  
					 ; zero offset 
     336 02E6  33 D2                            XOR     DX,DX                  
					 ; zero offset 
     337 02E8  CD 21                            INT     21h                    
					 ; get offsets 
     338 02EA  AB                               STOSW                          
					 ; save low part of size 
     339 02EB  AB                               STOSW                          
					 ; save low part of size 
     340 02EC  8B C2                            MOV     AX,DX 
     341 02EE  AB                               STOSW                          
					 ; save high part of size 
     342 02EF  AB                               STOSW                          
					 ; save high part of size 
     343 02F0  33 D2                            XOR     DX,DX                  
					 ; zero offset 
     344 02F2  B8 4200                          MOV     AX,(LSeek SHL 8) + 0   
					 ; seek relative to beginning 
     345 02F5  CD 21                            INT     21h 
     346 02F7  B8 5700                          MOV     AX,(File_Times SHL 8) +
					 0 
     347 02FA  CD 21                            INT     21h                    
					 ; get last write times 
     348 02FC  8B C1                            MOV     AX,CX 
     349 02FE  AB                               STOSW                          
					 ; save time 
     350 02FF  8B C2                            MOV     AX,DX 
     351 0301  AB                               STOSW                          
					 ; save date 
     352                                        return 
     353 0302                         1 ??0003:
     354 0302  C3                     1  RET
     355                                 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 17:57:04

MS-DOS SYS Program                                          Page     1-11
                                                            

     356 0303                           ERR3: 
     357 0303  BA 0000 E                        MOV     DX,OFFSET DG:NODEST 
     358 0306  8B 0E 0000 E                     MOV     CX,NoDestLen 
     359 030A  E9 0277 R                        JMP     DisplayError 
     360                                 
     361 030D                           DumpMem: 
     362 030D  BA 0045 R                        MOV     DX,OFFSET DG:BUF       
					 ; get offset of bios start 
     363 0310  8B 0E 0041 R                     MOV     CX,pDOS                
					 ; beginning of next guy 
     364 0314  2B CA                            SUB     CX,DX                  
					 ; difference is length 
     365 0316  74 08                            JZ      DumpDos                
					 ; no bios to move 
     366 0318  8B 1E 0026 R                     MOV     BX,BIOSOutFH           
					 ; where to output 
     367 031C  B4 40                            MOV     AH,Write 
     368 031E  CD 21                            INT     21h                    
					 ; wham 
     369 0320                           DumpDos: 
     370 0320  8B 16 0041 R                     MOV     DX,pDOS                
					 ; beginning of dos 
     371 0324  8B 0E 0043 R                     MOV     CX,pDOSEnd             
					 ; end of dos 
     372 0328  2B CA                            SUB     CX,DX                  
					 ; difference is length 
     373                                        retz                           
					 ; if zero no write 
     374 032A  74 D6                  2  ??0004: jz ret_l
     375 032C  8B 1E 0036 R                     MOV     BX,DOSOutFH            
					 ; where to output 
     376 0330  B4 40                            MOV     AH,Write 
     377 0332  CD 21                            INT     21h                    
					 ; wham 
     378 0334  C3                               ret 
     379                                 
     380                                        IF      MSVER 
     381 0335                           CHKLEN: 
     382                                ; CX has size of cluster, DX has pointe
					r to file name 
     383                                ; Returns with flags set on (size of fi
					le) - (size of hole) 
     384 0335  50                               PUSH    AX                     
					 ; old size low 
     385 0336  53                               PUSH    BX                     
					 ; old size high 
     386 0337  51                               PUSH    CX                     
					 ; old cluster size 
     387 0338  B4 4E                            MOV     AH,Find_First 
     388 033A  B9 0007                          MOV     CX,7                   
					 ; attributes to search for 
     389 033D  CD 21                            INT     21H 
     390 033F  72 C2                            JC      ERR3                   
					 ; cannot find file, error 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 17:57:04

MS-DOS SYS Program                                          Page     1-12
                                                            

     391 0341  59                               POP     CX                     
					 ; get cluster size back 
     392 0342  8B 16 009C                       MOV     DX,DS:[80h+find_buf_siz
					e_h] ; get destination size high 
     393 0346  A1 009A                          MOV     AX,DS:[80h+find_buf_siz
					e_l] ; get size low 
     394 0349  03 C1                            ADD     AX,CX                  
					 ; add cluster size 
     395 034B  83 D2 00                         ADC     DX,0                   
					 ; 32 bit add 
     396 034E  2D 0001                          SUB     AX,1                   
					 ; adding CLUSSIZE-1 
     397 0351  83 DA 00                         SBB     DX,0                   
					 ; 32 bit dec 
     398 0354  F7 F1                            DIV     CX                     
					 ; compute new cluster size 
     399 0356  5A                               POP     DX                     
					 ; get old high 
     400 0357  5B                               POP     BX                     
					 ; get old low 
     401 0358  50                               PUSH    AX                     
					 ; save away dividend 
     402 0359  8B C3                            MOV     AX,BX                  
					 ; put into correct register 
     403 035B  03 C1                            ADD     AX,CX                  
					 ; do the same as above (+CLUSSIZE-1)/C
					LUSSIZE 
     404 035D  83 D2 00                         ADC     DX,0                   
					 ; 32 bit add 
     405 0360  2D 0001                          SUB     AX,1                   
					 ; adding CLUSSIZE-1 
     406 0363  83 DA 00                         SBB     DX,0                   
					 ; 32 bit dec 
     407 0366  F7 F1                            DIV     CX                     
					 ; compute old cluster size 
     408 0368  5A                               POP     DX                     
					 ; get new size 
     409 0369  3B C2                            CMP     AX,DX                  
					 ; is old >= new? 
     410                                        return 
     411 036B                         1 ??0006:
     412 036B  C3                     1  RET
     413                                        ENDIF 
     414                                 
     415                                        ENDIF 
     416                                 
     417                                        ENDIF 
     418                                 
     419                                        ENDIF 
     420                                 
     421 036C                           GetKeystroke: 
     422 036C  B8 0C08                          MOV     AX,(Std_CON_Input_Flush
					 SHL 8) + Std_CON_Input_No_Echo 
     423 036F  CD 21                            INT     21H 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 17:57:04

MS-DOS SYS Program                                          Page     1-13
                                                            

     424 0371  B8 0C00                          MOV     AX,(Std_CON_Input_Flush
					 SHL 8) + 0 
     425 0374  CD 21                            INT     21H 
     426                                 
     427                                        return 
     428 0376                         1 ??0007:
     429 0376  C3                     1  RET
     430                                 
     431 0377                           CODE    ENDS 
     432                                        END     START 

Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 17:57:04

MS-DOS SYS Program                                          Symbols-1
                                                             

Macros:

		N a m e			Lines

BREAK  . . . . . . . . . . . . .  	   2
CONDRET  . . . . . . . . . . . .  	  19
CONTEXT  . . . . . . . . . . . .  	   3
DO_EXT . . . . . . . . . . . . .  	   0
ENTRY  . . . . . . . . . . . . .  	   2
ERROR  . . . . . . . . . . . . .  	   4
INVOKE . . . . . . . . . . . . .  	   8
I_AM . . . . . . . . . . . . . .  	  14
I_NEED . . . . . . . . . . . . .  	  11
JUMP . . . . . . . . . . . . . .  	  17
LONG_ADDR  . . . . . . . . . . .  	   7
MAKELAB  . . . . . . . . . . . .  	   4
PROCEDURE  . . . . . . . . . . .  	   2
RETC . . . . . . . . . . . . . .  	   1
RETNC  . . . . . . . . . . . . .  	   1
RETNZ  . . . . . . . . . . . . .  	   1
RETURN . . . . . . . . . . . . .  	   5
RETZ . . . . . . . . . . . . . .  	   1
SHORT_ADDR . . . . . . . . . . .  	  12
TRANSFER . . . . . . . . . . . .  	   8

Structures and Records:

                N a m e                 Width   # fields
                                        Shift   Width   Mask    Initial

ARENA  . . . . . . . . . . . . .  	0005	0003
  ARENA_SIGNATURE  . . . . . . .  	0000
  ARENA_OWNER  . . . . . . . . .  	0001
  ARENA_SIZE . . . . . . . . . .  	0003
BPBLOCK  . . . . . . . . . . . .  	000D	0008
  BPSECSZ  . . . . . . . . . . .  	0000
  BPCLUS . . . . . . . . . . . .  	0002
  BPRES  . . . . . . . . . . . .  	0003
  BPFTCNT  . . . . . . . . . . .  	0005
  BPDRCNT  . . . . . . . . . . .  	0006
  BPSCCNT  . . . . . . . . . . .  	0008
  BPMEDIA  . . . . . . . . . . .  	000A
  BPFTSEC  . . . . . . . . . . .  	000B
BUFFINFO . . . . . . . . . . . .  	0010	0009
  NEXTBUF  . . . . . . . . . . .  	0000
  BUFDRV . . . . . . . . . . . .  	0004
  BUFDIRTY . . . . . . . . . . .  	0005
  BUFPRI . . . . . . . . . . . .  	0006
  VISIT  . . . . . . . . . . . .  	0007
  BUFSECNO . . . . . . . . . . .  	0008
  BUFWRTCNT  . . . . . . . . . .  	000A
  BUFWRTINC  . . . . . . . . . .  	000B
  BUFDRVDP . . . . . . . . . . .  	000C
DIR_ENTRY  . . . . . . . . . . .  	0020	0008
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 17:57:04

MS-DOS SYS Program                                          Symbols-2
                                                             

  DIR_NAME . . . . . . . . . . .  	0000
  DIR_ATTR . . . . . . . . . . .  	000B
  DIR_PAD  . . . . . . . . . . .  	000C
  DIR_TIME . . . . . . . . . . .  	0016
  DIR_DATE . . . . . . . . . . .  	0018
  DIR_FIRST  . . . . . . . . . .  	001A
  DIR_SIZE_L . . . . . . . . . .  	001C
  DIR_SIZE_H . . . . . . . . . .  	001E
DPB  . . . . . . . . . . . . . .  	005E	0012
  DPB_DRIVE  . . . . . . . . . .  	0000
  DPB_UNIT . . . . . . . . . . .  	0001
  DPB_SECTOR_SIZE  . . . . . . .  	0002
  DPB_CLUSTER_MASK . . . . . . .  	0004
  DPB_CLUSTER_SHIFT  . . . . . .  	0005
  DPB_FIRST_FAT  . . . . . . . .  	0006
  DPB_FAT_COUNT  . . . . . . . .  	0008
  DPB_ROOT_ENTRIES . . . . . . .  	0009
  DPB_FIRST_SECTOR . . . . . . .  	000B
  DPB_MAX_CLUSTER  . . . . . . .  	000D
  DPB_FAT_SIZE . . . . . . . . .  	000F
  DPB_DIR_SECTOR . . . . . . . .  	0010
  DPB_DRIVER_ADDR  . . . . . . .  	0012
  DPB_MEDIA  . . . . . . . . . .  	0016
  DPB_FIRST_ACCESS . . . . . . .  	0017
  DPB_NEXT_DPB . . . . . . . . .  	0018
  DPB_CURRENT_DIR  . . . . . . .  	001C
  DPB_DIR_TEXT . . . . . . . . .  	001E
EXEC0  . . . . . . . . . . . . .  	000E	0004
  EXEC0_ENVIRON  . . . . . . . .  	0000
  EXEC0_COM_LINE . . . . . . . .  	0002
  EXEC0_5C_FCB . . . . . . . . .  	0006
  EXEC0_6C_FCB . . . . . . . . .  	000A
EXEC1  . . . . . . . . . . . . .  	0016	0008
  EXEC1_ENVIRON  . . . . . . . .  	0000
  EXEC1_COM_LINE . . . . . . . .  	0002
  EXEC1_5C_FCB . . . . . . . . .  	0006
  EXEC1_6C_FCB . . . . . . . . .  	000A
  EXEC1_SP . . . . . . . . . . .  	000E
  EXEC1_SS . . . . . . . . . . .  	0010
  EXEC1_IP . . . . . . . . . . .  	0012
  EXEC1_CS . . . . . . . . . . .  	0014
EXEC3  . . . . . . . . . . . . .  	0004	0002
  EXEC3_LOAD_ADDR  . . . . . . .  	0000
  EXEC3_RELOC_FAC  . . . . . . .  	0002
EXE_FILE . . . . . . . . . . . .  	0020	000F
  EXE_SIGNATURE  . . . . . . . .  	0000
  EXE_LEN_MOD_512  . . . . . . .  	0002
  EXE_PAGES  . . . . . . . . . .  	0004
  EXE_RLE_COUNT  . . . . . . . .  	0006
  EXE_PAR_DIR  . . . . . . . . .  	0008
  EXE_MIN_BSS  . . . . . . . . .  	000A
  EXE_MAX_BSS  . . . . . . . . .  	000C
  EXE_SS . . . . . . . . . . . .  	000E
  EXE_SP . . . . . . . . . . . .  	0010
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 17:57:04

MS-DOS SYS Program                                          Symbols-3
                                                             

  EXE_CHKSUM . . . . . . . . . .  	0012
  EXE_IP . . . . . . . . . . . .  	0014
  EXE_CS . . . . . . . . . . . .  	0016
  EXE_RLE_TABLE  . . . . . . . .  	0018
  EXE_IOV  . . . . . . . . . . .  	001A
  EXE_SYM_TAB  . . . . . . . . .  	001C
FIND_BUF . . . . . . . . . . . .  	002B	000C
  FIND_BUF_SATTR . . . . . . . .  	0000
  FIND_BUF_DRIVE . . . . . . . .  	0001
  FIND_BUF_NAME  . . . . . . . .  	0002
  FIND_BUF_LASTENT . . . . . . .  	000D
  FIND_BUF_THISDPB . . . . . . .  	000F
  FIND_BUF_DIRSTART  . . . . . .  	0013
  FIND_BUF_ATTR  . . . . . . . .  	0015
  FIND_BUF_TIME  . . . . . . . .  	0016
  FIND_BUF_DATE  . . . . . . . .  	0018
  FIND_BUF_SIZE_L  . . . . . . .  	001A
  FIND_BUF_SIZE_H  . . . . . . .  	001C
  FIND_BUF_PNAME . . . . . . . .  	001E
INTERNAT_BLOCK . . . . . . . . .  	0018	0015
  DATE_TIM_FORMAT  . . . . . . .  	0000
  CURRENCY_SYM . . . . . . . . .  	0002
  THOUS_SEP  . . . . . . . . . .  	0007
  DECIMAL_SEP  . . . . . . . . .  	0009
  DATE_SEP . . . . . . . . . . .  	000B
  TIME_SEP . . . . . . . . . . .  	000D
  BIT_FEILD  . . . . . . . . . .  	000F
  CURRENCY_CENTS . . . . . . . .  	0010
  TIME_24  . . . . . . . . . . .  	0011
  MAP_CALL . . . . . . . . . . .  	0012
  DATA_SEP . . . . . . . . . . .  	0016
PROCESS_DATA_BLOCK . . . . . . .  	005B	000E
  PDB_EXIT_CALL  . . . . . . . .  	0000
  PDB_BLOCK_LEN  . . . . . . . .  	0002
  PDB_CPM_CALL . . . . . . . . .  	0005
  PDB_EXIT . . . . . . . . . . .  	000A
  PDB_CTRL_C . . . . . . . . . .  	000E
  PDB_FATAL_ABORT  . . . . . . .  	0012
  PDB_PARENT_PID . . . . . . . .  	0016
  PDB_JFN_TABLE  . . . . . . . .  	0018
  PDB_ENVIRON  . . . . . . . . .  	002C
  PDB_USER_STACK . . . . . . . .  	002E
  PDB_PAD1 . . . . . . . . . . .  	0032
  PDB_CALL_SYSTEM  . . . . . . .  	0050
  PDB_PAD2 . . . . . . . . . . .  	0055
SFT  . . . . . . . . . . . . . .  	0008	0003
  SFT_LINK . . . . . . . . . . .  	0000
  SFT_COUNT  . . . . . . . . . .  	0004
  SFT_TABLE  . . . . . . . . . .  	0006
SF_ENTRY . . . . . . . . . . . .  	0028	0004
  SF_REF_COUNT . . . . . . . . .  	0000
  SF_MODE  . . . . . . . . . . .  	0001
  SF_ATTR  . . . . . . . . . . .  	0002
  SF_FCB . . . . . . . . . . . .  	0003
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 17:57:04

MS-DOS SYS Program                                          Symbols-4
                                                             

SYMBOL_ENTRY . . . . . . . . . .  	0106	0004
  SYM_VALUE  . . . . . . . . . .  	0000
  SYM_TYPE . . . . . . . . . . .  	0004
  SYM_LEN  . . . . . . . . . . .  	0006
  SYM_NAME . . . . . . . . . . .  	0007
SYS_FCB  . . . . . . . . . . . .  	0025	0010
  FCB_DRIVE  . . . . . . . . . .  	0000
  FCB_NAME . . . . . . . . . . .  	0001
  FCB_EXT  . . . . . . . . . . .  	0009
  FCB_EXTENT . . . . . . . . . .  	000C
  FCB_RECSIZ . . . . . . . . . .  	000E
  FCB_FILSIZ . . . . . . . . . .  	0010
  FCB_DRVBP  . . . . . . . . . .  	0012
  FCB_FDATE  . . . . . . . . . .  	0014
  FCB_FTIME  . . . . . . . . . .  	0016
  FCB_DEVID  . . . . . . . . . .  	0018
  FCB_FIRCLUS  . . . . . . . . .  	0019
  FCB_CLUSPOS  . . . . . . . . .  	001B
  FCB_LSTCLUS  . . . . . . . . .  	001D
  FCB_NR . . . . . . . . . . . .  	0020
  FCB_RR . . . . . . . . . . . .  	0021
USER_ENVIRON . . . . . . . . . .  	0018	000C
  USER_AX  . . . . . . . . . . .  	0000
  USER_BX  . . . . . . . . . . .  	0002
  USER_CX  . . . . . . . . . . .  	0004
  USER_DX  . . . . . . . . . . .  	0006
  USER_SI  . . . . . . . . . . .  	0008
  USER_DI  . . . . . . . . . . .  	000A
  USER_BP  . . . . . . . . . . .  	000C
  USER_DS  . . . . . . . . . . .  	000E
  USER_ES  . . . . . . . . . . .  	0010
  USER_IP  . . . . . . . . . . .  	0012
  USER_CS  . . . . . . . . . . .  	0014
  USER_F . . . . . . . . . . . .  	0016

Segments and Groups:

                N a m e         	Size	Align	Combine Class

DG . . . . . . . . . . . . . . .  	GROUP
  CODE . . . . . . . . . . . . .  	0377	WORD	PUBLIC	
  DATA . . . . . . . . . . . . .  	0045	BYTE	PUBLIC	
  CONST  . . . . . . . . . . . .  	0000	BYTE	PUBLIC	

Symbols:            

                N a m e         	Type	Value	Attr         

ABORT  . . . . . . . . . . . . .  	Number	0000	
ADDR_INT_ABORT . . . . . . . . .  	Number	0080	
ADDR_INT_COMMAND . . . . . . . .  	Number	0084	
ADDR_INT_CTRL_C  . . . . . . . .  	Number	008C	
ADDR_INT_DISK_READ . . . . . . .  	Number	0094	
ADDR_INT_DISK_WRITE  . . . . . .  	Number	0098	
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 17:57:04

MS-DOS SYS Program                                          Symbols-5
                                                             

ADDR_INT_FASTCON . . . . . . . .  	Number	00A4	
ADDR_INT_FATAL_ABORT . . . . . .  	Number	0090	
ADDR_INT_KEEP_PROCESS  . . . . .  	Number	009C	
ADDR_INT_SPOOLER . . . . . . . .  	Number	00A0	
ADDR_INT_TERMINATE . . . . . . .  	Number	0088	
ALLDONE  . . . . . . . . . . . .  	L NEAR	0237	CODE
ALLNAME  . . . . . . . . . . . .  	L BYTE 	0038	DATA
ALLOC  . . . . . . . . . . . . .  	Number	0048	
ALLOCOPER  . . . . . . . . . . .  	Number	0058	
ALLOC_ARENA_TRASHED  . . . . . .  	Alias	 ERROR_ARENA_TRASHED		
ALLOC_NOT_ENOUGH_MEMORY  . . . .  	Alias	 ERROR_NOT_ENOUGH_MEMORY		
ALTVECT  . . . . . . . . . . . .  	Number	0000	
ARENA_OWNER_SYSTEM . . . . . . .  	Number	0000	
ARENA_SIGNATURE_END  . . . . . .  	Number	005A	
ARENA_SIGNATURE_NORMAL . . . . .  	Number	004D	
ASSIGNOPER . . . . . . . . . . .  	Number	005F	
ATTR_ALL . . . . . . . . . . . .  	Number	0016	
ATTR_ARCHIVE . . . . . . . . . .  	Number	0020	
ATTR_CHANGEABLE  . . . . . . . .  	Number	0027	
ATTR_DIRECTORY . . . . . . . . .  	Number	0010	
ATTR_HIDDEN  . . . . . . . . . .  	Number	0002	
ATTR_IGNORE  . . . . . . . . . .  	Number	0021	
ATTR_READ_ONLY . . . . . . . . .  	Number	0001	
ATTR_SYSTEM  . . . . . . . . . .  	Number	0004	
ATTR_VOLUME_ID . . . . . . . . .  	Number	0008	

BADDRV . . . . . . . . . . . . .  	V BYTE 	0000	DATA	External
BADDRVLEN  . . . . . . . . . . .  	V WORD 	0000	DATA	External
BADPARM  . . . . . . . . . . . .  	V BYTE 	0000	DATA	External
BADPARMLEN . . . . . . . . . . .  	V WORD 	0000	DATA	External
BADSIZ . . . . . . . . . . . . .  	V BYTE 	0000	DATA	External
BADSIZLEN  . . . . . . . . . . .  	V WORD 	0000	DATA	External
BADVER . . . . . . . . . . . . .  	V BYTE 	0000	DATA	External
BIOSINFH . . . . . . . . . . . .  	L WORD 	0018	DATA
BIOSLENHIGH  . . . . . . . . . .  	L WORD 	001E	DATA	Length = 0002
BIOSLENLOW . . . . . . . . . . .  	L WORD 	001A	DATA	Length = 0002
BIOSNAME . . . . . . . . . . . .  	L BYTE 	0001	DATA
BIOSOUTFH  . . . . . . . . . . .  	L WORD 	0026	DATA
BIOSTIME . . . . . . . . . . . .  	L WORD 	0022	DATA	Length = 0002
BUF  . . . . . . . . . . . . . .  	L BYTE 	0045	DATA
BUFINSIZ . . . . . . . . . . . .  	Number	0010	

CBBUF  . . . . . . . . . . . . .  	L WORD 	003F	DATA
CHAR_OPER  . . . . . . . . . . .  	Number	0037	
CHDIR  . . . . . . . . . . . . .  	Number	003B	
CHDIR_PATH_NOT_FOUND . . . . . .  	Alias	 ERROR_PATH_NOT_FOUND		
CHECKVERSION . . . . . . . . . .  	L NEAR	010B	CODE
CHKLEN . . . . . . . . . . . . .  	L NEAR	0335	CODE
CHMOD  . . . . . . . . . . . . .  	Number	0043	
CHMOD_ACCESS_DENIED  . . . . . .  	Alias	 ERROR_ACCESS_DENIED		
CHMOD_INVALID_FUNCTION . . . . .  	Alias	 ERROR_INVALID_FUNCTION		
CHMOD_PATH_NOT_FOUND . . . . . .  	Alias	 ERROR_PATH_NOT_FOUND		
CLOSE  . . . . . . . . . . . . .  	Number	003E	
CLOSE_INVALID_FUNCTION . . . . .  	Alias	 ERROR_INVALID_FUNCTION		
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 17:57:04

MS-DOS SYS Program                                          Symbols-6
                                                             

CLOSE_INVALID_HANDLE . . . . . .  	Alias	 ERROR_INVALID_HANDLE		
COPY . . . . . . . . . . . . . .  	L NEAR	0214	CODE
COUNTRY_NOT_FOUND  . . . . . . .  	Alias	 ERROR_FILE_NOT_FOUND		
CREAT  . . . . . . . . . . . . .  	Number	003C	
CREATENEWFILE  . . . . . . . . .  	Number	005B	
CREATETEMPFILE . . . . . . . . .  	Number	005A	
CREATE_PROCESS_DATA_BLOCK  . . .  	Number	0026	
CREAT_ACCESS_DENIED  . . . . . .  	Alias	 ERROR_ACCESS_DENIED		
CREAT_PATH_NOT_FOUND . . . . . .  	Alias	 ERROR_PATH_NOT_FOUND		
CREAT_TOO_MANY_OPEN_FILES  . . .  	Alias	 ERROR_TOO_MANY_OPEN_FILES		
CURDIR_INVALID_DRIVE . . . . . .  	Alias	 ERROR_INVALID_DRIVE		
CURRENT_DIR  . . . . . . . . . .  	Number	0047	
C_BS . . . . . . . . . . . . . .  	Number	0008	
C_CR . . . . . . . . . . . . . .  	Number	000D	
C_DEL  . . . . . . . . . . . . .  	Number	007F	
C_ETB  . . . . . . . . . . . . .  	Number	0017	
C_ETX  . . . . . . . . . . . . .  	Number	0003	
C_HT . . . . . . . . . . . . . .  	Number	0009	
C_LF . . . . . . . . . . . . . .  	Number	000A	
C_NAK  . . . . . . . . . . . . .  	Number	0015	

DEALLOC  . . . . . . . . . . . .  	Number	0049	
DEALLOC_ARENA_TRASHED  . . . . .  	Alias	 ERROR_ARENA_TRASHED		
DEALLOC_INVALID_BLOCK  . . . . .  	Alias	 ERROR_INVALID_BLOCK		
DEFALT . . . . . . . . . . . . .  	L BYTE 	0000	DATA
DEVID_BLOCK_DEV  . . . . . . . .  	Number	001F	
DEVID_DEVICE . . . . . . . . . .  	Number	0080	
DEVID_DEVICE_CLOCK . . . . . . .  	Number	0008	
DEVID_DEVICE_CON_IN  . . . . . .  	Number	0001	
DEVID_DEVICE_CON_OUT . . . . . .  	Number	0002	
DEVID_DEVICE_EOF . . . . . . . .  	Number	0040	
DEVID_DEVICE_NULL  . . . . . . .  	Number	0004	
DEVID_DEVICE_RAW . . . . . . . .  	Number	0020	
DEVID_DEVICE_SPECIAL . . . . . .  	Number	0010	
DEVID_EOF  . . . . . . . . . . .  	Number	0040	
DEVID_FILE_CLEAN . . . . . . . .  	Number	0040	
DEVID_FILE_MASK_DRIVE  . . . . .  	Number	003F	
DEVID_ISCIN  . . . . . . . . . .  	Number	0001	
DEVID_ISCLK  . . . . . . . . . .  	Number	0008	
DEVID_ISCOT  . . . . . . . . . .  	Number	0002	
DEVID_ISDEV  . . . . . . . . . .  	Number	0080	
DEVID_ISNUL  . . . . . . . . . .  	Number	0004	
DEVID_RAW  . . . . . . . . . . .  	Number	0020	
DEVID_SPECIAL  . . . . . . . . .  	Number	0010	
DIRPRI . . . . . . . . . . . . .  	Number	000F	
DIRSTRLEN  . . . . . . . . . . .  	Number	0040	
DIR_SEARCH_FIRST . . . . . . . .  	Number	0011	
DIR_SEARCH_NEXT  . . . . . . . .  	Number	0012	
DISK_RESET . . . . . . . . . . .  	Number	000D	
DISPLAYERROR . . . . . . . . . .  	L NEAR	0277	CODE
DONE . . . . . . . . . . . . . .  	V BYTE 	0000	DATA	External
DONELEN  . . . . . . . . . . . .  	V WORD 	0000	DATA	External
DOSINFH  . . . . . . . . . . . .  	L WORD 	0028	DATA
DOSLENHIGH . . . . . . . . . . .  	L WORD 	002E	DATA	Length = 0002
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 17:57:04

MS-DOS SYS Program                                          Symbols-7
                                                             

DOSLENLOW  . . . . . . . . . . .  	L WORD 	002A	DATA	Length = 0002
DOSNAME  . . . . . . . . . . . .  	L BYTE 	000B	DATA
DOSOUTFH . . . . . . . . . . . .  	L WORD 	0036	DATA
DOSTIME  . . . . . . . . . . . .  	L WORD 	0032	DATA	Length = 0002
DOSVER_HIGH  . . . . . . . . . .  	Number	020B	
DOSVER_LOW . . . . . . . . . . .  	Number	0136	
DOS_MAJOR_VERSION  . . . . . . .  	Number	0002	
DOS_MINOR_VERSION  . . . . . . .  	Number	000B	
DPBSIZ . . . . . . . . . . . . .  	Number	005E	
DSKSIZ . . . . . . . . . . . . .  	Number	000D	
DUMPDOS  . . . . . . . . . . . .  	L NEAR	0320	CODE
DUMPMEM  . . . . . . . . . . . .  	L NEAR	030D	CODE
DUP2_INVALID_HANDLE  . . . . . .  	Alias	 ERROR_INVALID_HANDLE		
DUP_INVALID_HANDLE . . . . . . .  	Alias	 ERROR_INVALID_HANDLE		
DUP_PDB  . . . . . . . . . . . .  	Number	0055	
DUP_TOO_MANY_OPEN_FILES  . . . .  	Alias	 ERROR_TOO_MANY_OPEN_FILES		

ENTRYPOINT . . . . . . . . . . .  	Number	00C0	
ERR0 . . . . . . . . . . . . . .  	L NEAR	0128	CODE
ERR1 . . . . . . . . . . . . . .  	L NEAR	0132	CODE
ERR2 . . . . . . . . . . . . . .  	L NEAR	013C	CODE
ERR3 . . . . . . . . . . . . . .  	L NEAR	0303	CODE
ERR4 . . . . . . . . . . . . . .  	L NEAR	022D	CODE
ERROREXIT  . . . . . . . . . . .  	L NEAR	0273	CODE
ERROR_ACCESS_DENIED  . . . . . .  	Number	0005	
ERROR_ARENA_TRASHED  . . . . . .  	Number	0007	
ERROR_BAD_ENVIRONMENT  . . . . .  	Number	000A	
ERROR_BAD_FORMAT . . . . . . . .  	Number	000B	
ERROR_CURRENT_DIRECTORY  . . . .  	Number	0010	
ERROR_FILE_NOT_FOUND . . . . . .  	Number	0002	
ERROR_INVALID_ACCESS . . . . . .  	Number	000C	
ERROR_INVALID_BLOCK  . . . . . .  	Number	0009	
ERROR_INVALID_DATA . . . . . . .  	Number	000D	
ERROR_INVALID_DRIVE  . . . . . .  	Number	000F	
ERROR_INVALID_FUNCTION . . . . .  	Number	0001	
ERROR_INVALID_HANDLE . . . . . .  	Number	0006	
ERROR_NOT_ENOUGH_MEMORY  . . . .  	Number	0008	
ERROR_NOT_SAME_DEVICE  . . . . .  	Number	0011	
ERROR_NO_MORE_FILES  . . . . . .  	Number	0012	
ERROR_PATH_NOT_FOUND . . . . . .  	Number	0003	
ERROR_TOO_MANY_OPEN_FILES  . . .  	Number	0004	
EXEC . . . . . . . . . . . . . .  	Number	004B	
EXEC_BAD_ENVIRONMENT . . . . . .  	Alias	 ERROR_BAD_ENVIRONMENT		
EXEC_BAD_FORMAT  . . . . . . . .  	Alias	 ERROR_BAD_FORMAT		
EXEC_FILE_NOT_FOUND  . . . . . .  	Alias	 ERROR_FILE_NOT_FOUND		
EXEC_FUNC_NO_EXECUTE . . . . . .  	Number	0001	
EXEC_FUNC_OVERLAY  . . . . . . .  	Number	0002	
EXEC_INVALID_FUNCTION  . . . . .  	Alias	 ERROR_INVALID_FUNCTION		
EXEC_NOT_ENOUGH_MEMORY . . . . .  	Alias	 ERROR_NOT_ENOUGH_MEMORY		
EXE_VALID_OLD_SIGNATURE  . . . .  	Number	4D5A	
EXE_VALID_SIGNATURE  . . . . . .  	Number	5A4D	
EXIT . . . . . . . . . . . . . .  	Number	004C	
EXIT_ABORT . . . . . . . . . . .  	Number	0000	
EXIT_CTRL_C  . . . . . . . . . .  	Number	0001	
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 17:57:04

MS-DOS SYS Program                                          Symbols-8
                                                             

EXIT_HARD_ERROR  . . . . . . . .  	Number	0002	
EXIT_KEEP_PROCESS  . . . . . . .  	Number	0003	
EXIT_TERMINATE . . . . . . . . .  	Number	0000	

FALSE  . . . . . . . . . . . . .  	Number	0000	
FATPRI . . . . . . . . . . . . .  	Number	001E	
FCB_CLOSE  . . . . . . . . . . .  	Number	0010	
FCB_CREATE . . . . . . . . . . .  	Number	0016	
FCB_DELETE . . . . . . . . . . .  	Number	0013	
FCB_OPEN . . . . . . . . . . . .  	Number	000F	
FCB_RANDOM_READ  . . . . . . . .  	Number	0021	
FCB_RANDOM_READ_BLOCK  . . . . .  	Number	0027	
FCB_RANDOM_WRITE . . . . . . . .  	Number	0022	
FCB_RANDOM_WRITE_BLOCK . . . . .  	Number	0028	
FCB_RENAME . . . . . . . . . . .  	Number	0017	
FCB_SEQ_READ . . . . . . . . . .  	Number	0014	
FCB_SEQ_WRITE  . . . . . . . . .  	Number	0015	
FILDIRENT  . . . . . . . . . . .  	Number	0010	
FILETIMES_INVALID_FUNCTION . . .  	Alias	 ERROR_INVALID_FUNCTION		
FILETIMES_INVALID_HANDLE . . . .  	Alias	 ERROR_INVALID_HANDLE		
FILE_TIMES . . . . . . . . . . .  	Number	0057	
FILLMEM  . . . . . . . . . . . .  	L NEAR	027B	CODE
FILPERPROC . . . . . . . . . . .  	Number	0014	
FINDFIRST_FILE_NOT_FOUND . . . .  	Alias	 ERROR_FILE_NOT_FOUND		
FINDFIRST_NO_MORE_FILES  . . . .  	Alias	 ERROR_NO_MORE_FILES		
FINDNEXT_NO_MORE_FILES . . . . .  	Alias	 ERROR_NO_MORE_FILES		
FIND_FIRST . . . . . . . . . . .  	Number	004E	
FIND_NEXT  . . . . . . . . . . .  	Number	004F	
FREEPRI  . . . . . . . . . . . .  	Number	0000	

GETEXTENDEDERROR . . . . . . . .  	Number	0059	
GETKEYSTROKE . . . . . . . . . .  	L NEAR	036C	CODE
GETSYS . . . . . . . . . . . . .  	V BYTE 	0000	DATA	External
GETSYSLEN  . . . . . . . . . . .  	V WORD 	0000	DATA	External
GET_CURRENT_PDB  . . . . . . . .  	Number	0051	
GET_DATE . . . . . . . . . . . .  	Number	002A	
GET_DEFAULT_DPB  . . . . . . . .  	Number	001F	
GET_DEFAULT_DRIVE  . . . . . . .  	Number	0019	
GET_DMA  . . . . . . . . . . . .  	Number	002F	
GET_DPB  . . . . . . . . . . . .  	Number	0032	
GET_DRIVE_FREESPACE  . . . . . .  	Number	0036	
GET_FCB_FILE_LENGTH  . . . . . .  	Number	0023	
GET_FCB_POSITION . . . . . . . .  	Number	0024	
GET_INDOS_FLAG . . . . . . . . .  	Number	0034	
GET_INTERRUPT_VECTOR . . . . . .  	Number	0035	
GET_IN_VARS  . . . . . . . . . .  	Number	0052	
GET_TIME . . . . . . . . . . . .  	Number	002C	
GET_VERIFY_ON_WRITE  . . . . . .  	Number	0054	
GET_VERSION  . . . . . . . . . .  	Number	0030	
GOTBADDOS  . . . . . . . . . . .  	L NEAR	011C	CODE

HEADER . . . . . . . . . . . . .  	L BYTE 	0102	CODE

IBMJAPVER  . . . . . . . . . . .  	Alias	 FALSE		
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 17:57:04

MS-DOS SYS Program                                          Symbols-9
                                                             

IBMVER . . . . . . . . . . . . .  	Alias	 FALSE		
INTBASE  . . . . . . . . . . . .  	Number	0080	
INTERNATIONAL  . . . . . . . . .  	Number	0038	
INTERNATIONAL_INVALID_FUNCTION .  	Alias	 ERROR_INVALID_FUNCTION		
INTERNAT_BLOCK_MAX . . . . . . .  	Number	0020	
INTTAB . . . . . . . . . . . . .  	Number	0020	
INT_ABORT  . . . . . . . . . . .  	Alias	 INTTAB		
INT_COMMAND  . . . . . . . . . .  	Number	0021	
INT_CTRL_C . . . . . . . . . . .  	Number	0023	
INT_DISK_READ  . . . . . . . . .  	Number	0025	
INT_DISK_WRITE . . . . . . . . .  	Number	0026	
INT_FASTCON  . . . . . . . . . .  	Number	0029	
INT_FATAL_ABORT  . . . . . . . .  	Number	0024	
INT_KEEP_PROCESS . . . . . . . .  	Number	0027	
INT_SPOOLER  . . . . . . . . . .  	Number	0028	
INT_TERMINATE  . . . . . . . . .  	Number	0022	
IOCTL  . . . . . . . . . . . . .  	Number	0044	
IOCTL_INVALID_DATA . . . . . . .  	Alias	 ERROR_INVALID_DATA		
IOCTL_INVALID_FUNCTION . . . . .  	Alias	 ERROR_INVALID_FUNCTION		
IOCTL_INVALID_HANDLE . . . . . .  	Alias	 ERROR_INVALID_HANDLE		

KEEP_PROCESS . . . . . . . . . .  	Number	0031	

LBRPRI . . . . . . . . . . . . .  	Number	0002	
LBWPRI . . . . . . . . . . . . .  	Number	0004	
LOCKOPER . . . . . . . . . . . .  	Number	005C	
LSEEK  . . . . . . . . . . . . .  	Number	0042	
LSEEK_INVALID_FUNCTION . . . . .  	Alias	 ERROR_INVALID_FUNCTION		
LSEEK_INVALID_HANDLE . . . . . .  	Alias	 ERROR_INVALID_HANDLE		

MI_INT . . . . . . . . . . . . .  	Number	00CD	
MI_LONG_CALL . . . . . . . . . .  	Number	009A	
MI_LONG_JMP  . . . . . . . . . .  	Number	00EA	
MI_LONG_RET  . . . . . . . . . .  	Number	00CB	
MKDIR  . . . . . . . . . . . . .  	Number	0039	
MKDIR_ACCESS_DENIED  . . . . . .  	Alias	 ERROR_ACCESS_DENIED		
MKDIR_PATH_NOT_FOUND . . . . . .  	Alias	 ERROR_PATH_NOT_FOUND		
MSVER  . . . . . . . . . . . . .  	Alias	 TRUE		

NODEST . . . . . . . . . . . . .  	V BYTE 	0000	DATA	External
NODESTLEN  . . . . . . . . . . .  	V WORD 	0000	DATA	External
NO_ERROR_OCCURRED  . . . . . . .  	Text  0                                                              ?		

OEM_C1 . . . . . . . . . . . . .  	Number	00F9	
OEM_C2 . . . . . . . . . . . . .  	Number	00FA	
OEM_C3 . . . . . . . . . . . . .  	Number	00FB	
OEM_C4 . . . . . . . . . . . . .  	Number	00FC	
OEM_C5 . . . . . . . . . . . . .  	Number	00FD	
OEM_C6 . . . . . . . . . . . . .  	Number	00FE	
OEM_C7 . . . . . . . . . . . . .  	Number	00FF	
OKDOS  . . . . . . . . . . . . .  	L NEAR	0125	CODE
OPEN . . . . . . . . . . . . . .  	Number	003D	
OPENFILE . . . . . . . . . . . .  	L NEAR	02D7	CODE
OPEN_ACCESS_DENIED . . . . . . .  	Alias	 ERROR_ACCESS_DENIED		
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 17:57:04

MS-DOS SYS Program                                          Symbols-10
                                                             

OPEN_FILE_NOT_FOUND  . . . . . .  	Alias	 ERROR_FILE_NOT_FOUND		
OPEN_FOR_BOTH  . . . . . . . . .  	Number	0002	
OPEN_FOR_READ  . . . . . . . . .  	Number	0000	
OPEN_FOR_WRITE . . . . . . . . .  	Number	0001	
OPEN_INVALID_ACCESS  . . . . . .  	Alias	 ERROR_INVALID_ACCESS		
OPEN_TOO_MANY_OPEN_FILES . . . .  	Alias	 ERROR_TOO_MANY_OPEN_FILES		

PARSE_FILE_DESCRIPTOR  . . . . .  	Number	0029	
PDOS . . . . . . . . . . . . . .  	L WORD 	0041	DATA
PDOSEND  . . . . . . . . . . . .  	L WORD 	0043	DATA
PUTSYS . . . . . . . . . . . . .  	L NEAR	01E7	CODE

RAW_CON_INPUT  . . . . . . . . .  	Number	0007	
RAW_CON_IO . . . . . . . . . . .  	Number	0006	
READ . . . . . . . . . . . . . .  	Number	003F	
READ_ACCESS_DENIED . . . . . . .  	Alias	 ERROR_ACCESS_DENIED		
READ_INVALID_HANDLE  . . . . . .  	Alias	 ERROR_INVALID_HANDLE		
RENAME . . . . . . . . . . . . .  	Number	0056	
RENAME_ACCESS_DENIED . . . . . .  	Alias	 ERROR_ACCESS_DENIED		
RENAME_FILE_NOT_FOUND  . . . . .  	Alias	 ERROR_FILE_NOT_FOUND		
RENAME_NOT_SAME_DEVICE . . . . .  	Alias	 ERROR_NOT_SAME_DEVICE		
RET_C  . . . . . . . . . . . . .  	NEAR 	02DC	CODE
RET_L  . . . . . . . . . . . . .  	NEAR 	0376	CODE
RET_Z  . . . . . . . . . . . . .  	NEAR 	032A	CODE
RMDIR  . . . . . . . . . . . . .  	Number	003A	
RMDIR_ACCESS_DENIED  . . . . . .  	Alias	 ERROR_ACCESS_DENIED		
RMDIR_CURRENT_DIRECTORY  . . . .  	Alias	 ERROR_CURRENT_DIRECTORY		
RMDIR_PATH_NOT_FOUND . . . . . .  	Alias	 ERROR_PATH_NOT_FOUND		
RPRI . . . . . . . . . . . . . .  	Number	0006	

SERROR . . . . . . . . . . . . .  	L NEAR	026A	CODE
SERVERCALL . . . . . . . . . . .  	Number	005D	
SETBLOCK . . . . . . . . . . . .  	Number	004A	
SETBLOCK_ARENA_TRASHED . . . . .  	Alias	 ERROR_ARENA_TRASHED		
SETBLOCK_INVALID_BLOCK . . . . .  	Alias	 ERROR_INVALID_BLOCK		
SETBLOCK_INVALID_FUNCTION  . . .  	Alias	 ERROR_INVALID_FUNCTION		
SETBLOCK_NOT_ENOUGH_MEMORY . . .  	Alias	 ERROR_NOT_ENOUGH_MEMORY		
SETDPB . . . . . . . . . . . . .  	Number	0053	
SET_CTRL_C_TRAPPING  . . . . . .  	Number	0033	
SET_CURRENT_PDB  . . . . . . . .  	Number	0050	
SET_DATE . . . . . . . . . . . .  	Number	002B	
SET_DEFAULT_DRIVE  . . . . . . .  	Number	000E	
SET_DMA  . . . . . . . . . . . .  	Number	001A	
SET_INTERRUPT_VECTOR . . . . . .  	Number	0025	
SET_OEM_HANDLER  . . . . . . . .  	Number	00F8	
SET_TIME . . . . . . . . . . . .  	Number	002D	
SET_VERIFY_ON_WRITE  . . . . . .  	Number	002E	
SF_DEFAULT_NUMBER  . . . . . . .  	Number	0005	
START  . . . . . . . . . . . . .  	L NEAR	0100	CODE
STDAUX . . . . . . . . . . . . .  	Number	0003	
STDERR . . . . . . . . . . . . .  	Number	0002	
STDIN  . . . . . . . . . . . . .  	Number	0000	
STDOUT . . . . . . . . . . . . .  	Number	0001	
STDPRN . . . . . . . . . . . . .  	Number	0004	
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 17:57:04

MS-DOS SYS Program                                          Symbols-11
                                                             

STD_AUX_INPUT  . . . . . . . . .  	Number	0003	
STD_AUX_OUTPUT . . . . . . . . .  	Number	0004	
STD_CON_INPUT  . . . . . . . . .  	Number	0001	
STD_CON_INPUT_FLUSH  . . . . . .  	Number	000C	
STD_CON_INPUT_NO_ECHO  . . . . .  	Number	0008	
STD_CON_INPUT_STATUS . . . . . .  	Number	000B	
STD_CON_OUTPUT . . . . . . . . .  	Number	0002	
STD_CON_STRING_INPUT . . . . . .  	Number	000A	
STD_CON_STRING_OUTPUT  . . . . .  	Number	0009	
STD_PRINTER_OUTPUT . . . . . . .  	Number	0005	
SYS  . . . . . . . . . . . . . .  	L NEAR	0157	CODE
SYSDRV . . . . . . . . . . . . .  	V BYTE 	0000	DATA	External

TRUE . . . . . . . . . . . . . .  	Number	FFFF	

UNLINK . . . . . . . . . . . . .  	Number	0041	
UNLINK_ACCESS_DENIED . . . . . .  	Alias	 ERROR_ACCESS_DENIED		
UNLINK_FILE_NOT_FOUND  . . . . .  	Alias	 ERROR_FILE_NOT_FOUND		
USECX  . . . . . . . . . . . . .  	L NEAR	0298	CODE
USECXDOS . . . . . . . . . . . .  	L NEAR	02C3	CODE
USERIDOPER . . . . . . . . . . .  	Number	005E	

WAIT . . . . . . . . . . . . . .  	Number	004D	
WPRI . . . . . . . . . . . . . .  	Number	0008	
WRITE  . . . . . . . . . . . . .  	Number	0040	
WRITE_ACCESS_DENIED  . . . . . .  	Alias	 ERROR_ACCESS_DENIED		
WRITE_INVALID_HANDLE . . . . . .  	Alias	 ERROR_INVALID_HANDLE		

XDUP . . . . . . . . . . . . . .  	Number	0045	
XDUP2  . . . . . . . . . . . . .  	Number	0046	

??0000 . . . . . . . . . . . . .  	L NEAR	02D6	CODE
??0001 . . . . . . . . . . . . .  	L NEAR	02DC	CODE
??0003 . . . . . . . . . . . . .  	L NEAR	0302	CODE
??0004 . . . . . . . . . . . . .  	L NEAR	032A	CODE
??0006 . . . . . . . . . . . . .  	L NEAR	036B	CODE
??0007 . . . . . . . . . . . . .  	L NEAR	0376	CODE


   1821 Source  Lines
   1943 Total   Lines
    557 Symbols

  20858 Bytes symbol space free

      0 Warning Errors
      0 Severe  Errors
