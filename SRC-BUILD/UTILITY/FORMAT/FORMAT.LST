Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 16:54:33

                                                            Page     1-1
                                                            

       1                                ;**************************************
					************************* 
       2                                ; 
       3                                ;       86-DOS FORMAT DISK UTILITY 
       4                                ; 
       5                                ;       This routine formats a new disk
					,clears the FAT and DIRECTORY 
       6                                ;       then optionally copies the SYST
					EM and COMMAND.COM to this 
       7                                ;       new disk 
       8                                ; 
       9                                ;       SYNTAX: FORMAT  [drive][/switch
					1][/switch2]...[/switch16] 
      10                                ; 
      11                                ;       Regardless of the drive designa
					tor , the user will be 
      12                                ;       prompted to insert the diskette
					 to be formatted. 
      13                                ; 
      14                                ;**************************************
					************************* 
      15                                 
      16                                ;Mod to ask for volume ID ARR 5/12/82 
      17                                ; 05/19/82 Fixed rounding bug in CLUSCA
					L:       ARR 
      18                                ;REV 1.5 
      19                                ;               Added rev number messag
					e 
      20                                ;               Added dir attribute to 
					DELALL FCB 
      21                                ;REV 2.00 
      22                                ;               Redone for 2.0 
      23                                ;REV 2.10 
      24                                ;               5/1/83 ARR Re-do to tra
					nsfer system on small memory systems 
      25                                 
      26 = 0000                         FALSE   EQU     0 
      27 = FFFF                         TRUE    EQU     NOT FALSE 
      28                                 
      29 =                              IBMJAPVER EQU   FALSE           ; SET O
					NLY ONE SWITCH TO TRUE! 
      30 =                              IBMVER  EQU     FALSE 
      31 =                              MSVER   EQU     TRUE 
      32                                 
      33 =                              KANJI   EQU     FALSE 
      34                                 
      35                                        .list 
      36                                 
      37                                 
      38                                ;FORMAT Pre-defined switches 
      39 = 0001                         SYSSW   EQU     1               ; Syste
					m transfer 
      40 = 0002                         VOLSW   EQU     2               ; Volum
					e ID prompt 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 16:54:33

                                                            Page     1-2
                                                            

      41 = 0004                         OLDSW   EQU     4               ; E5 di
					r terminator 
      42                                 
      43                                 
      44 = 005C                         DRNUM   EQU     5CH 
      45                                 
      46 = 0015                         RECLEN  EQU     fcb_RECSIZ+7 
      47 = 0028                         RR      EQU     fcb_RR+7 
      48                                 
      49                                ;Per system file data structure 
      50                                 
      51                                FILESTRUC       STRUC 
      52 0000  ????                     FILE_HANDLE     DW      ?              
					 ; Source handle 
      53 0002  ????                     FILE_SIZEP      DW      ?              
					 ; File size in para 
      54 0004  ????????                 FILE_SIZEB      DD      ?              
					 ; File size in bytes 
      55 0008  ????????                 FILE_OFFSET     DD      ?              
					 ; Offset in file (partial) 
      56 000C  ????                     FILE_START      DW      ?              
					 ; Para number of start in buffer 
      57 000E  ????                     FILE_DATE       DW      ?              
					 ; Date of file 
      58 0010  ????                     FILE_TIME       DW      ?              
					 ; Time of file 
      59 0012  ??                       FILE_NAME       DB      ?              
					 ; Start of name 
      60 0013                           FILESTRUC       ENDS 
      61                                 
      62 0000                           CODE    SEGMENT PUBLIC 'CODE' 
      63                                 
      64                                        ASSUME  CS:CODE,DS:CODE,ES:CODE
					 
      65                                 
      66 0100                                   ORG     100H 
      67                                 
      68                                ;For OEM module 
      69                                        PUBLIC          SWITCHMAP,DRIVE
					 
      70                                        EXTRN           HARDFLAG:BYTE  
					        ;0 = REMOVABLE MEDIA 
      71                                        EXTRN           SWITCHLIST:BYTE
					,FATID:BYTE,FATSPACE:WORD 
      72                                        EXTRN           STARTSECTOR:WOR
					D,FREESPACE:WORD,INIT:NEAR 
      73                                        EXTRN           DISKFORMAT:NEAR
					,BADSECTOR:NEAR,DONE:NEAR 
      74                                        EXTRN           WRTFAT:NEAR 
      75                                 
      76                                ;For FORMES module 
      77                                        EXTRN   WAITYN:NEAR,REPORT:NEAR
					 
      78                                        PUBLIC  PRINT,CRLF,DISP32BITS,U
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 16:54:33

                                                            Page     1-3
                                                            

					NSCALE,FDSKSIZ,SECSIZ,CLUSSIZ 
      79                                        PUBLIC  SYSSIZ,BADSIZ 
      80                                 
      81 0100                           START: 
      82 0100  EB 09                            JMP     SHORT FSTRT 
      83                                 
      84 0102  56 65 72 73 20 32 2E     HEADER  DB      "Vers 2.10" 
      85       31 30                    
      86                                 
      87 010B                           FSTRT: 
      88 010B  BC 0DD0 R                        MOV     SP,OFFSET STACK        
					 ;Use internal stack 
      89                                 
      90                                ;Code to print header 
      91                                ;       PUSH    AX 
      92                                ;       MOV     DX,OFFSET HEADER 
      93                                ;       CALL    PRINT 
      94                                ;       POP     AX 
      95                                 
      96 = 020B                         DOSVER_HIGH     EQU  020BH   ;2.11 in h
					ex 
      97 010E  50                               PUSH    AX              ;Save D
					RIVE validity info 
      98 010F  B4 30                            MOV     AH,GET_VERSION 
      99 0111  CD 21                            INT     21H 
     100 0113  86 E0                            XCHG    AH,AL           ;Turn i
					t around to AH.AL 
     101 0115  3D 020B                          CMP     AX,DOSVER_HIGH 
     102 0118  73 09                            JAE     OKDOS 
     103 011A                           GOTBADDOS: 
     104 011A  BA 0000 E                        MOV     DX,OFFSET BADVER 
     105 011D  B4 09                            MOV     AH,STD_CON_STRING_OUTPU
					T 
     106 011F  CD 21                            INT     21H 
     107 0121  CD 20                            INT     20H 
     108                                 
     109 0123                           OKDOS: 
     110                                 
     111                                        ENDIF 
     112                                 
     113 0123  58                               POP     AX 
     114                                 
     115 0124  3C FF                            CMP     AL,0FFH                
					 ;See if invalid drive specified 
     116 0126  75 09                            JNZ     DRVGD                  
					 ;If not proceed 
     117 0128  BA 0000 E                        MOV     DX,OFFSET INVDRV       
					 ;Invalid drive message 
     118 012B  E8 048F R                        CALL    PRINT                  
					 ;Print the message 
     119 012E  E9 04B0 R                        JMP     FEXIT2                 
					 ;Exit 
     120 0131                           DRVGD: 
     121 0131  B4 19                            MOV     AH,GET_DEFAULT_DRIVE   
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 16:54:33

                                                            Page     1-4
                                                            

					 ;Must get the default drive 
     122 0133  CD 21                            INT     21H                    
					 ;Default now in AL 
     123 0135  A2 0B36 R                        MOV     DEFALT,AL              
					 ;Save for later 
     124 0138  04 41                            ADD     AL,"A" 
     125 013A  A2 0B97 R                        MOV     [BIODRV],AL 
     126 013D  A2 0BB3 R                        MOV     [DOSDRV],AL 
     127 0140  A2 0000 E                        MOV     [SYSDRV],AL 
     128 0143  A2 0BD2 R                        MOV     [COMDRV],AL 
     129 0146  BE 005C                          MOV     SI,DRNUM               
					 ;So we can get our parameters 
     130 0149  AC                               LODSB                          
					 ;Fetch drive designation 
     131 014A  0A C0                            OR      AL,AL                  
					 ;See if specified 
     132 014C  75 05                            JNZ     DRVSPEC                
					 ;If specfied proceed 
     133 014E  A0 0B36 R                        MOV     AL,DEFALT 
     134 0151  FE C0                            INC     AL 
     135 0153                           DRVSPEC: 
     136 0153  FE C8                            DEC     AL                     
					 ;Drive designator now correct 
     137 0155  A2 005C                          MOV     BYTE PTR DS:[DRNUM],AL 
					 ;And updated 
     138 0158  A2 0B35 R                        MOV     DRIVE,AL               
					 ;Save copy 
     139 015B  BA 08E8 R                        MOV     DX,OFFSET INT_23 
     140 015E  B4 25                            MOV     AH,SET_INTERRUPT_VECTOR
					 
     141 0160  B0 23                            MOV     AL,23H 
     142 0162  CD 21                            INT     21H                    
					 ;Set ^C vector 
     143                                        ;Get all the swith information 
					from the command line 
     144 0164  33 C0                            XOR     AX,AX 
     145 0166  B4 37                            MOV     AH,CHAR_OPER           
					 ;GET SWITCH CHARACTER 
     146 0168  CD 21                            INT     21H                    
					 ;CALL THE DOS 
     147 016A  88 16 0B31 R                     MOV     [SWTCH],DL 
     148                                 
     149 016E  33 DB                            XOR     BX,BX                  
					 ;Store switch information in BX 
     150 0170  BE 0081                          MOV     SI,81H                 
					 ;Point to the command line buffer 
     151 0173                           NXTSWT: 
     152 0173  E8 01BD R                        CALL    SCANOFF 
     153 0176  AC                               LODSB 
     154 0177  3A 06 0B31 R                     CMP     AL,[SWTCH] 
     155 017B  74 16                            JZ      GETPARM 
     156 017D  3C 0D                            CMP     AL,13 
     157 017F  74 50                            JZ      SAVSWT 
     158 0181  AC                               LODSB                          
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 16:54:33

                                                            Page     1-5
                                                            

					 ;Get next character 
     159 0182  3C 3A                            CMP     AL,":"                 
					 ;Is it a drive specifier? 
     160 0184  75 2E                            JNZ     INVALID                
					 ;No -- invalid parameter 
     161 0186  80 3E 0B33 R 00                  CMP     BYTE PTR DBLFLG,0      
					 ;Is is the only drive specifier we've 
					seen 
     162 018B  75 27                            JNZ     INVALID                
					 ;No -- invalid parameter 
     163 018D  FE 06 0B33 R                     INC     BYTE PTR DBLFLG        
					 ;Yes -- set the flag 
     164 0191  EB E0                            JMP     SHORT NXTSWT 
     165 0193                           GETPARM: 
     166 0193  AC                               LODSB 
     167                                        ;Convert any lower case input i
					nto upper case 
     168 0194  3C 41                            CMP     AL,41H 
     169 0196  7C 02                            JL      GETCHR                 
					 ;Switch is a digit don't try to conver
					t it 
     170 0198  24 DF                            AND     AL,0DFH 
     171 019A                           GETCHR: 
     172 019A  8A 0E 0000 E                     MOV     CL,SWITCHLIST          
					 ;Number of legal switches 
     173 019E  0A C9                            OR      CL,CL                  
					 ;If it's none we shouldn't be here 
     174 01A0  74 12                            JZ      INVALID                
					 ;Report the error 
     175 01A2  B5 00                            MOV     CH,0 
     176 01A4  BF 0001 E                        MOV     DI,1+OFFSET SWITCHLIST 
					 ;Point to the legal switch characters 
     177 01A7  F2/ AE                           REPNE   SCASB 
     178 01A9  75 09                            JNZ     INVALID 
     179 01AB  B8 0001                          MOV     AX,1 
     180 01AE  D3 E0                            SHL     AX,CL 
     181 01B0  0B D8                            OR      BX,AX                  
					 ;Set the appropriate bit in SWITCHMAP 
     182 01B2  EB BF                            JMP     SHORT NXTSWT           
					 ;See if there are anymore 
     183                                 
     184 01B4                           INVALID: 
     185 01B4  BA 0000 E                        MOV     DX,OFFSET INVPAR 
     186 01B7  E8 048F R                        CALL    PRINT 
     187 01BA  E9 04AD R                        JMP     FEXIT 
     188                                 
     189 01BD                           SCANOFF: 
     190 01BD  AC                               LODSB 
     191 01BE  3C 20                            CMP     AL,20H 
     192 01C0  74 FB                            JZ      SCANOFF 
     193 01C2  3C 09                            CMP     AL,9 
     194 01C4  74 F7                            JZ      SCANOFF 
     195 01C6  4E                               DEC     SI 
     196 01C7  C3                               RET 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 16:54:33

                                                            Page     1-6
                                                            

     197                                 
     198 01C8                           MEMERR: 
     199 01C8  BA 0000 E                        MOV     DX,OFFSET MEMEX 
     200 01CB  E8 048F R                        CALL    PRINT 
     201 01CE  E9 04AD R                        JMP     FEXIT 
     202                                 
     203                                 
     204 01D1                           SAVSWT: 
     205                                 
     206                                        ENDIF 
     207                                 
     208 01D1  89 1E 0C62 R                     MOV     SWITCHMAP,BX 
     209 01D5  F7 06 0C62 R 0001                TEST    SWITCHMAP,SYSSW 
     210 01DB  74 3D                            JZ      INITCALL 
     211 01DD  E8 08CA R                        CALL    SAVUDIRS 
     212 01E0  8B 1E 0000 E                     MOV     BX,[FREESPACE] 
     213 01E4  83 C3 0F                         ADD     BX,15 
     214 01E7  B1 04                            MOV     CL,4 
     215 01E9  D3 EB                            SHR     BX,CL 
     216 01EB  0E                               PUSH    CS 
     217 01EC  07                               POP     ES 
     218 01ED  B4 4A                            MOV     AH,SETBLOCK 
     219 01EF  CD 21                            INT     21H 
     220 01F1  BB FFFF                          MOV     BX,0FFFFH 
     221 01F4  B4 48                            MOV     AH,ALLOC 
     222 01F6  CD 21                            INT     21H 
     223 01F8  0B DB                            OR      BX,BX 
     224 01FA  74 CC                            JZ      MEMERR                 
					 ;No memory 
     225 01FC  89 1E 0B3D R                     MOV     [MSIZE],BX 
     226 0200  B4 48                            MOV     AH,ALLOC 
     227 0202  CD 21                            INT     21H 
     228 0204  72 C2                            JC      MEMERR                 
					 ;No memory 
     229 0206  A3 0B3B R                        MOV     [MSTART],AX 
     230 0209  BA 0B31 R                        MOV     DX,OFFSET SWTCH 
     231 020C  B4 3B                            MOV     AH,CHDIR 
     232 020E  CD 21                            INT     21H                    
					 ;Go to root on default drive (source) 
     233                                 
     234 0210                           RDFRST: 
     235 0210  E8 0647 R                        CALL    READDOS                
					 ;Read BIOS and DOS 
     236 0213  73 05                            JNC     INITCALL               
					 ;OK -- read next file 
     237 0215                           NEEDSYS: 
     238 0215  E8 04B2 R                        CALL    SYSPRM                 
					 ;Prompt for system disk 
     239 0218  EB F6                            JMP     RDFRST                 
					 ;Try again 
     240                                 
     241 021A                           INITCALL: 
     242 021A  E8 0000 E                        CALL    INIT                   
					 ;Let OEM read any files before disk is
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 16:54:33

                                                            Page     1-7
                                                            

					 changed 
     243 021D  73 09                            JNC     SWITCHCHK 
     244 021F  BA 0000 E                        MOV     DX,OFFSET FRMTERR 
     245 0222  E8 048F R                        CALL    PRINT 
     246 0225  E9 04AD R                        JMP     FEXIT 
     247                                 
     248 0228                           SWITCHCHK: 
     249 0228  8B 16 0C62 R                     MOV     DX,SWITCHMAP 
     250 022C  89 16 0C64 R                     MOV     SWITCHCOPY,DX 
     251                                 
     252 0230                           SYSLOOP: 
     253 0230  C7 06 0C76 R 0000                MOV     WORD PTR BADSIZ,0      
					 ;Must intialize for each iteration 
     254 0236  C7 06 0C78 R 0000                MOV     WORD PTR BADSIZ+2,0 
     255 023C  C7 06 0C6E R 0000                MOV     WORD PTR SYSSIZ,0 
     256 0242  C7 06 0C70 R 0000                MOV     WORD PTR SYSSIZ+2,0 
     257 0248  C6 06 0B33 R 00                  MOV     BYTE PTR DBLFLG,0 
     258 024D  C6 06 0B34 R 00                  MOV     BYTE PTR CLEARFLG,0 
     259 0252  8B 16 0C64 R                     MOV     DX,SWITCHCOPY 
     260 0256  89 16 0C62 R                     MOV     SWITCHMAP,DX           
					 ;Restore original Switches 
     261 025A  A0 0B35 R                        MOV     AL,DRIVE               
					 ;Fetch drive 
     262 025D  04 41                            ADD     AL,"A"                 
					 ;(AL)= ASCII designation 
     263 025F  A2 0000 E                        MOV     BYTE PTR SNGDRV,AL     
					 ;Fill out the message 
     264 0262  A2 0000 E                        MOV     BYTE PTR TARGDRV,AL 
     265 0265  A2 0000 E                        MOV     BYTE PTR HRDDRV,AL 
     266 0268  E8 04D5 R                        CALL    DSKPRM                 
					 ;Prompt for new disk 
     267 026B  E8 0000 E                        CALL    DISKFORMAT             
					 ;Format the disk 
     268 026E  73 08                            JNC     GETTRK 
     269 0270                           FRMTPROB: 
     270 0270  BA 0000 E                        MOV     DX,OFFSET FRMTERR 
     271 0273  E8 048F R                        CALL    PRINT 
     272 0276  EB B8                            JMP     SHORT SYSLOOP 
     273                                 
     274                                        ;Mark any bad sectors in the FA
					Ts 
     275                                        ;And keep track of how many byt
					es there are in bad sectors 
     276                                 
     277 0278                           GETTRK: 
     278 0278  E8 0000 E                        CALL    BADSECTOR              
					 ;Do bad track fix-up 
     279 027B  72 F3                            JC      FRMTPROB               
					 ;Had an error in Formatting - can't re
					cover 
     280 027D  3D 0000                          CMP     AX,0                   
					 ;Are we finished? 
     281 0280  75 03                            JNZ     TRKFND                 
					 ;No - check error conditions 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 16:54:33

                                                            Page     1-8
                                                            

     282 0282  E9 0365 R                        JMP     DRTFAT                 
					 ;Yes 
     283 0285                           TRKFND: 
     284 0285  3B 1E 0000 E                     CMP     BX,STARTSECTOR         
					 ;Are any sectors in the system area ba
					d? 
     285 0289  7D 08                            JGE     CLRTEST 
     286 028B  BA 0000 E                        MOV     DX,OFFSET NOUSE        
					 ;Can't build FATs of Directory 
     287 028E  E8 048F R                        CALL    PRINT 
     288 0291  EB DD                            JMP     FRMTPROB               
					 ;Bad disk -- try again 
     289 0293                           CLRTEST: 
     290 0293  A3 0C7C R                        MOV     SECTORS,AX             
					 ;Save the number of sectors on the tra
					ck 
     291 0296  80 3E 0B34 R 00                  CMP     BYTE PTR CLEARFLG,0    
					 ;Have we already cleared the FAT and D
					IR? 
     292 029B  75 09                            JNZ     SYSTEST                
					 ;Yes - all set 
     293 029D  FE 06 0B34 R                     INC     CLEARFLG               
					 ;Set the flag 
     294 02A1  53                               PUSH    BX 
     295 02A2  E8 051D R                        CALL    CLEAR                  
					 ;Fix-up fat and directory 
     296 02A5  5B                               POP     BX 
     297 02A6                           SYSTEST: 
     298 02A6  F7 06 0C62 R 0001                TEST    SWITCHMAP,SYSSW        
					 ;If system requested calculate size 
     299 02AC  74 3E                            JZ      BAD100 
     300 02AE  80 3E 0B33 R 00                  CMP     BYTE PTR DBLFLG,0      
					 ;Have we already calculated System spa
					ce? 
     301 02B3  75 19                            JNZ     CMPTRKS                
					 ;Yes -- all ready for the compare 
     302 02B5  FE 06 0B33 R                     INC     BYTE PTR DBLFLG        
					 ;No -- set the flag 
     303 02B9  E8 044A R                        CALL    GETSIZE                
					 ;Calculate the system size 
     304 02BC  8B 16 0C70 R                     MOV     DX,WORD PTR SYSSIZ+2 
     305 02C0  A1 0C6E R                        MOV     AX,WORD PTR SYSSIZ 
     306 02C3  F7 36 0C6C R                     DIV     SECSIZ 
     307 02C7  03 06 0000 E                     ADD     AX,STARTSECTOR 
     308 02CB  A3 0C7A R                        MOV     SYSTRKS,AX             
					 ;Space FAT,Dir,and system files requir
					e 
     309 02CE                           CMPTRKS: 
     310 02CE  3B 1E 0C7A R                     CMP     BX,SYSTRKS 
     311 02D2  7F 18                            JG      BAD100 
     312 02D4  BA 0000 E                        MOV     DX,OFFSET NOTSYS       
					 ;Can't transfer a system 
     313 02D7  E8 048F R                        CALL    PRINT 
     314 02DA  81 26 0C62 R FFFE                AND     SWITCHMAP,NOT SYSSW    
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 16:54:33

                                                            Page     1-9
                                                            

					 ;Turn off system transfer switch 
     315 02E0  C7 06 0C70 R 0000                MOV     WORD PTR SYSSIZ+2,0    
					 ;No system to transfer 
     316 02E6  C7 06 0C6E R 0000                MOV     WORD PTR SYSSIZ,0      
					 ;No system to transfer 
     317 02EC                           BAD100: 
     318                                ; BX is the first bad sector #, SECTORS
					 is the number of bad sectors starting 
     319                                ; at BX. This needs to be converted to 
					clusters. The start sector number may 
     320                                ; need to be rounded down to a cluster 
					boundry, the end sector may need to be 
     321                                ; rounded up to a cluster boundry. Know
					 BX >= STARTSECTOR 
     322 02EC  2B 1E 0000 E                     SUB     BX,STARTSECTOR         
					 ; BX is now DATA area relative 
     323 02F0  8B CB                            MOV     CX,BX 
     324 02F2  03 0E 0C7C R                     ADD     CX,SECTORS 
     325 02F6  49                               DEC     CX                     
					 ; CX is now the last bad sector # 
     326 02F7  8B C3                            MOV     AX,BX 
     327 02F9  33 D2                            XOR     DX,DX 
     328 02FB  F7 36 0C6A R                     DIV     CLUSSIZ 
     329 02FF  8B D8                            MOV     BX,AX                  
					 ; BX is rounded down and converted 
     330                                                                       
					 ; to a cluster #. Where cluster 0 = 
     331                                                                       
					 ; first cluster of data. First bad 
     332                                                                       
					 ; Sector is in cluster BX. 
     333 0301  8B C1                            MOV     AX,CX 
     334 0303  33 D2                            XOR     DX,DX 
     335 0305  F7 36 0C6A R                     DIV     CLUSSIZ 
     336 0309  8B C8                            MOV     CX,AX                  
					 ; CX is rounded up and converted to a 
     337                                                                       
					 ; to a cluster #. Where cluster 0 = 
     338                                                                       
					 ; first cluster of data. Last bad 
     339                                                                       
					 ; Sector is in cluster CX. 
     340 030B  2B CB                            SUB     CX,BX 
     341 030D  41                               INC     CX                     
					 ; CX is number of clusters to mark bad
					 
     342 030E  83 C3 02                         ADD     BX,2                   
					 ; Bias start by correct amount since 
     343                                                                       
					 ; first cluster of data is really 
     344                                                                       
					 ; cluster 2. 
     345 0311  A1 0C6A R                        MOV     AX,CLUSSIZ             
					 ; Sectors/Cluster 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 16:54:33

                                                            Page     1-10
                                                            

     346 0314  F7 26 0C6C R                     MUL     SECSIZ                 
					 ; Times Bytes/Sector 
     347 0318  8B E8                            MOV     BP,AX                  
					 ; = Bytes/Cluster 
     348                                 
     349                                ; Mark CX clusters bad starting at clus
					ter BX 
     350 031A                           PACKIT: 
     351 031A  BA 0FF7                          MOV     DX,0FF7H               
					 ;0FF7H indicates a bad sector 
     352 031D  E8 0334 R                        CALL    PACK                   
					 ;Put it in the allocation map 
     353 0320  3B D7                            CMP     DX,DI                  
					 ;Have we already marked it bad? 
     354 0322  74 0A                            JZ      BAD150                 
					 ;if so, don't add it in 
     355 0324  01 2E 0C76 R                     ADD     WORD PTR BADSIZ,BP     
					 ;Add in number of bad bytes 
     356 0328  73 04                            JNB     BAD150 
     357 032A  FF 06 0C78 R                     INC     WORD PTR BADSIZ+2 
     358 032E                           BAD150: 
     359 032E  43                               INC     BX                     
					 ;Next cluster 
     360 032F  E2 E9                            LOOP    PACKIT                 
					 ;Continue for # of clusters 
     361 0331  E9 0278 R                        JMP     GETTRK 
     362                                 
     363                                ; Inputs: 
     364                                        ;BX = Cluster number 
     365                                        ;DX = Data 
     366                                ; Outputs: 
     367                                        ;The data is stored in the FAT 
					at the given cluster. 
     368                                        ;SI is destroyed 
     369                                        ;DI contains the former content
					s 
     370                                        ;No other registers affected 
     371 0334                           PACK: 
     372 0334  53                               PUSH    BX 
     373 0335  51                               PUSH    CX 
     374 0336  52                               PUSH    DX 
     375 0337  8B F3                            MOV     SI,BX 
     376 0339  D1 EB                            SHR     BX,1 
     377 033B  03 1E 0000 E                     ADD     BX,FATSPACE 
     378 033F  03 DE                            ADD     BX,SI 
     379 0341  D1 EE                            SHR     SI,1 
     380 0343  8B 37                            MOV     SI,WORD PTR [BX] 
     381 0345  8B FE                            MOV     DI,SI 
     382 0347  73 0C                            JNB     ALIGNED 
     383 0349  B1 04                            MOV     CL,4 
     384 034B  D3 E2                            SHL     DX,CL 
     385 034D  D3 EF                            SHR     DI,CL 
     386 034F  81 E6 000F                       AND     SI,15 
     387 0353  EB 04                            JMP     SHORT PACKIN 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 16:54:33

                                                            Page     1-11
                                                            

     388                                 
     389 0355                           ALIGNED: 
     390 0355  81 E6 F000                       AND     SI,0F000H 
     391 0359                           PACKIN: 
     392 0359  81 E7 0FFF                       AND     DI,00FFFH              
					 ;DI CONTAINS FORMER CONTENTS 
     393 035D  0B F2                            OR      SI,DX 
     394 035F  89 37                            MOV     WORD PTR[BX],SI 
     395 0361  5A                               POP     DX 
     396 0362  59                               POP     CX 
     397 0363  5B                               POP     BX 
     398 0364  C3                               RET 
     399                                 
     400 0365                           DRTFAT: 
     401 0365  80 3E 0B34 R 00                  CMP     BYTE PTR CLEARFLG,0 
     402 036A  75 19                            JNZ     CLEARED 
     403 036C  E8 051D R                        CALL    CLEAR                  
					 ;Clear the FAT and Dir 
     404 036F  F7 06 0C62 R 0001                TEST    SWITCHMAP,SYSSW        
					 ;If system requested, calculate size 
     405 0375  74 0E                            JZ      CLEARED 
     406 0377  80 3E 0B33 R 00                  CMP     BYTE PTR DBLFLG,0      
					 ;Have we already calculated System spa
					ce? 
     407 037C  75 07                            JNZ     CLEARED                
					 ;Yes 
     408 037E  FE 06 0B33 R                     INC     BYTE PTR DBLFLG        
					 ;No -- set the flag 
     409 0382  E8 044A R                        CALL    GETSIZE                
					 ;Calculate the system size 
     410 0385                           CLEARED: 
     411 0385  E8 0000 E                        CALL    WRTFAT 
     412 0388  73 09                            JNC     FATWRT 
     413 038A  BA 0000 E                        MOV     DX,OFFSET NOUSE 
     414 038D  E8 048F R                        CALL    PRINT 
     415 0390  E9 0270 R                        JMP     FRMTPROB 
     416                                 
     417 0393                           FATWRT: 
     418                                 
     419 0393  F7 06 0C62 R 0001                TEST    SWITCHMAP,SYSSW        
					 ;System desired 
     420 0399  74 1F                            JZ      STATUS 
     421 039B  E8 0758 R                        CALL    WRITEDOS               
					 ;Write the BIOS & DOS 
     422 039E  73 14                            JNC     SYSOK 
     423 03A0  BA 0000 E                        MOV     DX,OFFSET NOTSYS       
					 ;Can't transfer a system 
     424 03A3  E8 048F R                        CALL    PRINT 
     425 03A6  C7 06 0C70 R 0000                MOV     WORD PTR SYSSIZ+2,0    
					 ;No system transfered 
     426 03AC  C7 06 0C6E R 0000                MOV     WORD PTR SYSSIZ,0      
					 ;No system transfered 
     427 03B2  EB 06                            JMP     SHORT STATUS 
     428                                 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 16:54:33

                                                            Page     1-12
                                                            

     429 03B4                           SYSOK: 
     430 03B4  BA 0000 E                        MOV     DX,OFFSET SYSTRAN 
     431 03B7  E8 048F R                        CALL    PRINT 
     432 03BA                           STATUS: 
     433 03BA  E8 04A3 R                        CALL    CRLF 
     434 03BD  E8 05D3 R                        CALL    VOLID 
     435 03C0  B4 0D                            MOV     AH,DISK_RESET 
     436 03C2  CD 21                            INT     21H 
     437 03C4  E8 0000 E                        CALL    DONE                   
					 ;Final call to OEM module 
     438 03C7  73 03                            JNC     REPORTC 
     439 03C9  E9 0270 R                        JMP     FRMTPROB               
					 ;Report an error 
     440                                 
     441 03CC                           REPORTC: 
     442 03CC  E8 0000 E                        CALL    REPORT 
     443                                 
     444 03CF  E8 0494 R                        CALL    MORE                   
					 ;See if more disks to format 
     445 03D2  E9 0230 R                        JMP     SYSLOOP                
					 ;If we returned from MORE then continu
					e 
     446                                 
     447 03D5                           DISP32BITS: 
     448 03D5  53                               PUSH    BX 
     449 03D6  33 C0                            XOR     AX,AX 
     450 03D8  8B D8                            MOV     BX,AX 
     451 03DA  8B E8                            MOV     BP,AX 
     452 03DC  B9 0020                          MOV     CX,32 
     453 03DF                           CONVLP: 
     454 03DF  D1 E6                            SHL     SI,1 
     455 03E1  D1 D7                            RCL     DI,1 
     456 03E3  95                               XCHG    AX,BP 
     457 03E4  E8 0435 R                        CALL    CONVWRD 
     458 03E7  95                               XCHG    AX,BP 
     459 03E8  93                               XCHG    AX,BX 
     460 03E9  E8 0435 R                        CALL    CONVWRD 
     461 03EC  93                               XCHG    AX,BX 
     462 03ED  14 00                            ADC     AL,0 
     463 03EF  E2 EE                            LOOP    CONVLP 
     464                                        ; Conversion complete. Print 8-
					digit number with 2 leading blanks. 
     465 03F1  B9 1810                          MOV     CX,1810H 
     466 03F4  92                               XCHG    DX,AX 
     467 03F5  E8 0420 R                        CALL    DIGIT 
     468 03F8  93                               XCHG    AX,BX 
     469 03F9  E8 040A R                        CALL    OUTWORD 
     470 03FC  95                               XCHG    AX,BP 
     471 03FD  E8 040A R                        CALL    OUTWORD 
     472 0400  5A                               POP     DX 
     473 0401  83 FA 00                         CMP     DX,0 
     474 0404  74 03                            JZ      RET3 
     475 0406  E8 048F R                        CALL    PRINT 
     476 0409  C3                       RET3:   RET 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 16:54:33

                                                            Page     1-13
                                                            

     477                                 
     478 040A                           OUTWORD: 
     479 040A  50                               PUSH    AX 
     480 040B  8A D4                            MOV     DL,AH 
     481 040D  E8 0411 R                        CALL    OUTBYTE 
     482 0410  5A                               POP     DX 
     483 0411                           OUTBYTE: 
     484 0411  8A F2                            MOV     DH,DL 
     485 0413  D0 EA                            SHR     DL,1 
     486 0415  D0 EA                            SHR     DL,1 
     487 0417  D0 EA                            SHR     DL,1 
     488 0419  D0 EA                            SHR     DL,1 
     489 041B  E8 0420 R                        CALL    DIGIT 
     490 041E  8A D6                            MOV     DL,DH 
     491 0420                           DIGIT: 
     492 0420  80 E2 0F                         AND     DL,0FH 
     493 0423  74 02                            JZ      BLANKZER 
     494 0425  B1 00                            MOV     CL,0 
     495 0427                           BLANKZER: 
     496 0427  FE CD                            DEC     CH 
     497 0429  22 CD                            AND     CL,CH 
     498 042B  80 CA 30                         OR      DL,30H 
     499 042E  2A D1                            SUB     DL,CL 
     500 0430  B4 02                            MOV     AH,STD_CON_OUTPUT 
     501 0432  CD 21                            INT     21H 
     502 0434  C3                               RET 
     503                                 
     504 0435                           CONVWRD: 
     505 0435  12 C0                            ADC     AL,AL 
     506 0437  27                               DAA 
     507 0438  86 C4                            XCHG    AL,AH 
     508 043A  12 C0                            ADC     AL,AL 
     509 043C  27                               DAA 
     510 043D  86 C4                            XCHG    AL,AH 
     511 043F  C3                       RET2:   RET 
     512                                 
     513 0440                           UNSCALE: 
     514 0440  D1 E9                            SHR     CX,1 
     515 0442  72 FB                            JC      RET2 
     516 0444  D1 E0                            SHL     AX,1 
     517 0446  D1 D2                            RCL     DX,1 
     518 0448  EB F6                            JMP     SHORT UNSCALE 
     519                                 
     520                                 
     521                                ;**************************************
					**** 
     522                                ; Calculate the size in bytes of the sy
					stem rounded up to sector and 
     523                                ;   cluster boundries, Answer in SYSSIZ
					 
     524                                 
     525 044A                           GETSIZE: 
     526 044A  A1 0B89 R                        MOV     AX,WORD PTR BIOSSIZB   
					           ;And calculate the system si
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 16:54:33

                                                            Page     1-14
                                                            

					ze 
     527 044D  8B 16 0B8B R                     MOV     DX,WORD PTR BIOSSIZB+2 
     528 0451  E8 0465 R                        CALL    FNDSIZ 
     529 0454  A1 0BA5 R                        MOV     AX,WORD PTR DOSSIZB 
     530 0457  8B 16 0BA7 R                     MOV     DX,WORD PTR DOSSIZB+2 
     531 045B  E8 0465 R                        CALL    FNDSIZ 
     532 045E  A1 0BC4 R                        MOV     AX,WORD PTR COMSIZB 
     533 0461  8B 16 0BC6 R                     MOV     DX,WORD PTR COMSIZB+2 
     534                                 
     535                                ;Calculate the number of sectors used f
					or the system 
     536 0465                           FNDSIZ: 
     537 0465  F7 36 0C6C R                     DIV     SECSIZ 
     538 0469  0B D2                            OR      DX,DX 
     539 046B  74 01                            JZ      FNDSIZ0 
     540 046D  40                               INC     AX                     
					 ; Round up to next sector 
     541 046E                           FNDSIZ0: 
     542 046E  50                               PUSH    AX 
     543 046F  33 D2                            XOR     DX,DX 
     544 0471  F7 36 0C6A R                     DIV     CLUSSIZ 
     545 0475  58                               POP     AX 
     546 0476  0B D2                            OR      DX,DX 
     547 0478  74 08                            JZ      ONCLUS 
     548 047A  2B 16 0C6A R                     SUB     DX,CLUSSIZ 
     549 047E  F7 DA                            NEG     DX 
     550 0480  03 C2                            ADD     AX,DX                  
					 ; Round up sector count to cluster 
     551                                                                       
					 ;       boundry 
     552 0482                           ONCLUS: 
     553 0482  F7 26 0C6C R                     MUL     SECSIZ                 
					 ; Turn it back into bytes 
     554 0486  01 06 0C6E R                     ADD     WORD PTR SYSSIZ,AX 
     555 048A  11 16 0C70 R                     ADC     WORD PTR SYSSIZ+2,DX 
     556 048E  C3                               RET 
     557                                 
     558 048F  B4 09                    PRINT:  MOV     AH,STD_CON_STRING_OUTPU
					T             ;Print msg pointed to by 
					DX 
     559 0491  CD 21                            INT     21H 
     560 0493  C3                               RET 
     561                                 
     562 0494  80 3E 0000 E 00          MORE:   CMP     BYTE PTR [HARDFLAG],0  
					 ;Check if removable media 
     563 0499  75 12                            JNZ     FEXIT 
     564 049B  E8 0000 E                        CALL    WAITYN                 
					 ;Get yes or no response 
     565 049E  72 0D                            JB      FEXIT                  
					 ;Exit if CF=1 
     566 04A0  E8 04A3 R                        CALL    CRLF 
     567 04A3                           CRLF: 
     568 04A3  BA 0000 E                        MOV     DX,OFFSET CRLFMSG 
     569 04A6  E8 048F R                        CALL    PRINT 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 16:54:33

                                                            Page     1-15
                                                            

     570 04A9  C3                               RET 
     571                                 
     572 04AA  E8 048F R                PERROR: CALL    PRINT                  
					 ;Print message and exit 
     573 04AD                           FEXIT: 
     574 04AD  E8 08D8 R                        CALL    RESTUDIR               
					 ;Restore users dirs 
     575 04B0                           FEXIT2: 
     576 04B0  CD 20                            INT     20H 
     577                                 
     578                                        ;Prompt the user for a system d
					iskette in the default drive 
     579 04B2                           SYSPRM: 
     580 04B2  B4 19                            MOV     AH,GET_DEFAULT_DRIVE   
					 ;Will find out the default drive 
     581 04B4  CD 21                            INT     21H                    
					 ;Default now in AL 
     582                                  ENDIF 
     583 04B6  04 41                            ADD     AL,41H                 
					 ;Now in Ascii 
     584 04B8  A2 0000 E                        MOV     SYSDRV,AL              
					 ;Text now ok 
     585                                 
     586                                  ENDIF 
     587                                 
     588 04BB  BA 0000 E                        MOV     DX,OFFSET SYSMSG 
     589 04BE  E8 048F R                        CALL    PRINT                  
					 ;Print first line 
     590 04C1  E8 04EF R                        CALL    WAITKY                 
					 ;Wait for a key 
     591 04C4  E8 04A3 R                        CALL    CRLF 
     592 04C7  C3                               RET 
     593                                 
     594 04C8                           TARGPRM: 
     595 04C8  BA 0000 E                        MOV     DX,OFFSET TARGMSG 
     596 04CB  E8 048F R                        CALL    PRINT                  
					 ;Print first line 
     597 04CE  E8 04EF R                        CALL    WAITKY                 
					 ;Wait for a key 
     598 04D1  E8 04A3 R                        CALL    CRLF 
     599 04D4  C3                               RET 
     600                                 
     601 04D5                           DSKPRM: 
     602 04D5  BA 0000 E                        MOV     DX,OFFSET SNGMSG       
					 ;Point to the message 
     603 04D8  80 3E 0000 E 00                  CMP     BYTE PTR [HARDFLAG],0  
					 ;Check if removable media 
     604 04DD  74 03                            JZ      GOPRNIT 
     605 04DF  BA 0000 E                        MOV     DX,OFFSET HRDMSG 
     606 04E2                           GOPRNIT: 
     607 04E2  E8 048F R                        CALL    PRINT                  
					 ;Print the message 
     608 04E5  E8 04EF R                        CALL    WAITKY                 
					 ;Wait for space bar 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 16:54:33

                                                            Page     1-16
                                                            

     609 04E8  E8 04A3 R                        CALL    CRLF 
     610 04EB  E8 04A3 R                        CALL    CRLF 
     611 04EE  C3                               RET 
     612                                 
     613                                        ;Will wait for any key to be de
					pressed. 
     614 04EF                           WAITKY: 
     615 04EF  B8 0C08                          MOV     AX,(STD_CON_INPUT_FLUSH
					 SHL 8) OR STD_CON_INPUT_NO_ECHO 
     616 04F2  CD 21                            INT     21H 
     617 04F4  B8 0C00                          MOV     AX,(STD_CON_INPUT_FLUSH
					 SHL 8) + 0 
     618 04F7  CD 21                            INT     21H 
     619                                 
     620                                        return 
     621 04F9                         1 ??0000:
     622 04F9  C3                     1  RET
     623                                 
     624 04FA  8A 16 0B35 R             FDPB:   MOV     DL,DRIVE 
     625 04FE  FE C2                            INC     DL 
     626 0500  B4 32                            MOV     AH,GET_DPB 
     627 0502  1E                               PUSH    DS 
     628 0503  CD 21                            INT     21H 
     629 0505  FE C0                            INC     AL 
     630 0507  74 0E                            JZ      DRVERR 
     631 0509  8B 57 0D                         MOV     DX,WORD PTR [BX+13] 
     632 050C  4A                               DEC     DX 
     633 050D  8A 47 04                         MOV     AL,BYTE PTR [BX+4] 
     634 0510  FE C0                            INC     AL 
     635 0512  8B 4F 02                         MOV     CX,WORD PTR [BX+2] 
     636 0515  1F                               POP     DS 
     637 0516  C3                               RET 
     638 0517                           DRVERR: 
     639 0517  1F                               POP     DS 
     640 0518  BA 0000 E                        MOV     DX,OFFSET INVDRV 
     641 051B  EB 8D                            JMP     PERROR 
     642                                 
     643                                        ;Clear the FAT and directory an
					d set Dirty byte in the FAT 
     644 051D                           CLEAR: 
     645 051D  A0 0000 E                        MOV     AL,FATID 
     646 0520  0C F8                            OR      AL,0F8H                
					 ;Make sure it's a legal value 
     647 0522  B4 FF                            MOV     AH,0FFH 
     648 0524  8B 3E 0000 E                     MOV     DI,FATSPACE 
     649 0528  89 05                            MOV     WORD PTR[DI],AX 
     650 052A  88 65 02                         MOV     BYTE PTR[DI+2],AH 
     651 052D  B4 0D                            MOV     AH,DISK_RESET 
     652 052F  CD 21                            INT     21H 
     653 0531  E8 0000 E                        CALL    WRTFAT 
     654                                 
     655                                        ENDIF 
     656                                 
     657 0534  E8 04FA R                        CALL    FDPB 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 16:54:33

                                                            Page     1-17
                                                            

     658 0537  89 16 0C72 R                     MOV     WORD PTR FDSKSIZ,DX 
     659 053B  89 0E 0C6C R                     MOV     SECSIZ,CX 
     660 053F  B4 00                            MOV     AH,0 
     661 0541  A3 0C6A R                        MOV     CLUSSIZ,AX 
     662 0544  D1 EA                            SHR     DX,1 
     663 0546  73 01                            JNC     ROUNDED 
     664 0548  42                               INC     DX 
     665 0549                           ROUNDED: 
     666 0549  03 16 0C72 R                     ADD     DX,WORD PTR FDSKSIZ 
     667 054D  33 C0                            XOR     AX,AX 
     668 054F  8B CA                            MOV     CX,DX 
     669 0551  8B 3E 0000 E                     MOV     DI,FATSPACE 
     670 0555  83 C7 03                         ADD     DI,3 
     671 0558  F3/ AA                           REP     STOSB 
     672 055A  B4 0D                            MOV     AH,DISK_RESET 
     673 055C  CD 21                            INT     21H 
     674 055E  E8 0000 E                        CALL    WRTFAT 
     675 0561  8A 16 0B35 R                     MOV     DL,[DRIVE] 
     676 0565  80 C2 41                         ADD     DL,'A' 
     677 0568  88 16 0B2F R                     MOV     [ROOTSTR],DL 
     678 056C  BA 0B2F R                        MOV     DX,OFFSET ROOTSTR 
     679 056F  B4 3B                            MOV     AH,CHDIR 
     680 0571  CD 21                            INT     21H                    
					 ;Go to root on target drive 
     681 0573  A0 0B35 R                        MOV     AL,DRIVE 
     682 0576  FE C0                            INC     AL 
     683 0578  A2 0C16 R                        MOV     ALLDRV,AL 
     684 057B  B4 13                            MOV     AH,FCB_DELETE 
     685 057D  BA 0C0F R                        MOV     DX,OFFSET ALLFILE 
     686 0580  CD 21                            INT     21H 
     687                                 
     688 0582  F7 06 0C62 R 0004                TEST    SWITCHMAP,OLDSW        
					 ;See if E5 terminated DIR requested 
     689 0588  74 48                            JZ      RET25 
     690 058A  A0 0B35 R                        MOV     AL,DRIVE 
     691 058D  FE C0                            INC     AL 
     692 058F  A2 0C3C R                        MOV     BYTE PTR CLEANFILE,AL  
					            ;Get the drive 
     693 0592  BA 0C3C R                        MOV     DX,OFFSET CLEANFILE 
     694 0595  B4 16                            MOV     AH,FCB_CREATE 
     695 0597                           MAKE_NEXT: 
     696 0597  CD 21                            INT     21H 
     697 0599  0A C0                            OR      AL,AL 
     698 059B  75 26                            JNZ     DELETE_THEM 
     699 059D  FE 06 0C3D R                     INC     BYTE PTR CLNNAM 
     700 05A1  80 3E 0C3D R 5B                  CMP     BYTE PTR CLNNAM,"Z" + 1
					 
     701 05A6  75 EF                            JNZ     MAKE_NEXT 
     702 05A8  C6 06 0C3D R 41                  MOV     BYTE PTR CLNNAM,"A" 
     703 05AD  FE 06 0C3E R                     INC     BYTE PTR CLNNAM + 1 
     704 05B1  80 3E 0C3E R 5B                  CMP     BYTE PTR CLNNAM + 1,"Z"
					 + 1 
     705 05B6  75 DF                            JNZ     MAKE_NEXT 
     706 05B8  C6 06 0C3E R 41                  MOV     BYTE PTR CLNNAM + 1,"A"
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 16:54:33

                                                            Page     1-18
                                                            

					 
     707 05BD  FE 06 0C3F R                     INC     BYTE PTR CLNNAM + 2 
     708 05C1  EB D4                            JMP     MAKE_NEXT 
     709                                 
     710 05C3                           DELETE_THEM: 
     711 05C3  C7 06 0C3D R 3F3F                MOV     WORD PTR CLNNAM,"??" 
     712 05C9  C6 06 0C3F R 3F                  MOV     BYTE PTR CLNNAM + 2,"?"
					 
     713 05CE  B4 13                            MOV     AH,FCB_DELETE 
     714 05D0  CD 21                            INT     21H 
     715 05D2                           RET25: 
     716 05D2  C3                               RET                            
					 ;And return 
     717                                 
     718                                 
     719                                ;**************************************
					*** 
     720                                ; Process V switch if set 
     721                                 
     722 05D3                           VOLID: 
     723 05D3  F7 06 0C62 R 0002                TEST    [SWITCHMAP],VOLSW 
     724 05D9  75 02                            JNZ     DOVOL 
     725 05DB  F8                       VRET:   CLC 
     726 05DC  C3                               RET 
     727                                 
     728 05DD                           DOVOL: 
     729 05DD  51                               PUSH    CX 
     730 05DE  56                               PUSH    SI 
     731 05DF  57                               PUSH    DI 
     732 05E0  06                               PUSH    ES 
     733 05E1  1E                               PUSH    DS 
     734 05E2  07                               POP     ES 
     735 05E3                           VOL_LOOP: 
     736 05E3  A0 0B35 R                        MOV     AL,DRIVE 
     737 05E6  FE C0                            INC     AL 
     738 05E8  A2 0BE8 R                        MOV     DS:BYTE PTR[VOLFCB+7],A
					L 
     739 05EB  BA 0000 E                        MOV     DX,OFFSET LABPRMT 
     740 05EE  E8 048F R                        CALL    PRINT 
     741 05F1  BA 0C7E R                        MOV     DX,OFFSET INBUFF 
     742 05F4  B4 0A                            MOV     AH,STD_CON_STRING_INPUT
					 
     743 05F6  CD 21                            INT     21H 
     744 05F8  BA 0000 E                        MOV     DX,OFFSET CRLFMSG 
     745 05FB  E8 048F R                        CALL    PRINT 
     746 05FE  BA 0000 E                        MOV     DX,OFFSET CRLFMSG 
     747 0601  E8 048F R                        CALL    PRINT 
     748 0604  8A 0E 0C7F R                     MOV     CL,[INBUFF+1] 
     749 0608  0A C9                            OR      CL,CL 
     750 060A  74 36                            JZ      VOLRET 
     751 060C  32 ED                            XOR     CH,CH 
     752 060E  BE 0C80 R                        MOV     SI,OFFSET INBUFF+2 
     753 0611  8B FE                            MOV     DI,SI 
     754 0613  03 F9                            ADD     DI,CX 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 16:54:33

                                                            Page     1-19
                                                            

     755 0615  B9 000B                          MOV     CX,11 
     756 0618  B0 20                            MOV     AL,' ' 
     757 061A  F3/ AA                           REP     STOSB 
     758 061C  B9 0005                          MOV     CX,5 
     759 061F  BF 0BE9 R                        MOV     DI,OFFSET VOLNAM 
     760 0622  F3/ A5                           REP     MOVSW 
     761 0624  A4                               MOVSB 
     762 0625  BA 0BE1 R                        MOV     DX,OFFSET VOLFCB 
     763 0628  B4 16                            MOV     AH,FCB_CREATE 
     764 062A  CD 21                            INT     21H 
     765 062C  0A C0                            OR      AL,AL 
     766 062E  74 08                            JZ      GOOD_CREATE 
     767 0630  BA 0000 E                        MOV     DX,OFFSET INVCHR       
					 ;PRINT INVALID CHARS MESSAGE 
     768 0633  E8 048F R                        CALL    PRINT 
     769 0636  EB AB                            JMP     VOL_LOOP 
     770 0638                           GOOD_CREATE: 
     771 0638  BA 0BE1 R                        MOV     DX,OFFSET VOLFCB 
     772 063B  B4 10                            MOV     AH,FCB_CLOSE 
     773 063D  CD 21                            INT     21H 
     774 063F  E8 04A3 R                        CALL    CRLF 
     775 0642                           VOLRET: 
     776 0642  07                               POP     ES 
     777 0643  5F                               POP     DI 
     778 0644  5E                               POP     SI 
     779 0645  59                               POP     CX 
     780 0646  C3                               RET 
     781                                 
     782                                ;**************************************
					** 
     783                                ;Copy IO.SYS, MSDOS.SYS and COMMAND.COM
					 into data area. 
     784                                ; Carry set if problems 
     785                                 
     786 0647                           READDOS: 
     787 0647  E8 099E R                        CALL    TESTSYSDISK 
     788 064A  73 01                            JNC     RDFILS 
     789 064C  C3                               RET 
     790                                 
     791 064D                           RDFILS: 
     792 064D  C6 06 0B41 R 00                  MOV     BYTE PTR [FILSTAT],0 
     793 0652  8B 1E 0B85 R                     MOV     BX,[BIOSHandle] 
     794 0656  A1 0B3B R                        MOV     AX,[MSTART] 
     795 0659  8B D0                            MOV     DX,AX 
     796 065B  03 16 0B3D R                     ADD     DX,[MSIZE]             
					 ; CX first bad para 
     797 065F  A3 0B91 R                        MOV     [BIOSSTRT],AX 
     798 0662  8B 0E 0B87 R                     MOV     CX,[BIOSSIZP] 
     799 0666  03 C1                            ADD     AX,CX 
     800 0668  3B C2                            CMP     AX,DX 
     801 066A  76 2E                            JBE     GOTBIOS 
     802 066C  C6 06 0B41 R 01                  MOV     BYTE PTR [FILSTAT],0000
					0001B     ; Got part of BIOS 
     803 0671  8B 36 0B3D R                     MOV     SI,[MSIZE] 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 16:54:33

                                                            Page     1-20
                                                            

     804 0675  33 FF                            XOR     DI,DI 
     805 0677  E8 0B04 R                        CALL    DISIX4 
     806 067A  8E 1E 0B91 R                     MOV     DS,[BIOSSTRT] 
     807                                ASSUME  DS:NOTHING 
     808 067E  E8 0A8A R                        CALL    READFILE 
     809                                ASSUME  DS:CODE 
     810 0681  72 11                            JC      CLSALL 
     811 0683  33 D2                            XOR     DX,DX 
     812 0685  8B CA                            MOV     CX,DX 
     813 0687  B8 4201                          MOV     AX,(LSEEK SHL 8) OR 1 
     814 068A  CD 21                            INT     21H 
     815 068C  A3 0B8D R                        MOV     WORD PTR [BIOSOFFS],AX 
     816 068F  89 16 0B8F R                     MOV     WORD PTR [BIOSOFFS+2],D
					X 
     817 0693                           FILESDONE: 
     818 0693  F8                               CLC 
     819 0694                           CLSALL: 
     820 0694  9C                               PUSHF 
     821 0695  E8 0A39 R                        CALL    COMCLS 
     822 0698  9D                               POPF 
     823 0699  C3                               RET 
     824                                 
     825 069A                           GOTBIOS: 
     826 069A  C6 06 0B41 R 02                  MOV     BYTE PTR [FILSTAT],0000
					0010B     ; Got all of BIOS 
     827 069F  C4 36 0B89 R                     LES     SI,[BIOSSIZB] 
     828 06A3  8C C7                            MOV     DI,ES 
     829 06A5  8E 1E 0B91 R                     MOV     DS,[BIOSSTRT] 
     830                                ASSUME  DS:NOTHING 
     831 06A9  E8 0A8A R                        CALL    READFILE 
     832                                ASSUME  DS:CODE 
     833 06AC  72 E6                            JC      CLSALL 
     834 06AE  8B 1E 0BA1 R                     MOV     BX,[DOSHandle] 
     835 06B2  A3 0BAD R                        MOV     [DOSSTRT],AX 
     836 06B5  3B C2                            CMP     AX,DX                  
					 ; No room left? 
     837 06B7  74 DB                            JZ      CLSALL                 
					 ; Yes 
     838 06B9  8B 0E 0BA3 R                     MOV     CX,[DOSSIZP] 
     839 06BD  03 C1                            ADD     AX,CX 
     840 06BF  3B C2                            CMP     AX,DX 
     841 06C1  76 2B                            JBE     GOTDOS 
     842 06C3  80 0E 0B41 R 04                  OR      BYTE PTR [FILSTAT],0000
					0100B     ; Got part of DOS 
     843 06C8  2B 16 0BAD R                     SUB     DX,[DOSSTRT] 
     844 06CC  8B F2                            MOV     SI,DX 
     845 06CE  33 FF                            XOR     DI,DI 
     846 06D0  E8 0B04 R                        CALL    DISIX4 
     847 06D3  8E 1E 0BAD R                     MOV     DS,[DOSSTRT] 
     848                                ASSUME  DS:NOTHING 
     849 06D7  E8 0A8A R                        CALL    READFILE 
     850                                ASSUME  DS:CODE 
     851 06DA  72 B8                            JC      CLSALL 
     852 06DC  33 D2                            XOR     DX,DX 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 16:54:33

                                                            Page     1-21
                                                            

     853 06DE  8B CA                            MOV     CX,DX 
     854 06E0  B8 4201                          MOV     AX,(LSEEK SHL 8) OR 1 
     855 06E3  CD 21                            INT     21H 
     856 06E5  A3 0BA9 R                        MOV     WORD PTR [DOSOFFS],AX 
     857 06E8  89 16 0BAB R                     MOV     WORD PTR [DOSOFFS+2],DX
					 
     858 06EC  EB A5                            JMP     FILESDONE 
     859                                 
     860 06EE                           GOTDOS: 
     861 06EE  80 0E 0B41 R 08                  OR      BYTE PTR [FILSTAT],0000
					1000B     ; Got all of DOS 
     862 06F3  C4 36 0BA5 R                     LES     SI,[DOSSIZB] 
     863 06F7  8C C7                            MOV     DI,ES 
     864 06F9  8E 1E 0BAD R                     MOV     DS,[DOSSTRT] 
     865                                ASSUME  DS:NOTHING 
     866 06FD  E8 0A8A R                        CALL    READFILE 
     867                                ASSUME  DS:CODE 
     868 0700  72 92                    CLSALLJ: JC     CLSALL 
     869 0702  8B 1E 0BC0 R                     MOV     BX,[COMHandle] 
     870 0706  A3 0BCC R                        MOV     [COMSTRT],AX 
     871 0709  3B C2                            CMP     AX,DX                  
					 ; No room left? 
     872 070B  74 87                            JZ      CLSALL                 
					 ; Yes 
     873 070D  8B 0E 0BC2 R                     MOV     CX,[COMSIZP] 
     874 0711  03 C1                            ADD     AX,CX 
     875 0713  3B C2                            CMP     AX,DX 
     876 0715  76 2C                            JBE     GOTCOM 
     877 0717  80 0E 0B41 R 10                  OR      BYTE PTR [FILSTAT],0001
					0000B     ; Got part of COMMAND 
     878 071C  2B 16 0BCC R                     SUB     DX,[COMSTRT] 
     879 0720  8B F2                            MOV     SI,DX 
     880 0722  33 FF                            XOR     DI,DI 
     881 0724  E8 0B04 R                        CALL    DISIX4 
     882 0727  8E 1E 0BCC R                     MOV     DS,[COMSTRT] 
     883                                ASSUME  DS:NOTHING 
     884 072B  E8 0A8A R                        CALL    READFILE 
     885                                ASSUME  DS:CODE 
     886 072E  72 D0                            JC      CLSALLJ 
     887 0730  33 D2                            XOR     DX,DX 
     888 0732  8B CA                            MOV     CX,DX 
     889 0734  B8 4201                          MOV     AX,(LSEEK SHL 8) OR 1 
     890 0737  CD 21                            INT     21H 
     891 0739  A3 0BC8 R                        MOV     WORD PTR [COMOFFS],AX 
     892 073C  89 16 0BCA R                     MOV     WORD PTR [COMOFFS+2],DX
					 
     893 0740  E9 0693 R                        JMP     FILESDONE 
     894                                 
     895 0743                           GOTCOM: 
     896 0743  80 0E 0B41 R 20                  OR      BYTE PTR [FILSTAT],0010
					0000B     ; Got all of COMMAND 
     897 0748  C4 36 0BC4 R                     LES     SI,[COMSIZB] 
     898 074C  8C C7                            MOV     DI,ES 
     899 074E  8E 1E 0BCC R                     MOV     DS,[COMSTRT] 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 16:54:33

                                                            Page     1-22
                                                            

     900                                ASSUME  DS:NOTHING 
     901 0752  E8 0A8A R                        CALL    READFILE 
     902                                ASSUME  DS:CODE 
     903 0755  E9 0694 R                        JMP     CLSALL 
     904                                 
     905                                ;**************************************
					************ 
     906                                ;Write BIOS DOS COMMAND to the newly fo
					rmatted disk. 
     907                                 
     908 0758                           WRITEDOS: 
     909 0758  B9 0007 90                       MOV     CX,BIOSATT 
     910 075C  BA 0B97 R                        MOV     DX,OFFSET BIOSFIL 
     911 075F  C4 36 0B89 R                     LES     SI,[BIOSSIZB] 
     912 0763  8C C7                            MOV     DI,ES 
     913 0765  E8 0894 R                        CALL    MAKEFIL 
     914 0768  73 01                            JNC     GOTNBIO 
     915 076A  C3                       RET34:  RET 
     916                                 
     917 076B                           GOTNBIO: 
     918 076B  89 1E 0B3F R                     MOV     [TempHandle],BX 
     919 076F  F6 06 0B41 R 02                  TEST    BYTE PTR FILSTAT,000000
					10B 
     920 0774  75 18                            JNZ     GOTALLBIO 
     921 0776  C4 36 0B8D R                     LES     SI,[BIOSOFFS] 
     922 077A  8C C7                            MOV     DI,ES 
     923 077C  89 36 0B37 R                     MOV     WORD PTR [IOCNT],SI 
     924 0780  89 3E 0B39 R                     MOV     WORD PTR [IOCNT+2],DI 
     925 0784  BD 0B85 R                        MOV     BP,OFFSET BIOSData 
     926 0787  E8 08FD R                        CALL    GOTTARG 
     927 078A  72 DE                            JC      RET34 
     928 078C  EB 0D                            JMP     SHORT BIOSDONE 
     929                                 
     930 078E                           GOTALLBIO: 
     931 078E  C4 36 0B89 R                     LES     SI,[BIOSSIZB] 
     932 0792  8C C7                            MOV     DI,ES 
     933 0794  8E 1E 0B91 R                     MOV     DS,[BIOSSTRT] 
     934                                ASSUME  DS:NOTHING 
     935 0798  E8 0A99 R                        CALL    WRITEFILE 
     936                                ASSUME  DS:CODE 
     937 079B                           BIOSDONE: 
     938 079B  8B 1E 0B3F R                     MOV     BX,[TempHandle] 
     939 079F  8B 0E 0B95 R                     MOV     CX,BTIME 
     940 07A3  8B 16 0B93 R                     MOV     DX,BDATE 
     941 07A7  E8 08C0 R                        CALL    CLOSETARG 
     942 07AA  B9 0007 90                       MOV     CX,DOSATT 
     943 07AE  BA 0BB3 R                        MOV     DX,OFFSET DOSFIL 
     944 07B1  C4 36 0BA5 R                     LES     SI,[DOSSIZB] 
     945 07B5  8C C7                            MOV     DI,ES 
     946 07B7  E8 0894 R                        CALL    MAKEFIL 
     947 07BA  72 AE                            JC      RET34 
     948                                 
     949 07BC                           GOTNDOS: 
     950 07BC  89 1E 0B3F R                     MOV     [TempHandle],BX 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 16:54:33

                                                            Page     1-23
                                                            

     951 07C0  F6 06 0B41 R 08                  TEST    BYTE PTR FILSTAT,000010
					00B 
     952 07C5  75 32                            JNZ     GOTALLDOS 
     953 07C7  BD 0BA1 R                        MOV     BP,OFFSET DOSData 
     954 07CA  F6 06 0B41 R 04                  TEST    BYTE PTR FILSTAT,000001
					00B 
     955 07CF  75 13                            JNZ     PARTDOS 
     956 07D1  C7 06 0BA9 R 0000                MOV     WORD PTR [DOSOFFS],0 
     957 07D7  C7 06 0BAB R 0000                MOV     WORD PTR [DOSOFFS+2],0 
     958 07DD  E8 0922 R                        CALL    GETSYS3 
     959 07E0  72 88                    RET34J: JC      RET34 
     960 07E2  EB 22                            JMP     SHORT DOSDONE 
     961                                 
     962 07E4                           PARTDOS: 
     963 07E4  C4 36 0BA9 R                     LES     SI,[DOSOFFS] 
     964 07E8  8C C7                            MOV     DI,ES 
     965 07EA  89 36 0B37 R                     MOV     WORD PTR [IOCNT],SI 
     966 07EE  89 3E 0B39 R                     MOV     WORD PTR [IOCNT+2],DI 
     967 07F2  E8 08FD R                        CALL    GOTTARG 
     968 07F5  72 E9                            JC      RET34J 
     969 07F7  EB 0D                            JMP     SHORT DOSDONE 
     970                                 
     971 07F9                           GOTALLDOS: 
     972 07F9  C4 36 0BA5 R                     LES     SI,[DOSSIZB] 
     973 07FD  8C C7                            MOV     DI,ES 
     974 07FF  8E 1E 0BAD R                     MOV     DS,[DOSSTRT] 
     975                                ASSUME  DS:NOTHING 
     976 0803  E8 0A99 R                        CALL    WRITEFILE 
     977                                ASSUME  DS:CODE 
     978 0806                           DOSDONE: 
     979 0806  8B 1E 0B3F R                     MOV     BX,[TempHandle] 
     980 080A  8B 0E 0BB1 R                     MOV     CX,DTIME 
     981 080E  8B 16 0BAF R                     MOV     DX,DDATE 
     982 0812  E8 08C0 R                        CALL    CLOSETARG 
     983 0815  B9 0000 90                       MOV     CX,COMATT 
     984 0819  BA 0BD2 R                        MOV     DX,OFFSET COMFIL 
     985 081C  C4 36 0BC4 R                     LES     SI,[COMSIZB] 
     986 0820  8C C7                            MOV     DI,ES 
     987 0822  E8 0894 R                        CALL    MAKEFIL 
     988 0825  73 01                            JNC     GOTNCOM 
     989 0827  C3                       RET35:  RET 
     990                                 
     991 0828                           GOTNCOM: 
     992 0828  89 1E 0B3F R                     MOV     [TempHandle],BX 
     993 082C  F6 06 0B41 R 20                  TEST    BYTE PTR FILSTAT,001000
					00B 
     994 0831  75 32                            JNZ     GOTALLCOM 
     995 0833  BD 0BC0 R                        MOV     BP,OFFSET COMData 
     996 0836  F6 06 0B41 R 10                  TEST    BYTE PTR FILSTAT,000100
					00B 
     997 083B  75 13                            JNZ     PARTCOM 
     998 083D  C7 06 0BC8 R 0000                MOV     WORD PTR [COMOFFS],0 
     999 0843  C7 06 0BCA R 0000                MOV     WORD PTR [COMOFFS+2],0 
    1000 0849  E8 0922 R                        CALL    GETSYS3 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 16:54:33

                                                            Page     1-24
                                                            

    1001 084C  72 D9                            JC      RET35 
    1002 084E  EB 22                            JMP     SHORT COMDONE 
    1003                                 
    1004 0850                           PARTCOM: 
    1005 0850  C4 36 0BC8 R                     LES     SI,[COMOFFS] 
    1006 0854  8C C7                            MOV     DI,ES 
    1007 0856  89 36 0B37 R                     MOV     WORD PTR [IOCNT],SI 
    1008 085A  89 3E 0B39 R                     MOV     WORD PTR [IOCNT+2],DI 
    1009 085E  E8 08FD R                        CALL    GOTTARG 
    1010 0861  72 C4                            JC      RET35 
    1011 0863  EB 0D                            JMP     SHORT COMDONE 
    1012                                 
    1013 0865                           GOTALLCOM: 
    1014 0865  C4 36 0BC4 R                     LES     SI,[COMSIZB] 
    1015 0869  8C C7                            MOV     DI,ES 
    1016 086B  8E 1E 0BCC R                     MOV     DS,[COMSTRT] 
    1017                                ASSUME  DS:NOTHING 
    1018 086F  E8 0A99 R                        CALL    WRITEFILE 
    1019                                ASSUME  DS:CODE 
    1020 0872                           COMDONE: 
    1021 0872  8B 1E 0B3F R                     MOV     BX,[TempHandle] 
    1022 0876  8B 0E 0BD0 R                     MOV     CX,CTIME 
    1023 087A  8B 16 0BCE R                     MOV     DX,CDATE 
    1024 087E  E8 08C0 R                        CALL    CLOSETARG 
    1025 0881  80 3E 0B41 R 2A                  CMP     BYTE PTR [FILSTAT],0010
					1010B 
    1026 0886  74 0A                            JZ      NOREDOS 
    1027 0888                           RDFRST2: 
    1028 0888  E8 0647 R                        CALL    READDOS                
					 ; Start back with BIOS 
    1029 088B  73 05                            JNC     NOREDOS 
    1030 088D  E8 04B2 R                        CALL    SYSPRM                 
					 ;Prompt for system disk 
    1031 0890  EB F6                            JMP     RDFRST2                
					 ;Try again 
    1032 0892                           NOREDOS: 
    1033 0892  F8                               CLC 
    1034 0893  C3                               RET 
    1035                                 
    1036                                ;**************************************
					******* 
    1037                                ; Create a file on target disk 
    1038                                ; CX = attributes, DX points to name 
    1039                                ; DI:SI is size file is to have 
    1040                                ; 
    1041                                ;   There is a bug in DOS 2.00 and 2.01
					 having to do with writes 
    1042                                ;   from the end of memory. In order to
					 circumvent it this routine 
    1043                                ;   must create files with the length i
					n DI:SI 
    1044                                ; 
    1045                                ; On return BX is handle, carry set if 
					problem 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 16:54:33

                                                            Page     1-25
                                                            

    1046                                 
    1047 0894                           MAKEFIL: 
    1048 0894  8B DA                            MOV     BX,DX 
    1049 0896  FF 37                            PUSH    WORD PTR [BX] 
    1050 0898  A0 0000 E                        MOV     AL,TARGDRV 
    1051 089B  88 07                            MOV     [BX],AL 
    1052 089D  B4 3C                            MOV     AH,CREAT 
    1053 089F  CD 21                            INT     21H 
    1054 08A1  8F 07                            POP     WORD PTR [BX] 
    1055 08A3  8B D8                            MOV     BX,AX 
    1056 08A5  72 18                            JC      RET50 
    1057 08A7  8B CF                            MOV     CX,DI 
    1058 08A9  8B D6                            MOV     DX,SI 
    1059 08AB  B8 4200                          MOV     AX,LSEEK SHL 8 
    1060 08AE  CD 21                            INT     21H                    
					 ; Seek to eventual EOF 
    1061 08B0  33 C9                            XOR     CX,CX 
    1062 08B2  B4 40                            MOV     AH,WRITE 
    1063 08B4  CD 21                            INT     21H                    
					 ; Set size of file to position 
    1064 08B6  33 C9                            XOR     CX,CX 
    1065 08B8  8B D1                            MOV     DX,CX 
    1066 08BA  B8 4200                          MOV     AX,LSEEK SHL 8 
    1067 08BD  CD 21                            INT     21H                    
					 ; Seek back to start 
    1068 08BF                           RET50: 
    1069 08BF  C3                               RET 
    1070                                 
    1071                                ;**************************************
					******* 
    1072                                ; Close a file on the target disk 
    1073                                ; CX/DX is time/date, BX is handle 
    1074                                 
    1075 08C0                           CLOSETARG: 
    1076 08C0  B8 5701                          MOV     AX,(FILE_TIMES SHL 8) O
					R 1 
    1077 08C3  CD 21                            INT     21H 
    1078 08C5  B4 3E                            MOV     AH,CLOSE 
    1079 08C7  CD 21                            INT     21H 
    1080 08C9  C3                               RET 
    1081                                 
    1082 08CA                           SAVUDIRS: 
    1083 08CA  32 D2                            XOR     DL,DL 
    1084 08CC  BE 0B42 R                        MOV     SI,OFFSET USERDIRS 
    1085 08CF  C6 04 5C                         MOV     BYTE PTR [SI],'\' 
    1086 08D2  46                               INC     SI 
    1087 08D3  B4 47                            MOV     AH,CURRENT_DIR 
    1088 08D5  CD 21                            INT     21H 
    1089 08D7  C3                       RET43:  RET 
    1090                                 
    1091                                 
    1092 08D8                           RESTUDIR: 
    1093 08D8  F7 06 0C62 R 0001                TEST    SWITCHMAP,SYSSW 
    1094 08DE  74 F7                            JZ      RET43 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 16:54:33

                                                            Page     1-26
                                                            

    1095 08E0  BA 0B42 R                        MOV     DX,OFFSET USERDIRS 
    1096 08E3  B4 3B                            MOV     AH,CHDIR 
    1097 08E5  CD 21                            INT     21H             ; Resto
					re users DIR 
    1098 08E7  C3                               RET 
    1099                                 
    1100 08E8                           INT_23: 
    1101 08E8  0E                               PUSH    CS 
    1102 08E9  1F                               POP     DS 
    1103 08EA  E9 04AD R                        JMP     FEXIT 
    1104                                 
    1105                                ;**************************************
					** 
    1106                                ; Transfer system files 
    1107                                ; BP points to data structure for file 
					involved 
    1108                                ; offset is set to current amount read 
					in 
    1109                                ; Start set to start of file in buffer 
    1110                                ; TempHandle is handle to write to on t
					arget 
    1111                                 
    1112 08ED                           IOLOOP: 
    1113 08ED  A0 0000 E                        MOV     AL,[SYSDRV] 
    1114 08F0  3A 06 0000 E                     CMP     AL,[TARGDRV] 
    1115 08F4  75 07                            JNZ     GOTTARG 
    1116 08F6  B4 0D                            MOV     AH,DISK_RESET 
    1117 08F8  CD 21                            INT     21H 
    1118 08FA  E8 04C8 R                        CALL    TARGPRM                
					  ;Get target disk 
    1119                                 
    1120 08FD                           GOTTARG: 
    1121                                ;Enter here if some of file is already 
					in buffer, IOCNT must be set 
    1122                                ; to size already in buffer. 
    1123 08FD  8B 1E 0B3F R                     MOV     BX,[TempHandle] 
    1124 0901  8B 36 0B37 R                     MOV     SI,WORD PTR [IOCNT] 
    1125 0905  8B 3E 0B39 R                     MOV     DI,WORD PTR [IOCNT+2] 
    1126 0909  8E 5E 0C                         MOV     DS,[BP.FILE_START] 
    1127                                ASSUME  DS:NOTHING 
    1128 090C  E8 0A99 R                        CALL    WRITEFILE              
					 ; Write next part 
    1129                                ASSUME  DS:CODE 
    1130 090F  73 01                            JNC     TESTDONE 
    1131 0911  C3                               RET 
    1132                                 
    1133 0912                           TESTDONE: 
    1134 0912  C4 46 08                         LES     AX,[BP.FILE_OFFSET] 
    1135 0915  3B 46 04                         CMP     AX,WORD PTR [BP.FILE_SI
					ZEB] 
    1136 0918  75 08                            JNZ     GETSYS3 
    1137 091A  8C C0                            MOV     AX,ES 
    1138 091C  3B 46 06                         CMP     AX,WORD PTR [BP.FILE_SI
					ZEB+2] 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 16:54:33

                                                            Page     1-27
                                                            

    1139 091F  75 01                            JNZ     GETSYS3 
    1140 0921  C3                               RET                            
					 ; Carry clear from CMP 
    1141                                 
    1142 0922                           GETSYS3: 
    1143                                ;Enter here if none of file is in buffe
					r 
    1144 0922  A1 0B3B R                        MOV     AX,[MSTART]            
					 ; Furthur IO done starting here 
    1145 0925  89 46 0C                         MOV     [BP.FILE_START],AX 
    1146 0928  A0 0000 E                        MOV     AL,[SYSDRV] 
    1147 092B  3A 06 0000 E                     CMP     AL,[TARGDRV] 
    1148 092F  75 07                            JNZ     TESTSYS 
    1149 0931  B4 0D                            MOV     AH,DISK_RESET 
    1150 0933  CD 21                            INT     21H 
    1151 0935                           GSYS: 
    1152 0935  E8 04B2 R                        CALL    SYSPRM                 
					 ;Prompt for system disk 
    1153 0938                           TESTSYS: 
    1154 0938  E8 099E R                        CALL    TESTSYSDISK 
    1155 093B  72 F8                            JC      GSYS 
    1156 093D  8B 5E 00                         MOV     BX,[BP.FILE_HANDLE] 
    1157 0940  C4 56 08                         LES     DX,[BP.FILE_OFFSET] 
    1158 0943  52                               PUSH    DX 
    1159 0944  8C C1                            MOV     CX,ES 
    1160 0946  B8 4200                          MOV     AX,LSEEK SHL 8 
    1161 0949  CD 21                            INT     21H 
    1162 094B  5A                               POP     DX 
    1163 094C  C4 76 04                         LES     SI,[BP.FILE_SIZEB] 
    1164 094F  8C C7                            MOV     DI,ES 
    1165 0951  2B F2                            SUB     SI,DX 
    1166 0953  1B F9                            SBB     DI,CX                  
					 ; DI:SI is #bytes to go 
    1167 0955  57                               PUSH    DI 
    1168 0956  56                               PUSH    SI 
    1169 0957  83 C6 0F                         ADD     SI,15 
    1170 095A  83 D7 00                         ADC     DI,0 
    1171 095D  E8 0B0E R                        CALL    DISID4 
    1172 0960  8B C6                            MOV     AX,SI 
    1173 0962  5E                               POP     SI 
    1174 0963  5F                               POP     DI 
    1175 0964  3B 06 0B3D R                     CMP     AX,[MSIZE] 
    1176 0968  76 09                            JBE     GOTSIZ2 
    1177 096A  8B 36 0B3D R                     MOV     SI,[MSIZE] 
    1178 096E  33 FF                            XOR     DI,DI 
    1179 0970  E8 0B04 R                        CALL    DISIX4 
    1180 0973                           GOTSIZ2: 
    1181 0973  89 36 0B37 R                     MOV     WORD PTR [IOCNT],SI 
    1182 0977  89 3E 0B39 R                     MOV     WORD PTR [IOCNT+2],DI 
    1183 097B  8E 1E 0B3B R                     MOV     DS,[MSTART] 
    1184                                ASSUME  DS:NOTHING 
    1185 097F  E8 0A8A R                        CALL    READFILE 
    1186                                ASSUME  DS:CODE 
    1187 0982  73 05                            JNC     GETOFFS 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 16:54:33

                                                            Page     1-28
                                                            

    1188 0984  E8 0694 R                        CALL    CLSALL 
    1189 0987  EB AC                            JMP     GSYS 
    1190 0989                           GETOFFS: 
    1191 0989  33 D2                            XOR     DX,DX 
    1192 098B  8B CA                            MOV     CX,DX 
    1193 098D  B8 4201                          MOV     AX,(LSEEK SHL 8) OR 1 
    1194 0990  CD 21                            INT     21H 
    1195 0992  89 46 08                         MOV     WORD PTR [BP.FILE_OFFSE
					T],AX 
    1196 0995  89 56 0A                         MOV     WORD PTR [BP.FILE_OFFSE
					T+2],DX 
    1197 0998  E8 0694 R                        CALL    CLSALL 
    1198 099B  E9 08ED R                        JMP     IOLOOP 
    1199                                 
    1200                                ;**************************************
					*********** 
    1201                                ; Test to see if correct system disk. O
					pen handles 
    1202                                 
    1203 099E                           TESTSYSDISK: 
    1204 099E  B8 3D00                          MOV     AX,OPEN SHL 8 
    1205 09A1  BA 0B97 R                        MOV     DX,OFFSET BIOSFIL 
    1206 09A4  CD 21                            INT     21H 
    1207 09A6  73 02                            JNC     SETBIOS 
    1208 09A8  F9                       CRET12: STC 
    1209 09A9  C3                       RET12:  RET 
    1210                                 
    1211 09AA                           SETBIOS: 
    1212 09AA  A3 0B85 R                        MOV     [BIOSHandle],AX 
    1213 09AD  8B D8                            MOV     BX,AX 
    1214 09AF  E8 0A58 R                        CALL    GETFSIZ 
    1215 09B2  83 3E 0B87 R 00                  CMP     [BIOSSIZP],0 
    1216 09B7  74 10                            JZ      SETBIOSSIZ 
    1217 09B9  39 06 0B87 R                     CMP     [BIOSSIZP],AX 
    1218 09BD  74 0A                            JZ      SETBIOSSIZ 
    1219 09BF                           BIOSCLS: 
    1220 09BF  B4 3E                            MOV     AH,CLOSE 
    1221 09C1  8B 1E 0B85 R                     MOV     BX,[BIOSHandle] 
    1222 09C5  CD 21                            INT     21H 
    1223 09C7  EB DF                            JMP     CRET12 
    1224                                 
    1225 09C9                           SETBIOSSIZ: 
    1226 09C9  A3 0B87 R                        MOV     [BIOSSIZP],AX 
    1227 09CC  89 36 0B89 R                     MOV     WORD PTR [BIOSSIZB],SI 
    1228 09D0  89 3E 0B8B R                     MOV     WORD PTR [BIOSSIZB+2],D
					I 
    1229 09D4  89 16 0B93 R                     MOV     [BDATE],DX 
    1230 09D8  89 0E 0B95 R                     MOV     [BTIME],CX 
    1231 09DC  B8 3D00                          MOV     AX,OPEN SHL 8 
    1232 09DF  BA 0BB3 R                        MOV     DX,OFFSET DOSFIL 
    1233 09E2  CD 21                            INT     21H 
    1234 09E4  73 02                            JNC     DOSOPNOK 
    1235 09E6  EB D7                            JMP     BIOSCLS 
    1236                                 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 16:54:33

                                                            Page     1-29
                                                            

    1237 09E8                           DOSOPNOK: 
    1238 09E8  A3 0BA1 R                        MOV     [DOSHandle],AX 
    1239 09EB  8B D8                            MOV     BX,AX 
    1240 09ED  E8 0A58 R                        CALL    GETFSIZ 
    1241 09F0  83 3E 0BA3 R 00                  CMP     [DOSSIZP],0 
    1242 09F5  74 10                            JZ      SETDOSSIZ 
    1243 09F7  39 06 0BA3 R                     CMP     [DOSSIZP],AX 
    1244 09FB  74 0A                            JZ      SETDOSSIZ 
    1245 09FD                           DOSCLS: 
    1246 09FD  B4 3E                            MOV     AH,CLOSE 
    1247 09FF  8B 1E 0BA1 R                     MOV     BX,[DOSHandle] 
    1248 0A03  CD 21                            INT     21H 
    1249 0A05  EB B8                            JMP     BIOSCLS 
    1250                                 
    1251 0A07                           SETDOSSIZ: 
    1252 0A07  A3 0BA3 R                        MOV     [DOSSIZP],AX 
    1253 0A0A  89 36 0BA5 R                     MOV     WORD PTR [DOSSIZB],SI 
    1254 0A0E  89 3E 0BA7 R                     MOV     WORD PTR [DOSSIZB+2],DI
					 
    1255 0A12  89 16 0BAF R                     MOV     [DDATE],DX 
    1256 0A16  89 0E 0BB1 R                     MOV     [DTIME],CX 
    1257 0A1A  B8 3D00                          MOV     AX,OPEN SHL 8 
    1258 0A1D  BA 0BD2 R                        MOV     DX,OFFSET COMFIL 
    1259 0A20  CD 21                            INT     21H 
    1260 0A22  72 D9                            JC      DOSCLS 
    1261 0A24  A3 0BC0 R                        MOV     [COMHandle],AX 
    1262 0A27  8B D8                            MOV     BX,AX 
    1263 0A29  E8 0A58 R                        CALL    GETFSIZ 
    1264 0A2C  83 3E 0BC2 R 00                  CMP     [COMSIZP],0 
    1265 0A31  74 10                            JZ      SETCOMSIZ 
    1266 0A33  39 06 0BC2 R                     CMP     [COMSIZP],AX 
    1267 0A37  74 0A                            JZ      SETCOMSIZ 
    1268 0A39                           COMCLS: 
    1269 0A39  B4 3E                            MOV     AH,CLOSE 
    1270 0A3B  8B 1E 0BC0 R                     MOV     BX,[COMHandle] 
    1271 0A3F  CD 21                            INT     21H 
    1272 0A41  EB BA                            JMP     DOSCLS 
    1273                                 
    1274 0A43                           SETCOMSIZ: 
    1275 0A43  A3 0BC2 R                        MOV     [COMSIZP],AX 
    1276 0A46  89 36 0BC4 R                     MOV     WORD PTR [COMSIZB],SI 
    1277 0A4A  89 3E 0BC6 R                     MOV     WORD PTR [COMSIZB+2],DI
					 
    1278 0A4E  89 16 0BCE R                     MOV     [CDATE],DX 
    1279 0A52  89 0E 0BD0 R                     MOV     [CTIME],CX 
    1280 0A56  F8                               CLC 
    1281 0A57  C3                               RET 
    1282                                 
    1283                                ;**************************************
					***** 
    1284                                ; Handle in BX, return file size in par
					a in AX 
    1285                                ; File size in bytes DI:SI, file date i
					n DX, file 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 16:54:33

                                                            Page     1-30
                                                            

    1286                                ; time in CX. 
    1287                                 
    1288 0A58                           GETFSIZ: 
    1289 0A58  B8 4202                          MOV     AX,(LSEEK SHL 8) OR 2 
    1290 0A5B  33 C9                            XOR     CX,CX 
    1291 0A5D  8B D1                            MOV     DX,CX 
    1292 0A5F  CD 21                            INT     21H 
    1293 0A61  8B F0                            MOV     SI,AX 
    1294 0A63  8B FA                            MOV     DI,DX 
    1295 0A65  05 000F                          ADD     AX,15           ; Para 
					round up 
    1296 0A68  83 D2 00                         ADC     DX,0 
    1297 0A6B  81 E2 000F                       AND     DX,0FH          ; If th
					e file is larger than this 
    1298                                                                ;   it 
					is bigger than the 8086 address space! 
    1299 0A6F  B1 0C                            MOV     CL,12 
    1300 0A71  D3 E2                            SHL     DX,CL 
    1301 0A73  B1 04                            MOV     CL,4 
    1302 0A75  D3 E8                            SHR     AX,CL 
    1303 0A77  0B C2                            OR      AX,DX 
    1304 0A79  50                               PUSH    AX 
    1305 0A7A  B8 4200                          MOV     AX,LSEEK SHL 8 
    1306 0A7D  33 C9                            XOR     CX,CX 
    1307 0A7F  8B D1                            MOV     DX,CX 
    1308 0A81  CD 21                            INT     21H 
    1309 0A83  B8 5700                          MOV     AX,FILE_TIMES SHL 8 
    1310 0A86  CD 21                            INT     21H 
    1311 0A88  58                               POP     AX 
    1312 0A89  C3                               RET 
    1313                                 
    1314                                ;**************************************
					****** 
    1315                                ; Read/Write file 
    1316                                ;       DS:0 is Xaddr 
    1317                                ;       DI:SI is byte count to I/O 
    1318                                ;       BX is handle 
    1319                                ; Carry set if screw up 
    1320                                ; 
    1321                                ; I/O SI bytes 
    1322                                ; I/O 64K - 1 bytes DI times 
    1323                                ; I/O DI bytes 
    1324                                ; DS=CS on output 
    1325                                 
    1326                                 
    1327 0A8A                           READFILE: 
    1328                                ; Must preserve AX,DX 
    1329 0A8A  50                               PUSH    AX 
    1330 0A8B  52                               PUSH    DX 
    1331 0A8C  55                               PUSH    BP 
    1332 0A8D  BD 3F00                          MOV     BP,READ SHL 8 
    1333 0A90  E8 0AA4 R                        CALL    FILIO 
    1334 0A93  5D                               POP     BP 
    1335 0A94  5A                               POP     DX 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 16:54:33

                                                            Page     1-31
                                                            

    1336 0A95  58                               POP     AX 
    1337 0A96  0E                               PUSH    CS 
    1338 0A97  1F                               POP     DS 
    1339 0A98  C3                               RET 
    1340                                 
    1341 0A99                           WRITEFILE: 
    1342 0A99  55                               PUSH    BP 
    1343 0A9A  BD 4000                          MOV     BP,WRITE SHL 8 
    1344 0A9D  E8 0AA4 R                        CALL    FILIO 
    1345 0AA0  5D                               POP     BP 
    1346 0AA1  0E                               PUSH    CS 
    1347 0AA2  1F                               POP     DS 
    1348 0AA3  C3                               RET 
    1349                                 
    1350 0AA4                           FILIO: 
    1351 0AA4  33 D2                            XOR     DX,DX 
    1352 0AA6  8B CE                            MOV     CX,SI 
    1353 0AA8  E3 0F                            JCXZ    K64IO 
    1354 0AAA  8B C5                            MOV     AX,BP 
    1355 0AAC  CD 21                            INT     21H 
    1356 0AAE  72 53                            JC      IORET 
    1357 0AB0  03 D0                            ADD     DX,AX 
    1358 0AB2  3B C1                            CMP     AX,CX           ; If no
					t =, AX<CX, carry set. 
    1359 0AB4  75 4D                            JNZ     IORET 
    1360 0AB6  E8 0B18 R                        CALL    NORMALIZE 
    1361 0AB9                           K64IO: 
    1362 0AB9  F8                               CLC 
    1363 0ABA  8B CF                            MOV     CX,DI 
    1364 0ABC  E3 45                            JCXZ    IORET 
    1365 0ABE  8B C5                            MOV     AX,BP 
    1366 0AC0  CD 21                            INT     21H 
    1367 0AC2  72 3F                            JC      IORET 
    1368 0AC4  03 D0                            ADD     DX,AX 
    1369 0AC6  3B C1                            CMP     AX,CX           ; If no
					t =, AX<CX, carry set. 
    1370 0AC8  75 39                            JNZ     IORET 
    1371 0ACA  E8 0B18 R                        CALL    NORMALIZE 
    1372 0ACD  8B CF                            MOV     CX,DI 
    1373 0ACF                           K64M1: 
    1374 0ACF  51                               PUSH    CX 
    1375 0AD0  33 C0                            XOR     AX,AX 
    1376 0AD2  0B D2                            OR      DX,DX 
    1377 0AD4  74 14                            JZ      NORMIO 
    1378 0AD6  B9 0010                          MOV     CX,10H 
    1379 0AD9  2B CA                            SUB     CX,DX 
    1380 0ADB  8B C5                            MOV     AX,BP 
    1381 0ADD  CD 21                            INT     21H 
    1382 0ADF  72 21                            JC      IORETP 
    1383 0AE1  03 D0                            ADD     DX,AX 
    1384 0AE3  3B C1                            CMP     AX,CX           ; If no
					t =, AX<CX, carry set. 
    1385 0AE5  75 1B                            JNZ     IORETP 
    1386 0AE7  E8 0B18 R                        CALL    NORMALIZE 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 16:54:33

                                                            Page     1-32
                                                            

    1387 0AEA                           NORMIO: 
    1388 0AEA  B9 FFFF                          MOV     CX,0FFFFH 
    1389 0AED  2B C8                            SUB     CX,AX 
    1390 0AEF  8B C5                            MOV     AX,BP 
    1391 0AF1  CD 21                            INT     21H 
    1392 0AF3  72 0D                            JC      IORETP 
    1393 0AF5  03 D0                            ADD     DX,AX 
    1394 0AF7  3B C1                            CMP     AX,CX           ; If no
					t =, AX<CX, carry set. 
    1395 0AF9  75 07                            JNZ     IORETP 
    1396 0AFB  E8 0B18 R                        CALL    NORMALIZE       ; Clear
					s carry 
    1397 0AFE  59                               POP     CX 
    1398 0AFF  E2 CE                            LOOP    K64M1 
    1399 0B01  51                               PUSH    CX 
    1400 0B02                           IORETP: 
    1401 0B02  59                               POP     CX 
    1402 0B03                           IORET: 
    1403 0B03  C3                               RET 
    1404                                 
    1405                                 
    1406                                ;********************************* 
    1407                                ; Shift DI:SI left 4 bits 
    1408 0B04                           DISIX4: 
    1409 0B04  B9 0004                          MOV     CX,4 
    1410 0B07                           SH32: 
    1411 0B07  D1 E6                            SHL     SI,1 
    1412 0B09  D1 D7                            RCL     DI,1 
    1413 0B0B  E2 FA                            LOOP    SH32 
    1414 0B0D  C3                               RET 
    1415                                 
    1416                                ;********************************* 
    1417                                ; Shift DI:SI right 4 bits 
    1418 0B0E                           DISID4: 
    1419 0B0E  B9 0004                          MOV     CX,4 
    1420 0B11                           SH32B: 
    1421 0B11  D1 EF                            SHR     DI,1 
    1422 0B13  D1 DE                            RCR     SI,1 
    1423 0B15  E2 FA                            LOOP    SH32B 
    1424 0B17  C3                               RET 
    1425                                 
    1426                                ;******************************** 
    1427                                ; Normalize DS:DX 
    1428                                 
    1429 0B18                           NORMALIZE: 
    1430 0B18  52                               PUSH    DX 
    1431 0B19  50                               PUSH    AX 
    1432 0B1A  D1 EA                            SHR     DX,1 
    1433 0B1C  D1 EA                            SHR     DX,1 
    1434 0B1E  D1 EA                            SHR     DX,1 
    1435 0B20  D1 EA                            SHR     DX,1 
    1436 0B22  8C D8                            MOV     AX,DS 
    1437 0B24  03 C2                            ADD     AX,DX 
    1438 0B26  8E D8                            MOV     DS,AX 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 16:54:33

                                                            Page     1-33
                                                            

    1439 0B28  58                               POP     AX 
    1440 0B29  5A                               POP     DX 
    1441 0B2A  81 E2 000F                       AND     DX,0FH                 
					 ; Clears carry 
    1442 0B2E  C3                               RET 
    1443                                 
    1444                                 
    1445 0B2F  ??                       ROOTSTR DB      ? 
    1446 0B30  3A                               DB      ":" 
    1447 0B31  2F 00                    SWTCH   DB      "/",0 
    1448 0B33  00                       DBLFLG DB       0               ;Initia
					lize flags to zero 
    1449 0B34  00                       CLEARFLG DB     0 
    1450 0B35  00                       DRIVE   DB      0 
    1451 0B36  00                       DEFALT  DB      0               ;Defaul
					t drive 
    1452 0B37  ????????                 IOCNT   DD      ? 
    1453 0B3B  ????                     MSTART  DW      ?               ; Start
					 of sys file buffer (para#) 
    1454 0B3D  ????                     MSIZE   DW      ?               ; Size 
					of above in paragraphs 
    1455 0B3F  ????                     TempHandle DW   ? 
    1456 0B41  ??                       FILSTAT DB      ?               ; In me
					mory status of files 
    1457                                                                ; XXXXX
					X00B BIOS not in 
    1458                                                                ; XXXXX
					X01B BIOS partly in 
    1459                                                                ; XXXXX
					X10B BIOS all in 
    1460                                                                ; XXXX0
					0XXB DOS not in 
    1461                                                                ; XXXX0
					1XXB DOS partly in 
    1462                                                                ; XXXX1
					0XXB DOS all in 
    1463                                                                ; XX00X
					XXXB COMMAND not in 
    1464                                                                ; XX01X
					XXXB COMMAND partly in 
    1465                                                                ; XX10X
					XXXB COMMAND all in 
    1466                                 
    1467 0B42  0043[                    USERDIRS DB     DIRSTRLEN+3 DUP(?)     
					 ; Storage for users current directory 
    1468            ??                  
    1469                         ]      
    1470                                
    1471                                 
    1472 0B85                           BIOSData        LABEL   BYTE 
    1473 0B85  0000                     BIOSHandle      DW      0 
    1474 0B87  0000                     BIOSSIZP        DW      0 
    1475 0B89  ????????                 BIOSSIZB        DD      ? 
    1476 0B8D  ????????                 BIOSOFFS        DD      ? 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 16:54:33

                                                            Page     1-34
                                                            

    1477 0B91  ????                     BIOSSTRT        DW      ? 
    1478 0B93  0000                     BDATE           DW      0              
					 ;IO system date stored here 
    1479 0B95  0000                     BTIME           DW      0              
					 ;IO system time stored here 
    1480                                 
    1481 = 0007                         BIOSATT EQU     attr_hidden + attr_syst
					em + attr_read_only 
    1482 0B97                           BIOSFIL LABEL   BYTE 
    1483 0B97                           BIODRV  LABEL   BYTE 
    1484 0B97  58 3A 5C                         DB      "X:\" 
    1485                                        ENDIF 
    1486                                        IF MSVER 
    1487 0B9A  49 4F 2E 53 59 53                DB      "IO.SYS" 
    1488                                        ENDIF 
    1489 0BA0  00                               DB      0 
    1490                                 
    1491 0BA1                           DOSData         LABEL   BYTE 
    1492 0BA1  0000                     DOSHandle       DW      0 
    1493 0BA3  0000                     DOSSIZP         DW      0 
    1494 0BA5  ????????                 DOSSIZB         DD      ? 
    1495 0BA9  ????????                 DOSOFFS         DD      ? 
    1496 0BAD  ????                     DOSSTRT         DW      ? 
    1497 0BAF  0000                     DDATE           DW      0              
					 ;DOS date stored here 
    1498 0BB1  0000                     DTIME           DW      0              
					 ;DOS time 
    1499                                 
    1500 = 0007                         DOSATT  EQU     attr_hidden + attr_syst
					em + attr_read_only 
    1501 0BB3                           DOSFIL  LABEL   BYTE 
    1502 0BB3                           DOSDRV  LABEL   BYTE 
    1503 0BB3  58 3A 5C                         DB      "X:\" 
    1504                                        ENDIF 
    1505                                        IF MSVER 
    1506 0BB6  4D 53 44 4F 53 2E 53             DB      "MSDOS.SYS" 
    1507       59 53                    
    1508                                        ENDIF 
    1509 0BBF  00                               DB      0 
    1510                                 
    1511 0BC0                           COMData         LABEL   BYTE 
    1512 0BC0  0000                     COMHandle       DW      0 
    1513 0BC2  0000                     COMSIZP         DW      0 
    1514 0BC4  ????????                 COMSIZB         DD      ? 
    1515 0BC8  ????????                 COMOFFS         DD      ? 
    1516 0BCC  ????                     COMSTRT         DW      ? 
    1517 0BCE  0000                     CDATE           DW      0              
					 ;Date of COMMAND 
    1518 0BD0  0000                     CTIME           DW      0              
					 ;Time of COMMAND 
    1519                                 
    1520 = 0000                         COMATT  EQU     0 
    1521 0BD2                           COMFIL  LABEL   BYTE 
    1522 0BD2                           COMDRV  LABEL   BYTE 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 16:54:33

                                                            Page     1-35
                                                            

    1523 0BD2  58 3A 5C 43 4F 4D 4D             DB      "X:\COMMAND.COM",0 
    1524       41 4E 44 2E 43 4F 4D     
    1525       00                       
    1526                                 
    1527 0BE1  FF 00 00 00 00 00 08     VOLFCB  DB      -1,0,0,0,0,0,8 
    1528 0BE8  00                               DB      0 
    1529 0BE9  20 20 20 20 20 20 20     VOLNAM  DB      "           " 
    1530       20 20 20 20              
    1531 0BF4  08                               DB      8 
    1532 0BF5  001A[                            DB      26 DUP(?) 
    1533            ??                  
    1534                         ]      
    1535                                
    1536                                 
    1537 0C0F  FF 00 00 00 00 00 FF     ALLFILE DB      -1,0,0,0,0,0,0FFH 
    1538 0C16  00 3F 3F 3F 3F 3F 3F     ALLDRV  DB      0,"???????????" 
    1539       3F 3F 3F 3F 3F           
    1540 0C22  001A[                            DB      26 DUP(?) 
    1541            ??                  
    1542                         ]      
    1543                                
    1544                                 
    1545 0C3C  00                       CLEANFILE DB    0 
    1546 0C3D  41 41 41 46 46 46 46     CLNNAM  DB      "AAAFFFFFFOR" 
    1547       46 46 4F 52              
    1548 0C48  001A[                            DB      26 DUP(?) 
    1549            ??                  
    1550                         ]      
    1551                                
    1552                                 
    1553 0C62  ????                     SWITCHMAP DW    ? 
    1554 0C64  ????                     SWITCHCOPY DW   ? 
    1555 0C66  ????                     FAT     DW      ? 
    1556 0C68  ????                             DW      ? 
    1557 0C6A  ????                     CLUSSIZ DW      ? 
    1558 0C6C  ????                     SECSIZ  DW      ? 
    1559 0C6E  ????????                 SYSSIZ  DD      ? 
    1560 0C72  ????????                 FDSKSIZ DD      ? 
    1561 0C76  ????????                 BADSIZ  DD      ? 
    1562 0C7A  ????                     SYSTRKS DW      ? 
    1563 0C7C  ????                     SECTORS DW      ? 
    1564 0C7E  50 00                    INBUFF  DB      80,0 
    1565 0C80  0050[                            DB      80 DUP(?) 
    1566            ??                  
    1567                         ]      
    1568                                
    1569                                 
    1570 0CD0  0100[                            DB      100H DUP(?) 
    1571            ??                  
    1572                         ]      
    1573                                
    1574                                 
    1575 0DD0                           STACK   LABEL   BYTE 
    1576                                 
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 16:54:33

                                                            Page     1-36
                                                            

    1577                                ;For FORMES module 
    1578                                 
    1579                                        EXTRN   BADVER:BYTE,SNGMSG:BYTE
					,SNGDRV:BYTE,HRDMSG:BYTE,HRDDRV:BYTE 
    1580                                        EXTRN   LABPRMT:BYTE,TARGMSG:BY
					TE,TARGDRV:BYTE 
    1581                                        EXTRN   SYSTRAN:BYTE,CRLFMSG:BY
					TE,INVCHR:BYTE,INVDRV:BYTE 
    1582                                        EXTRN   SYSMSG:BYTE,SYSDRV:BYTE
					,FRMTERR:BYTE,NOTSYS:BYTE 
    1583                                        EXTRN   NOUSE:BYTE,MEMEX:BYTE,I
					NVPAR:BYTE 
    1584                                 
    1585                                        ENDIF 
    1586                                 
    1587 0DD0                           CODE    ENDS 
    1588                                 
    1589                                        END     START 

Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 16:54:33

                                                            Symbols-1
                                                             

Macros:

		N a m e			Lines

BREAK  . . . . . . . . . . . . .  	   2
CONDRET  . . . . . . . . . . . .  	  19
CONTEXT  . . . . . . . . . . . .  	   3
DO_EXT . . . . . . . . . . . . .  	   0
ENTRY  . . . . . . . . . . . . .  	   2
ERROR  . . . . . . . . . . . . .  	   4
INVOKE . . . . . . . . . . . . .  	   8
I_AM . . . . . . . . . . . . . .  	  14
I_NEED . . . . . . . . . . . . .  	  11
JUMP . . . . . . . . . . . . . .  	  17
LONG_ADDR  . . . . . . . . . . .  	   7
MAKELAB  . . . . . . . . . . . .  	   4
PROCEDURE  . . . . . . . . . . .  	   2
RETC . . . . . . . . . . . . . .  	   1
RETNC  . . . . . . . . . . . . .  	   1
RETNZ  . . . . . . . . . . . . .  	   1
RETURN . . . . . . . . . . . . .  	   5
RETZ . . . . . . . . . . . . . .  	   1
SHORT_ADDR . . . . . . . . . . .  	  12
TRANSFER . . . . . . . . . . . .  	   8

Structures and Records:

                N a m e                 Width   # fields
                                        Shift   Width   Mask    Initial

ARENA  . . . . . . . . . . . . .  	0005	0003
  ARENA_SIGNATURE  . . . . . . .  	0000
  ARENA_OWNER  . . . . . . . . .  	0001
  ARENA_SIZE . . . . . . . . . .  	0003
BPBLOCK  . . . . . . . . . . . .  	000D	0008
  BPSECSZ  . . . . . . . . . . .  	0000
  BPCLUS . . . . . . . . . . . .  	0002
  BPRES  . . . . . . . . . . . .  	0003
  BPFTCNT  . . . . . . . . . . .  	0005
  BPDRCNT  . . . . . . . . . . .  	0006
  BPSCCNT  . . . . . . . . . . .  	0008
  BPMEDIA  . . . . . . . . . . .  	000A
  BPFTSEC  . . . . . . . . . . .  	000B
BUFFINFO . . . . . . . . . . . .  	0010	0009
  NEXTBUF  . . . . . . . . . . .  	0000
  BUFDRV . . . . . . . . . . . .  	0004
  BUFDIRTY . . . . . . . . . . .  	0005
  BUFPRI . . . . . . . . . . . .  	0006
  VISIT  . . . . . . . . . . . .  	0007
  BUFSECNO . . . . . . . . . . .  	0008
  BUFWRTCNT  . . . . . . . . . .  	000A
  BUFWRTINC  . . . . . . . . . .  	000B
  BUFDRVDP . . . . . . . . . . .  	000C
DIR_ENTRY  . . . . . . . . . . .  	0020	0008
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 16:54:33

                                                            Symbols-2
                                                             

  DIR_NAME . . . . . . . . . . .  	0000
  DIR_ATTR . . . . . . . . . . .  	000B
  DIR_PAD  . . . . . . . . . . .  	000C
  DIR_TIME . . . . . . . . . . .  	0016
  DIR_DATE . . . . . . . . . . .  	0018
  DIR_FIRST  . . . . . . . . . .  	001A
  DIR_SIZE_L . . . . . . . . . .  	001C
  DIR_SIZE_H . . . . . . . . . .  	001E
DPB  . . . . . . . . . . . . . .  	005E	0012
  DPB_DRIVE  . . . . . . . . . .  	0000
  DPB_UNIT . . . . . . . . . . .  	0001
  DPB_SECTOR_SIZE  . . . . . . .  	0002
  DPB_CLUSTER_MASK . . . . . . .  	0004
  DPB_CLUSTER_SHIFT  . . . . . .  	0005
  DPB_FIRST_FAT  . . . . . . . .  	0006
  DPB_FAT_COUNT  . . . . . . . .  	0008
  DPB_ROOT_ENTRIES . . . . . . .  	0009
  DPB_FIRST_SECTOR . . . . . . .  	000B
  DPB_MAX_CLUSTER  . . . . . . .  	000D
  DPB_FAT_SIZE . . . . . . . . .  	000F
  DPB_DIR_SECTOR . . . . . . . .  	0010
  DPB_DRIVER_ADDR  . . . . . . .  	0012
  DPB_MEDIA  . . . . . . . . . .  	0016
  DPB_FIRST_ACCESS . . . . . . .  	0017
  DPB_NEXT_DPB . . . . . . . . .  	0018
  DPB_CURRENT_DIR  . . . . . . .  	001C
  DPB_DIR_TEXT . . . . . . . . .  	001E
EXEC0  . . . . . . . . . . . . .  	000E	0004
  EXEC0_ENVIRON  . . . . . . . .  	0000
  EXEC0_COM_LINE . . . . . . . .  	0002
  EXEC0_5C_FCB . . . . . . . . .  	0006
  EXEC0_6C_FCB . . . . . . . . .  	000A
EXEC1  . . . . . . . . . . . . .  	0016	0008
  EXEC1_ENVIRON  . . . . . . . .  	0000
  EXEC1_COM_LINE . . . . . . . .  	0002
  EXEC1_5C_FCB . . . . . . . . .  	0006
  EXEC1_6C_FCB . . . . . . . . .  	000A
  EXEC1_SP . . . . . . . . . . .  	000E
  EXEC1_SS . . . . . . . . . . .  	0010
  EXEC1_IP . . . . . . . . . . .  	0012
  EXEC1_CS . . . . . . . . . . .  	0014
EXEC3  . . . . . . . . . . . . .  	0004	0002
  EXEC3_LOAD_ADDR  . . . . . . .  	0000
  EXEC3_RELOC_FAC  . . . . . . .  	0002
EXE_FILE . . . . . . . . . . . .  	0020	000F
  EXE_SIGNATURE  . . . . . . . .  	0000
  EXE_LEN_MOD_512  . . . . . . .  	0002
  EXE_PAGES  . . . . . . . . . .  	0004
  EXE_RLE_COUNT  . . . . . . . .  	0006
  EXE_PAR_DIR  . . . . . . . . .  	0008
  EXE_MIN_BSS  . . . . . . . . .  	000A
  EXE_MAX_BSS  . . . . . . . . .  	000C
  EXE_SS . . . . . . . . . . . .  	000E
  EXE_SP . . . . . . . . . . . .  	0010
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 16:54:33

                                                            Symbols-3
                                                             

  EXE_CHKSUM . . . . . . . . . .  	0012
  EXE_IP . . . . . . . . . . . .  	0014
  EXE_CS . . . . . . . . . . . .  	0016
  EXE_RLE_TABLE  . . . . . . . .  	0018
  EXE_IOV  . . . . . . . . . . .  	001A
  EXE_SYM_TAB  . . . . . . . . .  	001C
FILESTRUC  . . . . . . . . . . .  	0013	0008
  FILE_HANDLE  . . . . . . . . .  	0000
  FILE_SIZEP . . . . . . . . . .  	0002
  FILE_SIZEB . . . . . . . . . .  	0004
  FILE_OFFSET  . . . . . . . . .  	0008
  FILE_START . . . . . . . . . .  	000C
  FILE_DATE  . . . . . . . . . .  	000E
  FILE_TIME  . . . . . . . . . .  	0010
  FILE_NAME  . . . . . . . . . .  	0012
FIND_BUF . . . . . . . . . . . .  	002B	000C
  FIND_BUF_SATTR . . . . . . . .  	0000
  FIND_BUF_DRIVE . . . . . . . .  	0001
  FIND_BUF_NAME  . . . . . . . .  	0002
  FIND_BUF_LASTENT . . . . . . .  	000D
  FIND_BUF_THISDPB . . . . . . .  	000F
  FIND_BUF_DIRSTART  . . . . . .  	0013
  FIND_BUF_ATTR  . . . . . . . .  	0015
  FIND_BUF_TIME  . . . . . . . .  	0016
  FIND_BUF_DATE  . . . . . . . .  	0018
  FIND_BUF_SIZE_L  . . . . . . .  	001A
  FIND_BUF_SIZE_H  . . . . . . .  	001C
  FIND_BUF_PNAME . . . . . . . .  	001E
INTERNAT_BLOCK . . . . . . . . .  	0018	0015
  DATE_TIM_FORMAT  . . . . . . .  	0000
  CURRENCY_SYM . . . . . . . . .  	0002
  THOUS_SEP  . . . . . . . . . .  	0007
  DECIMAL_SEP  . . . . . . . . .  	0009
  DATE_SEP . . . . . . . . . . .  	000B
  TIME_SEP . . . . . . . . . . .  	000D
  BIT_FEILD  . . . . . . . . . .  	000F
  CURRENCY_CENTS . . . . . . . .  	0010
  TIME_24  . . . . . . . . . . .  	0011
  MAP_CALL . . . . . . . . . . .  	0012
  DATA_SEP . . . . . . . . . . .  	0016
PROCESS_DATA_BLOCK . . . . . . .  	005B	000E
  PDB_EXIT_CALL  . . . . . . . .  	0000
  PDB_BLOCK_LEN  . . . . . . . .  	0002
  PDB_CPM_CALL . . . . . . . . .  	0005
  PDB_EXIT . . . . . . . . . . .  	000A
  PDB_CTRL_C . . . . . . . . . .  	000E
  PDB_FATAL_ABORT  . . . . . . .  	0012
  PDB_PARENT_PID . . . . . . . .  	0016
  PDB_JFN_TABLE  . . . . . . . .  	0018
  PDB_ENVIRON  . . . . . . . . .  	002C
  PDB_USER_STACK . . . . . . . .  	002E
  PDB_PAD1 . . . . . . . . . . .  	0032
  PDB_CALL_SYSTEM  . . . . . . .  	0050
  PDB_PAD2 . . . . . . . . . . .  	0055
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 16:54:33

                                                            Symbols-4
                                                             

SFT  . . . . . . . . . . . . . .  	0008	0003
  SFT_LINK . . . . . . . . . . .  	0000
  SFT_COUNT  . . . . . . . . . .  	0004
  SFT_TABLE  . . . . . . . . . .  	0006
SF_ENTRY . . . . . . . . . . . .  	0028	0004
  SF_REF_COUNT . . . . . . . . .  	0000
  SF_MODE  . . . . . . . . . . .  	0001
  SF_ATTR  . . . . . . . . . . .  	0002
  SF_FCB . . . . . . . . . . . .  	0003
SYMBOL_ENTRY . . . . . . . . . .  	0106	0004
  SYM_VALUE  . . . . . . . . . .  	0000
  SYM_TYPE . . . . . . . . . . .  	0004
  SYM_LEN  . . . . . . . . . . .  	0006
  SYM_NAME . . . . . . . . . . .  	0007
SYS_FCB  . . . . . . . . . . . .  	0025	0010
  FCB_DRIVE  . . . . . . . . . .  	0000
  FCB_NAME . . . . . . . . . . .  	0001
  FCB_EXT  . . . . . . . . . . .  	0009
  FCB_EXTENT . . . . . . . . . .  	000C
  FCB_RECSIZ . . . . . . . . . .  	000E
  FCB_FILSIZ . . . . . . . . . .  	0010
  FCB_DRVBP  . . . . . . . . . .  	0012
  FCB_FDATE  . . . . . . . . . .  	0014
  FCB_FTIME  . . . . . . . . . .  	0016
  FCB_DEVID  . . . . . . . . . .  	0018
  FCB_FIRCLUS  . . . . . . . . .  	0019
  FCB_CLUSPOS  . . . . . . . . .  	001B
  FCB_LSTCLUS  . . . . . . . . .  	001D
  FCB_NR . . . . . . . . . . . .  	0020
  FCB_RR . . . . . . . . . . . .  	0021
USER_ENVIRON . . . . . . . . . .  	0018	000C
  USER_AX  . . . . . . . . . . .  	0000
  USER_BX  . . . . . . . . . . .  	0002
  USER_CX  . . . . . . . . . . .  	0004
  USER_DX  . . . . . . . . . . .  	0006
  USER_SI  . . . . . . . . . . .  	0008
  USER_DI  . . . . . . . . . . .  	000A
  USER_BP  . . . . . . . . . . .  	000C
  USER_DS  . . . . . . . . . . .  	000E
  USER_ES  . . . . . . . . . . .  	0010
  USER_IP  . . . . . . . . . . .  	0012
  USER_CS  . . . . . . . . . . .  	0014
  USER_F . . . . . . . . . . . .  	0016

Segments and Groups:

                N a m e         	Size	Align	Combine Class

CODE . . . . . . . . . . . . . .  	0DD0	PARA	PUBLIC	'CODE'
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 16:54:33

                                                            Symbols-5
                                                             

Symbols:            

                N a m e         	Type	Value	Attr         

ABORT  . . . . . . . . . . . . .  	Number	0000	
ADDR_INT_ABORT . . . . . . . . .  	Number	0080	
ADDR_INT_COMMAND . . . . . . . .  	Number	0084	
ADDR_INT_CTRL_C  . . . . . . . .  	Number	008C	
ADDR_INT_DISK_READ . . . . . . .  	Number	0094	
ADDR_INT_DISK_WRITE  . . . . . .  	Number	0098	
ADDR_INT_FASTCON . . . . . . . .  	Number	00A4	
ADDR_INT_FATAL_ABORT . . . . . .  	Number	0090	
ADDR_INT_KEEP_PROCESS  . . . . .  	Number	009C	
ADDR_INT_SPOOLER . . . . . . . .  	Number	00A0	
ADDR_INT_TERMINATE . . . . . . .  	Number	0088	
ALIGNED  . . . . . . . . . . . .  	L NEAR	0355	CODE
ALLDRV . . . . . . . . . . . . .  	L BYTE 	0C16	CODE
ALLFILE  . . . . . . . . . . . .  	L BYTE 	0C0F	CODE
ALLOC  . . . . . . . . . . . . .  	Number	0048	
ALLOCOPER  . . . . . . . . . . .  	Number	0058	
ALLOC_ARENA_TRASHED  . . . . . .  	Alias	 ERROR_ARENA_TRASHED		
ALLOC_NOT_ENOUGH_MEMORY  . . . .  	Alias	 ERROR_NOT_ENOUGH_MEMORY		
ALTVECT  . . . . . . . . . . . .  	Number	0000	
ARENA_OWNER_SYSTEM . . . . . . .  	Number	0000	
ARENA_SIGNATURE_END  . . . . . .  	Number	005A	
ARENA_SIGNATURE_NORMAL . . . . .  	Number	004D	
ASSIGNOPER . . . . . . . . . . .  	Number	005F	
ATTR_ALL . . . . . . . . . . . .  	Number	0016	
ATTR_ARCHIVE . . . . . . . . . .  	Number	0020	
ATTR_CHANGEABLE  . . . . . . . .  	Number	0027	
ATTR_DIRECTORY . . . . . . . . .  	Number	0010	
ATTR_HIDDEN  . . . . . . . . . .  	Number	0002	
ATTR_IGNORE  . . . . . . . . . .  	Number	0021	
ATTR_READ_ONLY . . . . . . . . .  	Number	0001	
ATTR_SYSTEM  . . . . . . . . . .  	Number	0004	
ATTR_VOLUME_ID . . . . . . . . .  	Number	0008	

BAD100 . . . . . . . . . . . . .  	L NEAR	02EC	CODE
BAD150 . . . . . . . . . . . . .  	L NEAR	032E	CODE
BADSECTOR  . . . . . . . . . . .  	L NEAR	0000	CODE	External
BADSIZ . . . . . . . . . . . . .  	L DWORD	0C76	CODE	Global
BADVER . . . . . . . . . . . . .  	V BYTE 	0000	CODE	External
BDATE  . . . . . . . . . . . . .  	L WORD 	0B93	CODE
BIODRV . . . . . . . . . . . . .  	L BYTE 	0B97	CODE
BIOSATT  . . . . . . . . . . . .  	Number	0007	
BIOSCLS  . . . . . . . . . . . .  	L NEAR	09BF	CODE
BIOSDATA . . . . . . . . . . . .  	L BYTE 	0B85	CODE
BIOSDONE . . . . . . . . . . . .  	L NEAR	079B	CODE
BIOSFIL  . . . . . . . . . . . .  	L BYTE 	0B97	CODE
BIOSHANDLE . . . . . . . . . . .  	L WORD 	0B85	CODE
BIOSOFFS . . . . . . . . . . . .  	L DWORD	0B8D	CODE
BIOSSIZB . . . . . . . . . . . .  	L DWORD	0B89	CODE
BIOSSIZP . . . . . . . . . . . .  	L WORD 	0B87	CODE
BIOSSTRT . . . . . . . . . . . .  	L WORD 	0B91	CODE
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 16:54:33

                                                            Symbols-6
                                                             

BLANKZER . . . . . . . . . . . .  	L NEAR	0427	CODE
BTIME  . . . . . . . . . . . . .  	L WORD 	0B95	CODE
BUFINSIZ . . . . . . . . . . . .  	Number	0010	

CDATE  . . . . . . . . . . . . .  	L WORD 	0BCE	CODE
CHAR_OPER  . . . . . . . . . . .  	Number	0037	
CHDIR  . . . . . . . . . . . . .  	Number	003B	
CHDIR_PATH_NOT_FOUND . . . . . .  	Alias	 ERROR_PATH_NOT_FOUND		
CHMOD  . . . . . . . . . . . . .  	Number	0043	
CHMOD_ACCESS_DENIED  . . . . . .  	Alias	 ERROR_ACCESS_DENIED		
CHMOD_INVALID_FUNCTION . . . . .  	Alias	 ERROR_INVALID_FUNCTION		
CHMOD_PATH_NOT_FOUND . . . . . .  	Alias	 ERROR_PATH_NOT_FOUND		
CLEANFILE  . . . . . . . . . . .  	L BYTE 	0C3C	CODE
CLEAR  . . . . . . . . . . . . .  	L NEAR	051D	CODE
CLEARED  . . . . . . . . . . . .  	L NEAR	0385	CODE
CLEARFLG . . . . . . . . . . . .  	L BYTE 	0B34	CODE
CLNNAM . . . . . . . . . . . . .  	L BYTE 	0C3D	CODE
CLOSE  . . . . . . . . . . . . .  	Number	003E	
CLOSETARG  . . . . . . . . . . .  	L NEAR	08C0	CODE
CLOSE_INVALID_FUNCTION . . . . .  	Alias	 ERROR_INVALID_FUNCTION		
CLOSE_INVALID_HANDLE . . . . . .  	Alias	 ERROR_INVALID_HANDLE		
CLRTEST  . . . . . . . . . . . .  	L NEAR	0293	CODE
CLSALL . . . . . . . . . . . . .  	L NEAR	0694	CODE
CLSALLJ  . . . . . . . . . . . .  	L NEAR	0700	CODE
CLUSSIZ  . . . . . . . . . . . .  	L WORD 	0C6A	CODE	Global
CMPTRKS  . . . . . . . . . . . .  	L NEAR	02CE	CODE
COMATT . . . . . . . . . . . . .  	Number	0000	
COMCLS . . . . . . . . . . . . .  	L NEAR	0A39	CODE
COMDATA  . . . . . . . . . . . .  	L BYTE 	0BC0	CODE
COMDONE  . . . . . . . . . . . .  	L NEAR	0872	CODE
COMDRV . . . . . . . . . . . . .  	L BYTE 	0BD2	CODE
COMFIL . . . . . . . . . . . . .  	L BYTE 	0BD2	CODE
COMHANDLE  . . . . . . . . . . .  	L WORD 	0BC0	CODE
COMOFFS  . . . . . . . . . . . .  	L DWORD	0BC8	CODE
COMSIZB  . . . . . . . . . . . .  	L DWORD	0BC4	CODE
COMSIZP  . . . . . . . . . . . .  	L WORD 	0BC2	CODE
COMSTRT  . . . . . . . . . . . .  	L WORD 	0BCC	CODE
CONVLP . . . . . . . . . . . . .  	L NEAR	03DF	CODE
CONVWRD  . . . . . . . . . . . .  	L NEAR	0435	CODE
COUNTRY_NOT_FOUND  . . . . . . .  	Alias	 ERROR_FILE_NOT_FOUND		
CREAT  . . . . . . . . . . . . .  	Number	003C	
CREATENEWFILE  . . . . . . . . .  	Number	005B	
CREATETEMPFILE . . . . . . . . .  	Number	005A	
CREATE_PROCESS_DATA_BLOCK  . . .  	Number	0026	
CREAT_ACCESS_DENIED  . . . . . .  	Alias	 ERROR_ACCESS_DENIED		
CREAT_PATH_NOT_FOUND . . . . . .  	Alias	 ERROR_PATH_NOT_FOUND		
CREAT_TOO_MANY_OPEN_FILES  . . .  	Alias	 ERROR_TOO_MANY_OPEN_FILES		
CRET12 . . . . . . . . . . . . .  	L NEAR	09A8	CODE
CRLF . . . . . . . . . . . . . .  	L NEAR	04A3	CODE	Global
CRLFMSG  . . . . . . . . . . . .  	V BYTE 	0000	CODE	External
CTIME  . . . . . . . . . . . . .  	L WORD 	0BD0	CODE
CURDIR_INVALID_DRIVE . . . . . .  	Alias	 ERROR_INVALID_DRIVE		
CURRENT_DIR  . . . . . . . . . .  	Number	0047	
C_BS . . . . . . . . . . . . . .  	Number	0008	
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 16:54:33

                                                            Symbols-7
                                                             

C_CR . . . . . . . . . . . . . .  	Number	000D	
C_DEL  . . . . . . . . . . . . .  	Number	007F	
C_ETB  . . . . . . . . . . . . .  	Number	0017	
C_ETX  . . . . . . . . . . . . .  	Number	0003	
C_HT . . . . . . . . . . . . . .  	Number	0009	
C_LF . . . . . . . . . . . . . .  	Number	000A	
C_NAK  . . . . . . . . . . . . .  	Number	0015	

DBLFLG . . . . . . . . . . . . .  	L BYTE 	0B33	CODE
DDATE  . . . . . . . . . . . . .  	L WORD 	0BAF	CODE
DEALLOC  . . . . . . . . . . . .  	Number	0049	
DEALLOC_ARENA_TRASHED  . . . . .  	Alias	 ERROR_ARENA_TRASHED		
DEALLOC_INVALID_BLOCK  . . . . .  	Alias	 ERROR_INVALID_BLOCK		
DEFALT . . . . . . . . . . . . .  	L BYTE 	0B36	CODE
DELETE_THEM  . . . . . . . . . .  	L NEAR	05C3	CODE
DEVID_BLOCK_DEV  . . . . . . . .  	Number	001F	
DEVID_DEVICE . . . . . . . . . .  	Number	0080	
DEVID_DEVICE_CLOCK . . . . . . .  	Number	0008	
DEVID_DEVICE_CON_IN  . . . . . .  	Number	0001	
DEVID_DEVICE_CON_OUT . . . . . .  	Number	0002	
DEVID_DEVICE_EOF . . . . . . . .  	Number	0040	
DEVID_DEVICE_NULL  . . . . . . .  	Number	0004	
DEVID_DEVICE_RAW . . . . . . . .  	Number	0020	
DEVID_DEVICE_SPECIAL . . . . . .  	Number	0010	
DEVID_EOF  . . . . . . . . . . .  	Number	0040	
DEVID_FILE_CLEAN . . . . . . . .  	Number	0040	
DEVID_FILE_MASK_DRIVE  . . . . .  	Number	003F	
DEVID_ISCIN  . . . . . . . . . .  	Number	0001	
DEVID_ISCLK  . . . . . . . . . .  	Number	0008	
DEVID_ISCOT  . . . . . . . . . .  	Number	0002	
DEVID_ISDEV  . . . . . . . . . .  	Number	0080	
DEVID_ISNUL  . . . . . . . . . .  	Number	0004	
DEVID_RAW  . . . . . . . . . . .  	Number	0020	
DEVID_SPECIAL  . . . . . . . . .  	Number	0010	
DIGIT  . . . . . . . . . . . . .  	L NEAR	0420	CODE
DIRPRI . . . . . . . . . . . . .  	Number	000F	
DIRSTRLEN  . . . . . . . . . . .  	Number	0040	
DIR_SEARCH_FIRST . . . . . . . .  	Number	0011	
DIR_SEARCH_NEXT  . . . . . . . .  	Number	0012	
DISID4 . . . . . . . . . . . . .  	L NEAR	0B0E	CODE
DISIX4 . . . . . . . . . . . . .  	L NEAR	0B04	CODE
DISKFORMAT . . . . . . . . . . .  	L NEAR	0000	CODE	External
DISK_RESET . . . . . . . . . . .  	Number	000D	
DISP32BITS . . . . . . . . . . .  	L NEAR	03D5	CODE	Global
DONE . . . . . . . . . . . . . .  	L NEAR	0000	CODE	External
DOSATT . . . . . . . . . . . . .  	Number	0007	
DOSCLS . . . . . . . . . . . . .  	L NEAR	09FD	CODE
DOSDATA  . . . . . . . . . . . .  	L BYTE 	0BA1	CODE
DOSDONE  . . . . . . . . . . . .  	L NEAR	0806	CODE
DOSDRV . . . . . . . . . . . . .  	L BYTE 	0BB3	CODE
DOSFIL . . . . . . . . . . . . .  	L BYTE 	0BB3	CODE
DOSHANDLE  . . . . . . . . . . .  	L WORD 	0BA1	CODE
DOSOFFS  . . . . . . . . . . . .  	L DWORD	0BA9	CODE
DOSOPNOK . . . . . . . . . . . .  	L NEAR	09E8	CODE
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 16:54:33

                                                            Symbols-8
                                                             

DOSSIZB  . . . . . . . . . . . .  	L DWORD	0BA5	CODE
DOSSIZP  . . . . . . . . . . . .  	L WORD 	0BA3	CODE
DOSSTRT  . . . . . . . . . . . .  	L WORD 	0BAD	CODE
DOSVER_HIGH  . . . . . . . . . .  	Number	020B	
DOS_MAJOR_VERSION  . . . . . . .  	Number	0002	
DOS_MINOR_VERSION  . . . . . . .  	Number	000B	
DOVOL  . . . . . . . . . . . . .  	L NEAR	05DD	CODE
DPBSIZ . . . . . . . . . . . . .  	Number	005E	
DRIVE  . . . . . . . . . . . . .  	L BYTE 	0B35	CODE	Global
DRNUM  . . . . . . . . . . . . .  	Number	005C	
DRTFAT . . . . . . . . . . . . .  	L NEAR	0365	CODE
DRVERR . . . . . . . . . . . . .  	L NEAR	0517	CODE
DRVGD  . . . . . . . . . . . . .  	L NEAR	0131	CODE
DRVSPEC  . . . . . . . . . . . .  	L NEAR	0153	CODE
DSKPRM . . . . . . . . . . . . .  	L NEAR	04D5	CODE
DSKSIZ . . . . . . . . . . . . .  	Number	000D	
DTIME  . . . . . . . . . . . . .  	L WORD 	0BB1	CODE
DUP2_INVALID_HANDLE  . . . . . .  	Alias	 ERROR_INVALID_HANDLE		
DUP_INVALID_HANDLE . . . . . . .  	Alias	 ERROR_INVALID_HANDLE		
DUP_PDB  . . . . . . . . . . . .  	Number	0055	
DUP_TOO_MANY_OPEN_FILES  . . . .  	Alias	 ERROR_TOO_MANY_OPEN_FILES		

ENTRYPOINT . . . . . . . . . . .  	Number	00C0	
ERROR_ACCESS_DENIED  . . . . . .  	Number	0005	
ERROR_ARENA_TRASHED  . . . . . .  	Number	0007	
ERROR_BAD_ENVIRONMENT  . . . . .  	Number	000A	
ERROR_BAD_FORMAT . . . . . . . .  	Number	000B	
ERROR_CURRENT_DIRECTORY  . . . .  	Number	0010	
ERROR_FILE_NOT_FOUND . . . . . .  	Number	0002	
ERROR_INVALID_ACCESS . . . . . .  	Number	000C	
ERROR_INVALID_BLOCK  . . . . . .  	Number	0009	
ERROR_INVALID_DATA . . . . . . .  	Number	000D	
ERROR_INVALID_DRIVE  . . . . . .  	Number	000F	
ERROR_INVALID_FUNCTION . . . . .  	Number	0001	
ERROR_INVALID_HANDLE . . . . . .  	Number	0006	
ERROR_NOT_ENOUGH_MEMORY  . . . .  	Number	0008	
ERROR_NOT_SAME_DEVICE  . . . . .  	Number	0011	
ERROR_NO_MORE_FILES  . . . . . .  	Number	0012	
ERROR_PATH_NOT_FOUND . . . . . .  	Number	0003	
ERROR_TOO_MANY_OPEN_FILES  . . .  	Number	0004	
EXEC . . . . . . . . . . . . . .  	Number	004B	
EXEC_BAD_ENVIRONMENT . . . . . .  	Alias	 ERROR_BAD_ENVIRONMENT		
EXEC_BAD_FORMAT  . . . . . . . .  	Alias	 ERROR_BAD_FORMAT		
EXEC_FILE_NOT_FOUND  . . . . . .  	Alias	 ERROR_FILE_NOT_FOUND		
EXEC_FUNC_NO_EXECUTE . . . . . .  	Number	0001	
EXEC_FUNC_OVERLAY  . . . . . . .  	Number	0002	
EXEC_INVALID_FUNCTION  . . . . .  	Alias	 ERROR_INVALID_FUNCTION		
EXEC_NOT_ENOUGH_MEMORY . . . . .  	Alias	 ERROR_NOT_ENOUGH_MEMORY		
EXE_VALID_OLD_SIGNATURE  . . . .  	Number	4D5A	
EXE_VALID_SIGNATURE  . . . . . .  	Number	5A4D	
EXIT . . . . . . . . . . . . . .  	Number	004C	
EXIT_ABORT . . . . . . . . . . .  	Number	0000	
EXIT_CTRL_C  . . . . . . . . . .  	Number	0001	
EXIT_HARD_ERROR  . . . . . . . .  	Number	0002	
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 16:54:33

                                                            Symbols-9
                                                             

EXIT_KEEP_PROCESS  . . . . . . .  	Number	0003	
EXIT_TERMINATE . . . . . . . . .  	Number	0000	

FALSE  . . . . . . . . . . . . .  	Number	0000	
FAT  . . . . . . . . . . . . . .  	L WORD 	0C66	CODE
FATID  . . . . . . . . . . . . .  	V BYTE 	0000	CODE	External
FATPRI . . . . . . . . . . . . .  	Number	001E	
FATSPACE . . . . . . . . . . . .  	V WORD 	0000	CODE	External
FATWRT . . . . . . . . . . . . .  	L NEAR	0393	CODE
FCB_CLOSE  . . . . . . . . . . .  	Number	0010	
FCB_CREATE . . . . . . . . . . .  	Number	0016	
FCB_DELETE . . . . . . . . . . .  	Number	0013	
FCB_OPEN . . . . . . . . . . . .  	Number	000F	
FCB_RANDOM_READ  . . . . . . . .  	Number	0021	
FCB_RANDOM_READ_BLOCK  . . . . .  	Number	0027	
FCB_RANDOM_WRITE . . . . . . . .  	Number	0022	
FCB_RANDOM_WRITE_BLOCK . . . . .  	Number	0028	
FCB_RENAME . . . . . . . . . . .  	Number	0017	
FCB_SEQ_READ . . . . . . . . . .  	Number	0014	
FCB_SEQ_WRITE  . . . . . . . . .  	Number	0015	
FDPB . . . . . . . . . . . . . .  	L NEAR	04FA	CODE
FDSKSIZ  . . . . . . . . . . . .  	L DWORD	0C72	CODE	Global
FEXIT  . . . . . . . . . . . . .  	L NEAR	04AD	CODE
FEXIT2 . . . . . . . . . . . . .  	L NEAR	04B0	CODE
FILDIRENT  . . . . . . . . . . .  	Number	0010	
FILESDONE  . . . . . . . . . . .  	L NEAR	0693	CODE
FILETIMES_INVALID_FUNCTION . . .  	Alias	 ERROR_INVALID_FUNCTION		
FILETIMES_INVALID_HANDLE . . . .  	Alias	 ERROR_INVALID_HANDLE		
FILE_TIMES . . . . . . . . . . .  	Number	0057	
FILIO  . . . . . . . . . . . . .  	L NEAR	0AA4	CODE
FILPERPROC . . . . . . . . . . .  	Number	0014	
FILSTAT  . . . . . . . . . . . .  	L BYTE 	0B41	CODE
FINDFIRST_FILE_NOT_FOUND . . . .  	Alias	 ERROR_FILE_NOT_FOUND		
FINDFIRST_NO_MORE_FILES  . . . .  	Alias	 ERROR_NO_MORE_FILES		
FINDNEXT_NO_MORE_FILES . . . . .  	Alias	 ERROR_NO_MORE_FILES		
FIND_FIRST . . . . . . . . . . .  	Number	004E	
FIND_NEXT  . . . . . . . . . . .  	Number	004F	
FNDSIZ . . . . . . . . . . . . .  	L NEAR	0465	CODE
FNDSIZ0  . . . . . . . . . . . .  	L NEAR	046E	CODE
FREEPRI  . . . . . . . . . . . .  	Number	0000	
FREESPACE  . . . . . . . . . . .  	V WORD 	0000	CODE	External
FRMTERR  . . . . . . . . . . . .  	V BYTE 	0000	CODE	External
FRMTPROB . . . . . . . . . . . .  	L NEAR	0270	CODE
FSTRT  . . . . . . . . . . . . .  	L NEAR	010B	CODE

GETCHR . . . . . . . . . . . . .  	L NEAR	019A	CODE
GETEXTENDEDERROR . . . . . . . .  	Number	0059	
GETFSIZ  . . . . . . . . . . . .  	L NEAR	0A58	CODE
GETOFFS  . . . . . . . . . . . .  	L NEAR	0989	CODE
GETPARM  . . . . . . . . . . . .  	L NEAR	0193	CODE
GETSIZE  . . . . . . . . . . . .  	L NEAR	044A	CODE
GETSYS3  . . . . . . . . . . . .  	L NEAR	0922	CODE
GETTRK . . . . . . . . . . . . .  	L NEAR	0278	CODE
GET_CURRENT_PDB  . . . . . . . .  	Number	0051	
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 16:54:33

                                                            Symbols-10
                                                             

GET_DATE . . . . . . . . . . . .  	Number	002A	
GET_DEFAULT_DPB  . . . . . . . .  	Number	001F	
GET_DEFAULT_DRIVE  . . . . . . .  	Number	0019	
GET_DMA  . . . . . . . . . . . .  	Number	002F	
GET_DPB  . . . . . . . . . . . .  	Number	0032	
GET_DRIVE_FREESPACE  . . . . . .  	Number	0036	
GET_FCB_FILE_LENGTH  . . . . . .  	Number	0023	
GET_FCB_POSITION . . . . . . . .  	Number	0024	
GET_INDOS_FLAG . . . . . . . . .  	Number	0034	
GET_INTERRUPT_VECTOR . . . . . .  	Number	0035	
GET_IN_VARS  . . . . . . . . . .  	Number	0052	
GET_TIME . . . . . . . . . . . .  	Number	002C	
GET_VERIFY_ON_WRITE  . . . . . .  	Number	0054	
GET_VERSION  . . . . . . . . . .  	Number	0030	
GOOD_CREATE  . . . . . . . . . .  	L NEAR	0638	CODE
GOPRNIT  . . . . . . . . . . . .  	L NEAR	04E2	CODE
GOTALLBIO  . . . . . . . . . . .  	L NEAR	078E	CODE
GOTALLCOM  . . . . . . . . . . .  	L NEAR	0865	CODE
GOTALLDOS  . . . . . . . . . . .  	L NEAR	07F9	CODE
GOTBADDOS  . . . . . . . . . . .  	L NEAR	011A	CODE
GOTBIOS  . . . . . . . . . . . .  	L NEAR	069A	CODE
GOTCOM . . . . . . . . . . . . .  	L NEAR	0743	CODE
GOTDOS . . . . . . . . . . . . .  	L NEAR	06EE	CODE
GOTNBIO  . . . . . . . . . . . .  	L NEAR	076B	CODE
GOTNCOM  . . . . . . . . . . . .  	L NEAR	0828	CODE
GOTNDOS  . . . . . . . . . . . .  	L NEAR	07BC	CODE
GOTSIZ2  . . . . . . . . . . . .  	L NEAR	0973	CODE
GOTTARG  . . . . . . . . . . . .  	L NEAR	08FD	CODE
GSYS . . . . . . . . . . . . . .  	L NEAR	0935	CODE

HARDFLAG . . . . . . . . . . . .  	V BYTE 	0000	CODE	External
HEADER . . . . . . . . . . . . .  	L BYTE 	0102	CODE
HRDDRV . . . . . . . . . . . . .  	V BYTE 	0000	CODE	External
HRDMSG . . . . . . . . . . . . .  	V BYTE 	0000	CODE	External

IBMJAPVER  . . . . . . . . . . .  	Alias	 FALSE		
IBMVER . . . . . . . . . . . . .  	Alias	 FALSE		
INBUFF . . . . . . . . . . . . .  	L BYTE 	0C7E	CODE
INIT . . . . . . . . . . . . . .  	L NEAR	0000	CODE	External
INITCALL . . . . . . . . . . . .  	L NEAR	021A	CODE
INTBASE  . . . . . . . . . . . .  	Number	0080	
INTERNATIONAL  . . . . . . . . .  	Number	0038	
INTERNATIONAL_INVALID_FUNCTION .  	Alias	 ERROR_INVALID_FUNCTION		
INTERNAT_BLOCK_MAX . . . . . . .  	Number	0020	
INTTAB . . . . . . . . . . . . .  	Number	0020	
INT_23 . . . . . . . . . . . . .  	L NEAR	08E8	CODE
INT_ABORT  . . . . . . . . . . .  	Alias	 INTTAB		
INT_COMMAND  . . . . . . . . . .  	Number	0021	
INT_CTRL_C . . . . . . . . . . .  	Number	0023	
INT_DISK_READ  . . . . . . . . .  	Number	0025	
INT_DISK_WRITE . . . . . . . . .  	Number	0026	
INT_FASTCON  . . . . . . . . . .  	Number	0029	
INT_FATAL_ABORT  . . . . . . . .  	Number	0024	
INT_KEEP_PROCESS . . . . . . . .  	Number	0027	
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 16:54:33

                                                            Symbols-11
                                                             

INT_SPOOLER  . . . . . . . . . .  	Number	0028	
INT_TERMINATE  . . . . . . . . .  	Number	0022	
INVALID  . . . . . . . . . . . .  	L NEAR	01B4	CODE
INVCHR . . . . . . . . . . . . .  	V BYTE 	0000	CODE	External
INVDRV . . . . . . . . . . . . .  	V BYTE 	0000	CODE	External
INVPAR . . . . . . . . . . . . .  	V BYTE 	0000	CODE	External
IOCNT  . . . . . . . . . . . . .  	L DWORD	0B37	CODE
IOCTL  . . . . . . . . . . . . .  	Number	0044	
IOCTL_INVALID_DATA . . . . . . .  	Alias	 ERROR_INVALID_DATA		
IOCTL_INVALID_FUNCTION . . . . .  	Alias	 ERROR_INVALID_FUNCTION		
IOCTL_INVALID_HANDLE . . . . . .  	Alias	 ERROR_INVALID_HANDLE		
IOLOOP . . . . . . . . . . . . .  	L NEAR	08ED	CODE
IORET  . . . . . . . . . . . . .  	L NEAR	0B03	CODE
IORETP . . . . . . . . . . . . .  	L NEAR	0B02	CODE

K64IO  . . . . . . . . . . . . .  	L NEAR	0AB9	CODE
K64M1  . . . . . . . . . . . . .  	L NEAR	0ACF	CODE
KANJI  . . . . . . . . . . . . .  	Alias	 FALSE		
KEEP_PROCESS . . . . . . . . . .  	Number	0031	

LABPRMT  . . . . . . . . . . . .  	V BYTE 	0000	CODE	External
LBRPRI . . . . . . . . . . . . .  	Number	0002	
LBWPRI . . . . . . . . . . . . .  	Number	0004	
LOCKOPER . . . . . . . . . . . .  	Number	005C	
LSEEK  . . . . . . . . . . . . .  	Number	0042	
LSEEK_INVALID_FUNCTION . . . . .  	Alias	 ERROR_INVALID_FUNCTION		
LSEEK_INVALID_HANDLE . . . . . .  	Alias	 ERROR_INVALID_HANDLE		

MAKEFIL  . . . . . . . . . . . .  	L NEAR	0894	CODE
MAKE_NEXT  . . . . . . . . . . .  	L NEAR	0597	CODE
MEMERR . . . . . . . . . . . . .  	L NEAR	01C8	CODE
MEMEX  . . . . . . . . . . . . .  	V BYTE 	0000	CODE	External
MI_INT . . . . . . . . . . . . .  	Number	00CD	
MI_LONG_CALL . . . . . . . . . .  	Number	009A	
MI_LONG_JMP  . . . . . . . . . .  	Number	00EA	
MI_LONG_RET  . . . . . . . . . .  	Number	00CB	
MKDIR  . . . . . . . . . . . . .  	Number	0039	
MKDIR_ACCESS_DENIED  . . . . . .  	Alias	 ERROR_ACCESS_DENIED		
MKDIR_PATH_NOT_FOUND . . . . . .  	Alias	 ERROR_PATH_NOT_FOUND		
MORE . . . . . . . . . . . . . .  	L NEAR	0494	CODE
MSIZE  . . . . . . . . . . . . .  	L WORD 	0B3D	CODE
MSTART . . . . . . . . . . . . .  	L WORD 	0B3B	CODE
MSVER  . . . . . . . . . . . . .  	Alias	 TRUE		

NEEDSYS  . . . . . . . . . . . .  	L NEAR	0215	CODE
NOREDOS  . . . . . . . . . . . .  	L NEAR	0892	CODE
NORMALIZE  . . . . . . . . . . .  	L NEAR	0B18	CODE
NORMIO . . . . . . . . . . . . .  	L NEAR	0AEA	CODE
NOTSYS . . . . . . . . . . . . .  	V BYTE 	0000	CODE	External
NOUSE  . . . . . . . . . . . . .  	V BYTE 	0000	CODE	External
NO_ERROR_OCCURRED  . . . . . . .  	Text  0                                                              ?		
NXTSWT . . . . . . . . . . . . .  	L NEAR	0173	CODE

OEM_C1 . . . . . . . . . . . . .  	Number	00F9	
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 16:54:33

                                                            Symbols-12
                                                             

OEM_C2 . . . . . . . . . . . . .  	Number	00FA	
OEM_C3 . . . . . . . . . . . . .  	Number	00FB	
OEM_C4 . . . . . . . . . . . . .  	Number	00FC	
OEM_C5 . . . . . . . . . . . . .  	Number	00FD	
OEM_C6 . . . . . . . . . . . . .  	Number	00FE	
OEM_C7 . . . . . . . . . . . . .  	Number	00FF	
OKDOS  . . . . . . . . . . . . .  	L NEAR	0123	CODE
OLDSW  . . . . . . . . . . . . .  	Number	0004	
ONCLUS . . . . . . . . . . . . .  	L NEAR	0482	CODE
OPEN . . . . . . . . . . . . . .  	Number	003D	
OPEN_ACCESS_DENIED . . . . . . .  	Alias	 ERROR_ACCESS_DENIED		
OPEN_FILE_NOT_FOUND  . . . . . .  	Alias	 ERROR_FILE_NOT_FOUND		
OPEN_FOR_BOTH  . . . . . . . . .  	Number	0002	
OPEN_FOR_READ  . . . . . . . . .  	Number	0000	
OPEN_FOR_WRITE . . . . . . . . .  	Number	0001	
OPEN_INVALID_ACCESS  . . . . . .  	Alias	 ERROR_INVALID_ACCESS		
OPEN_TOO_MANY_OPEN_FILES . . . .  	Alias	 ERROR_TOO_MANY_OPEN_FILES		
OUTBYTE  . . . . . . . . . . . .  	L NEAR	0411	CODE
OUTWORD  . . . . . . . . . . . .  	L NEAR	040A	CODE

PACK . . . . . . . . . . . . . .  	L NEAR	0334	CODE
PACKIN . . . . . . . . . . . . .  	L NEAR	0359	CODE
PACKIT . . . . . . . . . . . . .  	L NEAR	031A	CODE
PARSE_FILE_DESCRIPTOR  . . . . .  	Number	0029	
PARTCOM  . . . . . . . . . . . .  	L NEAR	0850	CODE
PARTDOS  . . . . . . . . . . . .  	L NEAR	07E4	CODE
PERROR . . . . . . . . . . . . .  	L NEAR	04AA	CODE
PRINT  . . . . . . . . . . . . .  	L NEAR	048F	CODE	Global

RAW_CON_INPUT  . . . . . . . . .  	Number	0007	
RAW_CON_IO . . . . . . . . . . .  	Number	0006	
RDFILS . . . . . . . . . . . . .  	L NEAR	064D	CODE
RDFRST . . . . . . . . . . . . .  	L NEAR	0210	CODE
RDFRST2  . . . . . . . . . . . .  	L NEAR	0888	CODE
READ . . . . . . . . . . . . . .  	Number	003F	
READDOS  . . . . . . . . . . . .  	L NEAR	0647	CODE
READFILE . . . . . . . . . . . .  	L NEAR	0A8A	CODE
READ_ACCESS_DENIED . . . . . . .  	Alias	 ERROR_ACCESS_DENIED		
READ_INVALID_HANDLE  . . . . . .  	Alias	 ERROR_INVALID_HANDLE		
RECLEN . . . . . . . . . . . . .  	Number	0015	
RENAME . . . . . . . . . . . . .  	Number	0056	
RENAME_ACCESS_DENIED . . . . . .  	Alias	 ERROR_ACCESS_DENIED		
RENAME_FILE_NOT_FOUND  . . . . .  	Alias	 ERROR_FILE_NOT_FOUND		
RENAME_NOT_SAME_DEVICE . . . . .  	Alias	 ERROR_NOT_SAME_DEVICE		
REPORT . . . . . . . . . . . . .  	L NEAR	0000	CODE	External
REPORTC  . . . . . . . . . . . .  	L NEAR	03CC	CODE
RESTUDIR . . . . . . . . . . . .  	L NEAR	08D8	CODE
RET12  . . . . . . . . . . . . .  	L NEAR	09A9	CODE
RET2 . . . . . . . . . . . . . .  	L NEAR	043F	CODE
RET25  . . . . . . . . . . . . .  	L NEAR	05D2	CODE
RET3 . . . . . . . . . . . . . .  	L NEAR	0409	CODE
RET34  . . . . . . . . . . . . .  	L NEAR	076A	CODE
RET34J . . . . . . . . . . . . .  	L NEAR	07E0	CODE
RET35  . . . . . . . . . . . . .  	L NEAR	0827	CODE
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 16:54:33

                                                            Symbols-13
                                                             

RET43  . . . . . . . . . . . . .  	L NEAR	08D7	CODE
RET50  . . . . . . . . . . . . .  	L NEAR	08BF	CODE
RET_L  . . . . . . . . . . . . .  	NEAR 	04F9	CODE
RMDIR  . . . . . . . . . . . . .  	Number	003A	
RMDIR_ACCESS_DENIED  . . . . . .  	Alias	 ERROR_ACCESS_DENIED		
RMDIR_CURRENT_DIRECTORY  . . . .  	Alias	 ERROR_CURRENT_DIRECTORY		
RMDIR_PATH_NOT_FOUND . . . . . .  	Alias	 ERROR_PATH_NOT_FOUND		
ROOTSTR  . . . . . . . . . . . .  	L BYTE 	0B2F	CODE
ROUNDED  . . . . . . . . . . . .  	L NEAR	0549	CODE
RPRI . . . . . . . . . . . . . .  	Number	0006	
RR . . . . . . . . . . . . . . .  	Number	0028	

SAVSWT . . . . . . . . . . . . .  	L NEAR	01D1	CODE
SAVUDIRS . . . . . . . . . . . .  	L NEAR	08CA	CODE
SCANOFF  . . . . . . . . . . . .  	L NEAR	01BD	CODE
SECSIZ . . . . . . . . . . . . .  	L WORD 	0C6C	CODE	Global
SECTORS  . . . . . . . . . . . .  	L WORD 	0C7C	CODE
SERVERCALL . . . . . . . . . . .  	Number	005D	
SETBIOS  . . . . . . . . . . . .  	L NEAR	09AA	CODE
SETBIOSSIZ . . . . . . . . . . .  	L NEAR	09C9	CODE
SETBLOCK . . . . . . . . . . . .  	Number	004A	
SETBLOCK_ARENA_TRASHED . . . . .  	Alias	 ERROR_ARENA_TRASHED		
SETBLOCK_INVALID_BLOCK . . . . .  	Alias	 ERROR_INVALID_BLOCK		
SETBLOCK_INVALID_FUNCTION  . . .  	Alias	 ERROR_INVALID_FUNCTION		
SETBLOCK_NOT_ENOUGH_MEMORY . . .  	Alias	 ERROR_NOT_ENOUGH_MEMORY		
SETCOMSIZ  . . . . . . . . . . .  	L NEAR	0A43	CODE
SETDOSSIZ  . . . . . . . . . . .  	L NEAR	0A07	CODE
SETDPB . . . . . . . . . . . . .  	Number	0053	
SET_CTRL_C_TRAPPING  . . . . . .  	Number	0033	
SET_CURRENT_PDB  . . . . . . . .  	Number	0050	
SET_DATE . . . . . . . . . . . .  	Number	002B	
SET_DEFAULT_DRIVE  . . . . . . .  	Number	000E	
SET_DMA  . . . . . . . . . . . .  	Number	001A	
SET_INTERRUPT_VECTOR . . . . . .  	Number	0025	
SET_OEM_HANDLER  . . . . . . . .  	Number	00F8	
SET_TIME . . . . . . . . . . . .  	Number	002D	
SET_VERIFY_ON_WRITE  . . . . . .  	Number	002E	
SF_DEFAULT_NUMBER  . . . . . . .  	Number	0005	
SH32 . . . . . . . . . . . . . .  	L NEAR	0B07	CODE
SH32B  . . . . . . . . . . . . .  	L NEAR	0B11	CODE
SNGDRV . . . . . . . . . . . . .  	V BYTE 	0000	CODE	External
SNGMSG . . . . . . . . . . . . .  	V BYTE 	0000	CODE	External
STACK  . . . . . . . . . . . . .  	L BYTE 	0DD0	CODE
START  . . . . . . . . . . . . .  	L NEAR	0100	CODE
STARTSECTOR  . . . . . . . . . .  	V WORD 	0000	CODE	External
STATUS . . . . . . . . . . . . .  	L NEAR	03BA	CODE
STDAUX . . . . . . . . . . . . .  	Number	0003	
STDERR . . . . . . . . . . . . .  	Number	0002	
STDIN  . . . . . . . . . . . . .  	Number	0000	
STDOUT . . . . . . . . . . . . .  	Number	0001	
STDPRN . . . . . . . . . . . . .  	Number	0004	
STD_AUX_INPUT  . . . . . . . . .  	Number	0003	
STD_AUX_OUTPUT . . . . . . . . .  	Number	0004	
STD_CON_INPUT  . . . . . . . . .  	Number	0001	
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 16:54:33

                                                            Symbols-14
                                                             

STD_CON_INPUT_FLUSH  . . . . . .  	Number	000C	
STD_CON_INPUT_NO_ECHO  . . . . .  	Number	0008	
STD_CON_INPUT_STATUS . . . . . .  	Number	000B	
STD_CON_OUTPUT . . . . . . . . .  	Number	0002	
STD_CON_STRING_INPUT . . . . . .  	Number	000A	
STD_CON_STRING_OUTPUT  . . . . .  	Number	0009	
STD_PRINTER_OUTPUT . . . . . . .  	Number	0005	
SWITCHCHK  . . . . . . . . . . .  	L NEAR	0228	CODE
SWITCHCOPY . . . . . . . . . . .  	L WORD 	0C64	CODE
SWITCHLIST . . . . . . . . . . .  	V BYTE 	0000	CODE	External
SWITCHMAP  . . . . . . . . . . .  	L WORD 	0C62	CODE	Global
SWTCH  . . . . . . . . . . . . .  	L BYTE 	0B31	CODE
SYSDRV . . . . . . . . . . . . .  	V BYTE 	0000	CODE	External
SYSLOOP  . . . . . . . . . . . .  	L NEAR	0230	CODE
SYSMSG . . . . . . . . . . . . .  	V BYTE 	0000	CODE	External
SYSOK  . . . . . . . . . . . . .  	L NEAR	03B4	CODE
SYSPRM . . . . . . . . . . . . .  	L NEAR	04B2	CODE
SYSSIZ . . . . . . . . . . . . .  	L DWORD	0C6E	CODE	Global
SYSSW  . . . . . . . . . . . . .  	Number	0001	
SYSTEST  . . . . . . . . . . . .  	L NEAR	02A6	CODE
SYSTRAN  . . . . . . . . . . . .  	V BYTE 	0000	CODE	External
SYSTRKS  . . . . . . . . . . . .  	L WORD 	0C7A	CODE

TARGDRV  . . . . . . . . . . . .  	V BYTE 	0000	CODE	External
TARGMSG  . . . . . . . . . . . .  	V BYTE 	0000	CODE	External
TARGPRM  . . . . . . . . . . . .  	L NEAR	04C8	CODE
TEMPHANDLE . . . . . . . . . . .  	L WORD 	0B3F	CODE
TESTDONE . . . . . . . . . . . .  	L NEAR	0912	CODE
TESTSYS  . . . . . . . . . . . .  	L NEAR	0938	CODE
TESTSYSDISK  . . . . . . . . . .  	L NEAR	099E	CODE
TRKFND . . . . . . . . . . . . .  	L NEAR	0285	CODE
TRUE . . . . . . . . . . . . . .  	Number	FFFF	

UNLINK . . . . . . . . . . . . .  	Number	0041	
UNLINK_ACCESS_DENIED . . . . . .  	Alias	 ERROR_ACCESS_DENIED		
UNLINK_FILE_NOT_FOUND  . . . . .  	Alias	 ERROR_FILE_NOT_FOUND		
UNSCALE  . . . . . . . . . . . .  	L NEAR	0440	CODE	Global
USERDIRS . . . . . . . . . . . .  	L BYTE 	0B42	CODE	Length = 0043
USERIDOPER . . . . . . . . . . .  	Number	005E	

VOLFCB . . . . . . . . . . . . .  	L BYTE 	0BE1	CODE
VOLID  . . . . . . . . . . . . .  	L NEAR	05D3	CODE
VOLNAM . . . . . . . . . . . . .  	L BYTE 	0BE9	CODE
VOLRET . . . . . . . . . . . . .  	L NEAR	0642	CODE
VOLSW  . . . . . . . . . . . . .  	Number	0002	
VOL_LOOP . . . . . . . . . . . .  	L NEAR	05E3	CODE
VRET . . . . . . . . . . . . . .  	L NEAR	05DB	CODE

WAIT . . . . . . . . . . . . . .  	Number	004D	
WAITKY . . . . . . . . . . . . .  	L NEAR	04EF	CODE
WAITYN . . . . . . . . . . . . .  	L NEAR	0000	CODE	External
WPRI . . . . . . . . . . . . . .  	Number	0008	
WRITE  . . . . . . . . . . . . .  	Number	0040	
WRITEDOS . . . . . . . . . . . .  	L NEAR	0758	CODE
Microsoft (R) Macro Assembler  Version 4.00                 3/27/20 16:54:33

                                                            Symbols-15
                                                             

WRITEFILE  . . . . . . . . . . .  	L NEAR	0A99	CODE
WRITE_ACCESS_DENIED  . . . . . .  	Alias	 ERROR_ACCESS_DENIED		
WRITE_INVALID_HANDLE . . . . . .  	Alias	 ERROR_INVALID_HANDLE		
WRTFAT . . . . . . . . . . . . .  	L NEAR	0000	CODE	External

XDUP . . . . . . . . . . . . . .  	Number	0045	
XDUP2  . . . . . . . . . . . . .  	Number	0046	

??0000 . . . . . . . . . . . . .  	L NEAR	04F9	CODE


   2863 Source  Lines
   2930 Total   Lines
    740 Symbols

  14526 Bytes symbol space free

      0 Warning Errors
      0 Severe  Errors
