Microsoft (R) Macro Assembler  Version 4.00                 12/10/21 03:59:34
BIOS SYSTEM INITIALIZATION                                  Page     1-1
                                                            

                                TITLE   BIOS SYSTEM INITIALIZATION 
                                 
 = 0000                         FALSE   EQU     0 
 = FFFF                         TRUE    EQU     NOT FALSE 
                                 
 =                              IBMVER     EQU     FALSE 
 =                              IBM        EQU     IBMVER 
 =                              IBMJAPVER  EQU     FALSE                ; If TR
				UE set KANJI true also 
 =                              MSVER      EQU     TRUE  
 =                              ALTVECT    EQU     FALSE                ; Switc
				h to build ALTVECT version 
 =                              HIGHMEM    EQU     FALSE 
 =                              KANJI      EQU     FALSE 
                                 
                                        ELSE 
 =                              NOEXEC  EQU     FALSE 
                                        ENDIF 
                                 
                                ; Set to agree with those in DOST:MSHEAD.ASM, A
				LTVECT version only 
 = 0002                         MAJOR_VERSION   EQU      2 
 = 0000                         MINOR_VERSION   EQU     0B	;2.11 
                                 
 = 5000                         DOSSIZE EQU     5000H 
                                 
                                ; Internal DOS data returned by DOSINIT 
                                 
                                SYSINITVAR  STRUC 
 0000  ????????                 DPBHEAD     DD      ?                   ; Point
				er to head of DPB-FAT list 
 0004  ????????                 sft_addr    DD      ?                   ; Point
				er to first FCB table 
                                ; The following address points to the CLOCK dev
				ice 
 0008  ????????                 BCLOCK      DD      ? 
                                ; The following address is used by DISKSTATCHK 
				it is always 
                                ; points to the console input device header 
 000C  ????????                 BCON        DD      ?                   ; Conso
				le device entry points 
 0010  00                       NUMIO       DB      0                   ; Numbe
				r of disk tables 
 0011  0000                     MAXSEC      DW      0                   ; Maxim
				um allowed sector size 
 0013  ????????                 BUFFHEAD    DD      ?                   ; Head 
				of buffer queue 
 0017  ????????                 DEVHEAD     DD      ? 
 001B                           SYSINITVAR  ENDS 
                                 
                             C          INCLUDE DOSSYM.ASM 
                             C  include DOSMAC.ASM 
                             C  ; 
                             C  ; Macro file for MSDOS. 
Microsoft (R) Macro Assembler  Version 4.00                 12/10/21 03:59:34
BIOS SYSTEM INITIALIZATION                                  Page     1-2
                                                            

                             C  ; 
                             C   
                             C  SUBTTL BREAK a listing into pages and give new 
				subtitles 
Microsoft (R) Macro Assembler  Version 4.00                 12/10/21 03:59:34
BIOS SYSTEM INITIALIZATION                                  Page     1-3
BREAK a listing into pages and give new subtitles           

                             C  PAGE 
                             C  BREAK MACRO subtitle 
                             C   SUBTTL subtitle 
                             C   PAGE 
                             C  ENDM 
                             C   
                             C  BREAK <I_NEED: declare a variable external, if 
				necessary, and allocate a size> 
Microsoft (R) Macro Assembler  Version 4.00                 12/10/21 03:59:34
BIOS SYSTEM INITIALIZATION                                  Page     1-4
I_NEED: declare a variable external, if necessary, and alloc

                             C   
                             C  ; 
                             C  ; declare a variable external and allocate a si
				ze 
                             C  ; 
                             C  I_NEED MACRO sym,len 
                             C   DATA SEGMENT BYTE PUBLIC 'DATA' 
                             C   IFIDN <len>,<WORD> 
                             C   EXTRN &sym:WORD 
                             C   ELSE 
                             C   IFIDN <len>,<DWORD> 
                             C   EXTRN &sym:DWORD 
                             C   ELSE 
                             C   EXTRN &sym:BYTE 
                             C   ENDIF 
                             C   ENDIF 
                             C   DATA ENDS 
                             C  ENDM 
                             C   
                             C  ; 
                             C  ; call a procedure that may be external. The ca
				ll will be short. 
                             C  ; 
                             C  invoke MACRO name 
                             C  .xcref 
                             C   IF2 
                             C   IFNDEF name 
                             C   EXTRN name:NEAR 
                             C   ENDIF 
                             C   ENDIF 
                             C  .cref 
                             C   CALL name 
                             C  ENDM 
                             C   
Microsoft (R) Macro Assembler  Version 4.00                 12/10/21 03:59:34
BIOS SYSTEM INITIALIZATION                                  Page     1-5
I_NEED: declare a variable external, if necessary, and alloc

                             C  PAGE 
                             C  ; 
                             C  ; jump to a label that may be external. The jum
				p will be near. 
                             C  ; 
                             C  transfer MACRO name 
                             C  .xcref 
                             C   IF2 
                             C   IFNDEF name 
                             C   EXTRN name:NEAR 
                             C   ENDIF 
                             C   ENDIF 
                             C  .cref 
                             C   JUMP name 
                             C  ENDM 
                             C   
                             C  ; 
                             C  ; get a short address in a word 
                             C  ; 
                             C  short_addr MACRO name 
                             C   IFDIF <name>,<?> 
                             C  .xcref 
                             C   IF2 
                             C   IFNDEF name 
                             C   EXTRN name:NEAR 
                             C   ENDIF 
                             C   ENDIF 
                             C  .cref 
                             C   DW OFFSET DOSGROUP:name 
                             C   ELSE 
                             C   DW ? 
                             C   ENDIF 
                             C  ENDM 
                             C   
                             C  ; 
                             C  ; get a long address in a dword 
                             C  ; 
                             C  long_addr MACRO name 
                             C  .xcref 
                             C   IF2 
                             C   IFNDEF name 
                             C   EXTRN name:NEAR 
                             C   ENDIF 
                             C  .cref 
                             C   DD name 
                             C  ENDM 
                             C   
                             C  ; 
                             C  ; declare a PROC near or far but PUBLIC nonethe
				less 
                             C  ; 
                             C  procedure MACRO name,distance 
                             C   PUBLIC name 
                             C  name PROC distance 
Microsoft (R) Macro Assembler  Version 4.00                 12/10/21 03:59:34
BIOS SYSTEM INITIALIZATION                                  Page     1-6
I_NEED: declare a variable external, if necessary, and alloc

                             C  ENDM 
                             C   
Microsoft (R) Macro Assembler  Version 4.00                 12/10/21 03:59:34
BIOS SYSTEM INITIALIZATION                                  Page     1-7
I_NEED: declare a variable external, if necessary, and alloc

                             C  PAGE 
                             C  ; 
                             C  ; define a data item to be public and of an app
				ropriate size/type 
                             C  ; 
                             C  I_AM MACRO name,size 
                             C   PUBLIC name 
                             C   
                             C   IFIDN <size>,<WORD> 
                             C  name DW ? 
                             C   ELSE 
                             C   IFIDN <size>,<DWORD> 
                             C  name DD ? 
                             C   ELSE 
                             C   IFIDN <size>,<BYTE> 
                             C  name DB ? 
                             C   ELSE 
                             C  name DB size DUP (?) 
                             C   ENDIF 
                             C   ENDIF 
                             C   ENDIF 
                             C  ENDM 
                             C   
Microsoft (R) Macro Assembler  Version 4.00                 12/10/21 03:59:34
BIOS SYSTEM INITIALIZATION                                  Page     1-8
I_NEED: declare a variable external, if necessary, and alloc

                             C  PAGE 
                             C  ; 
                             C  ; call the macro chain 
                             C  ; 
                             C  do_ext macro 
                             C  endm 
                             C   
Microsoft (R) Macro Assembler  Version 4.00                 12/10/21 03:59:34
BIOS SYSTEM INITIALIZATION                                  Page     1-9
I_NEED: declare a variable external, if necessary, and alloc

                             C  PAGE 
                             C   
                             C  ; 
                             C  ; define an entry in a procedure 
                             C  ; 
                             C  entry macro name 
                             C   PUBLIC name 
                             C  name: 
                             C  endm 
                             C   
                             C  BREAK <ERROR - print a message and then jump to
				 a label> 
Microsoft (R) Macro Assembler  Version 4.00                 12/10/21 03:59:34
BIOS SYSTEM INITIALIZATION                                  Page     1-10
ERROR - print a message and then jump to a label            

                             C   
                             C  error macro code 
                             C   local a 
                             C  .xcref 
                             C   MOV AL,code 
                             C   transfer SYS_RET_ERR 
                             C  .cref 
                             C  ENDM 
                             C   
                             C  BREAK <JUMP - real jump that links up shortwise
				> 
Microsoft (R) Macro Assembler  Version 4.00                 12/10/21 03:59:34
BIOS SYSTEM INITIALIZATION                                  Page     1-11
JUMP - real jump that links up shortwise                    

                             C  ; 
                             C  ; given a label <lbl> either 2 byte jump to ano
				ther label <lbl>_J 
                             C  ; if it is near enough or 3 byte jump to <lbl> 
                             C  ; 
                             C   
                             C  jump macro lbl 
                             C   local a 
                             C  .xcref 
                             C   a: 
                             C   ifndef lbl&_J ;; is this the first invocation 
                             C   JMP lbl 
                             C   ELSE 
                             C   IF lbl&_J GE $ 
                             C   JMP lbl 
                             C   ELSE 
                             C   IF ($-lbl&_J) GT 126 ;; is the jump too far aw
				ay? 
                             C   JMP lbl 
                             C   ELSE ;; do the short one... 
                             C   JMP lbl&_J 
                             C   ENDIF 
                             C   ENDIF 
                             C   ENDIF 
                             C   lbl&_j = a 
                             C  .cref 
                             C  endm 
                             C   
                             C  BREAK <RETURN - return from a function> 
Microsoft (R) Macro Assembler  Version 4.00                 12/10/21 03:59:34
BIOS SYSTEM INITIALIZATION                                  Page     1-12
RETURN - return from a function                             

                             C   
                             C  return macro 
                             C   local a 
                             C  .xcref 
                             C  a: 
                             C   RET 
                             C  ret_l = a 
                             C  .cref 
                             C  endm 
                             C   
                             C  BREAK <CONDRET - conditional return> 
Microsoft (R) Macro Assembler  Version 4.00                 12/10/21 03:59:34
BIOS SYSTEM INITIALIZATION                                  Page     1-13
CONDRET - conditional return                                

                             C   
                             C  makelab macro l,cc,ncc 
                             C   local a 
                             C   j&ncc a ;; j<NCC> a: 
                             C   return ;; return 
                             C   a: ;; a: 
                             C   ret_&cc = ret_l ;; define ret_<CC> to be ret_l
				 
                             C  endm 
                             C   
                             C  condret macro cc,ncc 
                             C   local a,b 
                             C   ifdef ret_l ;; if ret_l is defined 
                             C   if (($ - ret_l) le 126) and ($ gt ret_l) 
                             C   ;; if ret_l is near enough then 
                             C   a: j&cc ret_l ;; a: j<CC> to ret_l 
                             C   ret_&cc = a ;; define ret_<CC> to be a: 
                             C   else 
                             C   makelab a,cc,ncc 
                             C   endif 
                             C   else 
                             C   ifdef ret_&cc ;; if ret_<CC> defined 
                             C   if (($ - ret_&cc) le 126) and ($ gt ret_&cc) 
                             C   ;; if ret_<CC> is near enough 
                             C   a: j&cc ret_&cc ;; a: j<CC> to ret_<CC> 
                             C   ret_&cc = a ;; define ret_<CC> to be a: 
                             C   else 
                             C   makelab a,cc,ncc 
                             C   endif 
                             C   else 
                             C   makelab a,cc,ncc 
                             C   endif 
                             C   endif 
                             C  endm 
                             C  ;condret macro cc,ncc 
                             C  ; local a,b 
                             C  ; ifdef ret_l ; if ret_l is defined 
                             C  ; if (($ - ret_l) le 126) and ($ gt ret_l) 
                             C  ; ; if ret_l is near enough then 
                             C  ; a: j&cc ret_l ; a: j<CC> to ret_l 
                             C  ; ret_&cc = a ; define ret_<CC> to be a: 
                             C  ; exitm 
                             C  ; endif 
                             C  ; endif 
                             C  ; ifdef ret_&cc ; if ret_<CC> defined 
                             C  ; if (($ - ret_&cc) le 126) and ($ gt ret_&cc) 
                             C  ; ; if ret_<CC> is near enough 
                             C  ; a: j&cc ret_&cc ; a: j<CC> to ret_<CC> 
                             C  ; ret_&cc = a ; define ret_<CC> to be a: 
                             C  ; exitm 
                             C  ; endif 
                             C  ; endif 
                             C  ; j&ncc a ; j<NCC> a: 
                             C  ; return ; return 
Microsoft (R) Macro Assembler  Version 4.00                 12/10/21 03:59:34
BIOS SYSTEM INITIALIZATION                                  Page     1-14
CONDRET - conditional return                                

                             C  ; a: ; a: 
                             C  ; ret_&cc = ret_l ; define ret_<CC> to be ret_l
				 
                             C  ;endm 
                             C  ; 
                             C  BREAK <RETZ - return if zero, links up shortwis
				e if necessary> 
Microsoft (R) Macro Assembler  Version 4.00                 12/10/21 03:59:34
BIOS SYSTEM INITIALIZATION                                  Page     1-15
RETZ - return if zero, links up shortwise if necessary      

                             C   
                             C  retz macro 
                             C   condret z,nz 
                             C  endm 
                             C   
                             C  BREAK <RETNZ - return if not zero, links up sho
				rtwise if necessary> 
Microsoft (R) Macro Assembler  Version 4.00                 12/10/21 03:59:34
BIOS SYSTEM INITIALIZATION                                  Page     1-16
RETNZ - return if not zero, links up shortwise if necessary 

                             C   
                             C  retnz macro 
                             C   condret nz,z 
                             C  endm 
                             C   
                             C  BREAK <RETC - return if carry set, links up sho
				rtwise if necessary> 
Microsoft (R) Macro Assembler  Version 4.00                 12/10/21 03:59:34
BIOS SYSTEM INITIALIZATION                                  Page     1-17
RETC - return if carry set, links up shortwise if necessary 

                             C   
                             C  retc macro 
                             C   condret c,nc 
                             C  endm 
                             C   
                             C  BREAK <RETNC - return if not carry, links up sh
				ortwise if necessary> 
Microsoft (R) Macro Assembler  Version 4.00                 12/10/21 03:59:34
BIOS SYSTEM INITIALIZATION                                  Page     1-18
RETNC - return if not carry, links up shortwise if necessary

                             C   
                             C  retnc macro 
                             C   condret nc,c 
                             C  endm 
                             C   
                             C  BREAK <CONTEXT - set the DOS context to a parti
				cular register> 
Microsoft (R) Macro Assembler  Version 4.00                 12/10/21 03:59:34
BIOS SYSTEM INITIALIZATION                                  Page     1-19
CONTEXT - set the DOS context to a particular register      

                             C   
                             C  context macro r 
                             C   PUSH SS 
                             C   POP r 
                             C   ASSUME r:DOSGROUP 
                             C  endm 
                             C   
                             C  IF2 
                             C      %OUT    DOSSYM in Pass 2 
                             C  ENDIF 
                             C   
                             C  ENDIF 
                             C   
 = 0002                      C  DOS_MAJOR_VERSION   EQU      2 
 = 000B                      C  DOS_MINOR_VERSION   EQU     11 
                             C   
                             C  BREAK <Control character definitions> 
Microsoft (R) Macro Assembler  Version 4.00                 12/10/21 03:59:34
BIOS SYSTEM INITIALIZATION                                  Page     1-20
Control character definitions                               

                             C   
 = 007F                      C  c_DEL       EQU     7Fh         ;    ASCII rubo
				ut or delete previous char 
 = 0008                      C  c_BS        EQU     08h         ; ^H ASCII back
				space 
 = 000D                      C  c_CR        EQU     0Dh         ; ^M ASCII carr
				iage return 
 = 000A                      C  c_LF        EQU     0Ah         ; ^J ASCII line
				feed 
 = 0017                      C  c_ETB       EQU     17h         ; ^W ASCII end 
				of transmission 
 = 0015                      C  c_NAK       EQU     15h         ; ^U ASCII nega
				tive acknowledge 
 = 0003                      C  c_ETX       EQU     03h         ; ^C ASCII end 
				of text 
 = 0009                      C  c_HT        EQU     09h         ; ^I ASCII tab 
                             C   
                             C  BREAK <BPB Definition> 
Microsoft (R) Macro Assembler  Version 4.00                 12/10/21 03:59:34
BIOS SYSTEM INITIALIZATION                                  Page     1-21
BPB Definition                                              

                             C   
                             C   
                             C  ;----+----+----+----+----+----+----+----+----+-
				---+----+----+----+----+----; 
                             C  ;                                              
				                            ; 
                             C  ;            C  A  V  E  A  T     P  R  O  G  R
				  A  M  M  E  R             ; 
                             C  ;                                              
				                            ; 
                             C  ; Certain structures, constants and system  cal
				ls  below  are  private  to ; 
                             C  ; the DOS  and  are  extremely  version-depende
				nt.  They may change at any ; 
                             C  ; time at  the  implementors'  whim.   As  a  r
				esult,  they  must  not  be ; 
                             C  ; documented to  the  general  public.   If  an
				  extreme case arises, they ; 
                             C  ; must be documented with this warning.        
				                            ; 
                             C  ;                                              
				                            ; 
                             C  ; Those structures and constants that are subje
				ct to  the  above  will  be ; 
                             C  ; marked and bracketed with the flag:          
				                            ; 
                             C  ;                                              
				                            ; 
                             C  ;            C  A  V  E  A  T     P  R  O  G  R
				  A  M  M  E  R             ; 
                             C  ;                                              
				                            ; 
                             C  ;----+----+----+----+----+----+----+----+----+-
				---+----+----+----+----+----; 
                             C   
                             C  BREAK  <Bios Parameter Block> 
Microsoft (R) Macro Assembler  Version 4.00                 12/10/21 03:59:34
BIOS SYSTEM INITIALIZATION                                  Page     1-22
Bios Parameter Block                                        

                             C  ;----+----+----+----+----+----+----+----+----+-
				---+----+----+----+----+----; 
                             C  ;            C  A  V  E  A  T     P  R  O  G  R
				  A  M  M  E  R             ; 
                             C  ;                                              
				                            ; 
                             C   
                             C  ; Bios Parameter Block definition 
                             C  ; This structure is used to build a full DPB 
                             C   
                             C  BPBLOCK STRUC 
 0000  ????                  C  BPSECSZ DW      ?       ; Size in bytes of phys
				ical sector 
 0002  ??                    C  BPCLUS  DB      ?       ; Sectors/Alloc unit 
 0003  ????                  C  BPRES   DW      ?       ; Number of reserved se
				ctors 
 0005  ??                    C  BPFTCNT DB      ?       ; Number of FATs 
 0006  ????                  C  BPDRCNT DW      ?       ; Number of directory e
				ntries 
 0008  ????                  C  BPSCCNT DW      ?       ; Total number of secto
				rs 
 000A  ??                    C  BPMEDIA DB      ?       ; Media descriptor byte
				 
 000B  ????                  C  BPFTSEC DW      ?       ; Number of sectors tak
				en up by one FAT 
 000D                        C  BPBLOCK ENDS 
                             C  ;                                              
				                            ; 
                             C  ;            C  A  V  E  A  T     P  R  O  G  R
				  A  M  M  E  R             ; 
                             C  ;----+----+----+----+----+----+----+----+----+-
				---+----+----+----+----+----; 
                             C   
                             C  BREAK <Disk I/O Buffer Header> 
Microsoft (R) Macro Assembler  Version 4.00                 12/10/21 03:59:34
BIOS SYSTEM INITIALIZATION                                  Page     1-23
Disk I/O Buffer Header                                      

                             C  ;----+----+----+----+----+----+----+----+----+-
				---+----+----+----+----+----; 
                             C  ;            C  A  V  E  A  T     P  R  O  G  R
				  A  M  M  E  R             ; 
                             C  ;                                              
				                            ; 
                             C   
                             C  ; Field definition for I/O buffer information 
                             C   
                             C  BUFFINFO        STRUC 
 0000  ????????              C  NEXTBUF         DD      ?       ; Pointer to ne
				xt buffer in list 
                             C  ; The next two items are often refed as a word 
 0004  ??                    C  BUFDRV          DB      ?       ; Logical drive
				 # assoc with buffer FF = free 
 0005  ??                    C  BUFDIRTY        DB      ?       ; Dirty flag 
 0006  ??                    C  BUFPRI          DB      ?       ; Buffer select
				ion priority (see EQUs below) 
 0007  ??                    C  VISIT           DB      ?       ; Visit flag fo
				r buffer pool scans 
 0008  ????                  C  BUFSECNO        DW      ?       ; Sector number
				 of buffer 
                             C  ; The next two items are often refed as a word 
 000A  ??                    C  BUFWRTCNT       DB      ?       ; For FAT secto
				rs, # times sector written out 
 000B  ??                    C  BUFWRTINC       DB      ?       ; "   "     "  
				 , # sectors between each write 
 000C  ????????              C  BUFDRVDP        DD      ?       ; Pointer to dr
				ive parameters 
 0010                        C  BUFFINFO        ENDS 
                             C   
 = 0010                      C  BUFINSIZ        EQU     SIZE BUFFINFO 
                             C                                  ; Size of struc
				ture in bytes 
                             C   
 = 0000                      C  FREEPRI EQU     0 
 = 0002                      C  LBRPRI  EQU     2               ; Last byte of 
				buffer read 
 = 0004                      C  LBWPRI  EQU     4               ; Last byte wri
				tten 
 = 0006                      C  RPRI    EQU     6               ; Read but not 
				last byte 
 = 0008                      C  WPRI    EQU     8               ; Written but n
				ot last byte 
 = 000F                      C  DIRPRI  EQU     15              ; Directory Sec
				tor 
 = 001E                      C  FATPRI  EQU     30              ; FAT sector 
                             C  ;                                              
				                            ; 
                             C  ;            C  A  V  E  A  T     P  R  O  G  R
				  A  M  M  E  R             ; 
                             C  ;----+----+----+----+----+----+----+----+----+-
				---+----+----+----+----+----; 
                             C   
Microsoft (R) Macro Assembler  Version 4.00                 12/10/21 03:59:34
BIOS SYSTEM INITIALIZATION                                  Page     1-24
Disk I/O Buffer Header                                      

                             C  BREAK <User stack inside of system call> 
Microsoft (R) Macro Assembler  Version 4.00                 12/10/21 03:59:34
BIOS SYSTEM INITIALIZATION                                  Page     1-25
User stack inside of system call                            

                             C  ; Location of user registers relative user stac
				k pointer 
                             C   
                             C  user_environ    STRUC 
 0000  ????                  C  user_AX     DW      ? 
 0002  ????                  C  user_BX     DW      ? 
 0004  ????                  C  user_CX     DW      ? 
 0006  ????                  C  user_DX     DW      ? 
 0008  ????                  C  user_SI     DW      ? 
 000A  ????                  C  user_DI     DW      ? 
 000C  ????                  C  user_BP     DW      ? 
 000E  ????                  C  user_DS     DW      ? 
 0010  ????                  C  user_ES     DW      ? 
 0012  ????                  C  user_IP     DW      ? 
 0014  ????                  C  user_CS     DW      ? 
 0016  ????                  C  user_F      DW      ? 
 0018                        C  user_environ    ENDS 
                             C   
                             C  BREAK <interrupt definitions> 
Microsoft (R) Macro Assembler  Version 4.00                 12/10/21 03:59:34
BIOS SYSTEM INITIALIZATION                                  Page     1-26
interrupt definitions                                       

                             C   
 = 0020                      C  INTTAB          EQU     20H 
 = 0080                      C  INTBASE         EQU     4 * inttab 
 = 00C0                      C  ENTRYPOINT      EQU     INTBASE+40H 
                             C   
                             C          ENDIF 
                             C   
                             C  ; 
                             C  ; interrupt assignments 
                             C  ; 
                             C          IF      NOT ALTVECT 
 =                           C  int_abort           EQU     INTTAB          ; a
				bort process 
 = 0021                      C  int_command         EQU     int_abort+1     ; c
				all MSDOS 
 = 0022                      C  int_terminate       EQU     int_abort+2     ; i
				nt to terminate address 
 = 0023                      C  int_ctrl_c          EQU     int_abort+3     ; ^
				c trapper 
 = 0024                      C  int_fatal_abort     EQU     int_abort+4     ; h
				ard disk error 
 = 0025                      C  int_disk_read       EQU     int_abort+5     ; l
				ogical sector disk read 
 = 0026                      C  int_disk_write      EQU     int_abort+6     ; l
				ogical sector disk write 
 = 0027                      C  int_keep_process    EQU     int_abort+7     ; t
				erminate program and stay 
                             C                                              ; r
				esident 
                             C  ;----+----+----+----+----+----+----+----+----+-
				---+----+----+----+----+----; 
                             C  ;            C  A  V  E  A  T     P  R  O  G  R
				  A  M  M  E  R             ; 
                             C  ;                                              
				                            ; 
 = 0028                      C  int_spooler         EQU     int_abort+8     ; s
				pooler call 
 = 0029                      C  int_fastcon         EQU     int_abort+9     ; f
				ast CON interrupt 
                             C  ;                                              
				                            ; 
                             C  ;            C  A  V  E  A  T     P  R  O  G  R
				  A  M  M  E  R             ; 
                             C  ;----+----+----+----+----+----+----+----+----+-
				---+----+----+----+----+----; 
                             C          ENDIF 
                             C   
 = 0080                      C  addr_int_abort          EQU    4 * int_abort 
 = 0084                      C  addr_int_command        EQU    4 * int_command 
 = 0088                      C  addr_int_terminate      EQU    4 * int_terminat
				e 
 = 008C                      C  addr_int_ctrl_c         EQU    4 * int_ctrl_c 
 = 0090                      C  addr_int_fatal_abort    EQU    4 * int_fatal_ab
				ort 
Microsoft (R) Macro Assembler  Version 4.00                 12/10/21 03:59:34
BIOS SYSTEM INITIALIZATION                                  Page     1-27
interrupt definitions                                       

 = 0094                      C  addr_int_disk_read      EQU    4 * int_disk_rea
				d 
 = 0098                      C  addr_int_disk_write     EQU    4 * int_disk_wri
				te 
 = 009C                      C  addr_int_keep_process   EQU    4 * int_keep_pro
				cess 
                             C  ;----+----+----+----+----+----+----+----+----+-
				---+----+----+----+----+----; 
                             C  ;            C  A  V  E  A  T     P  R  O  G  R
				  A  M  M  E  R             ; 
                             C  ;                                              
				                            ; 
 = 00A0                      C  addr_int_spooler        EQU    4 * int_spooler 
 = 00A4                      C  addr_int_fastcon        EQU    4 * int_fastcon 
                             C  ;                                              
				                            ; 
                             C  ;            C  A  V  E  A  T     P  R  O  G  R
				  A  M  M  E  R             ; 
                             C  ;----+----+----+----+----+----+----+----+----+-
				---+----+----+----+----+----; 
                             C   
                             C  BREAK <Disk map> 
Microsoft (R) Macro Assembler  Version 4.00                 12/10/21 03:59:34
BIOS SYSTEM INITIALIZATION                                  Page     1-28
Disk map                                                    

                             C  ;  MSDOS partitions the disk into 4 sections: 
                             C  ; 
                             C  ;  phys sector 0:   +-------------------+ 
                             C  ;       |           | boot/reserved     | 
                             C  ;       |           +-------------------+ 
                             C  ;       |           |  File allocation  | 
                             C  ;       v           |      table(s)     | 
                             C  ;                   |  (multiple copies | 
                             C  ;                   |     are kept)     | 
                             C  ;                   +-------------------+ 
                             C  ;                   |     Directory     | 
                             C  ;                   +-------------------+ 
                             C  ;                   |     File space    | 
                             C  ;                   +-------------------+ 
                             C  ;                   |   Unaddressable   | 
                             C  ;                   |  (to end of disk) | 
                             C  ;                   +-------------------+ 
                             C  ; 
                             C  ; All partition boundaries are sector boundarie
				s.  The size of the FAT is 
                             C  ; adjusted to maximize the file space addressab
				le. 
                             C   
                             C  BREAK <Directory entry> 
Microsoft (R) Macro Assembler  Version 4.00                 12/10/21 03:59:34
BIOS SYSTEM INITIALIZATION                                  Page     1-29
Directory entry                                             

                             C   
                             C  ; 
                             C  ;       +---------------------------+ 
                             C  ;       |  (12 BYTE) filename/ext   |       0  
				     0 
                             C  ;       +---------------------------+ 
                             C  ;       |     (BYTE) attributes     |       11 
				     B 
                             C  ;       +---------------------------+ 
                             C  ;       |    (10 BYTE) reserved     |       12 
				     C 
                             C  ;       +---------------------------+ 
                             C  ;       | (WORD) time of last write |       22 
				     16 
                             C  ;       +---------------------------+ 
                             C  ;       | (WORD) date of last write |       24 
				     18 
                             C  ;       +---------------------------+ 
                             C  ;       |   (WORD) First cluster    |       26 
				     1A 
                             C  ;       +---------------------------+ 
                             C  ;       |     (DWORD) file size     |       28 
				     1C 
                             C  ;       +---------------------------+ 
                             C  ; 
                             C  ;   First byte of filename  = E5 -> free direct
				ory entry 
                             C  ;                           = 00 -> end of allo
				cated directory 
                             C  ;   Time:   Bits 0-4=seconds/2, bits 5-10=minut
				e, 11-15=hour 
                             C  ;   Date:   Bits 0-4=day, bits 5-8=month, bits 
				9-15=year-1980 
                             C  ; 
                             C  dir_entry   STRUC 
 0000  000B[                 C  dir_name    DB      11 DUP (?)          ; file 
				name 
            ??               C  
                         ]   C  
                             C  
 000B  ??                    C  dir_attr    DB      ?                   ; attri
				bute bits 
 000C  000A[                 C  dir_pad     DB      10 DUP (?)          ; reser
				ved for expansion 
            ??               C  
                         ]   C  
                             C  
 0016  ????                  C  dir_time    DW      ?                   ; time 
				of last write 
 0018  ????                  C  dir_date    DW      ?                   ; date 
				of last write 
 001A  ????                  C  dir_first   DW      ?                   ; first
				 allocation unit of file 
 001C  ????                  C  dir_size_l  DW      ?                   ; low 1
Microsoft (R) Macro Assembler  Version 4.00                 12/10/21 03:59:34
BIOS SYSTEM INITIALIZATION                                  Page     1-30
Directory entry                                             

				6 bits of file size 
 001E  ????                  C  dir_size_h  DW      ?                   ; high 
				16 bits of file size 
 0020                        C  dir_entry   ENDS 
                             C   
 = 0001                      C  attr_read_only      EQU      1h 
 = 0002                      C  attr_hidden         EQU      2h 
 = 0004                      C  attr_system         EQU      4h 
 = 0008                      C  attr_volume_id      EQU      8h 
 = 0010                      C  attr_directory      EQU     10h 
 = 0020                      C  attr_archive        EQU     20h 
                             C   
 = 0016                      C  attr_all            EQU     attr_hidden+attr_sy
				stem+attr_directory 
                             C                                          ; OR of
				 hard attributes for FINDENTRY 
                             C   
 = 0021                      C  attr_ignore         EQU     attr_read_only+attr
				_archive 
                             C                                          ; ignor
				e this(ese) attribute(s) during 
                             C                                          ; searc
				h first/next 
                             C   
 = 0027                      C  attr_changeable     EQU     attr_read_only+attr
				_hidden+attr_system+attr_archive 
                             C                                          ; chang
				eable via CHMOD 
                             C   
                             C  BREAK <File allocation Table information> 
Microsoft (R) Macro Assembler  Version 4.00                 12/10/21 03:59:34
BIOS SYSTEM INITIALIZATION                                  Page     1-31
File allocation Table information                           

                             C  ; 
                             C  ; The File Allocation Table uses a 12-bit entry
				 for each allocation unit on 
                             C  ; the disk.  These entries are packed, two for 
				every three bytes.  The contents 
                             C  ; of entry number N is found by 1) multiplying 
				N by 1.5; 2) adding the result 
                             C  ; to the base address of the Allocation Table; 
				3) fetching the 16-bit word 
                             C  ; at this address; 4) If N was odd (so that N*1
				.5 was not an integer), shift 
                             C  ; the word right four bits; 5) mask to 12 bits 
				(AND with 0FFF hex).  Entry 
                             C  ; number zero is used as an end-of-file trap in
				 the OS and is passed to the 
                             C  ; BIOS to help determine disk format.  Entry 1 
				is reserved for future use. 
                             C  ; The first available allocation unit is assign
				ed entry number two, and even 
                             C  ; though it is the first, is called cluster 2. 
				 Entries greater than 0FF8H 
                             C  ; are end of file marks; entries of zero are un
				allocated.  Otherwise, the 
                             C  ; contents of a FAT entry is the number of the 
				next cluster in the file. 
                             C  ; 
                             C  ; Clusters with bad sectors are tagged with FF7
				H.  Any non-zero number would 
                             C  ; do because these clusters show as allocated, 
				but are not part of any 
                             C  ; allocation chain and thus will never be alloc
				ated to a file.  A particular 
                             C  ; number is selected so that disk checking prog
				rams know what to do (ie.  a 
                             C  ; cluster with entry FF7H which is not in a cha
				in is not an error). 
                             C   
                             C  BREAK <DPB structure> 
Microsoft (R) Macro Assembler  Version 4.00                 12/10/21 03:59:34
BIOS SYSTEM INITIALIZATION                                  Page     1-32
DPB structure                                               

                             C  ;----+----+----+----+----+----+----+----+----+-
				---+----+----+----+----+----; 
                             C  ;            C  A  V  E  A  T     P  R  O  G  R
				  A  M  M  E  R             ; 
                             C  ;                                              
				                            ; 
                             C   
 = 0040                      C  DIRSTRLEN       EQU     64      ; Max length in
				 bytes of directory strings 
                             C   
                             C  dpb     STRUC 
 0000  ??                    C  dpb_drive           DB      ?   ; Logical drive
				 # assoc with DPB (A=0,B=1,...) 
 0001  ??                    C  dpb_UNIT            DB      ?   ; Driver unit n
				umber of DPB 
 0002  ????                  C  dpb_sector_size     DW      ?   ; Size of physi
				cal sector in bytes 
 0004  ??                    C  dpb_cluster_mask    DB      ?   ; Sectors/clust
				er - 1 
 0005  ??                    C  dpb_cluster_shift   DB      ?   ; Log2 of secto
				rs/cluster 
 0006  ????                  C  dpb_first_FAT       DW      ?   ; Starting reco
				rd of FATs 
 0008  ??                    C  dpb_FAT_count       DB      ?   ; Number of FAT
				s for this drive 
 0009  ????                  C  dpb_root_entries    DW      ?   ; Number of dir
				ectory entries 
 000B  ????                  C  dpb_first_sector    DW      ?   ; First sector 
				of first cluster 
 000D  ????                  C  dpb_max_cluster     DW      ?   ; Number of clu
				sters on drive + 1 
 000F  ??                    C  dpb_FAT_size        DB      ?   ; Number of rec
				ords occupied by FAT 
 0010  ????                  C  dpb_dir_sector      DW      ?   ; Starting reco
				rd of directory 
 0012  ????????              C  dpb_driver_addr     DD      ?   ; Pointer to dr
				iver 
 0016  ??                    C  dpb_media           DB      ?   ; Media byte 
 0017  ??                    C  dpb_first_access    DB      ?   ; This is initi
				alized to -1 to force a media 
                             C                                  ; check the fir
				st time this DPB is used 
 0018  ????????              C  dpb_next_dpb        DD      ?   ; Pointer to ne
				xt Drive parameter block 
 001C  ????                  C  dpb_current_dir     DW      ?   ; Cluster numbe
				r of start of current directory 
                             C                                  ; 0 indicates r
				oot, -1 indicates invalid (disk 
                             C                                  ; ?  changed) 
 001E  0040[                 C  dpb_dir_text        DB      DIRSTRLEN DUP(?) 
            ??               C  
                         ]   C  
                             C  
                             C                                  ; ASCIZ string 
Microsoft (R) Macro Assembler  Version 4.00                 12/10/21 03:59:34
BIOS SYSTEM INITIALIZATION                                  Page     1-33
DPB structure                                               

				of current directory 
 005E                        C  dpb     ENDS 
                             C   
 = 005E                      C  DPBSIZ  EQU     SIZE dpb        ; Size of the s
				tructure in bytes 
                             C   
 = 000D                      C  DSKSIZ  =       dpb_max_cluster ; Size of disk 
				(temp used during init only) 
                             C  ;                                              
				                            ; 
                             C  ;            C  A  V  E  A  T     P  R  O  G  R
				  A  M  M  E  R             ; 
                             C  ;----+----+----+----+----+----+----+----+----+-
				---+----+----+----+----+----; 
                             C   
                             C  BREAK <File Control Block definition> 
Microsoft (R) Macro Assembler  Version 4.00                 12/10/21 03:59:34
BIOS SYSTEM INITIALIZATION                                  Page     1-34
File Control Block definition                               

                             C  ; 
                             C  ; Field definition for FCBs 
                             C  ; The FCB has the following structure: 
                             C  ; 
                             C  ;       +---------------------------+ 
                             C  ;       |   Drive indicator(byte)   | 
                             C  ;       +---------------------------+ 
                             C  ;       |    Filename (8 chars)     | 
                             C  ;       +---------------------------+ 
                             C  ;       |    Extension (3 chars)    | 
                             C  ;       +---------------------------+ 
                             C  ;       |   Current Extent(word)    | 
                             C  ;       +---------------------------+ 
                             C  ;       |    Record size (word)     | 
                             C  ;       +---------------------------+ 
                             C  ;       |    File Size (2 words)    | 
                             C  ;       +---------------------------+ 
                             C  ;       |       Date of write       | 
                             C  ;       +---------------------------+ 
                             C  ;       |       Time of write       | 
                             C  ;       +---------------------------+ 
                             C  ;----+----+----+----+----+----+----+----+----+-
				---+----+----+----+----+----; 
                             C  ;            C  A  V  E  A  T     P  R  O  G  R
				  A  M  M  E  R             ; 
                             C  ;                                              
				                            ; 
                             C  ;       | Flags:                    | 
                             C  ;       |  bit 7=0 file/1 device    | 
                             C  ;       |  bit 6=0 if dirty         | 
                             C  ;       |  bits 0-5 deviceid        | 
                             C  ;       +---------------------------+ 
                             C  ;       |   first cluster in file   | 
                             C  ;       +---------------------------+ 
                             C  ;       | position of last cluster  | 
                             C  ;       +---------------------------+ 
                             C  ;       |   last cluster accessed   |   12 bit-
				+--- packed in 3 bytes 
                             C  ;       +---------------------------+          
				| 
                             C  ;       |     parent directory      |   <------
				+ 
                             C  ;       +---------------------------+ 
                             C  ;                                              
				                            ; 
                             C  ;            C  A  V  E  A  T     P  R  O  G  R
				  A  M  M  E  R             ; 
                             C  ;----+----+----+----+----+----+----+----+----+-
				---+----+----+----+----+----; 
                             C  ;       |    next record number     | 
                             C  ;       +---------------------------+ 
                             C  ;       |   random record number    | 
                             C  ;       +---------------------------+ 
                             C  ; 
Microsoft (R) Macro Assembler  Version 4.00                 12/10/21 03:59:34
BIOS SYSTEM INITIALIZATION                                  Page     1-35
File Control Block definition                               

                             C   
                             C  sys_fcb     STRUC 
 0000  ??                    C  fcb_drive   DB      ? 
 0001  0008[                 C  fcb_name    DB      8 DUP (?) 
            ??               C  
                         ]   C  
                             C  
 0009  0003[                 C  fcb_ext     DB      3 DUP (?) 
            ??               C  
                         ]   C  
                             C  
 000C  ????                  C  fcb_EXTENT  DW      ? 
 000E  ????                  C  fcb_RECSIZ  DW      ?       ; Size of record (u
				ser settable) 
 0010  ????                  C  fcb_FILSIZ  DW      ?       ; Size of file in b
				ytes; used with the following 
                             C                              ; word 
 0012  ????                  C  fcb_DRVBP   DW      ?       ; BP for SEARCH FIR
				ST and SEARCH NEXT 
 0014  ????                  C  fcb_FDATE   DW      ?       ; Date of last writ
				ing 
 0016  ????                  C  fcb_FTIME   DW      ?       ; Time of last writ
				ing 
                             C  ;----+----+----+----+----+----+----+----+----+-
				---+----+----+----+----+----; 
                             C  ;            C  A  V  E  A  T     P  R  O  G  R
				  A  M  M  E  R             ; 
                             C  ;                                              
				                            ; 
 0018  ??                    C  fcb_DEVID   DB      ?       ; Device ID number,
				 bits 0-5 if file. 
                             C                              ; bit 7=0 for file,
				 bit 7=1 for I/O device 
                             C                              ; If file, bit 6=0 
				if dirty 
                             C                              ; If I/O device, bi
				t 6=0 if EOF (input) 
                             C                              ;               Bit
				 5=1 if Raw mode 
                             C                              ;               Bit
				 0=1 if console input device 
                             C                              ;               Bit
				 1=1 if console output device 
                             C                              ;               Bit
				 2=1 if null device 
                             C                              ;               Bit
				 3=1 if clock device 
 0019  ????                  C  fcb_FIRCLUS DW      ?       ; First cluster of 
				file 
 001B  ????                  C  fcb_CLUSPOS DW      ?       ; Position of last 
				cluster accessed 
 001D  ????                  C  fcb_LSTCLUS DW      ?       ; Last cluster acce
				ssed and directory pack 2 12 
 001F  ??                    C              DB      ?       ; bit numbers into 
Microsoft (R) Macro Assembler  Version 4.00                 12/10/21 03:59:34
BIOS SYSTEM INITIALIZATION                                  Page     1-36
File Control Block definition                               

				24 bits... 
                             C  ;                                              
				                            ; 
                             C  ;            C  A  V  E  A  T     P  R  O  G  R
				  A  M  M  E  R             ; 
                             C  ;----+----+----+----+----+----+----+----+----+-
				---+----+----+----+----+----; 
 0020  ??                    C  fcb_NR      DB      ?       ; Next record 
 0021  0004[                 C  fcb_RR      DB      4 DUP (?)               ; R
				andom record 
            ??               C  
                         ]   C  
                             C  
 0025                        C  sys_fcb     ENDS 
                             C   
 = 0010                      C  FILDIRENT       = fcb_FILSIZ            ; Used 
				only by SEARCH FIRST and SEARCH 
                             C                                          ; NEXT 
                             C   
                             C  ;----+----+----+----+----+----+----+----+----+-
				---+----+----+----+----+----; 
                             C  ;            C  A  V  E  A  T     P  R  O  G  R
				  A  M  M  E  R             ; 
                             C  ;                                              
				                            ; 
 = 0040                      C  devid_file_clean        EQU     40h     ; true 
				if file and not written 
 = 003F                      C  devid_file_mask_drive   EQU     3Fh     ; mask 
				for drive number 
                             C   
 = 0080                      C  devid_device            EQU     80h     ; true 
				if a device 
 = 0040                      C  devid_device_EOF        EQU     40h     ; true 
				if end of file reached 
 = 0020                      C  devid_device_raw        EQU     20h     ; true 
				if in raw mode 
 = 0010                      C  devid_device_special    EQU     10h     ; true 
				if special device 
 = 0008                      C  devid_device_clock      EQU     08h     ; true 
				if clock device 
 = 0004                      C  devid_device_null       EQU     04h     ; true 
				if null device 
 = 0002                      C  devid_device_con_out    EQU     02h     ; true 
				if console output 
 = 0001                      C  devid_device_con_in     EQU     01h     ; true 
				if consle input 
                             C   
                             C  ; 
                             C  ; structure of devid field as returned by IOCTL
				 is: 
                             C  ; 
                             C  ;       BIT     7   6   5   4   3   2   1   0 
                             C  ;             |---|---|---|---|---|---|---|---|
				 
Microsoft (R) Macro Assembler  Version 4.00                 12/10/21 03:59:34
BIOS SYSTEM INITIALIZATION                                  Page     1-37
File Control Block definition                               

                             C  ;             | I | E | R | S | I | I | I | I |
				 
                             C  ;             | S | O | A | P | S | S | S | S |
				 
                             C  ;             | D | F | W | E | C | N | C | C |
				 
                             C  ;             | E |   |   | C | L | U | O | I |
				 
                             C  ;             | V |   |   | L | K | L | T | N |
				 
                             C  ;             |---|---|---|---|---|---|---|---|
				 
                             C  ;       ISDEV = 1 if this channel is a device 
                             C  ;             = 0 if this channel is a disk fil
				e 
                             C  ; 
                             C  ;       If ISDEV = 1 
                             C  ; 
                             C  ;             EOF = 0 if End Of File on input 
                             C  ;             RAW = 1 if this device is in Raw 
				mode 
                             C  ;                 = 0 if this device is cooked 
                             C  ;             ISCLK = 1 if this device is the c
				lock device 
                             C  ;             ISNUL = 1 if this device is the n
				ull device 
                             C  ;             ISCOT = 1 if this device is the c
				onsole output 
                             C  ;             ISCIN = 1 if this device is the c
				onsole input 
                             C  ; 
                             C  ;       If ISDEV = 0 
                             C  ;             EOF = 0 if channel has been writt
				en 
                             C  ;             Bits 0-5  are  the  block  device
				  number  for 
                             C  ;                 the channel (0 = A, 1 = B, ..
				.) 
                             C  ; 
 = 0080                      C  devid_ISDEV     EQU     80h 
 = 0040                      C  devid_EOF       EQU     40h 
 = 0020                      C  devid_RAW       EQU     20h 
 = 0010                      C  devid_SPECIAL   EQU     10H 
 = 0008                      C  devid_ISCLK     EQU     08h 
 = 0004                      C  devid_ISNUL     EQU     04h 
 = 0002                      C  devid_ISCOT     EQU     02h 
 = 0001                      C  devid_ISCIN     EQU     01h 
                             C   
 = 001F                      C  devid_block_dev EQU     1Fh             ; mask 
				for block device number 
                             C   
                             C  ; 
                             C  ; find first/next buffer 
                             C  ; 
Microsoft (R) Macro Assembler  Version 4.00                 12/10/21 03:59:34
BIOS SYSTEM INITIALIZATION                                  Page     1-38
File Control Block definition                               

                             C  find_buf    STRUC 
 0000  ??                    C  find_buf_sattr      DB  ?           ; attribute
				 of search 
 0001  ??                    C  find_buf_drive      DB  ?           ; drive of 
				search 
 0002  000B[                 C  find_buf_name       DB  11 DUP (?)  ; formatted
				 name 
            ??               C  
                         ]   C  
                             C  
 000D  ????                  C  find_buf_LastEnt    DW  ?           ; LastEnt 
 000F  ????????              C  find_buf_ThisDPB    DD  ?           ; This DPB 
 0013  ????                  C  find_buf_DirStart   DW  ?           ; DirStart 
                             C  ;                                              
				                            ; 
                             C  ;            C  A  V  E  A  T     P  R  O  G  R
				  A  M  M  E  R             ; 
                             C  ;----+----+----+----+----+----+----+----+----+-
				---+----+----+----+----+----; 
                             C   
 0015  ??                    C  find_buf_attr       DB  ?           ; attribute
				 found 
 0016  ????                  C  find_buf_time       DW  ?           ; time 
 0018  ????                  C  find_buf_date       DW  ?           ; date 
 001A  ????                  C  find_buf_size_l     DW  ?           ; low(size)
				 
 001C  ????                  C  find_buf_size_h     DW  ?           ; high(size
				) 
 001E  000D[                 C  find_buf_pname      DB  13 DUP (?)  ; packed na
				me 
            ??               C  
                         ]   C  
                             C  
 002B                        C  find_buf    ENDS 
                             C   
                             C  BREAK <Process data block> 
Microsoft (R) Macro Assembler  Version 4.00                 12/10/21 03:59:34
BIOS SYSTEM INITIALIZATION                                  Page     1-39
Process data block                                          

                             C  ; 
                             C  ; Process data block (otherwise known as progra
				m header) 
                             C  ; 
                             C   
 = 0014                      C  FilPerProc          EQU     20 
                             C   
                             C  Process_data_block  STRUC 
 0000  ????                  C  PDB_Exit_Call       DW      ?           ; INT i
				nt_abort system terminate 
 0002  ????                  C  PDB_block_len       DW      ?           ; size 
				of execution block 
 0004  ??                    C                      DB      ? 
 0005  0005[                 C  PDB_CPM_Call        DB  5 DUP (?)       ; ancie
				nt call to system 
            ??               C  
                         ]   C  
                             C  
 000A  ????????              C  PDB_Exit            DD      ?           ; point
				er to exit routine 
 000E  ????????              C  PDB_Ctrl_C          DD      ?           ; point
				er to ^C routine 
 0012  ????????              C  PDB_Fatal_abort     DD      ?           ; point
				er to fatal error 
                             C  ;----+----+----+----+----+----+----+----+----+-
				---+----+----+----+----+----; 
                             C  ;            C  A  V  E  A  T     P  R  O  G  R
				  A  M  M  E  R             ; 
                             C  ;                                              
				                            ; 
 0016  ????                  C  PDB_Parent_PID      DW      ?           ; PID o
				f parent (terminate PID) 
 0018  0014[                 C  PDB_JFN_Table       DB  FilPerProc DUP (?) 
            ??               C  
                         ]   C  
                             C  
                             C                                          ; indic
				es into system table 
                             C  ;                                              
				                            ; 
                             C  ;            C  A  V  E  A  T     P  R  O  G  R
				  A  M  M  E  R             ; 
                             C  ;----+----+----+----+----+----+----+----+----+-
				---+----+----+----+----+----; 
 002C  ????                  C  PDB_environ         DW      ?           ; seg a
				ddr of environment 
                             C  ;----+----+----+----+----+----+----+----+----+-
				---+----+----+----+----+----; 
                             C  ;            C  A  V  E  A  T     P  R  O  G  R
				  A  M  M  E  R             ; 
                             C  ;                                              
				                            ; 
 002E  ????????              C  PDB_User_stack      DD      ?           ; stack
				 of self during system calls 
Microsoft (R) Macro Assembler  Version 4.00                 12/10/21 03:59:34
BIOS SYSTEM INITIALIZATION                                  Page     1-40
Process data block                                          

 0032  001E[                 C  PDB_PAD1            DB      1Eh DUP (?) 
            ??               C  
                         ]   C  
                             C  
                             C  ;                                              
				                            ; 
                             C  ;            C  A  V  E  A  T     P  R  O  G  R
				  A  M  M  E  R             ; 
                             C  ;----+----+----+----+----+----+----+----+----+-
				---+----+----+----+----+----; 
 0050  0005[                 C  PDB_Call_system     DB      5 DUP (?)   ; porta
				ble method of system call 
            ??               C  
                         ]   C  
                             C  
                             C  ;----+----+----+----+----+----+----+----+----+-
				---+----+----+----+----+----; 
                             C  ;            C  A  V  E  A  T     P  R  O  G  R
				  A  M  M  E  R             ; 
                             C  ;                                              
				                            ; 
 0055  0006[                 C  PDB_PAD2            DB      6h DUP (?)  ; 
            ??               C  
                         ]   C  
                             C  
                             C  ;                                              
				                            ; 
                             C  ;            C  A  V  E  A  T     P  R  O  G  R
				  A  M  M  E  R             ; 
                             C  ;----+----+----+----+----+----+----+----+----+-
				---+----+----+----+----+----; 
 005B                        C  Process_data_block  ENDS 
                             C   
                             C  BREAK <EXEC and EXE file structures> 
Microsoft (R) Macro Assembler  Version 4.00                 12/10/21 03:59:34
BIOS SYSTEM INITIALIZATION                                  Page     1-41
EXEC and EXE file structures                                

                             C  ; 
                             C  ; EXEC arg block - load/go program 
                             C  ; 
                             C   
                             C  ; 
                             C  ; The following get used as arguments to the EX
				EC system call.  They indicate 
                             C  ; whether or not the program is executed or whe
				ther or not a program header 
                             C  ; gets created. 
                             C  ; 
 = 0001                      C  exec_func_no_execute    EQU 1           ; no ex
				ecute bit 
 = 0002                      C  exec_func_overlay       EQU 2           ; overl
				ay bit 
                             C   
                             C  Exec0           STRUC 
 0000  ????                  C  Exec0_environ   DW      ?               ; seg a
				ddr of environment 
 0002  ????????              C  Exec0_com_line  DD      ?               ; point
				er to asciz command line 
 0006  ????????              C  Exec0_5C_FCB    DD      ?               ; defau
				lt fcb at 5C 
 000A  ????????              C  Exec0_6C_FCB    DD      ?               ; defau
				lt fcb at 6C 
 000E                        C  Exec0           ENDS 
                             C   
                             C  Exec1           STRUC 
 0000  ????                  C  Exec1_environ   DW      ?               ; seg a
				ddr of environment 
 0002  ????????              C  Exec1_com_line  DD      ?               ; point
				er to asciz command line 
 0006  ????????              C  Exec1_5C_FCB    DD      ?               ; defau
				lt fcb at 5C 
 000A  ????????              C  Exec1_6C_FCB    DD      ?               ; defau
				lt fcb at 6C 
 000E  ????                  C  Exec1_SP        DW      ?               ; stack
				 pointer of program 
 0010  ????                  C  Exec1_SS        DW      ?               ; stack
				 seg register of program 
 0012  ????                  C  Exec1_IP        DW      ?               ; entry
				 point IP 
 0014  ????                  C  Exec1_CS        DW      ?               ; entry
				 point CS 
 0016                        C  Exec1           ENDS 
                             C   
                             C  Exec3           STRUC 
 0000  ????                  C  Exec3_load_addr DW      ?               ; seg a
				ddress of load point 
 0002  ????                  C  Exec3_reloc_fac DW      ?               ; reloc
				ation factor 
 0004                        C  Exec3           ENDS 
                             C   
                             C  ; 
Microsoft (R) Macro Assembler  Version 4.00                 12/10/21 03:59:34
BIOS SYSTEM INITIALIZATION                                  Page     1-42
EXEC and EXE file structures                                

                             C  ; Exit codes in upper byte 
                             C  ; 
 = 0000                      C  Exit_terminate      EQU     0 
 = 0000                      C  Exit_abort          EQU     0 
 = 0001                      C  Exit_Ctrl_C         EQU     1 
 = 0002                      C  Exit_Hard_Error     EQU     2 
 = 0003                      C  Exit_Keep_process   EQU     3 
                             C   
                             C  ; 
                             C  ; EXE file header 
                             C  ; 
                             C   
                             C  EXE_file    STRUC 
 0000  ????                  C  exe_signature   DW  ?                   ; must 
				contain 4D5A  (yay zibo!) 
 0002  ????                  C  exe_len_mod_512 DW  ?                   ; low 9
				 bits of length 
 0004  ????                  C  exe_pages       DW  ?                   ; numbe
				r of 512b pages in file 
 0006  ????                  C  exe_rle_count   DW  ?                   ; count
				 of reloc entries 
 0008  ????                  C  exe_par_dir     DW  ?                   ; numbe
				r of paragraphs before image 
 000A  ????                  C  exe_min_BSS     DW  ?                   ; minim
				um number of para of BSS 
 000C  ????                  C  exe_max_BSS     DW  ?                   ; max n
				umber of para of BSS 
 000E  ????                  C  exe_SS          DW  ?                   ; stack
				 of image 
 0010  ????                  C  exe_SP          DW  ?                   ; SP of
				 image 
 0012  ????                  C  exe_chksum      DW  ?                   ; check
				sum  of file (ignored) 
 0014  ????                  C  exe_IP          DW  ?                   ; IP of
				 entry 
 0016  ????                  C  exe_CS          DW  ?                   ; CS of
				 entry 
 0018  ????                  C  exe_rle_table   DW  ?                   ; byte 
				offset of reloc table 
 001A  ????                  C  exe_iov         DW  ?                   ; overl
				ay number (0 for root) 
 001C  ????????              C  exe_sym_tab     DD  ?                   ; offse
				t of symbol table in file 
 0020                        C  EXE_file    ENDS 
                             C   
 = 5A4D                      C  exe_valid_signature     EQU 5A4Dh 
 = 4D5A                      C  exe_valid_old_signature EQU 4D5Ah 
                             C   
                             C  symbol_entry    STRUC 
 0000  ????????              C  sym_value       DD  ? 
 0004  ????                  C  sym_type        DW  ? 
 0006  ??                    C  sym_len         DB  ? 
 0007  00FF[                 C  sym_name        DB  255 dup (?) 
            ??               C  
Microsoft (R) Macro Assembler  Version 4.00                 12/10/21 03:59:34
BIOS SYSTEM INITIALIZATION                                  Page     1-43
EXEC and EXE file structures                                

                         ]   C  
                             C  
 0106                        C  symbol_entry    ENDS 
                             C   
                             C  BREAK <Internal system file table format> 
Microsoft (R) Macro Assembler  Version 4.00                 12/10/21 03:59:34
BIOS SYSTEM INITIALIZATION                                  Page     1-44
Internal system file table format                           

                             C  ;----+----+----+----+----+----+----+----+----+-
				---+----+----+----+----+----; 
                             C  ;            C  A  V  E  A  T     P  R  O  G  R
				  A  M  M  E  R             ; 
                             C  ;                                              
				                            ; 
                             C  ; 
                             C  ; system file table 
                             C  ; 
                             C   
                             C  sft             STRUC 
 0000  ????????              C  sft_link        DD      ? 
 0004  ????                  C  sft_count       DW      ?               ; numbe
				r of entries 
 0006  ????                  C  sft_table       DW      ?               ; begin
				ning of array of the following 
 0008                        C  sft             ENDS 
                             C   
                             C  ; 
                             C  ; system file table entry 
                             C  ; 
                             C   
                             C  sf_entry        STRUC 
 0000  ??                    C  sf_ref_count    DB      ?               ; numbe
				r of processes sharing fcb 
 0001  ??                    C  sf_mode         DB      ?               ; mode 
				of access 
 0002  ??                    C  sf_attr         DB      ?               ; attri
				bute of file 
 0003  0025[                 C  sf_fcb          DB      (SIZE sys_fcb) DUP (?) 
            ??               C  
                         ]   C  
                             C  
                             C                                          ; actua
				l FCB 
 0028                        C  sf_entry        ENDS 
                             C   
 = 0005                      C  sf_default_number   EQU     5h 
                             C  ;                                              
				                            ; 
                             C  ;            C  A  V  E  A  T     P  R  O  G  R
				  A  M  M  E  R             ; 
                             C  ;----+----+----+----+----+----+----+----+----+-
				---+----+----+----+----+----; 
                             C   
                             C  BREAK <Memory arena structure> 
Microsoft (R) Macro Assembler  Version 4.00                 12/10/21 03:59:34
BIOS SYSTEM INITIALIZATION                                  Page     1-45
Memory arena structure                                      

                             C  ;----+----+----+----+----+----+----+----+----+-
				---+----+----+----+----+----; 
                             C  ;            C  A  V  E  A  T     P  R  O  G  R
				  A  M  M  E  R             ; 
                             C  ;                                              
				                            ; 
                             C  ; 
                             C  ; arena item 
                             C  ; 
                             C  arena   STRUC 
 0000  ??                    C  arena_signature     DB  ?               ; 4D fo
				r valid item, 5A for last item 
 0001  ????                  C  arena_owner         DW  ?               ; owner
				 of arena item 
 0003  ????                  C  arena_size          DW  ?               ; size 
				in paragraphs of item 
 0005                        C  arena   ENDS 
                             C   
                             C  ; 
                             C  ; Current structure of the data returned by the
				 international call 
                             C  ; 
                             C   
                             C  internat_block STRUC 
 0000  ????                  C  Date_tim_format DW      ?           ; 0-USA, 1-
				EUR, 2-JAP 
 0002  ??                    C  Currency_sym    DB      ?           ; Currency 
				Symbol 5 bytes 
 0003  ??                    C                  DB      ? 
 0004  ??                    C                  DB      ? 
 0005  ??                    C                  DB      ? 
 0006  ??                    C                  DB      ? 
 0007  ??                    C  Thous_sep       DB      ?           ; Thousands
				 separator 2 bytes 
 0008  ??                    C                  DB      ? 
 0009  ??                    C  Decimal_sep     DB      ?           ; Decimal s
				eparator 2 bytes 
 000A  ??                    C                  DB      ? 
 000B  ??                    C  Date_sep        DB      ?           ; Date sepa
				rator 2 bytes 
 000C  ??                    C                  DB      ? 
 000D  ??                    C  Time_sep        DB      ?           ; Decimal s
				eparator 2 bytes 
 000E  ??                    C                  DB      ? 
 000F  ??                    C  Bit_feild       DB      ?           ; Bit value
				s 
                             C                                      ;   Bit 0 =
				 0 if currency symbol first 
                             C                                      ;         =
				 1 if currency symbol last 
                             C                                      ;   Bit 1 =
				 0 if No space after currency symbol 
                             C                                      ;         =
				 1 if space after currency symbol 
Microsoft (R) Macro Assembler  Version 4.00                 12/10/21 03:59:34
BIOS SYSTEM INITIALIZATION                                  Page     1-46
Memory arena structure                                      

 0010  ??                    C  Currency_cents  DB      ?           ; Number of
				 places after currency dec point 
 0011  ??                    C  Time_24         DB      ?           ; 1 if 24 h
				our time, 0 if 12 hour time 
 0012  ????                  C  Map_call        DW      ?           ; Address o
				f case mapping call (DWORD) 
 0014  ????                  C                  DW      ?           ; THIS IS T
				WO WORDS SO IT CAN BE INITIALIZED 
                             C                                      ;  in piece
				s. 
 0016  ??                    C  Data_sep        DB      ?           ; Data list
				 separator character 
 0017  ??                    C                  DB      ? 
 0018                        C  internat_block ENDS 
                             C   
                             C  ; 
                             C  ; Max size of the block returned by the INTERNA
				TIONAL call 
                             C  ; 
 = 0020                      C  internat_block_max      EQU     32 
                             C   
                             C  ; 
                             C  ; CAUTION: The routines in ALLOC.ASM rely on th
				e fact that arena_signature 
                             C  ; and arena_owner_system are all equal to zero 
				and are contained in DI.  Change 
                             C  ; them and change ALLOC.ASM. 
                             C   
 = 0000                      C  arena_owner_system  EQU 0               ; free 
				block indication 
                             C   
 = 004D                      C  arena_signature_normal  EQU 4Dh         ; valid
				 signature, not end of arena 
 = 005A                      C  arena_signature_end     EQU 5Ah         ; valid
				 signature, last block in arena 
                             C  ;                                              
				                            ; 
                             C  ;            C  A  V  E  A  T     P  R  O  G  R
				  A  M  M  E  R             ; 
                             C  ;----+----+----+----+----+----+----+----+----+-
				---+----+----+----+----+----; 
                             C   
                             C  BREAK <Machine instruction definitions> 
Microsoft (R) Macro Assembler  Version 4.00                 12/10/21 03:59:34
BIOS SYSTEM INITIALIZATION                                  Page     1-47
Machine instruction definitions                             

                             C   
 = 00CD                      C  mi_INT          EQU     0CDh 
 = 00EA                      C  mi_Long_JMP     EQU     0EAh 
 = 009A                      C  mi_Long_CALL    EQU     09Ah 
 = 00CB                      C  mi_Long_RET     EQU     0CBh 
                             C   
                             C  BREAK <Standard I/O assignments> 
Microsoft (R) Macro Assembler  Version 4.00                 12/10/21 03:59:34
BIOS SYSTEM INITIALIZATION                                  Page     1-48
Standard I/O assignments                                    

                             C   
 = 0000                      C  stdin       EQU     0 
 = 0001                      C  stdout      EQU     1 
 = 0002                      C  stderr      EQU     2 
 = 0003                      C  stdaux      EQU     3 
 = 0004                      C  stdprn      EQU     4 
                             C   
                             C  BREAK <Xenix subfunction assignments> 
Microsoft (R) Macro Assembler  Version 4.00                 12/10/21 03:59:34
BIOS SYSTEM INITIALIZATION                                  Page     1-49
Xenix subfunction assignments                               

                             C   
 = 0000                      C  open_for_read   EQU 0 
 = 0001                      C  open_for_write  EQU 1 
 = 0002                      C  open_for_both   EQU 2 
                             C   
                             C  BREAK <Xenix error codes> 
Microsoft (R) Macro Assembler  Version 4.00                 12/10/21 03:59:34
BIOS SYSTEM INITIALIZATION                                  Page     1-50
Xenix error codes                                           

                             C   
                             C  ; 
                             C  ; XENIX calls all return error codes through AX
				.  If an error occurred then 
                             C  ; the carry bit will be set and the error code 
				is in AX.  If no error occurred 
                             C  ; then the carry bit is reset and AX contains r
				eturned info. 
                             C  ; 
                             C   
 =                           C  no_error_occurred               EQU     0      
				                                               
				         ? 
                             C   
 = 0001                      C  error_invalid_function          EQU     1 
 = 0002                      C  error_file_not_found            EQU     2 
 = 0003                      C  error_path_not_found            EQU     3 
 = 0004                      C  error_too_many_open_files       EQU     4 
 = 0005                      C  error_access_denied             EQU     5 
 = 0006                      C  error_invalid_handle            EQU     6 
 = 0007                      C  error_arena_trashed             EQU     7 
 = 0008                      C  error_not_enough_memory         EQU     8 
 = 0009                      C  error_invalid_block             EQU     9 
 = 000A                      C  error_bad_environment           EQU     10 
 = 000B                      C  error_bad_format                EQU     11 
 = 000C                      C  error_invalid_access            EQU     12 
 = 000D                      C  error_invalid_data              EQU     13 
                             C  ;**** unused                    EQU     14 
 = 000F                      C  error_invalid_drive             EQU     15 
 = 0010                      C  error_current_directory         EQU     16 
 = 0011                      C  error_not_same_device           EQU     17 
 = 0012                      C  error_no_more_files             EQU     18 
                             C   
 =                           C  country_not_found               EQU     error_f
				ile_not_found 
 =                           C  alloc_not_enough_memory         EQU     error_n
				ot_enough_memory 
 =                           C  alloc_arena_trashed             EQU     error_a
				rena_trashed 
                             C   
 =                           C  close_invalid_handle            EQU     error_i
				nvalid_handle 
 =                           C  close_invalid_function          EQU     error_i
				nvalid_function 
                             C   
 =                           C  chdir_path_not_found            EQU     error_p
				ath_not_found 
                             C   
 =                           C  chmod_path_not_found            EQU     error_p
				ath_not_found 
 =                           C  chmod_access_denied             EQU     error_a
				ccess_denied 
 =                           C  chmod_invalid_function          EQU     error_i
				nvalid_function 
Microsoft (R) Macro Assembler  Version 4.00                 12/10/21 03:59:34
BIOS SYSTEM INITIALIZATION                                  Page     1-51
Xenix error codes                                           

                             C   
 =                           C  creat_access_denied             EQU     error_a
				ccess_denied 
 =                           C  creat_path_not_found            EQU     error_p
				ath_not_found 
 =                           C  creat_too_many_open_files       EQU     error_t
				oo_many_open_files 
                             C   
 =                           C  curdir_invalid_drive            EQU     error_i
				nvalid_drive 
                             C   
 =                           C  dealloc_invalid_block           EQU     error_i
				nvalid_block 
 =                           C  dealloc_arena_trashed           EQU     error_a
				rena_trashed 
                             C   
 =                           C  dup_invalid_handle              EQU     error_i
				nvalid_handle 
 =                           C  dup_too_many_open_files         EQU     error_t
				oo_many_open_files 
                             C   
 =                           C  dup2_invalid_handle             EQU     error_i
				nvalid_handle 
                             C   
 =                           C  exec_invalid_function           EQU     error_i
				nvalid_function 
 =                           C  exec_bad_environment            EQU     error_b
				ad_environment 
 =                           C  exec_bad_format                 EQU     error_b
				ad_format 
 =                           C  exec_not_enough_memory          EQU     error_n
				ot_enough_memory 
 =                           C  exec_file_not_found             EQU     error_f
				ile_not_found 
                             C   
 =                           C  filetimes_invalid_function      EQU     error_i
				nvalid_function 
 =                           C  filetimes_invalid_handle        EQU     error_i
				nvalid_handle 
                             C   
 =                           C  findfirst_file_not_found        EQU     error_f
				ile_not_found 
 =                           C  findfirst_no_more_files         EQU     error_n
				o_more_files 
 =                           C  findnext_no_more_files          EQU     error_n
				o_more_files 
                             C   
 =                           C  international_invalid_function  EQU     error_i
				nvalid_function 
                             C   
 =                           C  ioctl_invalid_handle            EQU     error_i
				nvalid_handle 
 =                           C  ioctl_invalid_function          EQU     error_i
				nvalid_function 
Microsoft (R) Macro Assembler  Version 4.00                 12/10/21 03:59:34
BIOS SYSTEM INITIALIZATION                                  Page     1-52
Xenix error codes                                           

 =                           C  ioctl_invalid_data              EQU     error_i
				nvalid_data 
                             C   
 =                           C  lseek_invalid_handle            EQU     error_i
				nvalid_handle 
 =                           C  lseek_invalid_function          EQU     error_i
				nvalid_function 
                             C   
 =                           C  mkdir_path_not_found            EQU     error_p
				ath_not_found 
 =                           C  mkdir_access_denied             EQU     error_a
				ccess_denied 
                             C   
 =                           C  open_invalid_access             EQU     error_i
				nvalid_access 
 =                           C  open_file_not_found             EQU     error_f
				ile_not_found 
 =                           C  open_access_denied              EQU     error_a
				ccess_denied 
 =                           C  open_too_many_open_files        EQU     error_t
				oo_many_open_files 
                             C   
 =                           C  read_invalid_handle             EQU     error_i
				nvalid_handle 
 =                           C  read_access_denied              EQU     error_a
				ccess_denied 
                             C   
 =                           C  rename_file_not_found           EQU     error_f
				ile_not_found 
 =                           C  rename_not_same_device          EQU     error_n
				ot_same_device 
 =                           C  rename_access_denied            EQU     error_a
				ccess_denied 
                             C   
 =                           C  rmdir_path_not_found            EQU     error_p
				ath_not_found 
 =                           C  rmdir_access_denied             EQU     error_a
				ccess_denied 
 =                           C  rmdir_current_directory         EQU     error_c
				urrent_directory 
                             C   
 =                           C  setblock_invalid_block          EQU     error_i
				nvalid_block 
 =                           C  setblock_arena_trashed          EQU     error_a
				rena_trashed 
 =                           C  setblock_not_enough_memory      EQU     error_n
				ot_enough_memory 
 =                           C  setblock_invalid_function       EQU     error_i
				nvalid_function 
                             C   
 =                           C  unlink_file_not_found           EQU     error_f
				ile_not_found 
 =                           C  unlink_access_denied            EQU     error_a
				ccess_denied 
Microsoft (R) Macro Assembler  Version 4.00                 12/10/21 03:59:34
BIOS SYSTEM INITIALIZATION                                  Page     1-53
Xenix error codes                                           

                             C   
 =                           C  write_invalid_handle            EQU     error_i
				nvalid_handle 
 =                           C  write_access_denied             EQU     error_a
				ccess_denied 
                             C   
                             C  BREAK <system call definitions> 
Microsoft (R) Macro Assembler  Version 4.00                 12/10/21 03:59:34
BIOS SYSTEM INITIALIZATION                                  Page     1-54
system call definitions                                     

                             C   
 = 0000                      C  Abort                           EQU 0   ;  0   
				   0 
 = 0001                      C  Std_Con_Input                   EQU 1   ;  1   
				   1 
 = 0002                      C  Std_Con_Output                  EQU 2   ;  2   
				   2 
 = 0003                      C  Std_Aux_Input                   EQU 3   ;  3   
				   3 
 = 0004                      C  Std_Aux_Output                  EQU 4   ;  4   
				   4 
 = 0005                      C  Std_Printer_Output              EQU 5   ;  5   
				   5 
 = 0006                      C  Raw_Con_IO                      EQU 6   ;  6   
				   6 
 = 0007                      C  Raw_Con_Input                   EQU 7   ;  7   
				   7 
 = 0008                      C  Std_Con_Input_No_Echo           EQU 8   ;  8   
				   8 
 = 0009                      C  Std_Con_String_Output           EQU 9   ;  9   
				   9 
 = 000A                      C  Std_Con_String_Input            EQU 10  ; 10   
				   A 
 = 000B                      C  Std_Con_Input_Status            EQU 11  ; 11   
				   B 
 = 000C                      C  Std_Con_Input_Flush             EQU 12  ; 12   
				   C 
 = 000D                      C  Disk_Reset                      EQU 13  ; 13   
				   D 
 = 000E                      C  Set_Default_Drive               EQU 14  ; 14   
				   E 
 = 000F                      C  FCB_Open                        EQU 15  ; 15   
				   F 
 = 0010                      C  FCB_Close                       EQU 16  ; 16   
				  10 
 = 0011                      C  Dir_Search_First                EQU 17  ; 17   
				  11 
 = 0012                      C  Dir_Search_Next                 EQU 18  ; 18   
				  12 
 = 0013                      C  FCB_Delete                      EQU 19  ; 19   
				  13 
 = 0014                      C  FCB_Seq_Read                    EQU 20  ; 20   
				  14 
 = 0015                      C  FCB_Seq_Write                   EQU 21  ; 21   
				  15 
 = 0016                      C  FCB_Create                      EQU 22  ; 22   
				  16 
 = 0017                      C  FCB_Rename                      EQU 23  ; 23   
				  17 
 = 0019                      C  Get_Default_Drive               EQU 25  ; 25   
				  19 
 = 001A                      C  Set_DMA                         EQU 26  ; 26   
				  1A 
                             C  ;----+----+----+----+----+----+----+----+----+-
Microsoft (R) Macro Assembler  Version 4.00                 12/10/21 03:59:34
BIOS SYSTEM INITIALIZATION                                  Page     1-55
system call definitions                                     

				---+----+----+----+----+----; 
                             C  ;            C  A  V  E  A  T     P  R  O  G  R
				  A  M  M  E  R             ; 
                             C  ;                                              
				                            ; 
 = 001F                      C  Get_Default_DPB                 EQU 31  ; 31   
				  1F 
                             C  ;                                              
				                            ; 
                             C  ;            C  A  V  E  A  T     P  R  O  G  R
				  A  M  M  E  R             ; 
                             C  ;----+----+----+----+----+----+----+----+----+-
				---+----+----+----+----+----; 
 = 0021                      C  FCB_Random_Read                 EQU 33  ; 33   
				  21 
 = 0022                      C  FCB_Random_Write                EQU 34  ; 34   
				  22 
 = 0023                      C  Get_FCB_File_Length             EQU 35  ; 35   
				  23 
 = 0024                      C  Get_FCB_Position                EQU 36  ; 36   
				  24 
 = 0025                      C  Set_Interrupt_Vector            EQU 37  ; 37   
				  25 
 = 0026                      C  Create_Process_Data_Block       EQU 38  ; 38   
				  26 
 = 0027                      C  FCB_Random_Read_Block           EQU 39  ; 39   
				  27 
 = 0028                      C  FCB_Random_Write_Block          EQU 40  ; 40   
				  28 
 = 0029                      C  Parse_File_Descriptor           EQU 41  ; 41   
				  29 
 = 002A                      C  Get_Date                        EQU 42  ; 42   
				  2A 
 = 002B                      C  Set_Date                        EQU 43  ; 43   
				  2B 
 = 002C                      C  Get_Time                        EQU 44  ; 44   
				  2C 
 = 002D                      C  Set_Time                        EQU 45  ; 45   
				  2D 
 = 002E                      C  Set_Verify_On_Write             EQU 46  ; 46   
				  2E 
                             C  ; Extended functionality group 
 = 002F                      C  Get_DMA                         EQU 47  ; 47   
				  2F 
 = 0030                      C  Get_Version                     EQU 48  ; 48   
				  30 
 = 0031                      C  Keep_Process                    EQU 49  ; 49   
				  31 
                             C  ;----+----+----+----+----+----+----+----+----+-
				---+----+----+----+----+----; 
                             C  ;            C  A  V  E  A  T     P  R  O  G  R
				  A  M  M  E  R             ; 
                             C  ;                                              
				                            ; 
Microsoft (R) Macro Assembler  Version 4.00                 12/10/21 03:59:34
BIOS SYSTEM INITIALIZATION                                  Page     1-56
system call definitions                                     

 = 0032                      C  Get_DPB                         EQU 50  ; 50   
				  32 
                             C  ;                                              
				                            ; 
                             C  ;            C  A  V  E  A  T     P  R  O  G  R
				  A  M  M  E  R             ; 
                             C  ;----+----+----+----+----+----+----+----+----+-
				---+----+----+----+----+----; 
 = 0033                      C  Set_CTRL_C_Trapping             EQU 51  ; 51   
				  33 
 = 0034                      C  Get_InDOS_Flag                  EQU 52  ; 52   
				  34 
 = 0035                      C  Get_Interrupt_Vector            EQU 53  ; 53   
				  35 
 = 0036                      C  Get_Drive_Freespace             EQU 54  ; 54   
				  36 
 = 0037                      C  Char_Oper                       EQU 55  ; 55   
				  37 
 = 0038                      C  International                   EQU 56  ; 56   
				  38 
                             C  ;   Directory Group 
 = 0039                      C  MKDir                           EQU 57  ; 57   
				  39 
 = 003A                      C  RMDir                           EQU 58  ; 58   
				  3A 
 = 003B                      C  CHDir                           EQU 59  ; 59   
				  3B 
                             C  ;   File Group 
 = 003C                      C  Creat                           EQU 60  ; 60   
				  3C 
 = 003D                      C  Open                            EQU 61  ; 61   
				  3D 
 = 003E                      C  Close                           EQU 62  ; 62   
				  3E 
 = 003F                      C  Read                            EQU 63  ; 63   
				  3F 
 = 0040                      C  Write                           EQU 64  ; 64   
				  40 
 = 0041                      C  Unlink                          EQU 65  ; 65   
				  41 
 = 0042                      C  LSeek                           EQU 66  ; 66   
				  42 
 = 0043                      C  CHMod                           EQU 67  ; 67   
				  43 
 = 0044                      C  IOCtl                           EQU 68  ; 68   
				  44 
 = 0045                      C  XDup                            EQU 69  ; 69   
				  45 
 = 0046                      C  XDup2                           EQU 70  ; 70   
				  46 
 = 0047                      C  Current_Dir                     EQU 71  ; 71   
				  47 
                             C  ;    Memory Group 
 = 0048                      C  Alloc                           EQU 72  ; 72   
Microsoft (R) Macro Assembler  Version 4.00                 12/10/21 03:59:34
BIOS SYSTEM INITIALIZATION                                  Page     1-57
system call definitions                                     

				  48 
 = 0049                      C  Dealloc                         EQU 73  ; 73   
				  49 
 = 004A                      C  Setblock                        EQU 74  ; 74   
				  4A 
                             C  ;    Process Group 
 = 004B                      C  Exec                            EQU 75  ; 75   
				  4B 
 = 004C                      C  Exit                            EQU 76  ; 76   
				  4C 
 = 004D                      C  Wait                            EQU 77  ; 77   
				  4D 
 = 004E                      C  Find_First                      EQU 78  ; 78   
				  4E 
                             C  ;   Special Group 
 = 004F                      C  Find_Next                       EQU 79  ; 79   
				  4F 
                             C  ; SPECIAL SYSTEM GROUP 
                             C  ;----+----+----+----+----+----+----+----+----+-
				---+----+----+----+----+----; 
                             C  ;            C  A  V  E  A  T     P  R  O  G  R
				  A  M  M  E  R             ; 
                             C  ;                                              
				                            ; 
 = 0050                      C  Set_Current_PDB                 EQU 80  ; 80   
				  50 
 = 0051                      C  Get_Current_PDB                 EQU 81  ; 81   
				  51 
 = 0052                      C  Get_In_Vars                     EQU 82  ; 82   
				  52 
 = 0053                      C  SetDPB                          EQU 83  ; 83   
				  53 
                             C  ;                                              
				                            ; 
                             C  ;            C  A  V  E  A  T     P  R  O  G  R
				  A  M  M  E  R             ; 
                             C  ;----+----+----+----+----+----+----+----+----+-
				---+----+----+----+----+----; 
 = 0054                      C  Get_Verify_On_Write             EQU 84  ; 84   
				  54 
                             C  ;----+----+----+----+----+----+----+----+----+-
				---+----+----+----+----+----; 
                             C  ;            C  A  V  E  A  T     P  R  O  G  R
				  A  M  M  E  R             ; 
                             C  ;                                              
				                            ; 
 = 0055                      C  Dup_PDB                         EQU 85  ; 85   
				  55 
                             C  ;                                              
				                            ; 
                             C  ;            C  A  V  E  A  T     P  R  O  G  R
				  A  M  M  E  R             ; 
                             C  ;----+----+----+----+----+----+----+----+----+-
				---+----+----+----+----+----; 
Microsoft (R) Macro Assembler  Version 4.00                 12/10/21 03:59:34
BIOS SYSTEM INITIALIZATION                                  Page     1-58
system call definitions                                     

 = 0056                      C  Rename                          EQU 86  ; 86   
				  56 
 = 0057                      C  File_Times                      EQU 87  ; 87   
				  57 
 = 0058                      C  AllocOper                       EQU 88  ; 88   
				  58 
                             C  ; Network extention system calls 
 = 0059                      C  GetExtendedError                EQU 89  ; 89   
				  59 
 = 005A                      C  CreateTempFile                  EQU 90  ; 90   
				  5A 
 = 005B                      C  CreateNewFile                   EQU 91  ; 91   
				  5B 
 = 005C                      C  LockOper                        EQU 92  ; 92   
				  5C Lock and Unlock 
 = 005D                      C  ServerCall                      EQU 93  ; 93   
				  5D CommitAll, ServerDOSCall, 
                             C                                          ;      
				     CloseByName, CloseUser, 
                             C                                          ;      
				     CloseUserProcess, 
                             C                                          ;      
				     GetOpenFileList 
 = 005E                      C  UserIDOper                      EQU 94  ; 94   
				  5E Get and Set 
 = 005F                      C  AssignOper                      EQU 95  ; 95   
				  5F On, Off, Get, Set, Cancel 
                             C   
 = 00F8                      C  Set_Oem_Handler                 EQU 248 ; 248  
				  F8 
 = 00F9                      C  OEM_C1                          EQU 249 ; 249  
				  F9 
 = 00FA                      C  OEM_C2                          EQU 250 ; 250  
				  FA 
 = 00FB                      C  OEM_C3                          EQU 251 ; 251  
				  FB 
 = 00FC                      C  OEM_C4                          EQU 252 ; 252  
				  FC 
 = 00FD                      C  OEM_C5                          EQU 253 ; 253  
				  FD 
 = 00FE                      C  OEM_C6                          EQU 254 ; 254  
				  FE 
 = 00FF                      C  OEM_C7                          EQU 255 ; 255  
				  FF 
                             C  SUBTTL 
                                 
                             C          INCLUDE DEVSYM.ASM 
                             C  SUBTTL DEVICE TABLE AND SRH DEFINITION 
Microsoft (R) Macro Assembler  Version 4.00                 12/10/21 03:59:34
BIOS SYSTEM INITIALIZATION                                  Page     1-59
DEVICE TABLE AND SRH DEFINITION                             

                             C  PAGE 
                             C  ; The device table list has the form: 
                             C  SYSDEV  STRUC 
 0000  ????????              C  SDEVNEXT        DD      ?       ;Pointer to nex
				t device header 
 0004  ????                  C  SDEVATT         DW      ?       ;Attributes of 
				the device 
 0006  ????                  C  SDEVSTRAT       DW      ?       ;Strategy entry
				 point 
 0008  ????                  C  SDEVINT         DW      ?       ;Interrupt entr
				y point 
 000A  0008[                 C  SDEVNAME        DB      8 DUP (?) ;Name of devi
				ce (only first byte used for block) 
            ??               C  
                         ]   C  
                             C  
 0012                        C  SYSDEV  ENDS 
                             C   
                             C  ;Attribute bit masks 
 = 8000                      C  DEVTYP  EQU     8000H           ;Bit 15 - 1  if
				 Char, 0 if block 
 = 4000                      C  DEVIOCTL EQU    4000H           ;Bit 14 - CONTR
				OL mode bit 
 = 2000                      C  ISFATBYDEV EQU  2000H           ;Bit 13 - Devic
				e uses FAT ID bytes, comp media. 
 = 0001                      C  ISCIN   EQU     0001H           ;Bit 0 - This d
				evice is the console input. 
 = 0002                      C  ISCOUT  EQU     0002H           ;Bit 1 - This d
				evice is the console output. 
 = 0004                      C  ISNULL  EQU     0004H           ;Bit 2 - This d
				evice is the null device. 
 = 0008                      C  ISCLOCK EQU     0008H           ;Bit 3 - This d
				evice is the clock device. 
 = 0010                      C  ISIBM   EQU     0010H           ;Bit 4 - This d
				evice is special 
                             C   
                             C  ;Static Reguest Header 
                             C  SRHEAD  STRUC 
 0000  ??                    C  REQLEN  DB      ?               ;Length in byte
				s of request block 
 0001  ??                    C  REQUNIT DB      ?               ;Device unit nu
				mber 
 0002  ??                    C  REQFUNC DB      ?               ;Type of reques
				t 
 0003  ????                  C  REQSTAT DW      ?               ;Status Word 
 0005  0008[                 C          DB      8 DUP(?)        ;Reserved for q
				ueue links 
            ??               C  
                         ]   C  
                             C  
 000D                        C  SRHEAD  ENDS 
                             C   
                             C  ;Status word masks 
 = 8000                      C  STERR   EQU     8000H           ;Bit 15 - Error
Microsoft (R) Macro Assembler  Version 4.00                 12/10/21 03:59:34
BIOS SYSTEM INITIALIZATION                                  Page     1-60
DEVICE TABLE AND SRH DEFINITION                             

				 
 = 0200                      C  STBUI   EQU     0200H           ;Bit 9 - Buisy 
 = 0100                      C  STDON   EQU     0100H           ;Bit 8 - Done 
 = 00FF                      C  STECODE EQU     00FFH           ;Error code 
 = 0000                      C  WRECODE EQU     0 
                             C   
                             C  ;Function codes 
 = 0000                      C  DEVINIT EQU     0               ;Initialization
				 
 = 001A                      C  DINITHL EQU     26              ;Size of init h
				eader 
 = 0001                      C  DEVMDCH EQU     1               ;Media check 
 = 000F                      C  DMEDHL  EQU     15              ;Size of media 
				check header 
 = 0002                      C  DEVBPB  EQU     2               ;Get BPB 
 = 0003                      C  DEVRDIOCTL EQU  3               ;IOCTL read 
 = 0016                      C  DBPBHL  EQU     22              ;Size of Get BP
				B header 
 = 0004                      C  DEVRD   EQU     4               ;Read 
 = 0016                      C  DRDWRHL EQU     22              ;Size of RD/WR 
				header 
 = 0005                      C  DEVRDND EQU     5               ;Non destructiv
				e read no wait (character devs) 
 = 000E                      C  DRDNDHL EQU     14              ;Size of non de
				structive read header 
 = 0006                      C  DEVIST  EQU     6               ;Input status 
 = 000D                      C  DSTATHL EQU     13              ;Size of status
				 header 
 = 0007                      C  DEVIFL  EQU     7               ;Input flush 
 = 000F                      C  DFLSHL  EQU     15              ;Size of flush 
				header 
 = 0008                      C  DEVWRT  EQU     8               ;Write 
 = 0009                      C  DEVWRTV EQU     9               ;Write with ver
				ify 
 = 000A                      C  DEVOST  EQU     10              ;Output status 
 = 000B                      C  DEVOFL  EQU     11              ;Output flush 
 = 000C                      C  DEVWRIOCTL EQU  12              ;IOCTL write 
                                 
                                 
                                        IF      NOT IBM 
                                        IF      NOT IBMJAPVER 
                                        EXTRN   RE_INIT:FAR 
                                        ENDIF 
                                        ENDIF 
                                 
 0000                           SYSINITSEG      SEGMENT PUBLIC 'SYSTEM_INIT' 
                                 
                                ASSUME  CS:SYSINITSEG,DS:NOTHING,ES:NOTHING,SS:
				NOTHING 
                                 
                                        EXTRN   BADOPM:BYTE,CRLFM:BYTE,BADCOM:B
				YTE 
                                        EXTRN   BADSIZ_PRE:BYTE,BADLD_PRE:BYTE 
                                        EXTRN   BADSIZ_POST:BYTE,BADLD_POST:BYT
Microsoft (R) Macro Assembler  Version 4.00                 12/10/21 03:59:34
BIOS SYSTEM INITIALIZATION                                  Page     1-61
DEVICE TABLE AND SRH DEFINITION                             

				E 
                                        EXTRN   SYSSIZE:BYTE,BADCOUNTRY:BYTE 
                                 
                                        PUBLIC  CURRENT_DOS_LOCATION 
                                        PUBLIC  FINAL_DOS_LOCATION 
                                        PUBLIC  DEVICE_LIST 
                                        PUBLIC  MEMORY_SIZE 
                                        PUBLIC  DEFAULT_DRIVE 
                                        PUBLIC  BUFFERS 
                                        PUBLIC  FILES 
                                        PUBLIC  SYSINIT 
                                 
                                        ENDIF 
                                 
 0000                           SYSINIT: 
 0000  EB 63 90                         JMP     GOINIT 
                                 
 0003                           DOSINFO                 LABEL   DWORD 
 0003  0000                                             DW      0000 
 0005  0000                     CURRENT_DOS_LOCATION    DW      0000 
                                 
 0007                           MSDOS                   LABEL   DWORD 
 0007                           ENTRY_POINT             LABEL   DWORD 
 0007  0000                                             DW      0000 
 0009  0000                     FINAL_DOS_LOCATION      DW      0000 
 000B  00 00 00 00              DEVICE_LIST             DD      00000000 
                                 
                                        ENDIF 
                                 
 000F  0001                     MEMORY_SIZE             DW      0001 
 0011  00                       DEFAULT_DRIVE           DB      00 
 0012  02                       BUFFERS                 DB      2 
 0013  08                       FILES                   DB      8 
 0014  02 00 50                 COMMAND_LINE            DB      2,0,"P" ; Defau
				lt Command.com Args 
 0017  001D[                                            DB      29 DUP (0) 
            00                  
                         ]      
                                
 0034  00                       ZERO                    DB      0 
                                 
                                        IF      NOT NOEXEC 
 0035  0000                     COMEXE  EXEC0 <0,COMMAND_LINE,DEFAULT_DRIVE,ZER
				O> 
 0037  0014 ---- R              
 003B  0011 ---- R              
 003F  0034 ---- R              
                                
                                        ENDIF 
                                 
 0043  0000                     COUNT   DW      0000 
 0045  0000                     CHRPTR  DW      0000 
                                 
 0047                           BUFPTR  LABEL   DWORD                   ; LEAVE
Microsoft (R) Macro Assembler  Version 4.00                 12/10/21 03:59:34
BIOS SYSTEM INITIALIZATION                                  Page     1-62
DEVICE TABLE AND SRH DEFINITION                             

				 THIS STUFF IN ORDER! 
 0047  0000                     MEMLO   DW      0 
 0049                           PRMBLK  LABEL   WORD 
 0049  0000                     MEMHI   DW      0 
 004B  0000                     LDOFF   DW      0 
 004D  0000                     AREA    DW      0 
                                 
 004F  16                       PACKET                  DB      22 
 0050  00                                               DB      0 
 0051  00                                               DB      0       ; INITI
				ALIZE CODE 
 0052  0000                                             DW      0 
 0054  0008[                                            DB      8 DUP (?) 
            ??                  
                         ]      
                                
 005C  00                       UNITCOUNT               DB      0 
 005D  00 00 00 00              BREAK_ADDR              DD      0 
 0061  00 00 00 00              BPB_ADDR                DD      0 
                                 
 0065                           GOINIT: 
 0065  FC                               CLD 
 0066  33 F6                            XOR     SI,SI 
 0068  8B FE                            MOV     DI,SI 
                                 
                                        IF      MSVER 
 006A  2E: 8B 0E 000F R                 MOV     CX,[MEMORY_SIZE] 
 006F  83 F9 01                         CMP     CX,1 
 0072  75 1D                            JNZ     NOSCAN 
 0074  B9 0800                          MOV     CX,2048                 ; START
				 SCANNING AT 32K BOUNDARY 
 0077  33 DB                            XOR     BX,BX 
                                 
 0079  41                       MEMSCAN:INC     CX 
 007A  74 10                            JZ      SETEND 
 007C  8E D9                            MOV     DS,CX 
 007E  8A 07                            MOV     AL,[BX] 
 0080  F6 D0                            NOT     AL 
 0082  88 07                            MOV     [BX],AL 
 0084  3A 07                            CMP     AL,[BX] 
 0086  F6 D0                            NOT     AL 
 0088  88 07                            MOV     [BX],AL 
 008A  74 ED                            JZ      MEMSCAN 
 008C                           SETEND: 
 008C  2E: 89 0E 000F R                 MOV     [MEMORY_SIZE],CX 
                                        ENDIF 
                                 
                                        ENDIF 
                                 
 0091                           NOSCAN: 
 0091  8C C8                            MOV     AX,CS 
 0093  8E D8                            MOV     DS,AX 
                                ASSUME  DS:SYSINITSEG 
                                 
Microsoft (R) Macro Assembler  Version 4.00                 12/10/21 03:59:34
BIOS SYSTEM INITIALIZATION                                  Page     1-63
DEVICE TABLE AND SRH DEFINITION                             

                                        ENDIF 
                                 
 0095  B8 000F E                        MOV     AX,OFFSET SYSSIZE + 15 
 0098  D1 E8                            SHR     AX,1                    ; Divid
				e by 16 for paras 
 009A  D1 E8                            SHR     AX,1 
 009C  D1 E8                            SHR     AX,1 
 009E  D1 E8                            SHR     AX,1 
 00A0  2B C8                            SUB     CX,AX 
 00A2  8E C1                            MOV     ES,CX 
 00A4  B9 0001 E                        MOV     CX,OFFSET SYSSIZE + 1 
 00A7  D1 E9                            SHR     CX,1                    ; Divid
				e by 2 to get words 
 00A9  F3/ A5                           REP     MOVSW                   ; RELOC
				ATE SYSINIT 
                                 
                                        ASSUME  ES:SYSINITSEG 
                                 
 00AB  06                               PUSH    ES 
 00AC  B8 00B1 R                        MOV     AX,OFFSET SYSIN 
 00AF  50                               PUSH    AX 
                                 
 00B0                           AAA     PROC    FAR 
 00B0  CB                               RET 
                                AAA     ENDP 
                                ; 
                                ;       MOVE THE DOS TO ITS PROPER LOCATION 
                                ; 
 00B1                           SYSIN: 
                                 
                                        ASSUME  DS:NOTHING,ES:SYSINITSEG,SS:NOT
				HING 
                                 
 00B1  26: A1 0005 R                    MOV     AX,[CURRENT_DOS_LOCATION] 
 00B5  8E D8                            MOV     DS,AX 
 00B7  26: A1 0009 R                    MOV     AX,[FINAL_DOS_LOCATION] 
 00BB  8E C0                            MOV     ES,AX 
                                 
                                        ASSUME  ES:NOTHING 
                                 
 00BD  33 F6                            XOR     SI,SI 
 00BF  8B FE                            MOV     DI,SI 
 00C1  B9 2800                          MOV     CX,DOSSIZE/2 
 00C4  F3/ A5                           REP     MOVSW 
                                 
 00C6  2E: C5 36 000B R                 LDS     SI,[DEVICE_LIST] 
 00CB  2E: 8B 16 000F R                 MOV     DX,[MEMORY_SIZE] 
                                 
 00D0  FA                               CLI 
 00D1  8C C8                            MOV     AX,CS 
 00D3  8E D0                            MOV     SS,AX 
 00D5  BC 00D9 R                        MOV     SP,OFFSET LOCSTACK 
                                 
                                        ASSUME  SS:SYSINITSEG 
Microsoft (R) Macro Assembler  Version 4.00                 12/10/21 03:59:34
BIOS SYSTEM INITIALIZATION                                  Page     1-64
DEVICE TABLE AND SRH DEFINITION                             

                                 
                                        IF      NOT ALTVECT 
 00D8  FB                               STI                             ; Leave
				 INTs disabled for ALTVECT 
                                        ENDIF 
 00D9                           LOCSTACK LABEL BYTE 
                                 
 00D9  36: FF 1E 0007 R                 CALL    MSDOS 
 00DE  36: 8C 06 0005 R                 MOV     WORD PTR [DOSINFO+2],ES ; SAVE 
				POINTER TO DOS INFO 
 00E3  36: 89 3E 0003 R                 MOV     WORD PTR [DOSINFO],DI 
                                 
                                        IF      NOT IBM 
                                        IF      NOT IBMJAPVER 
 00E8  9A 0000 ---- E                   CALL    RE_INIT                 ; Re-ca
				ll the BIOS 
                                        ENDIF 
                                        ENDIF 
                                 
 00ED  FB                               STI 
 00EE  FC                               CLD 
                                 
                                      ELSE 
 00EF  8C CB                            MOV     BX,CS 
 00F1  83 EB 10                         SUB     BX,10H 
 00F4  8E C3                            MOV     ES,BX 
 00F6  33 F6                            XOR     SI,SI 
 00F8  8B FE                            MOV     DI,SI 
 00FA  B9 0080                          MOV     CX,80H 
 00FD  F3/ A5                           REP     MOVSW 
 00FF  B4 50                            MOV     AH,SET_CURRENT_PDB 
 0101  CD 21                            INT     21H 
                                        ENDIF 
                                 
 0103  1E                               PUSH    DS 
 0104  0E                               PUSH    CS 
 0105  1F                               POP     DS 
 0106  BA 06EA R                        MOV     DX,OFFSET INT24         ; SET U
				P INT 24 HANDLER 
 0109  B8 2524                          MOV     AX,(SET_INTERRUPT_VECTOR SHL 8)
				 OR 24H 
 010C  CD 21                            INT     21H 
                                 
                                        ENDIF 
                                 
 010E  1F                               POP     DS 
                                 
 010F  36: 8A 16 0011 R                 MOV     DL,[DEFAULT_DRIVE] 
 0114  0A D2                            OR      DL,DL 
 0116  74 06                            JZ      NODRVSET 
 0118  FE CA                            DEC     DL                      ; A = 0
				 
 011A  B4 0E                            MOV     AH,SET_DEFAULT_DRIVE 
 011C  CD 21                            INT     21H                     ; SELEC
Microsoft (R) Macro Assembler  Version 4.00                 12/10/21 03:59:34
BIOS SYSTEM INITIALIZATION                                  Page     1-65
DEVICE TABLE AND SRH DEFINITION                             

				T THE DISK 
 011E                           NODRVSET: 
                                 
 011E  E8 01A6 R                        CALL    DOCONF                  ; DO TH
				E CONFIG STUFF 
                                 
                                        ENDIF 
                                 
                                        ENDIF 
                                 
 0121  0E                               PUSH    CS 
 0122  1F                               POP     DS 
                                ASSUME  DS:SYSINITSEG 
 0123  A0 0013 R                        MOV     AL,[FILES] 
 0126  98                               CBW 
 0127  8B C8                            MOV     CX,AX 
 0129  33 DB                            XOR     BX,BX                   ; Close
				 standard input 
 012B  B4 3E                            MOV     AH,CLOSE 
 012D  CD 21                            INT     21H 
 012F  BB 0002                          MOV     BX,2 
 0132                           RCCLLOOP:                               ; Close
				 everybody but standard output 
 0132  B4 3E                            MOV     AH,CLOSE 
 0134  CD 21                            INT     21H 
 0136  43                               INC     BX 
 0137  E2 F9                            LOOP    RCCLLOOP 
                                 
 0139  BA 0706 R                        MOV     DX,OFFSET CONDEV 
 013C  B0 02                            MOV     AL,2 
 013E  B4 3D                            MOV     AH,OPEN                 ; OPEN 
				CON FOR READ/WRITE 
 0140  F9                               STC 
 0141  CD 21                            INT     21H 
 0143  73 05                            JNC     GOAUX 
 0145  E8 066C R                        CALL    BADFIL 
 0148  EB 13                            JMP     SHORT GOAUX2 
                                 
 014A  50                       GOAUX:  PUSH    AX 
 014B  BB 0001                          MOV     BX,1                    ; close
				 standard output 
 014E  B4 3E                            MOV     AH,CLOSE 
 0150  CD 21                            INT     21H 
 0152  58                               POP     AX 
                                 
 0153  8B D8                            MOV     BX,AX                   ; New d
				evice handle 
 0155  B4 45                            MOV     AH,XDUP 
 0157  CD 21                            INT     21H                     ; Dup t
				o 1, STDOUT 
 0159  B4 45                            MOV     AH,XDUP 
 015B  CD 21                            INT     21H                     ; Dup t
				o 2, STDERR 
                                 
Microsoft (R) Macro Assembler  Version 4.00                 12/10/21 03:59:34
BIOS SYSTEM INITIALIZATION                                  Page     1-66
DEVICE TABLE AND SRH DEFINITION                             

 015D  BA 070F R                GOAUX2: MOV     DX,OFFSET AUXDEV 
 0160  B0 02                            MOV     AL,2                    ; READ/
				WRITE ACCESS 
 0162  E8 06C7 R                        CALL    OPEN_DEV 
                                 
 0165  BA 0718 R                        MOV     DX,OFFSET PRNDEV 
 0168  B0 01                            MOV     AL,1                    ; WRITE
				 ONLY 
 016A  E8 06C7 R                        CALL    OPEN_DEV 
                                ; 
                                ; SET UP THE PARAMETERS FOR COMMAND 
                                ; 
 016D                           GOSET: 
 016D  BE 0015 R                        MOV     SI,OFFSET COMMAND_LINE+1 
                                 
                                        ELSE 
 0170  1E                               PUSH    DS 
 0171  07                               POP     ES 
 0172  8B FE                            MOV     DI,SI 
                                        ENDIF 
                                 
 0174  B1 FF                            MOV     CL,-1 
 0176                           COMTRANLP:                              ; FIND 
				LENGTH OF COMMAND LINE 
 0176  FE C1                            INC     CL 
 0178  AC                               LODSB 
 0179  AA                               STOSB                           ; COPY 
				COMMAND LINE IN 
 017A  0A C0                            OR      AL,AL 
 017C  75 F8                            JNZ     COMTRANLP 
 017E  4F                               DEC     DI 
 017F  B0 0D                            MOV     AL,0DH 
 0181  AA                               STOSB 
                                 
                                        ELSE 
 0182  88 0E 0014 R                     MOV     [COMMAND_LINE],CL       ; Count
				 
                                        ENDIF 
                                 
 0186  0E                               PUSH    CS 
 0187  07                               POP     ES 
                                 
                                        ASSUME  ES:SYSINITSEG 
                                 
 0188  BA 072D R                        MOV     DX,OFFSET COMMND        ; NOW P
				OINTING TO FILE DESCRIPTION 
                                 
                                        ELSE 
 018B  BB 0035 R                        MOV     BX,OFFSET COMEXE 
 018E  8C 4F 04                         MOV     WORD PTR [BX.EXEC0_COM_LINE+2],
				CS 
 0191  8C 4F 08                         MOV     WORD PTR [BX.EXEC0_5C_FCB+2],CS
				 
 0194  8C 4F 0C                         MOV     WORD PTR [BX.EXEC0_6C_FCB+2],CS
Microsoft (R) Macro Assembler  Version 4.00                 12/10/21 03:59:34
BIOS SYSTEM INITIALIZATION                                  Page     1-67
DEVICE TABLE AND SRH DEFINITION                             

				 
                                 
 0197  33 C0                            XOR     AX,AX 
 0199  B4 4B                            MOV     AH,EXEC 
 019B  F9                               STC                             ; IN CA
				SE OF INT 24 
 019C  CD 21                            INT     21H                     ; GO ST
				ART UP COMMAND 
                                        ENDIF 
                                 
 019E                           COMERR: 
 019E  BA 0000 E                        MOV     DX,OFFSET BADCOM        ; WANT 
				TO PRINT COMMAND ERROR 
 01A1  E8 066C R                        CALL    BADFIL 
 01A4  EB FE                    STALL:  JMP     STALL 
                                 
 01A6                           DOCONF: 
 01A6  0E                               PUSH    CS 
 01A7  1F                               POP     DS 
                                 
                                        ASSUME  DS:SYSINITSEG 
                                 
 01A8  BB FFFF                          MOV     BX,0FFFFH 
 01AB  B4 48                            MOV     AH,ALLOC 
 01AD  CD 21                            INT     21H                     ; FIRST
				 TIME FAILS 
 01AF  B4 48                            MOV     AH,ALLOC 
 01B1  CD 21                            INT     21H                     ; SECON
				D TIME GETS IT 
 01B3  A3 004D R                        MOV     [AREA],AX 
                                 
                                        ENDIF 
                                 
 01B6  A3 0049 R                        MOV     [MEMHI],AX 
                                 
 01B9  B8 3700                          MOV     AX,(CHAR_OPER SHL 8)    ; GET S
				WITCH CHARACTER 
 01BC  CD 21                            INT     21H 
 01BE  88 16 0015 R                     MOV     [COMMAND_LINE+1],DL 
                                 
 01C2  BA 0721 R                        MOV     DX,OFFSET CONFIG        ; NOW P
				OINTING TO FILE DESCRIPTION 
 01C5  B8 3D00                          MOV     AX,OPEN SHL 8           ; OPEN 
				FILE "CONFIG.SYS" 
 01C8  F9                               STC                             ; IN CA
				SE OF INT 24 
 01C9  CD 21                            INT     21H                     ; FUNCT
				ION REQUEST 
 01CB  72 03                            JC      ENDFILE 
 01CD  E9 0279 R                        JMP     NOPROB                  ; PROBL
				EM WITH OPEN 
                                 
 01D0                           ENDFILE: 
 01D0  0E                               PUSH    CS 
Microsoft (R) Macro Assembler  Version 4.00                 12/10/21 03:59:34
BIOS SYSTEM INITIALIZATION                                  Page     1-68
DEVICE TABLE AND SRH DEFINITION                             

 01D1  1F                               POP     DS 
 01D2  E8 05EF R                        CALL    ROUND 
 01D5  A0 0013 R                        MOV     AL,[FILES] 
 01D8  2C 05                            SUB     AL,5 
 01DA  76 3B                            JBE     DOBUFF 
 01DC  98                               CBW 
                                 
                                        ENDIF 
                                 
 01DD  8B 1E 0047 R                     MOV     BX,[MEMLO] 
 01E1  8B 16 0049 R                     MOV     DX,[MEMHI] 
 01E5  C5 3E 0003 R                     LDS     DI,[DOSINFO]            ; GET P
				OINTER TO DOS DATA 
 01E9  C5 7D 04                         LDS     DI,[DI+SFT_ADDR]        ; DS:BP
				 POINTS TO SFT 
 01EC  89 1D                            MOV     WORD PTR [DI+SFT_LINK],BX 
 01EE  89 55 02                         MOV     WORD PTR [DI+SFT_LINK+2],DX ; S
				ET POINTER TO NEW SFT 
 01F1  0E                               PUSH    CS 
 01F2  1F                               POP     DS 
 01F3  C4 3E 0047 R                     LES     DI,DWORD PTR [MEMLO]    ; POINT
				 TO NEW SFT 
 01F7  26: C7 05 FFFF                   MOV     WORD PTR ES:[DI+SFT_LINK],-1 
 01FC  26: 89 45 04                     MOV     ES:[DI+SFT_COUNT],AX 
 0200  B3 28                            MOV     BL,SIZE SF_ENTRY 
 0202  F6 E3                            MUL     BL                      ; AX = 
				NUMBER OF BYTES TO CLEAR 
 0204  8B C8                            MOV     CX,AX 
                                 
                                        ELSE 
 0206  01 06 0047 R                     ADD     [MEMLO],AX              ; ALLOC
				ATE MEMORY 
 020A  B8 0006                          MOV     AX,6 
 020D  01 06 0047 R                     ADD     [MEMLO],AX              ; REMEM
				BER THE HEADER TOO 
                                        ENDIF 
                                 
 0211  03 F8                            ADD     DI,AX 
 0213  33 C0                            XOR     AX,AX 
 0215  F3/ AA                           REP     STOSB                   ; CLEAN
				 OUT THE STUFF 
                                 
 0217  E8 05EF R                DOBUFF: CALL    ROUND 
                                 
 021A  FE 0E 0012 R                     DEC     [BUFFERS] 
 021E  74 2F                            JZ      BUF1 
                                 
 0220  1E                               PUSH    DS 
 0221  C4 3E 0047 R                     LES     DI,BUFPTR 
 0225  C5 1E 0003 R                     LDS     BX,DOSINFO 
                                 
                                        ENDIF 
                                 
 0229  8B 47 13                         MOV     AX,WORD PTR [BX.BUFFHEAD] 
Microsoft (R) Macro Assembler  Version 4.00                 12/10/21 03:59:34
BIOS SYSTEM INITIALIZATION                                  Page     1-69
DEVICE TABLE AND SRH DEFINITION                             

 022C  26: 89 05                        MOV     WORD PTR ES:[DI.NEXTBUF],AX 
 022F  8B 47 15                         MOV     AX,WORD PTR [BX.BUFFHEAD+2] 
 0232  26: 89 45 02                     MOV     WORD PTR ES:[DI.NEXTBUF+2],AX 
                                 
 0236  89 7F 13                         MOV     WORD PTR [BX.BUFFHEAD],DI 
 0239  8C 47 15                         MOV     WORD PTR [BX.BUFFHEAD+2],ES 
                                 
 023C  26: C7 45 04 00FF                MOV     WORD PTR ES:[DI.BUFDRV],00FFH  
				 ; NEW BUFFER FREE 
 0242  8B 5F 11                         MOV     BX,[BX.MAXSEC] 
 0245  1F                               POP     DS 
                                 
                                        IF      NOT HIGHMEM 
 0246  83 C3 10                         ADD     BX,BUFINSIZ 
 0249  01 1E 0047 R                     ADD     [MEMLO],BX 
                                        ENDIF 
                                 
 024D  EB C8                            JMP     DOBUFF 
                                 
 024F  E8 05EF R                BUF1:   CALL    ROUND 
 0252  8B 1E 0049 R                     MOV     BX,[MEMHI] 
 0256  A1 004D R                        MOV     AX,[AREA] 
 0259  8E C0                            MOV     ES,AX                   ; CALC 
				WHAT WE NEEDED 
 025B  2B D8                            SUB     BX,AX 
                                 
                                        ENDIF 
                                 
 025D  B4 4A                            MOV     AH,SETBLOCK 
 025F  CD 21                            INT     21H                     ; GIVE 
				THE REST BACK 
                                 
                                        IF      NOT HIGHMEM 
 0261  06                               PUSH    ES 
 0262  8C C0                            MOV     AX,ES 
 0264  48                               DEC     AX 
 0265  8E C0                            MOV     ES,AX 
 0267  26: C7 06 0001 0008              MOV     ES:[arena_owner],8      ; Set i
				mpossible owner 
 026E  07                               POP     ES 
                                        ENDIF 
                                 
                                      ELSE 
                                        ENDIF 
                                        ENDIF 
                                 
 026F  C3                               RET 
                                 
 0270  BA 0000 E                BADOP:  MOV     DX,OFFSET BADOPM        ; WANT 
				TO PRINT COMMAND ERROR 
 0273  E8 068C R                        CALL    PRINT 
 0276  E9 0306 R                        JMP     COFF 
                                 
 0279                           NOPROB:                                 ; GET F
Microsoft (R) Macro Assembler  Version 4.00                 12/10/21 03:59:34
BIOS SYSTEM INITIALIZATION                                  Page     1-70
DEVICE TABLE AND SRH DEFINITION                             

				ILE SIZE (NOTE < 64K!!) 
 0279  8B D8                            MOV     BX,AX 
 027B  33 C9                            XOR     CX,CX 
 027D  33 D2                            XOR     DX,DX 
 027F  B8 4202                          MOV     AX,(LSEEK SHL 8) OR 2 
 0282  CD 21                            INT     21H 
 0284  A3 0043 R                        MOV     [COUNT],AX 
 0287  33 D2                            XOR     DX,DX 
 0289  B8 4200                          MOV     AX,LSEEK SHL 8          ; Reset
				 pointer to beginning of file 
 028C  CD 21                            INT     21H 
 028E  8C CA                            MOV     DX,CS 
                                 
                                        ELSE 
 0290  A1 0043 R                        MOV     AX,[COUNT] 
 0293  05 000F                          ADD     AX,15 
 0296  B1 04                            MOV     CL,4 
 0298  D3 E8                            SHR     AX,CL                   ; NUMBE
				R OF SEGMENTS 
 029A  2B D0                            SUB     DX,AX 
 029C  83 EA 11                         SUB     DX,11H                  ; ROOM 
				FOR HEADER 
                                        ENDIF 
                                 
 029F  8E DA                            MOV     DS,DX 
 02A1  8E C2                            MOV     ES,DX 
                                ASSUME  DS:NOTHING,ES:NOTHING 
 02A3  33 D2                            XOR     DX,DX 
 02A5  36: 8B 0E 0043 R                 MOV     CX,[COUNT] 
 02AA  B4 3F                            MOV     AH,READ 
 02AC  F9                               STC                             ; IN CA
				SE OF INT 24 
 02AD  CD 21                            INT     21H                     ; Funct
				ion request 
 02AF  9C                               PUSHF 
 02B0  0E                               PUSH    CS 
 02B1  1F                               POP     DS 
                                ASSUME  DS:SYSINITSEG 
 02B2  50                               PUSH    AX 
 02B3  B4 3E                            MOV     AH,CLOSE 
 02B5  CD 21                            INT     21H 
 02B7  58                               POP     AX 
 02B8  9D                               POPF 
 02B9  72 04                            JC      CONFERR                 ; IF NO
				T WE'VE GOT A PROBLEM 
 02BB  3B C8                            CMP     CX,AX 
 02BD  74 09                            JZ      GETCOM                  ; COULD
				N'T READ THE FILE 
 02BF                           CONFERR: 
 02BF  BA 0721 R                        MOV     DX,OFFSET CONFIG        ; WANT 
				TO PRINT CONFIG ERROR 
 02C2  E8 066C R                        CALL    BADFIL 
 02C5  E9 01D0 R                ENDFILV:JMP     ENDFILE 
                                 
Microsoft (R) Macro Assembler  Version 4.00                 12/10/21 03:59:34
BIOS SYSTEM INITIALIZATION                                  Page     1-71
DEVICE TABLE AND SRH DEFINITION                             

 02C8                           GETCOM: 
 02C8  E8 0532 R                        CALL    ORGANIZE                ; ORGAN
				IZE THE FILE 
 02CB  E8 0519 R                        CALL    GETCHR 
                                 
 02CE  72 F5                    CONFLP: JC      ENDFILV 
 02D0  8A E0                            MOV     AH,AL 
 02D2  E8 0519 R                        CALL    GETCHR 
                                 
 02D5  80 FC 42                         CMP     AH,'B'                  ; BUFFE
				R COMMAND? 
 02D8  75 0F                            JNZ     TRYC 
 02DA  E8 063D R                        CALL    GETNUM 
 02DD  74 27                            JZ      COFF 
 02DF  3D 0064                          CMP     AX,100 
 02E2  73 8C                            JAE     badop 
 02E4  A2 0012 R                        MOV     [BUFFERS],AL 
 02E7  EB 1D                            JMP     SHORT COFF 
                                 
 02E9  80 FC 43                 TRYC:   CMP     AH,'C' 
 02EC  74 03                            JZ      GOTC 
 02EE  EB 1D 90                         JMP     TRYD 
 02F1                           GOTC: 
 02F1  3C 4F                            CMP     AL,'O'                  ; FIRST
				 LETTER OF "ON" 
 02F3  75 11                            JNZ     COFF 
 02F5  E8 0519 R                        CALL    GETCHR 
 02F8  72 CB                            JC      ENDFILV 
 02FA  3C 4E                            CMP     AL,'N'                  ; SECON
				D LETTER OF "ON" 
 02FC  75 08                            JNZ     COFF 
 02FE  B4 33                            MOV     AH,SET_CTRL_C_TRAPPING  ; TURN 
				ON CONTROL-C CHECK 
 0300  B0 01                            MOV     AL,1 
 0302  8A D0                            MOV     DL,AL 
 0304  CD 21                            INT     21H 
                                 
 0306  0E                       COFF:   PUSH    CS 
 0307  1F                               POP     DS 
 0308  E8 05C7 R                        CALL    NEWLINE 
 030B  EB C1                            JMP     CONFLP 
                                 
 030D  80 FC 44                 TRYD:   CMP     AH,'D' 
 0310  74 03                            JZ      GOTD 
 0312  E9 049A R                        JMP     TRYF 
 0315  8C CB                    GOTD:   MOV     BX,CS 
 0317  8E DB                            MOV     DS,BX 
                                 
 0319  89 36 0061 R                     MOV     WORD PTR [BPB_ADDR],SI 
 031D  8C 06 0063 R                     MOV     WORD PTR [BPB_ADDR+2],ES 
                                 
 0321  E8 05EF R                        CALL    ROUND 
                                 
                                        ENDIF 
Microsoft (R) Macro Assembler  Version 4.00                 12/10/21 03:59:34
BIOS SYSTEM INITIALIZATION                                  Page     1-72
DEVICE TABLE AND SRH DEFINITION                             

                                 
 0324  33 C0                            XOR     AX,AX 
 0326  A3 0007 R                        MOV     WORD PTR [ENTRY_POINT],AX 
 0329  A1 0049 R                        MOV     AX,[MEMHI] 
 032C  A3 0009 R                        MOV     WORD PTR [ENTRY_POINT+2],AX ; S
				ET ENTRY POINT 
                                 
                                 
                                        IF      NOT NOEXEC 
 032F  A3 004B R                        MOV     [LDOFF],AX              ; SET L
				OAD OFFSET 
                                        ENDIF 
                                 
 0332  06                               PUSH    ES 
 0333  1F                               POP     DS 
 0334  8B D6                            MOV     DX,SI                   ; DS:DX
				 POINTS TO FILE NAME 
                                 
                                        ELSE 
 0336  8E C3                            MOV     ES,BX 
 0338  BB 0049 R                        MOV     BX,OFFSET PRMBLK        ; ES:BX
				 POINTS TO PARAMETERS 
 033B  B0 03                            MOV     AL,3 
 033D  B4 4B                            MOV     AH,EXEC 
 033F  F9                               STC                             ; IN CA
				SE OF INT 24 
 0340  CD 21                            INT     21H                     ; LOAD 
				IN THE DEVICE DRIVER 
                                        ENDIF 
                                 
 0342  1E                               PUSH    DS 
 0343  07                               POP     ES                      ; ES:SI
				 BACK TO CONFIG.SYS 
 0344  0E                               PUSH    CS 
 0345  1F                               POP     DS                      ; DS BA
				CK TO SYSINIT 
 0346  73 05                            JNC     GOODLD 
 0348  E8 0670 R                BADBRK: CALL    BADLOAD 
 034B  EB B9                            JMP     COFF 
                                 
 034D  06                       GOODLD: PUSH    ES                      ; INITI
				ALIZE THE DEVICE 
 034E  56                               PUSH    SI 
                                 
 034F  0E                               PUSH    CS 
 0350  07                               POP     ES 
 0351  BB 0006                          MOV     BX,SDEVSTRAT 
 0354  E8 060A R                        CALL    CALLDEV 
 0357  BB 0008                          MOV     BX,SDEVINT 
 035A  E8 060A R                        CALL    CALLDEV 
                                 
 035D  0E                               PUSH    CS 
 035E  1F                               POP     DS 
                                 
Microsoft (R) Macro Assembler  Version 4.00                 12/10/21 03:59:34
BIOS SYSTEM INITIALIZATION                                  Page     1-73
DEVICE TABLE AND SRH DEFINITION                             

                                        IF      NOT HIGHMEM 
 035F  A1 005F R                        MOV     AX,WORD PTR [BREAK_ADDR+2]  ; R
				EMOVE THE INIT CODE 
 0362  3B 06 000F R                     CMP     AX,[MEMORY_SIZE] 
 0366  72 04                            JB      BREAKOK 
 0368  5E                               POP     SI 
 0369  07                               POP     ES 
 036A  EB DC                            JMP     BADBRK 
 036C                           BREAKOK: 
                                 
 036C  A3 0049 R                        MOV     [MEMHI],AX 
 036F  A1 005D R                        MOV     AX,WORD PTR [BREAK_ADDR]; REMOV
				E THE INIT CODE 
 0372  A3 0047 R                        MOV     [MEMLO],AX 
                                        ENDIF 
                                 
 0375  C5 16 0007 R                     LDS     DX,[ENTRY_POINT]        ; SET D
				S:DX TO HEADER 
 0379  8B F2                            MOV     SI,DX 
 037B  83 C6 04                         ADD     SI,SDEVATT              ; DS:SI
				 POINTS TO ATTRIBUTES 
 037E  2E: C4 3E 0003 R                 LES     DI,CS:[DOSINFO]         ; ES:DI
				 POINT TO DOS INFO 
 0383  8B 04                            MOV     AX,DS:[SI]              ; GET A
				TTRIBUTES 
 0385  A9 8000                          TEST    AX,DEVTYP               ; TEST 
				IF BLOCK DEV 
 0388  74 1D                            JZ      ISBLOCK 
                                 
 038A  A9 0001                          TEST    AX,ISCIN                ; IS IT
				 A CONSOLE IN? 
 038D  74 08                            JZ      TRYCLK 
 038F  26: 89 55 0C                     MOV     WORD PTR ES:[DI.BCON],DX 
 0393  26: 8C 5D 0E                     MOV     WORD PTR ES:[DI.BCON+2],DS 
                                 
 0397  A9 0008                  TRYCLK: TEST    AX,ISCLOCK              ; IS IT
				 A CLOCK DEVICE? 
 039A  74 08                            JZ      GOLINK 
 039C  26: 89 55 08                     MOV     WORD PTR ES:[DI+BCLOCK],DX 
 03A0  26: 8C 5D 0A                     MOV     WORD PTR ES:[DI+BCLOCK+2],DS 
 03A4  E9 044B R                GOLINK: JMP     LINKIT 
                                 
 03A7                           ISBLOCK: 
 03A7  2E: A0 005C R                    MOV     AL,CS:[UNITCOUNT]       ; IF NO
				 UNITS FOUND.... 
 03AB  0A C0                            OR      AL,AL 
 03AD  75 0D                            JNZ     PERDRV 
                                 
                                        IF      NOT HIGHMEM 
 03AF  2E: C7 06 0047 R 0000            MOV     CS:[MEMLO],0            ; ...ER
				ASE THE DEVICE 
                                        ENDIF 
                                 
 03B6  B8 FFFF                          MOV     AX,-1 
Microsoft (R) Macro Assembler  Version 4.00                 12/10/21 03:59:34
BIOS SYSTEM INITIALIZATION                                  Page     1-74
DEVICE TABLE AND SRH DEFINITION                             

 03B9  E9 0470 R                        JMP     ENDDEV 
                                 
 03BC                           PERDRV: 
 03BC  98                               CBW 
 03BD  8B C8                            MOV     CX,AX 
 03BF  8A F4                            MOV     DH,AH 
 03C1  26: 8A 55 10                     MOV     DL,ES:[DI.NUMIO]        ; GET N
				UMBER OF DEVICES 
 03C5  26: 00 45 10                     ADD     ES:[DI.NUMIO],AL        ; UPDAT
				E THE AMOUNT 
                                 
 03C9  2E: C5 1E 0061 R                 LDS     BX,CS:[BPB_ADDR]        ; POINT
				 TO BPB ARRAY 
 03CE                           PERUNIT: 
 03CE  2E: C4 2E 0003 R                 LES     BP,CS:[DOSINFO] 
 03D3  26: C4 6E 00                     LES     BP,DWORD PTR ES:[BP.DPBHEAD]; G
				ET FIRST DPB 
                                 
 03D7  26: 83 7E 18 FF          SCANDPB:CMP     WORD PTR ES:[BP.DPB_NEXT_DPB],-
				1 
 03DC  74 06                            JZ      FOUNDPB 
 03DE  26: C4 6E 18                     LES     BP,ES:[BP.DPB_NEXT_DPB] 
 03E2  EB F3                            JMP     SCANDPB 
 03E4                           FOUNDPB: 
 03E4  2E: A1 0047 R                    MOV     AX,CS:[MEMLO] 
 03E8  26: 89 46 18                     MOV     WORD PTR ES:[BP.DPB_NEXT_DPB],A
				X 
                                 
                                        ENDIF 
                                 
 03EC  2E: A1 0049 R                    MOV     AX,CS:[MEMHI] 
 03F0  26: 89 46 1A                     MOV     WORD PTR ES:[BP.DPB_NEXT_DPB+2]
				,AX 
 03F4  2E: C4 2E 0047 R                 LES     BP,DWORD PTR CS:[MEMLO] 
                                 
                                        IF      NOT HIGHMEM 
 03F9  2E: 83 06 0047 R 5E              ADD     WORD PTR CS:[MEMLO],DPBSIZ 
                                        ENDIF 
                                 
 03FF  26: C7 46 18 FFFF                MOV     WORD PTR ES:[BP.DPB_NEXT_DPB],-
				1 
 0405  26: C6 46 17 FF                  MOV     ES:[BP.DPB_FIRST_ACCESS],-1 
                                 
 040A  8B 37                            MOV     SI,[BX]                 ; DS:SI
				 POINTS TO BPB 
 040C  43                               INC     BX 
 040D  43                               INC     BX                      ; POINT
				 TO NEXT GUY 
 040E  26: 89 56 00                     MOV     WORD PTR ES:[BP.DPB_DRIVE],DX 
 0412  B4 53                            MOV     AH,SETDPB               ; HIDDE
				N SYSTEM CALL 
 0414  CD 21                            INT     21H 
 0416  26: 8B 46 02                     MOV     AX,ES:[BP.DPB_SECTOR_SIZE] 
 041A  06                               PUSH    ES 
Microsoft (R) Macro Assembler  Version 4.00                 12/10/21 03:59:34
BIOS SYSTEM INITIALIZATION                                  Page     1-75
DEVICE TABLE AND SRH DEFINITION                             

 041B  2E: C4 3E 0003 R                 LES     DI,CS:[DOSINFO]         ; ES:DI
				 POINT TO DOS INFO 
 0420  26: 3B 45 11                     CMP     AX,ES:[DI.MAXSEC] 
 0424  07                               POP     ES 
 0425  76 0E                            JBE     NOTMAX 
 0427  5E                               POP     SI 
 0428  07                               POP     ES 
 0429  BA 0000 E                        MOV     DX,OFFSET BADSIZ_PRE 
 042C  BB 0000 E                        MOV     BX,OFFSET BADSIZ_POST 
 042F  E8 0676 R                        CALL    PRNERR 
 0432  E9 0306 R                        JMP     COFF 
                                 
 0435  1E                       NOTMAX: PUSH    DS 
 0436  52                               PUSH    DX 
 0437  2E: C5 16 0007 R                 LDS     DX,CS:[ENTRY_POINT] 
 043C  26: 89 56 12                     MOV     WORD PTR ES:[BP.DPB_DRIVER_ADDR
				],DX 
 0440  26: 8C 5E 14                     MOV     WORD PTR ES:[BP.DPB_DRIVER_ADDR
				+2],DS 
 0444  5A                               POP     DX 
 0445  1F                               POP     DS 
 0446  42                               INC     DX 
 0447  FE C6                            INC     DH 
 0449  E2 83                            LOOP    PERUNIT 
                                 
 044B                           LINKIT: 
 044B  2E: C4 3E 0003 R                 LES     DI,CS:[DOSINFO]         ; ES:DI
				 = DOS TABLE 
 0450  26: 8B 4D 17                     MOV     CX,WORD PTR ES:[DI.DEVHEAD] ; D
				X:CX = HEAD OF LIST 
 0454  26: 8B 55 19                     MOV     DX,WORD PTR ES:[DI.DEVHEAD+2] 
                                 
 0458  2E: C5 36 0007 R                 LDS     SI,CS:[ENTRY_POINT]     ; DS:SI
				 = DEVICE LOCATION 
 045D  26: 89 75 17                     MOV     WORD PTR ES:[DI.DEVHEAD],SI ; S
				ET HEAD OF LIST IN DOS 
 0461  26: 8C 5D 19                     MOV     WORD PTR ES:[DI.DEVHEAD+2],DS 
 0465  8B 04                            MOV     AX,DS:[SI]              ; GET P
				OINTER TO NEXT DEVICE 
 0467  2E: A3 0007 R                    MOV     WORD PTR CS:[ENTRY_POINT],AX; A
				ND SAVE IT 
                                 
 046B  89 0C                            MOV     WORD PTR DS:[SI],CX     ; LINK 
				IN THE DRIVER 
 046D  89 54 02                         MOV     WORD PTR DS:[SI+2],DX 
 0470                           ENDDEV: 
 0470  5E                               POP     SI 
 0471  07                               POP     ES 
 0472  40                               INC     AX                      ; AX = 
				FFFF? 
 0473  74 03                            JZ      COFFV 
 0475  E9 034D R                        JMP     GOODLD                  ; OTHER
				WISE PRETEND WE LOADED IT IN 
 0478  E9 0306 R                COFFV:  JMP     COFF 
Microsoft (R) Macro Assembler  Version 4.00                 12/10/21 03:59:34
BIOS SYSTEM INITIALIZATION                                  Page     1-76
DEVICE TABLE AND SRH DEFINITION                             

                                 
 047B                           TRYQ: 
 047B  80 FC 51                         CMP     AH,'Q' 
 047E  75 2E                            JNZ     TRYW 
 0480  E8 063D R                        CALL    GETNUM 
 0483  74 F3                            JZ      COFFV 
 0485  0A E4                            OR      AH,AH 
 0487  75 EF                            JNZ     COFFV 
 0489  B4 38                            MOV     AH,INTERNATIONAL        ; AL is
				 country code 
 048B  BA FFFF                          MOV     DX,-1                   ; Set c
				ountry 
 048E  CD 21                            INT     21H 
 0490  73 E6                            JNC     COFFV 
 0492  BA 0000 E                        MOV     DX,OFFSET BADCOUNTRY 
 0495  E8 068C R                        CALL    PRINT 
 0498  EB DE                            JMP     COFFV 
                                 
 049A                           TRYF: 
 049A  80 FC 46                         CMP     AH,'F' 
 049D  75 DC                            JNZ     TRYQ 
 049F  E8 063D R                        CALL    GETNUM 
 04A2  74 D4                            JZ      COFFV 
 04A4  3D 0064                          CMP     AX,100 
 04A7  73 5B                            JAE     TryX 
 04A9  A2 0013 R                        MOV     [FILES],AL 
 04AC  EB CA                            JMP     COFFV 
 04AE                           TRYW: 
 04AE  80 FC 57                         CMP     AH,'W' 
 04B1  75 0E                            JNZ     TRYA 
 04B3  8A D0                            MOV     DL,AL 
 04B5  B8 3701                          MOV     AX,(CHAR_OPER SHL 8) OR 1   ; S
				ET SWITCH CHARACTER 
 04B8  88 16 0015 R                     MOV     [COMMAND_LINE+1],DL 
 04BC  CD 21                            INT     21H 
 04BE  E9 0306 R                        JMP     COFF 
                                 
 04C1                           TRYA: 
 04C1  80 FC 41                         CMP     AH,'A' 
 04C4  75 0E                            JNZ     TRYS 
 04C6  3C 46                            CMP     AL,'F'                  ; FIRST
				 LETTER OF "FALSE" 
 04C8  75 07                            JNZ     COFFJ 
 04CA  B8 3703                          MOV     AX,(CHAR_OPER SHL 8) OR 3   ; T
				URN ON "/DEV" PREFIX 
 04CD  32 D2                            XOR     DL,DL 
 04CF  CD 21                            INT     21H 
 04D1  E9 0306 R                COFFJ:  JMP     COFF 
                                 
 04D4                           TRYS: 
 04D4  80 FC 53                         CMP     AH,'S' 
 04D7  75 2B                            JNZ     TRYX 
 04D9  C6 06 0015 R 00                  MOV     [COMMAND_LINE+1],0 
 04DE  BF 072E R                        MOV     DI,OFFSET COMMND + 1 
Microsoft (R) Macro Assembler  Version 4.00                 12/10/21 03:59:34
BIOS SYSTEM INITIALIZATION                                  Page     1-77
DEVICE TABLE AND SRH DEFINITION                             

 04E1  88 45 FF                         MOV     [DI-1],AL 
 04E4                           STORESHELL: 
 04E4  E8 0519 R                        CALL    GETCHR 
 04E7  0A C0                            OR      AL,AL 
 04E9  74 1C                            JZ      GETSHPARMS 
 04EB  3C 20                            CMP     AL," " 
 04ED  72 05                            JB      ENDSH 
 04EF  88 05                            MOV     [DI],AL 
 04F1  47                               INC     DI 
 04F2  EB F0                            JMP     STORESHELL 
                                 
 04F4                           ENDSH: 
 04F4  C6 05 00                         MOV     BYTE PTR [DI],0 
 04F7  E8 0519 R                        CALL    GETCHR 
 04FA  3C 0A                            CMP     AL,10 
 04FC  75 03                            JNZ     CONV 
 04FE  E8 0519 R                        CALL    GETCHR 
 0501  E9 02CE R                CONV:   JMP     CONFLP 
                                 
 0504                           TRYX: 
 0504  E9 0270 R                        JMP     BADOP 
                                 
 0507                           GETSHPARMS: 
 0507  C6 05 00                         MOV     BYTE PTR [DI],0 
 050A  BF 0015 R                        MOV     DI,OFFSET COMMAND_LINE+1 
 050D                           PARMLOOP: 
 050D  E8 0519 R                        CALL    GETCHR 
 0510  3C 20                            CMP     AL," " 
 0512  72 E0                            JB      ENDSH 
 0514  88 05                            MOV     [DI],AL 
 0516  47                               INC     DI 
 0517  EB F4                            JMP     PARMLOOP 
                                 
 0519  8B 0E 0043 R             GETCHR: MOV     CX,COUNT 
 051D  E3 11                            JCXZ    NOCHAR 
 051F  8B 36 0045 R                     MOV     SI,CHRPTR 
 0523  26: 8A 04                        MOV     AL,ES:[SI] 
 0526  FF 0E 0043 R                     DEC     COUNT 
 052A  FF 06 0045 R                     INC     CHRPTR 
 052E  F8                               CLC 
 052F  C3                               RET 
 0530  F9                       NOCHAR: STC 
 0531  C3                               RET 
                                 
 0532                           ORGANIZE: 
 0532  8B 0E 0043 R                     MOV     CX,[COUNT] 
 0536  E3 F8                            JCXZ    NOCHAR 
 0538  E8 05D4 R                        CALL    MAPCASE 
 053B  33 F6                            XOR     SI,SI 
 053D  8B FE                            MOV     DI,SI 
                                 
 053F  E8 059B R                ORG1:   CALL    GET                     ; SKIP 
				LEADING CONTROL CHARACTERS 
 0542  3C 20                            CMP     AL,' ' 
Microsoft (R) Macro Assembler  Version 4.00                 12/10/21 03:59:34
BIOS SYSTEM INITIALIZATION                                  Page     1-78
DEVICE TABLE AND SRH DEFINITION                             

 0544  72 F9                            JB      ORG1 
                                 
 0546  51                               PUSH    CX 
 0547  56                               PUSH    SI 
 0548  57                               PUSH    DI 
 0549  8B EE                            MOV     BP,SI 
 054B  4D                               DEC     BP 
 054C  BE 073A R                        MOV     SI,OFFSET COMTAB        ; Prepa
				re to search command table 
 054F  B5 00                            MOV     CH,0 
 0551                           FINDCOM: 
 0551  8B FD                            MOV     DI,BP 
 0553  8A 0C                            MOV     CL,[SI] 
 0555  46                               INC     SI 
 0556  E3 0E                            JCXZ    NOCOM 
 0558  F3/ A6                           REPE    CMPSB 
 055A  9F                               LAHF 
 055B  03 F1                            ADD     SI,CX                   ; Bump 
				to next position without affecting flags 
 055D  9E                               SAHF 
 055E  AC                               LODSB                           ; Get i
				ndicator letter 
 055F  75 F0                            JNZ     FINDCOM 
 0561  5F                               POP     DI 
 0562  5E                               POP     SI 
 0563  59                               POP     CX 
 0564  EB 05                            JMP     SHORT GOTCOM 
                                 
 0566                           NOCOM: 
 0566  5F                               POP     DI 
 0567  5E                               POP     SI 
 0568  59                               POP     CX 
 0569  B0 5A                            MOV     AL,'Z' 
 056B  AA                       GOTCOM: STOSB                           ; SAVE 
				INDICATOR CHAR IN BUFFER 
                                 
 056C  E8 0593 R                ORG2:   CALL    GET2                    ; SKIP 
				NAME UNTIL DELIMETER 
 056F  E8 05A8 R                        CALL    DELIM                   ; 
 0572  75 F8                            JNZ     ORG2 
                                 
 0574  E8 059B R                        CALL    GET                     ; GET C
				HARS TO RIGHT OF EQUALS SIGN 
 0577  AA                               STOSB 
                                 
 0578  E8 0593 R                ORG4:   CALL    GET2 
 057B  AA                               STOSB 
 057C  3C 20                            CMP     AL,' ' 
 057E  77 F8                            JA      ORG4 
 0580  3C 0A                            CMP     AL,10 
 0582  74 BB                            JZ      ORG1 
                                 
 0584  26: C6 45 FF 00                  MOV     BYTE PTR ES:[DI-1],0 
 0589  E8 0593 R                ORG5:   CALL    GET2 
Microsoft (R) Macro Assembler  Version 4.00                 12/10/21 03:59:34
BIOS SYSTEM INITIALIZATION                                  Page     1-79
DEVICE TABLE AND SRH DEFINITION                             

 058C  AA                               STOSB 
 058D  3C 0A                            CMP     AL,10 
 058F  75 F8                            JNZ     ORG5 
 0591  EB AC                            JMP     ORG1 
                                 
 0593                           GET2: 
 0593  E3 26                            JCXZ    NOGET 
 0595  26: 8A 04                        MOV     AL,ES:[SI] 
 0598  46                               INC     SI 
 0599  49                               DEC     CX 
 059A  C3                               RET 
                                 
 059B  E3 1E                    GET:    JCXZ    NOGET 
 059D  26: 8A 04                        MOV     AL,ES:[SI] 
 05A0  46                               INC     SI 
 05A1  49                               DEC     CX 
 05A2  E8 05A8 R                        CALL    DELIM 
 05A5  74 F4                            JZ      GET 
 05A7  C3                       GRET:   RET 
                                 
                                 
 05A8  3C 20                    DELIM:  CMP     AL,' ' 
 05AA  74 FB                            JZ      GRET 
 05AC  3C 09                            CMP     AL,9 
 05AE  74 F7                            JZ      GRET 
 05B0  3C 3D                            CMP     AL,'=' 
 05B2  74 F3                            JZ      GRET 
 05B4  3C 2C                            CMP     AL,',' 
 05B6  74 EF                            JZ      GRET 
 05B8  3C 3B                            CMP     AL,';' 
 05BA  C3                               RET 
                                 
                                 
 05BB  59                       NOGET:  POP     CX 
 05BC  89 3E 0043 R                     MOV     COUNT,DI 
 05C0  33 F6                            XOR     SI,SI 
 05C2  89 36 0045 R                     MOV     CHRPTR,SI 
 05C6  C3                               RET 
                                ; 
                                ;  NEWLINE RETURNS WITH FIRST CHARACTER OF NEXT
				 LINE 
                                ; 
 05C7  E8 0519 R                NEWLINE:CALL    GETCHR                  ; SKIP 
				NON-CONTROL CHARACTERS 
 05CA  72 07                            JC      NONEW 
 05CC  3C 0A                            CMP     AL,10                   ; LOOK 
				FOR LINE FEED 
 05CE  75 F7                            JNZ     NEWLINE 
 05D0  E8 0519 R                        CALL    GETCHR 
 05D3  C3                       NONEW:  RET 
                                 
 05D4                           MAPCASE: 
 05D4  51                               PUSH    CX 
 05D5  56                               PUSH    SI 
Microsoft (R) Macro Assembler  Version 4.00                 12/10/21 03:59:34
BIOS SYSTEM INITIALIZATION                                  Page     1-80
DEVICE TABLE AND SRH DEFINITION                             

 05D6  1E                               PUSH    DS 
 05D7  06                               PUSH    ES 
 05D8  1F                               POP     DS 
 05D9  33 F6                            XOR     SI,SI 
 05DB                           CONVLOOP: 
 05DB  AC                               LODSB 
                                 
                                        ENDIF 
                                 
 05DC  3C 61                            CMP     AL,'a' 
 05DE  72 09                            JB      NOCONV 
 05E0  3C 7A                            CMP     AL,'z' 
 05E2  77 05                            JA      NOCONV 
 05E4  2C 20                            SUB     AL,20H 
 05E6  88 44 FF                         MOV     [SI-1],AL 
 05E9                           NOCONV: 
 05E9  E2 F0                            LOOP    CONVLOOP 
 05EB                           CONVDONE: 
 05EB  1F                               POP     DS 
 05EC  5E                               POP     SI 
 05ED  59                               POP     CX 
 05EE  C3                               RET 
                                 
                                        ENDIF 
                                 
                                ASSUME DS:NOTHING 
                                 
 05EF  36: A1 0047 R            ROUND:  MOV     AX,[MEMLO] 
                                 
                                        IF      NOT HIGHMEM 
 05F3  05 000F                          ADD     AX,15 
                                        ENDIF 
                                 
 05F6  D1 E8                            SHR     AX,1 
 05F8  D1 E8                            SHR     AX,1 
 05FA  D1 E8                            SHR     AX,1 
 05FC  D1 E8                            SHR     AX,1 
 05FE  36: 01 06 0049 R                 ADD     [MEMHI],AX 
 0603  33 C0                            XOR     AX,AX 
 0605  36: A3 0047 R                    MOV     [MEMLO],AX 
 0609  C3                               RET 
                                 
 060A  2E: 8E 1E 0009 R         CALLDEV:MOV     DS,WORD PTR CS:[ENTRY_POINT+2] 
 060F  2E: 03 1E 0007 R                 ADD     BX,WORD PTR CS:[ENTRY_POINT]; D
				o a little relocation 
 0614  8B 07                            MOV     AX,DS:[BX] 
 0616  2E: FF 36 0007 R                 PUSH    WORD PTR CS:[ENTRY_POINT] 
 061B  2E: A3 0007 R                    MOV     WORD PTR CS:[ENTRY_POINT],AX 
 061F  BB 004F R                        MOV     BX,OFFSET PACKET 
 0622  36: FF 1E 0007 R                 CALL    [ENTRY_POINT] 
 0627  2E: 8F 06 0007 R                 POP     WORD PTR CS:[ENTRY_POINT] 
 062C  C3                               RET 
                                 
 062D  58                       BADNUM: POP     AX                      ; POP R
Microsoft (R) Macro Assembler  Version 4.00                 12/10/21 03:59:34
BIOS SYSTEM INITIALIZATION                                  Page     1-81
DEVICE TABLE AND SRH DEFINITION                             

				ETURN ADDRESS 
 062E  E9 0270 R                        JMP     BADOP 
                                 
 0631                           ToDigit: 
 0631  2C 30                            SUB     AL,'0' 
 0633  72 06                            JB      NotDig 
 0635  3C 09                            CMP     AL,9 
 0637  77 02                            JA      NotDig 
 0639  F8                               CLC 
 063A  C3                               RET 
 063B  F9                       NotDig: STC 
 063C  C3                               RET 
                                 
 063D  33 DB                    GETNUM: XOR     BX,BX                   ; runni
				ng count is zero 
 063F  E8 0631 R                B2:     CALL    ToDigit                 ; do we
				 have a digit 
 0642  72 E9                            JC      BadNum                  ; no, b
				omb 
 0644  93                               XCHG    AX,BX                   ; put t
				otal in AX 
 0645  53                               PUSH    BX                      ; save 
				digit 
 0646  BB 000A                          MOV     BX,10                   ; base 
				of arithmetic 
 0649  F7 E3                            MUL     BX                      ; shift
				 by one decimal digit 
 064B  5B                               POP     BX                      ; get b
				ack digit 
 064C  02 C3                            ADD     AL,BL                   ; get t
				otal 
 064E  80 D4 00                         ADC     AH,0                    ; make 
				that 16 bits 
 0651  72 DA                            JC      BADNUM                  ; too b
				ig a number 
 0653  93                               XCHG    AX,BX                   ; stash
				 total 
 0654  E8 0519 R                        CALL    GETCHR                  ; GET N
				EXT DIGIT 
 0657  72 0E                            JC      B1                      ; no mo
				re characters 
 0659  0A C0                            OR      AL,AL                   ; end o
				f line separator? 
 065B  75 E2                            JNZ     B2                      ; no, t
				ry as a valid character 
 065D  36: FF 06 0043 R                 INC     COUNT                   ; one m
				ore character to scan 
 0662  36: FF 0E 0045 R                 DEC     CHRPTR                  ; back 
				up over separator 
 0667  8B C3                    B1:     MOV     AX,BX                   ; get p
				roper count 
 0669  0B C0                            OR      AX,AX 
 066B  C3                               RET 
                                ; 
Microsoft (R) Macro Assembler  Version 4.00                 12/10/21 03:59:34
BIOS SYSTEM INITIALIZATION                                  Page     1-82
DEVICE TABLE AND SRH DEFINITION                             

                                ;       ES:SI POINTS TO FILE NAME (NUL TERMINAT
				ED) 
                                ;       DS:DX POINTS TO STRING TO OUTPUT IN FRO
				NT OF NAME ($ TERM) 
                                ; 
 066C                           BADFIL: 
 066C  0E                               PUSH    CS 
 066D  07                               POP     ES 
 066E  8B F2                            MOV     SI,DX 
 0670                           BADLOAD: 
 0670  BA 0000 E                        MOV     DX,OFFSET BADLD_PRE     ; WANT 
				TO PRINT CONFIG ERROR 
 0673  BB 0000 E                        MOV     BX,OFFSET BADLD_POST 
 0676                           PRNERR: 
 0676  0E                               PUSH    CS 
 0677  1F                               POP     DS 
 0678  B4 09                            MOV     AH,STD_CON_STRING_OUTPUT 
 067A  CD 21                            INT     21H 
 067C  26: 8A 14                PRN1:   MOV     DL,ES:[SI] 
 067F  0A D2                            OR      DL,DL 
 0681  74 07                            JZ      PRN2 
 0683  B4 02                            MOV     AH,STD_CON_OUTPUT 
 0685  CD 21                            INT     21H 
 0687  46                               INC     SI 
 0688  EB F2                            JMP     PRN1 
 068A  8B D3                    PRN2:   MOV     DX,BX 
 068C  B4 09                    PRINT:  MOV     AH,STD_CON_STRING_OUTPUT 
 068E  CD 21                            INT     21H 
 0690  C3                               RET 
                                ; 
                                ; LOAD FILE CALLED [DS:DX] AT MEMORY LOCATION E
				S:BX 
                                ; 
 0691                           LDFIL: 
 0691  50                               PUSH    AX 
 0692  53                               PUSH    BX 
 0693  51                               PUSH    CX 
 0694  52                               PUSH    DX 
 0695  56                               PUSH    SI 
 0696  1E                               PUSH    DS 
 0697  53                               PUSH    BX 
                                 
 0698  33 C0                            XOR     AX,AX                   ; OPEN 
				THE FILE 
 069A  B4 3D                            MOV     AH,OPEN 
 069C  F9                               STC                             ; IN CA
				SE OF INT 24 
 069D  CD 21                            INT     21H 
 069F  5A                               POP     DX                      ; Trans
				 addr is DS:DX 
 06A0  72 1E                            JC      LDRET 
                                 
 06A2  06                               PUSH    ES                      ; READ 
				THE FILE IN 
Microsoft (R) Macro Assembler  Version 4.00                 12/10/21 03:59:34
BIOS SYSTEM INITIALIZATION                                  Page     1-83
DEVICE TABLE AND SRH DEFINITION                             

 06A3  1F                               POP     DS 
 06A4  8B D8                            MOV     BX,AX                   ; Handl
				e in BX 
 06A6  B9 FF00                          MOV     CX,0FF00H 
 06A9  B4 3F                            MOV     AH,READ 
 06AB  F9                               STC                             ; IN CA
				SE OF INT 24 
 06AC  CD 21                            INT     21H 
 06AE  72 10                            JC      LDRET 
 06B0  8B F2                            MOV     SI,DX                   ; CHECK
				 FOR EXE FILE 
 06B2  81 3C 5A4D                       CMP     WORD PTR [SI],"ZM" 
 06B6  75 03                            JNZ     LDCLS 
 06B8  F9                       LDERR:  STC 
 06B9  EB 05                            JMP     SHORT LDRET 
                                 
 06BB  B4 3E                    LDCLS:  MOV     AH,CLOSE                ; CLOSE
				 THE FILE 
 06BD  F9                               STC 
 06BE  CD 21                            INT     21H 
                                 
 06C0  1F                       LDRET:  POP     DS 
 06C1  5E                               POP     SI 
 06C2  5A                               POP     DX 
 06C3  59                               POP     CX 
 06C4  5B                               POP     BX 
 06C5  58                               POP     AX 
 06C6  C3                               RET 
                                ; 
                                ;  OPEN DEVICE POINTED TO BY DX, AL HAS ACCESS 
				CODE 
                                ;   IF UNABLE TO OPEN DO A DEVICE OPEN NULL DEV
				ICE INSTEAD 
                                ; 
 06C7                           OPEN_DEV: 
 06C7  E8 06E4 R                        CALL    OPEN_FILE 
 06CA  73 07                            JNC     OPEN_DEV3 
 06CC                           OPEN_DEV1: 
 06CC  BA 06FD R                        MOV     DX,OFFSET NULDEV 
 06CF  E8 06E4 R                        CALL    OPEN_FILE 
 06D2                           OPEN_DEV2: 
 06D2  C3                               RET 
 06D3                           OPEN_DEV3: 
 06D3  33 C0                            XOR     AX,AX                   ; GET D
				EVICE INFO 
 06D5  B4 44                            MOV     AH,IOCTL 
 06D7  CD 21                            INT     21H 
 06D9  F6 C2 80                         TEST    DL,10000000B 
 06DC  75 F4                            JNZ     OPEN_DEV2 
 06DE  B4 3E                            MOV     AH,CLOSE 
 06E0  CD 21                            INT     21H 
 06E2  EB E8                            JMP     OPEN_DEV1 
                                 
 06E4                           OPEN_FILE: 
Microsoft (R) Macro Assembler  Version 4.00                 12/10/21 03:59:34
BIOS SYSTEM INITIALIZATION                                  Page     1-84
DEVICE TABLE AND SRH DEFINITION                             

 06E4  B4 3D                            MOV     AH,OPEN 
 06E6  F9                               STC 
 06E7  CD 21                            INT     21H 
 06E9  C3                               RET 
                                 
 06EA  83 C4 06                 INT24:  ADD     SP,6                    ; RESTO
				RE MACHINE STATE 
 06ED  58                               POP     AX 
 06EE  5B                               POP     BX 
 06EF  59                               POP     CX 
 06F0  5A                               POP     DX 
 06F1  5E                               POP     SI 
 06F2  5F                               POP     DI 
 06F3  5D                               POP     BP 
 06F4  1F                               POP     DS 
 06F5  07                               POP     ES 
 06F6  50                               PUSH    AX 
 06F7  B4 19                            MOV     AH,GET_DEFAULT_DRIVE    ; INITI
				ALIZE DOS 
 06F9  CD 21                            INT     21H 
 06FB  58                               POP     AX 
 06FC  CF                               IRET                            ; BACK 
				TO USER 
                                 
                                        ENDIF 
                                 
 06FD  5C 44 45 56 5C 4E 55     NULDEV  DB      "\DEV\NUL",0 
       4C 00                    
 0706  5C 44 45 56 5C 43 4F     CONDEV  DB      "\DEV\CON",0 
       4E 00                    
 070F  5C 44 45 56 5C 41 55     AUXDEV  DB      "\DEV\AUX",0 
       58 00                    
 0718  5C 44 45 56 5C 50 52     PRNDEV  DB      "\DEV\PRN",0 
       4E 00                    
                                 
 0721  5C 43 4F 4E 46 49 47     CONFIG  DB      "\CONFIG.SYS",0 
       2E 53 59 53 00           
                                 
 072D  5C 43 4F 4D 4D 41 4E     COMMND  DB      "\COMMAND.COM",0 
       44 2E 43 4F 4D 00        
                                 
 073A                           COMTAB  LABEL   BYTE 
 073A  07 42 55 46 46 45 52             DB      7,"BUFFERS",'B' 
       53 42                    
 0743  05 42 52 45 41 4B 43             DB      5,"BREAK",'C' 
 074A  05 53 48 45 4C 4C 53             DB      5,"SHELL",'S' 
 0751  06 44 45 56 49 43 45             DB      6,"DEVICE",'D' 
       44                       
 0759  05 46 49 4C 45 53 46             DB      5,"FILES",'F' 
 0760  08 53 57 49 54 43 48             DB      8,"SWITCHAR",'W' 
       41 52 57                 
 076A  08 41 56 41 49 4C 44             DB      8,"AVAILDEV",'A' 
       45 56 41                 
 0774  07 43 4F 55 4E 54 52             DB      7,"COUNTRY",'Q' 
Microsoft (R) Macro Assembler  Version 4.00                 12/10/21 03:59:34
BIOS SYSTEM INITIALIZATION                                  Page     1-85
DEVICE TABLE AND SRH DEFINITION                             

       59 51                    
 077D  00                               DB      0 
                                 
                                 
 077E                           SYSINITSEG      ENDS 
                                        END 

Microsoft (R) Macro Assembler  Version 4.00                 12/10/21 03:59:34
BIOS SYSTEM INITIALIZATION                                  Symbols-1
                                                             

Macros:

		N a m e			Lines

BREAK  . . . . . . . . . . . . .  	   2
CONDRET  . . . . . . . . . . . .  	  19
CONTEXT  . . . . . . . . . . . .  	   3
DO_EXT . . . . . . . . . . . . .  	   0
ENTRY  . . . . . . . . . . . . .  	   2
ERROR  . . . . . . . . . . . . .  	   4
INVOKE . . . . . . . . . . . . .  	   8
I_AM . . . . . . . . . . . . . .  	  14
I_NEED . . . . . . . . . . . . .  	  11
JUMP . . . . . . . . . . . . . .  	  17
LONG_ADDR  . . . . . . . . . . .  	   7
MAKELAB  . . . . . . . . . . . .  	   4
PROCEDURE  . . . . . . . . . . .  	   2
RETC . . . . . . . . . . . . . .  	   1
RETNC  . . . . . . . . . . . . .  	   1
RETNZ  . . . . . . . . . . . . .  	   1
RETURN . . . . . . . . . . . . .  	   5
RETZ . . . . . . . . . . . . . .  	   1
SHORT_ADDR . . . . . . . . . . .  	  12
TRANSFER . . . . . . . . . . . .  	   8

Structures and Records:

                N a m e                 Width   # fields
                                        Shift   Width   Mask    Initial

ARENA  . . . . . . . . . . . . .  	0005	0003
  ARENA_SIGNATURE  . . . . . . .  	0000
  ARENA_OWNER  . . . . . . . . .  	0001
  ARENA_SIZE . . . . . . . . . .  	0003
BPBLOCK  . . . . . . . . . . . .  	000D	0008
  BPSECSZ  . . . . . . . . . . .  	0000
  BPCLUS . . . . . . . . . . . .  	0002
  BPRES  . . . . . . . . . . . .  	0003
  BPFTCNT  . . . . . . . . . . .  	0005
  BPDRCNT  . . . . . . . . . . .  	0006
  BPSCCNT  . . . . . . . . . . .  	0008
  BPMEDIA  . . . . . . . . . . .  	000A
  BPFTSEC  . . . . . . . . . . .  	000B
BUFFINFO . . . . . . . . . . . .  	0010	0009
  NEXTBUF  . . . . . . . . . . .  	0000
  BUFDRV . . . . . . . . . . . .  	0004
  BUFDIRTY . . . . . . . . . . .  	0005
  BUFPRI . . . . . . . . . . . .  	0006
  VISIT  . . . . . . . . . . . .  	0007
  BUFSECNO . . . . . . . . . . .  	0008
  BUFWRTCNT  . . . . . . . . . .  	000A
  BUFWRTINC  . . . . . . . . . .  	000B
  BUFDRVDP . . . . . . . . . . .  	000C
DIR_ENTRY  . . . . . . . . . . .  	0020	0008
Microsoft (R) Macro Assembler  Version 4.00                 12/10/21 03:59:34
BIOS SYSTEM INITIALIZATION                                  Symbols-2
                                                             

  DIR_NAME . . . . . . . . . . .  	0000
  DIR_ATTR . . . . . . . . . . .  	000B
  DIR_PAD  . . . . . . . . . . .  	000C
  DIR_TIME . . . . . . . . . . .  	0016
  DIR_DATE . . . . . . . . . . .  	0018
  DIR_FIRST  . . . . . . . . . .  	001A
  DIR_SIZE_L . . . . . . . . . .  	001C
  DIR_SIZE_H . . . . . . . . . .  	001E
DPB  . . . . . . . . . . . . . .  	005E	0012
  DPB_DRIVE  . . . . . . . . . .  	0000
  DPB_UNIT . . . . . . . . . . .  	0001
  DPB_SECTOR_SIZE  . . . . . . .  	0002
  DPB_CLUSTER_MASK . . . . . . .  	0004
  DPB_CLUSTER_SHIFT  . . . . . .  	0005
  DPB_FIRST_FAT  . . . . . . . .  	0006
  DPB_FAT_COUNT  . . . . . . . .  	0008
  DPB_ROOT_ENTRIES . . . . . . .  	0009
  DPB_FIRST_SECTOR . . . . . . .  	000B
  DPB_MAX_CLUSTER  . . . . . . .  	000D
  DPB_FAT_SIZE . . . . . . . . .  	000F
  DPB_DIR_SECTOR . . . . . . . .  	0010
  DPB_DRIVER_ADDR  . . . . . . .  	0012
  DPB_MEDIA  . . . . . . . . . .  	0016
  DPB_FIRST_ACCESS . . . . . . .  	0017
  DPB_NEXT_DPB . . . . . . . . .  	0018
  DPB_CURRENT_DIR  . . . . . . .  	001C
  DPB_DIR_TEXT . . . . . . . . .  	001E
EXEC0  . . . . . . . . . . . . .  	000E	0004
  EXEC0_ENVIRON  . . . . . . . .  	0000
  EXEC0_COM_LINE . . . . . . . .  	0002
  EXEC0_5C_FCB . . . . . . . . .  	0006
  EXEC0_6C_FCB . . . . . . . . .  	000A
EXEC1  . . . . . . . . . . . . .  	0016	0008
  EXEC1_ENVIRON  . . . . . . . .  	0000
  EXEC1_COM_LINE . . . . . . . .  	0002
  EXEC1_5C_FCB . . . . . . . . .  	0006
  EXEC1_6C_FCB . . . . . . . . .  	000A
  EXEC1_SP . . . . . . . . . . .  	000E
  EXEC1_SS . . . . . . . . . . .  	0010
  EXEC1_IP . . . . . . . . . . .  	0012
  EXEC1_CS . . . . . . . . . . .  	0014
EXEC3  . . . . . . . . . . . . .  	0004	0002
  EXEC3_LOAD_ADDR  . . . . . . .  	0000
  EXEC3_RELOC_FAC  . . . . . . .  	0002
EXE_FILE . . . . . . . . . . . .  	0020	000F
  EXE_SIGNATURE  . . . . . . . .  	0000
  EXE_LEN_MOD_512  . . . . . . .  	0002
  EXE_PAGES  . . . . . . . . . .  	0004
  EXE_RLE_COUNT  . . . . . . . .  	0006
  EXE_PAR_DIR  . . . . . . . . .  	0008
  EXE_MIN_BSS  . . . . . . . . .  	000A
  EXE_MAX_BSS  . . . . . . . . .  	000C
  EXE_SS . . . . . . . . . . . .  	000E
  EXE_SP . . . . . . . . . . . .  	0010
Microsoft (R) Macro Assembler  Version 4.00                 12/10/21 03:59:34
BIOS SYSTEM INITIALIZATION                                  Symbols-3
                                                             

  EXE_CHKSUM . . . . . . . . . .  	0012
  EXE_IP . . . . . . . . . . . .  	0014
  EXE_CS . . . . . . . . . . . .  	0016
  EXE_RLE_TABLE  . . . . . . . .  	0018
  EXE_IOV  . . . . . . . . . . .  	001A
  EXE_SYM_TAB  . . . . . . . . .  	001C
FIND_BUF . . . . . . . . . . . .  	002B	000C
  FIND_BUF_SATTR . . . . . . . .  	0000
  FIND_BUF_DRIVE . . . . . . . .  	0001
  FIND_BUF_NAME  . . . . . . . .  	0002
  FIND_BUF_LASTENT . . . . . . .  	000D
  FIND_BUF_THISDPB . . . . . . .  	000F
  FIND_BUF_DIRSTART  . . . . . .  	0013
  FIND_BUF_ATTR  . . . . . . . .  	0015
  FIND_BUF_TIME  . . . . . . . .  	0016
  FIND_BUF_DATE  . . . . . . . .  	0018
  FIND_BUF_SIZE_L  . . . . . . .  	001A
  FIND_BUF_SIZE_H  . . . . . . .  	001C
  FIND_BUF_PNAME . . . . . . . .  	001E
INTERNAT_BLOCK . . . . . . . . .  	0018	0015
  DATE_TIM_FORMAT  . . . . . . .  	0000
  CURRENCY_SYM . . . . . . . . .  	0002
  THOUS_SEP  . . . . . . . . . .  	0007
  DECIMAL_SEP  . . . . . . . . .  	0009
  DATE_SEP . . . . . . . . . . .  	000B
  TIME_SEP . . . . . . . . . . .  	000D
  BIT_FEILD  . . . . . . . . . .  	000F
  CURRENCY_CENTS . . . . . . . .  	0010
  TIME_24  . . . . . . . . . . .  	0011
  MAP_CALL . . . . . . . . . . .  	0012
  DATA_SEP . . . . . . . . . . .  	0016
PROCESS_DATA_BLOCK . . . . . . .  	005B	000E
  PDB_EXIT_CALL  . . . . . . . .  	0000
  PDB_BLOCK_LEN  . . . . . . . .  	0002
  PDB_CPM_CALL . . . . . . . . .  	0005
  PDB_EXIT . . . . . . . . . . .  	000A
  PDB_CTRL_C . . . . . . . . . .  	000E
  PDB_FATAL_ABORT  . . . . . . .  	0012
  PDB_PARENT_PID . . . . . . . .  	0016
  PDB_JFN_TABLE  . . . . . . . .  	0018
  PDB_ENVIRON  . . . . . . . . .  	002C
  PDB_USER_STACK . . . . . . . .  	002E
  PDB_PAD1 . . . . . . . . . . .  	0032
  PDB_CALL_SYSTEM  . . . . . . .  	0050
  PDB_PAD2 . . . . . . . . . . .  	0055
SFT  . . . . . . . . . . . . . .  	0008	0003
  SFT_LINK . . . . . . . . . . .  	0000
  SFT_COUNT  . . . . . . . . . .  	0004
  SFT_TABLE  . . . . . . . . . .  	0006
SF_ENTRY . . . . . . . . . . . .  	0028	0004
  SF_REF_COUNT . . . . . . . . .  	0000
  SF_MODE  . . . . . . . . . . .  	0001
  SF_ATTR  . . . . . . . . . . .  	0002
  SF_FCB . . . . . . . . . . . .  	0003
Microsoft (R) Macro Assembler  Version 4.00                 12/10/21 03:59:34
BIOS SYSTEM INITIALIZATION                                  Symbols-4
                                                             

SRHEAD . . . . . . . . . . . . .  	000D	0005
  REQLEN . . . . . . . . . . . .  	0000
  REQUNIT  . . . . . . . . . . .  	0001
  REQFUNC  . . . . . . . . . . .  	0002
  REQSTAT  . . . . . . . . . . .  	0003
SYMBOL_ENTRY . . . . . . . . . .  	0106	0004
  SYM_VALUE  . . . . . . . . . .  	0000
  SYM_TYPE . . . . . . . . . . .  	0004
  SYM_LEN  . . . . . . . . . . .  	0006
  SYM_NAME . . . . . . . . . . .  	0007
SYSDEV . . . . . . . . . . . . .  	0012	0005
  SDEVNEXT . . . . . . . . . . .  	0000
  SDEVATT  . . . . . . . . . . .  	0004
  SDEVSTRAT  . . . . . . . . . .  	0006
  SDEVINT  . . . . . . . . . . .  	0008
  SDEVNAME . . . . . . . . . . .  	000A
SYSINITVAR . . . . . . . . . . .  	001B	0008
  DPBHEAD  . . . . . . . . . . .  	0000
  SFT_ADDR . . . . . . . . . . .  	0004
  BCLOCK . . . . . . . . . . . .  	0008
  BCON . . . . . . . . . . . . .  	000C
  NUMIO  . . . . . . . . . . . .  	0010
  MAXSEC . . . . . . . . . . . .  	0011
  BUFFHEAD . . . . . . . . . . .  	0013
  DEVHEAD  . . . . . . . . . . .  	0017
SYS_FCB  . . . . . . . . . . . .  	0025	0010
  FCB_DRIVE  . . . . . . . . . .  	0000
  FCB_NAME . . . . . . . . . . .  	0001
  FCB_EXT  . . . . . . . . . . .  	0009
  FCB_EXTENT . . . . . . . . . .  	000C
  FCB_RECSIZ . . . . . . . . . .  	000E
  FCB_FILSIZ . . . . . . . . . .  	0010
  FCB_DRVBP  . . . . . . . . . .  	0012
  FCB_FDATE  . . . . . . . . . .  	0014
  FCB_FTIME  . . . . . . . . . .  	0016
  FCB_DEVID  . . . . . . . . . .  	0018
  FCB_FIRCLUS  . . . . . . . . .  	0019
  FCB_CLUSPOS  . . . . . . . . .  	001B
  FCB_LSTCLUS  . . . . . . . . .  	001D
  FCB_NR . . . . . . . . . . . .  	0020
  FCB_RR . . . . . . . . . . . .  	0021
USER_ENVIRON . . . . . . . . . .  	0018	000C
  USER_AX  . . . . . . . . . . .  	0000
  USER_BX  . . . . . . . . . . .  	0002
  USER_CX  . . . . . . . . . . .  	0004
  USER_DX  . . . . . . . . . . .  	0006
  USER_SI  . . . . . . . . . . .  	0008
  USER_DI  . . . . . . . . . . .  	000A
  USER_BP  . . . . . . . . . . .  	000C
  USER_DS  . . . . . . . . . . .  	000E
  USER_ES  . . . . . . . . . . .  	0010
  USER_IP  . . . . . . . . . . .  	0012
  USER_CS  . . . . . . . . . . .  	0014
  USER_F . . . . . . . . . . . .  	0016
Microsoft (R) Macro Assembler  Version 4.00                 12/10/21 03:59:34
BIOS SYSTEM INITIALIZATION                                  Symbols-5
                                                             


Segments and Groups:

                N a m e         	Size	Align	Combine Class

SYSINITSEG . . . . . . . . . . .  	077E	PARA	PUBLIC	'SYSTEM'

Symbols:            

                N a m e         	Type	Value	Attr         

AAA  . . . . . . . . . . . . . .  	F PROC	00B0	SYSINITSEG	Length = 0001
ABORT  . . . . . . . . . . . . .  	Number	0000	
ADDR_INT_ABORT . . . . . . . . .  	Number	0080	
ADDR_INT_COMMAND . . . . . . . .  	Number	0084	
ADDR_INT_CTRL_C  . . . . . . . .  	Number	008C	
ADDR_INT_DISK_READ . . . . . . .  	Number	0094	
ADDR_INT_DISK_WRITE  . . . . . .  	Number	0098	
ADDR_INT_FASTCON . . . . . . . .  	Number	00A4	
ADDR_INT_FATAL_ABORT . . . . . .  	Number	0090	
ADDR_INT_KEEP_PROCESS  . . . . .  	Number	009C	
ADDR_INT_SPOOLER . . . . . . . .  	Number	00A0	
ADDR_INT_TERMINATE . . . . . . .  	Number	0088	
ALLOC  . . . . . . . . . . . . .  	Number	0048	
ALLOCOPER  . . . . . . . . . . .  	Number	0058	
ALLOC_ARENA_TRASHED  . . . . . .  	Alias	 ERROR_ARENA_TRASHED		
ALLOC_NOT_ENOUGH_MEMORY  . . . .  	Alias	 ERROR_NOT_ENOUGH_MEMORY		
ALTVECT  . . . . . . . . . . . .  	Alias	 FALSE		
AREA . . . . . . . . . . . . . .  	L WORD 	004D	SYSINITSEG
ARENA_OWNER_SYSTEM . . . . . . .  	Number	0000	
ARENA_SIGNATURE_END  . . . . . .  	Number	005A	
ARENA_SIGNATURE_NORMAL . . . . .  	Number	004D	
ASSIGNOPER . . . . . . . . . . .  	Number	005F	
ATTR_ALL . . . . . . . . . . . .  	Number	0016	
ATTR_ARCHIVE . . . . . . . . . .  	Number	0020	
ATTR_CHANGEABLE  . . . . . . . .  	Number	0027	
ATTR_DIRECTORY . . . . . . . . .  	Number	0010	
ATTR_HIDDEN  . . . . . . . . . .  	Number	0002	
ATTR_IGNORE  . . . . . . . . . .  	Number	0021	
ATTR_READ_ONLY . . . . . . . . .  	Number	0001	
ATTR_SYSTEM  . . . . . . . . . .  	Number	0004	
ATTR_VOLUME_ID . . . . . . . . .  	Number	0008	
AUXDEV . . . . . . . . . . . . .  	L BYTE 	070F	SYSINITSEG

B1 . . . . . . . . . . . . . . .  	L NEAR	0667	SYSINITSEG
B2 . . . . . . . . . . . . . . .  	L NEAR	063F	SYSINITSEG
BADBRK . . . . . . . . . . . . .  	L NEAR	0348	SYSINITSEG
BADCOM . . . . . . . . . . . . .  	V BYTE 	0000	SYSINITSEG	External
BADCOUNTRY . . . . . . . . . . .  	V BYTE 	0000	SYSINITSEG	External
BADFIL . . . . . . . . . . . . .  	L NEAR	066C	SYSINITSEG
BADLD_POST . . . . . . . . . . .  	V BYTE 	0000	SYSINITSEG	External
BADLD_PRE  . . . . . . . . . . .  	V BYTE 	0000	SYSINITSEG	External
BADLOAD  . . . . . . . . . . . .  	L NEAR	0670	SYSINITSEG
BADNUM . . . . . . . . . . . . .  	L NEAR	062D	SYSINITSEG
Microsoft (R) Macro Assembler  Version 4.00                 12/10/21 03:59:34
BIOS SYSTEM INITIALIZATION                                  Symbols-6
                                                             

BADOP  . . . . . . . . . . . . .  	L NEAR	0270	SYSINITSEG
BADOPM . . . . . . . . . . . . .  	V BYTE 	0000	SYSINITSEG	External
BADSIZ_POST  . . . . . . . . . .  	V BYTE 	0000	SYSINITSEG	External
BADSIZ_PRE . . . . . . . . . . .  	V BYTE 	0000	SYSINITSEG	External
BPB_ADDR . . . . . . . . . . . .  	L DWORD	0061	SYSINITSEG
BREAKOK  . . . . . . . . . . . .  	L NEAR	036C	SYSINITSEG
BREAK_ADDR . . . . . . . . . . .  	L DWORD	005D	SYSINITSEG
BUF1 . . . . . . . . . . . . . .  	L NEAR	024F	SYSINITSEG
BUFFERS  . . . . . . . . . . . .  	L BYTE 	0012	SYSINITSEG	Global
BUFINSIZ . . . . . . . . . . . .  	Number	0010	
BUFPTR . . . . . . . . . . . . .  	L DWORD	0047	SYSINITSEG

CALLDEV  . . . . . . . . . . . .  	L NEAR	060A	SYSINITSEG
CHAR_OPER  . . . . . . . . . . .  	Number	0037	
CHDIR  . . . . . . . . . . . . .  	Number	003B	
CHDIR_PATH_NOT_FOUND . . . . . .  	Alias	 ERROR_PATH_NOT_FOUND		
CHMOD  . . . . . . . . . . . . .  	Number	0043	
CHMOD_ACCESS_DENIED  . . . . . .  	Alias	 ERROR_ACCESS_DENIED		
CHMOD_INVALID_FUNCTION . . . . .  	Alias	 ERROR_INVALID_FUNCTION		
CHMOD_PATH_NOT_FOUND . . . . . .  	Alias	 ERROR_PATH_NOT_FOUND		
CHRPTR . . . . . . . . . . . . .  	L WORD 	0045	SYSINITSEG
CLOSE  . . . . . . . . . . . . .  	Number	003E	
CLOSE_INVALID_FUNCTION . . . . .  	Alias	 ERROR_INVALID_FUNCTION		
CLOSE_INVALID_HANDLE . . . . . .  	Alias	 ERROR_INVALID_HANDLE		
COFF . . . . . . . . . . . . . .  	L NEAR	0306	SYSINITSEG
COFFJ  . . . . . . . . . . . . .  	L NEAR	04D1	SYSINITSEG
COFFV  . . . . . . . . . . . . .  	L NEAR	0478	SYSINITSEG
COMERR . . . . . . . . . . . . .  	L NEAR	019E	SYSINITSEG
COMEXE . . . . . . . . . . . . .  	L 000E	0035	SYSINITSEG
COMMAND_LINE . . . . . . . . . .  	L BYTE 	0014	SYSINITSEG
COMMND . . . . . . . . . . . . .  	L BYTE 	072D	SYSINITSEG
COMTAB . . . . . . . . . . . . .  	L BYTE 	073A	SYSINITSEG
COMTRANLP  . . . . . . . . . . .  	L NEAR	0176	SYSINITSEG
CONDEV . . . . . . . . . . . . .  	L BYTE 	0706	SYSINITSEG
CONFERR  . . . . . . . . . . . .  	L NEAR	02BF	SYSINITSEG
CONFIG . . . . . . . . . . . . .  	L BYTE 	0721	SYSINITSEG
CONFLP . . . . . . . . . . . . .  	L NEAR	02CE	SYSINITSEG
CONV . . . . . . . . . . . . . .  	L NEAR	0501	SYSINITSEG
CONVDONE . . . . . . . . . . . .  	L NEAR	05EB	SYSINITSEG
CONVLOOP . . . . . . . . . . . .  	L NEAR	05DB	SYSINITSEG
COUNT  . . . . . . . . . . . . .  	L WORD 	0043	SYSINITSEG
COUNTRY_NOT_FOUND  . . . . . . .  	Alias	 ERROR_FILE_NOT_FOUND		
CREAT  . . . . . . . . . . . . .  	Number	003C	
CREATENEWFILE  . . . . . . . . .  	Number	005B	
CREATETEMPFILE . . . . . . . . .  	Number	005A	
CREATE_PROCESS_DATA_BLOCK  . . .  	Number	0026	
CREAT_ACCESS_DENIED  . . . . . .  	Alias	 ERROR_ACCESS_DENIED		
CREAT_PATH_NOT_FOUND . . . . . .  	Alias	 ERROR_PATH_NOT_FOUND		
CREAT_TOO_MANY_OPEN_FILES  . . .  	Alias	 ERROR_TOO_MANY_OPEN_FILES		
CRLFM  . . . . . . . . . . . . .  	V BYTE 	0000	SYSINITSEG	External
CURDIR_INVALID_DRIVE . . . . . .  	Alias	 ERROR_INVALID_DRIVE		
CURRENT_DIR  . . . . . . . . . .  	Number	0047	
CURRENT_DOS_LOCATION . . . . . .  	L WORD 	0005	SYSINITSEG	Global
C_BS . . . . . . . . . . . . . .  	Number	0008	
Microsoft (R) Macro Assembler  Version 4.00                 12/10/21 03:59:34
BIOS SYSTEM INITIALIZATION                                  Symbols-7
                                                             

C_CR . . . . . . . . . . . . . .  	Number	000D	
C_DEL  . . . . . . . . . . . . .  	Number	007F	
C_ETB  . . . . . . . . . . . . .  	Number	0017	
C_ETX  . . . . . . . . . . . . .  	Number	0003	
C_HT . . . . . . . . . . . . . .  	Number	0009	
C_LF . . . . . . . . . . . . . .  	Number	000A	
C_NAK  . . . . . . . . . . . . .  	Number	0015	

DBPBHL . . . . . . . . . . . . .  	Number	0016	
DEALLOC  . . . . . . . . . . . .  	Number	0049	
DEALLOC_ARENA_TRASHED  . . . . .  	Alias	 ERROR_ARENA_TRASHED		
DEALLOC_INVALID_BLOCK  . . . . .  	Alias	 ERROR_INVALID_BLOCK		
DEFAULT_DRIVE  . . . . . . . . .  	L BYTE 	0011	SYSINITSEG	Global
DELIM  . . . . . . . . . . . . .  	L NEAR	05A8	SYSINITSEG
DEVBPB . . . . . . . . . . . . .  	Number	0002	
DEVICE_LIST  . . . . . . . . . .  	L DWORD	000B	SYSINITSEG	Global
DEVID_BLOCK_DEV  . . . . . . . .  	Number	001F	
DEVID_DEVICE . . . . . . . . . .  	Number	0080	
DEVID_DEVICE_CLOCK . . . . . . .  	Number	0008	
DEVID_DEVICE_CON_IN  . . . . . .  	Number	0001	
DEVID_DEVICE_CON_OUT . . . . . .  	Number	0002	
DEVID_DEVICE_EOF . . . . . . . .  	Number	0040	
DEVID_DEVICE_NULL  . . . . . . .  	Number	0004	
DEVID_DEVICE_RAW . . . . . . . .  	Number	0020	
DEVID_DEVICE_SPECIAL . . . . . .  	Number	0010	
DEVID_EOF  . . . . . . . . . . .  	Number	0040	
DEVID_FILE_CLEAN . . . . . . . .  	Number	0040	
DEVID_FILE_MASK_DRIVE  . . . . .  	Number	003F	
DEVID_ISCIN  . . . . . . . . . .  	Number	0001	
DEVID_ISCLK  . . . . . . . . . .  	Number	0008	
DEVID_ISCOT  . . . . . . . . . .  	Number	0002	
DEVID_ISDEV  . . . . . . . . . .  	Number	0080	
DEVID_ISNUL  . . . . . . . . . .  	Number	0004	
DEVID_RAW  . . . . . . . . . . .  	Number	0020	
DEVID_SPECIAL  . . . . . . . . .  	Number	0010	
DEVIFL . . . . . . . . . . . . .  	Number	0007	
DEVINIT  . . . . . . . . . . . .  	Number	0000	
DEVIOCTL . . . . . . . . . . . .  	Number	4000	
DEVIST . . . . . . . . . . . . .  	Number	0006	
DEVMDCH  . . . . . . . . . . . .  	Number	0001	
DEVOFL . . . . . . . . . . . . .  	Number	000B	
DEVOST . . . . . . . . . . . . .  	Number	000A	
DEVRD  . . . . . . . . . . . . .  	Number	0004	
DEVRDIOCTL . . . . . . . . . . .  	Number	0003	
DEVRDND  . . . . . . . . . . . .  	Number	0005	
DEVTYP . . . . . . . . . . . . .  	Number	8000	
DEVWRIOCTL . . . . . . . . . . .  	Number	000C	
DEVWRT . . . . . . . . . . . . .  	Number	0008	
DEVWRTV  . . . . . . . . . . . .  	Number	0009	
DFLSHL . . . . . . . . . . . . .  	Number	000F	
DINITHL  . . . . . . . . . . . .  	Number	001A	
DIRPRI . . . . . . . . . . . . .  	Number	000F	
DIRSTRLEN  . . . . . . . . . . .  	Number	0040	
DIR_SEARCH_FIRST . . . . . . . .  	Number	0011	
Microsoft (R) Macro Assembler  Version 4.00                 12/10/21 03:59:34
BIOS SYSTEM INITIALIZATION                                  Symbols-8
                                                             

DIR_SEARCH_NEXT  . . . . . . . .  	Number	0012	
DISK_RESET . . . . . . . . . . .  	Number	000D	
DMEDHL . . . . . . . . . . . . .  	Number	000F	
DOBUFF . . . . . . . . . . . . .  	L NEAR	0217	SYSINITSEG
DOCONF . . . . . . . . . . . . .  	L NEAR	01A6	SYSINITSEG
DOSINFO  . . . . . . . . . . . .  	L DWORD	0003	SYSINITSEG
DOSSIZE  . . . . . . . . . . . .  	Number	5000	
DOS_MAJOR_VERSION  . . . . . . .  	Number	0002	
DOS_MINOR_VERSION  . . . . . . .  	Number	000B	
DPBSIZ . . . . . . . . . . . . .  	Number	005E	
DRDNDHL  . . . . . . . . . . . .  	Number	000E	
DRDWRHL  . . . . . . . . . . . .  	Number	0016	
DSKSIZ . . . . . . . . . . . . .  	Number	000D	
DSTATHL  . . . . . . . . . . . .  	Number	000D	
DUP2_INVALID_HANDLE  . . . . . .  	Alias	 ERROR_INVALID_HANDLE		
DUP_INVALID_HANDLE . . . . . . .  	Alias	 ERROR_INVALID_HANDLE		
DUP_PDB  . . . . . . . . . . . .  	Number	0055	
DUP_TOO_MANY_OPEN_FILES  . . . .  	Alias	 ERROR_TOO_MANY_OPEN_FILES		

ENDDEV . . . . . . . . . . . . .  	L NEAR	0470	SYSINITSEG
ENDFILE  . . . . . . . . . . . .  	L NEAR	01D0	SYSINITSEG
ENDFILV  . . . . . . . . . . . .  	L NEAR	02C5	SYSINITSEG
ENDSH  . . . . . . . . . . . . .  	L NEAR	04F4	SYSINITSEG
ENTRYPOINT . . . . . . . . . . .  	Number	00C0	
ENTRY_POINT  . . . . . . . . . .  	L DWORD	0007	SYSINITSEG
ERROR_ACCESS_DENIED  . . . . . .  	Number	0005	
ERROR_ARENA_TRASHED  . . . . . .  	Number	0007	
ERROR_BAD_ENVIRONMENT  . . . . .  	Number	000A	
ERROR_BAD_FORMAT . . . . . . . .  	Number	000B	
ERROR_CURRENT_DIRECTORY  . . . .  	Number	0010	
ERROR_FILE_NOT_FOUND . . . . . .  	Number	0002	
ERROR_INVALID_ACCESS . . . . . .  	Number	000C	
ERROR_INVALID_BLOCK  . . . . . .  	Number	0009	
ERROR_INVALID_DATA . . . . . . .  	Number	000D	
ERROR_INVALID_DRIVE  . . . . . .  	Number	000F	
ERROR_INVALID_FUNCTION . . . . .  	Number	0001	
ERROR_INVALID_HANDLE . . . . . .  	Number	0006	
ERROR_NOT_ENOUGH_MEMORY  . . . .  	Number	0008	
ERROR_NOT_SAME_DEVICE  . . . . .  	Number	0011	
ERROR_NO_MORE_FILES  . . . . . .  	Number	0012	
ERROR_PATH_NOT_FOUND . . . . . .  	Number	0003	
ERROR_TOO_MANY_OPEN_FILES  . . .  	Number	0004	
EXEC . . . . . . . . . . . . . .  	Number	004B	
EXEC_BAD_ENVIRONMENT . . . . . .  	Alias	 ERROR_BAD_ENVIRONMENT		
EXEC_BAD_FORMAT  . . . . . . . .  	Alias	 ERROR_BAD_FORMAT		
EXEC_FILE_NOT_FOUND  . . . . . .  	Alias	 ERROR_FILE_NOT_FOUND		
EXEC_FUNC_NO_EXECUTE . . . . . .  	Number	0001	
EXEC_FUNC_OVERLAY  . . . . . . .  	Number	0002	
EXEC_INVALID_FUNCTION  . . . . .  	Alias	 ERROR_INVALID_FUNCTION		
EXEC_NOT_ENOUGH_MEMORY . . . . .  	Alias	 ERROR_NOT_ENOUGH_MEMORY		
EXE_VALID_OLD_SIGNATURE  . . . .  	Number	4D5A	
EXE_VALID_SIGNATURE  . . . . . .  	Number	5A4D	
EXIT . . . . . . . . . . . . . .  	Number	004C	
EXIT_ABORT . . . . . . . . . . .  	Number	0000	
Microsoft (R) Macro Assembler  Version 4.00                 12/10/21 03:59:34
BIOS SYSTEM INITIALIZATION                                  Symbols-9
                                                             

EXIT_CTRL_C  . . . . . . . . . .  	Number	0001	
EXIT_HARD_ERROR  . . . . . . . .  	Number	0002	
EXIT_KEEP_PROCESS  . . . . . . .  	Number	0003	
EXIT_TERMINATE . . . . . . . . .  	Number	0000	

FALSE  . . . . . . . . . . . . .  	Number	0000	
FATPRI . . . . . . . . . . . . .  	Number	001E	
FCB_CLOSE  . . . . . . . . . . .  	Number	0010	
FCB_CREATE . . . . . . . . . . .  	Number	0016	
FCB_DELETE . . . . . . . . . . .  	Number	0013	
FCB_OPEN . . . . . . . . . . . .  	Number	000F	
FCB_RANDOM_READ  . . . . . . . .  	Number	0021	
FCB_RANDOM_READ_BLOCK  . . . . .  	Number	0027	
FCB_RANDOM_WRITE . . . . . . . .  	Number	0022	
FCB_RANDOM_WRITE_BLOCK . . . . .  	Number	0028	
FCB_RENAME . . . . . . . . . . .  	Number	0017	
FCB_SEQ_READ . . . . . . . . . .  	Number	0014	
FCB_SEQ_WRITE  . . . . . . . . .  	Number	0015	
FILDIRENT  . . . . . . . . . . .  	Number	0010	
FILES  . . . . . . . . . . . . .  	L BYTE 	0013	SYSINITSEG	Global
FILETIMES_INVALID_FUNCTION . . .  	Alias	 ERROR_INVALID_FUNCTION		
FILETIMES_INVALID_HANDLE . . . .  	Alias	 ERROR_INVALID_HANDLE		
FILE_TIMES . . . . . . . . . . .  	Number	0057	
FILPERPROC . . . . . . . . . . .  	Number	0014	
FINAL_DOS_LOCATION . . . . . . .  	L WORD 	0009	SYSINITSEG	Global
FINDCOM  . . . . . . . . . . . .  	L NEAR	0551	SYSINITSEG
FINDFIRST_FILE_NOT_FOUND . . . .  	Alias	 ERROR_FILE_NOT_FOUND		
FINDFIRST_NO_MORE_FILES  . . . .  	Alias	 ERROR_NO_MORE_FILES		
FINDNEXT_NO_MORE_FILES . . . . .  	Alias	 ERROR_NO_MORE_FILES		
FIND_FIRST . . . . . . . . . . .  	Number	004E	
FIND_NEXT  . . . . . . . . . . .  	Number	004F	
FOUNDPB  . . . . . . . . . . . .  	L NEAR	03E4	SYSINITSEG
FREEPRI  . . . . . . . . . . . .  	Number	0000	

GET  . . . . . . . . . . . . . .  	L NEAR	059B	SYSINITSEG
GET2 . . . . . . . . . . . . . .  	L NEAR	0593	SYSINITSEG
GETCHR . . . . . . . . . . . . .  	L NEAR	0519	SYSINITSEG
GETCOM . . . . . . . . . . . . .  	L NEAR	02C8	SYSINITSEG
GETEXTENDEDERROR . . . . . . . .  	Number	0059	
GETNUM . . . . . . . . . . . . .  	L NEAR	063D	SYSINITSEG
GETSHPARMS . . . . . . . . . . .  	L NEAR	0507	SYSINITSEG
GET_CURRENT_PDB  . . . . . . . .  	Number	0051	
GET_DATE . . . . . . . . . . . .  	Number	002A	
GET_DEFAULT_DPB  . . . . . . . .  	Number	001F	
GET_DEFAULT_DRIVE  . . . . . . .  	Number	0019	
GET_DMA  . . . . . . . . . . . .  	Number	002F	
GET_DPB  . . . . . . . . . . . .  	Number	0032	
GET_DRIVE_FREESPACE  . . . . . .  	Number	0036	
GET_FCB_FILE_LENGTH  . . . . . .  	Number	0023	
GET_FCB_POSITION . . . . . . . .  	Number	0024	
GET_INDOS_FLAG . . . . . . . . .  	Number	0034	
GET_INTERRUPT_VECTOR . . . . . .  	Number	0035	
GET_IN_VARS  . . . . . . . . . .  	Number	0052	
GET_TIME . . . . . . . . . . . .  	Number	002C	
Microsoft (R) Macro Assembler  Version 4.00                 12/10/21 03:59:34
BIOS SYSTEM INITIALIZATION                                  Symbols-10
                                                             

GET_VERIFY_ON_WRITE  . . . . . .  	Number	0054	
GET_VERSION  . . . . . . . . . .  	Number	0030	
GOAUX  . . . . . . . . . . . . .  	L NEAR	014A	SYSINITSEG
GOAUX2 . . . . . . . . . . . . .  	L NEAR	015D	SYSINITSEG
GOINIT . . . . . . . . . . . . .  	L NEAR	0065	SYSINITSEG
GOLINK . . . . . . . . . . . . .  	L NEAR	03A4	SYSINITSEG
GOODLD . . . . . . . . . . . . .  	L NEAR	034D	SYSINITSEG
GOSET  . . . . . . . . . . . . .  	L NEAR	016D	SYSINITSEG
GOTC . . . . . . . . . . . . . .  	L NEAR	02F1	SYSINITSEG
GOTCOM . . . . . . . . . . . . .  	L NEAR	056B	SYSINITSEG
GOTD . . . . . . . . . . . . . .  	L NEAR	0315	SYSINITSEG
GRET . . . . . . . . . . . . . .  	L NEAR	05A7	SYSINITSEG

HIGHMEM  . . . . . . . . . . . .  	Alias	 FALSE		

IBM  . . . . . . . . . . . . . .  	Alias	 IBMVER		
IBMJAPVER  . . . . . . . . . . .  	Alias	 FALSE		
IBMVER . . . . . . . . . . . . .  	Alias	 FALSE		
INT24  . . . . . . . . . . . . .  	L NEAR	06EA	SYSINITSEG
INTBASE  . . . . . . . . . . . .  	Number	0080	
INTERNATIONAL  . . . . . . . . .  	Number	0038	
INTERNATIONAL_INVALID_FUNCTION .  	Alias	 ERROR_INVALID_FUNCTION		
INTERNAT_BLOCK_MAX . . . . . . .  	Number	0020	
INTTAB . . . . . . . . . . . . .  	Number	0020	
INT_ABORT  . . . . . . . . . . .  	Alias	 INTTAB		
INT_COMMAND  . . . . . . . . . .  	Number	0021	
INT_CTRL_C . . . . . . . . . . .  	Number	0023	
INT_DISK_READ  . . . . . . . . .  	Number	0025	
INT_DISK_WRITE . . . . . . . . .  	Number	0026	
INT_FASTCON  . . . . . . . . . .  	Number	0029	
INT_FATAL_ABORT  . . . . . . . .  	Number	0024	
INT_KEEP_PROCESS . . . . . . . .  	Number	0027	
INT_SPOOLER  . . . . . . . . . .  	Number	0028	
INT_TERMINATE  . . . . . . . . .  	Number	0022	
IOCTL  . . . . . . . . . . . . .  	Number	0044	
IOCTL_INVALID_DATA . . . . . . .  	Alias	 ERROR_INVALID_DATA		
IOCTL_INVALID_FUNCTION . . . . .  	Alias	 ERROR_INVALID_FUNCTION		
IOCTL_INVALID_HANDLE . . . . . .  	Alias	 ERROR_INVALID_HANDLE		
ISBLOCK  . . . . . . . . . . . .  	L NEAR	03A7	SYSINITSEG
ISCIN  . . . . . . . . . . . . .  	Number	0001	
ISCLOCK  . . . . . . . . . . . .  	Number	0008	
ISCOUT . . . . . . . . . . . . .  	Number	0002	
ISFATBYDEV . . . . . . . . . . .  	Number	2000	
ISIBM  . . . . . . . . . . . . .  	Number	0010	
ISNULL . . . . . . . . . . . . .  	Number	0004	

KANJI  . . . . . . . . . . . . .  	Alias	 FALSE		
KEEP_PROCESS . . . . . . . . . .  	Number	0031	

LBRPRI . . . . . . . . . . . . .  	Number	0002	
LBWPRI . . . . . . . . . . . . .  	Number	0004	
LDCLS  . . . . . . . . . . . . .  	L NEAR	06BB	SYSINITSEG
LDERR  . . . . . . . . . . . . .  	L NEAR	06B8	SYSINITSEG
LDFIL  . . . . . . . . . . . . .  	L NEAR	0691	SYSINITSEG
Microsoft (R) Macro Assembler  Version 4.00                 12/10/21 03:59:34
BIOS SYSTEM INITIALIZATION                                  Symbols-11
                                                             

LDOFF  . . . . . . . . . . . . .  	L WORD 	004B	SYSINITSEG
LDRET  . . . . . . . . . . . . .  	L NEAR	06C0	SYSINITSEG
LINKIT . . . . . . . . . . . . .  	L NEAR	044B	SYSINITSEG
LOCKOPER . . . . . . . . . . . .  	Number	005C	
LOCSTACK . . . . . . . . . . . .  	L BYTE 	00D9	SYSINITSEG
LSEEK  . . . . . . . . . . . . .  	Number	0042	
LSEEK_INVALID_FUNCTION . . . . .  	Alias	 ERROR_INVALID_FUNCTION		
LSEEK_INVALID_HANDLE . . . . . .  	Alias	 ERROR_INVALID_HANDLE		

MAJOR_VERSION  . . . . . . . . .  	Number	0002	
MAPCASE  . . . . . . . . . . . .  	L NEAR	05D4	SYSINITSEG
MEMHI  . . . . . . . . . . . . .  	L WORD 	0049	SYSINITSEG
MEMLO  . . . . . . . . . . . . .  	L WORD 	0047	SYSINITSEG
MEMORY_SIZE  . . . . . . . . . .  	L WORD 	000F	SYSINITSEG	Global
MEMSCAN  . . . . . . . . . . . .  	L NEAR	0079	SYSINITSEG
MINOR_VERSION  . . . . . . . . .  	Number	0000	
MI_INT . . . . . . . . . . . . .  	Number	00CD	
MI_LONG_CALL . . . . . . . . . .  	Number	009A	
MI_LONG_JMP  . . . . . . . . . .  	Number	00EA	
MI_LONG_RET  . . . . . . . . . .  	Number	00CB	
MKDIR  . . . . . . . . . . . . .  	Number	0039	
MKDIR_ACCESS_DENIED  . . . . . .  	Alias	 ERROR_ACCESS_DENIED		
MKDIR_PATH_NOT_FOUND . . . . . .  	Alias	 ERROR_PATH_NOT_FOUND		
MSDOS  . . . . . . . . . . . . .  	L DWORD	0007	SYSINITSEG
MSVER  . . . . . . . . . . . . .  	Alias	 TRUE		

NEWLINE  . . . . . . . . . . . .  	L NEAR	05C7	SYSINITSEG
NOCHAR . . . . . . . . . . . . .  	L NEAR	0530	SYSINITSEG
NOCOM  . . . . . . . . . . . . .  	L NEAR	0566	SYSINITSEG
NOCONV . . . . . . . . . . . . .  	L NEAR	05E9	SYSINITSEG
NODRVSET . . . . . . . . . . . .  	L NEAR	011E	SYSINITSEG
NOEXEC . . . . . . . . . . . . .  	Alias	 FALSE		
NOGET  . . . . . . . . . . . . .  	L NEAR	05BB	SYSINITSEG
NONEW  . . . . . . . . . . . . .  	L NEAR	05D3	SYSINITSEG
NOPROB . . . . . . . . . . . . .  	L NEAR	0279	SYSINITSEG
NOSCAN . . . . . . . . . . . . .  	L NEAR	0091	SYSINITSEG
NOTDIG . . . . . . . . . . . . .  	L NEAR	063B	SYSINITSEG
NOTMAX . . . . . . . . . . . . .  	L NEAR	0435	SYSINITSEG
NO_ERROR_OCCURRED  . . . . . . .  	Text  0                                                              ?		
NULDEV . . . . . . . . . . . . .  	L BYTE 	06FD	SYSINITSEG

OEM_C1 . . . . . . . . . . . . .  	Number	00F9	
OEM_C2 . . . . . . . . . . . . .  	Number	00FA	
OEM_C3 . . . . . . . . . . . . .  	Number	00FB	
OEM_C4 . . . . . . . . . . . . .  	Number	00FC	
OEM_C5 . . . . . . . . . . . . .  	Number	00FD	
OEM_C6 . . . . . . . . . . . . .  	Number	00FE	
OEM_C7 . . . . . . . . . . . . .  	Number	00FF	
OPEN . . . . . . . . . . . . . .  	Number	003D	
OPEN_ACCESS_DENIED . . . . . . .  	Alias	 ERROR_ACCESS_DENIED		
OPEN_DEV . . . . . . . . . . . .  	L NEAR	06C7	SYSINITSEG
OPEN_DEV1  . . . . . . . . . . .  	L NEAR	06CC	SYSINITSEG
OPEN_DEV2  . . . . . . . . . . .  	L NEAR	06D2	SYSINITSEG
OPEN_DEV3  . . . . . . . . . . .  	L NEAR	06D3	SYSINITSEG
Microsoft (R) Macro Assembler  Version 4.00                 12/10/21 03:59:34
BIOS SYSTEM INITIALIZATION                                  Symbols-12
                                                             

OPEN_FILE  . . . . . . . . . . .  	L NEAR	06E4	SYSINITSEG
OPEN_FILE_NOT_FOUND  . . . . . .  	Alias	 ERROR_FILE_NOT_FOUND		
OPEN_FOR_BOTH  . . . . . . . . .  	Number	0002	
OPEN_FOR_READ  . . . . . . . . .  	Number	0000	
OPEN_FOR_WRITE . . . . . . . . .  	Number	0001	
OPEN_INVALID_ACCESS  . . . . . .  	Alias	 ERROR_INVALID_ACCESS		
OPEN_TOO_MANY_OPEN_FILES . . . .  	Alias	 ERROR_TOO_MANY_OPEN_FILES		
ORG1 . . . . . . . . . . . . . .  	L NEAR	053F	SYSINITSEG
ORG2 . . . . . . . . . . . . . .  	L NEAR	056C	SYSINITSEG
ORG4 . . . . . . . . . . . . . .  	L NEAR	0578	SYSINITSEG
ORG5 . . . . . . . . . . . . . .  	L NEAR	0589	SYSINITSEG
ORGANIZE . . . . . . . . . . . .  	L NEAR	0532	SYSINITSEG

PACKET . . . . . . . . . . . . .  	L BYTE 	004F	SYSINITSEG
PARMLOOP . . . . . . . . . . . .  	L NEAR	050D	SYSINITSEG
PARSE_FILE_DESCRIPTOR  . . . . .  	Number	0029	
PERDRV . . . . . . . . . . . . .  	L NEAR	03BC	SYSINITSEG
PERUNIT  . . . . . . . . . . . .  	L NEAR	03CE	SYSINITSEG
PRINT  . . . . . . . . . . . . .  	L NEAR	068C	SYSINITSEG
PRMBLK . . . . . . . . . . . . .  	L WORD 	0049	SYSINITSEG
PRN1 . . . . . . . . . . . . . .  	L NEAR	067C	SYSINITSEG
PRN2 . . . . . . . . . . . . . .  	L NEAR	068A	SYSINITSEG
PRNDEV . . . . . . . . . . . . .  	L BYTE 	0718	SYSINITSEG
PRNERR . . . . . . . . . . . . .  	L NEAR	0676	SYSINITSEG

RAW_CON_INPUT  . . . . . . . . .  	Number	0007	
RAW_CON_IO . . . . . . . . . . .  	Number	0006	
RCCLLOOP . . . . . . . . . . . .  	L NEAR	0132	SYSINITSEG
READ . . . . . . . . . . . . . .  	Number	003F	
READ_ACCESS_DENIED . . . . . . .  	Alias	 ERROR_ACCESS_DENIED		
READ_INVALID_HANDLE  . . . . . .  	Alias	 ERROR_INVALID_HANDLE		
RENAME . . . . . . . . . . . . .  	Number	0056	
RENAME_ACCESS_DENIED . . . . . .  	Alias	 ERROR_ACCESS_DENIED		
RENAME_FILE_NOT_FOUND  . . . . .  	Alias	 ERROR_FILE_NOT_FOUND		
RENAME_NOT_SAME_DEVICE . . . . .  	Alias	 ERROR_NOT_SAME_DEVICE		
RE_INIT  . . . . . . . . . . . .  	L FAR 	0000		External
RMDIR  . . . . . . . . . . . . .  	Number	003A	
RMDIR_ACCESS_DENIED  . . . . . .  	Alias	 ERROR_ACCESS_DENIED		
RMDIR_CURRENT_DIRECTORY  . . . .  	Alias	 ERROR_CURRENT_DIRECTORY		
RMDIR_PATH_NOT_FOUND . . . . . .  	Alias	 ERROR_PATH_NOT_FOUND		
ROUND  . . . . . . . . . . . . .  	L NEAR	05EF	SYSINITSEG
RPRI . . . . . . . . . . . . . .  	Number	0006	

SCANDPB  . . . . . . . . . . . .  	L NEAR	03D7	SYSINITSEG
SERVERCALL . . . . . . . . . . .  	Number	005D	
SETBLOCK . . . . . . . . . . . .  	Number	004A	
SETBLOCK_ARENA_TRASHED . . . . .  	Alias	 ERROR_ARENA_TRASHED		
SETBLOCK_INVALID_BLOCK . . . . .  	Alias	 ERROR_INVALID_BLOCK		
SETBLOCK_INVALID_FUNCTION  . . .  	Alias	 ERROR_INVALID_FUNCTION		
SETBLOCK_NOT_ENOUGH_MEMORY . . .  	Alias	 ERROR_NOT_ENOUGH_MEMORY		
SETDPB . . . . . . . . . . . . .  	Number	0053	
SETEND . . . . . . . . . . . . .  	L NEAR	008C	SYSINITSEG
SET_CTRL_C_TRAPPING  . . . . . .  	Number	0033	
SET_CURRENT_PDB  . . . . . . . .  	Number	0050	
Microsoft (R) Macro Assembler  Version 4.00                 12/10/21 03:59:34
BIOS SYSTEM INITIALIZATION                                  Symbols-13
                                                             

SET_DATE . . . . . . . . . . . .  	Number	002B	
SET_DEFAULT_DRIVE  . . . . . . .  	Number	000E	
SET_DMA  . . . . . . . . . . . .  	Number	001A	
SET_INTERRUPT_VECTOR . . . . . .  	Number	0025	
SET_OEM_HANDLER  . . . . . . . .  	Number	00F8	
SET_TIME . . . . . . . . . . . .  	Number	002D	
SET_VERIFY_ON_WRITE  . . . . . .  	Number	002E	
SF_DEFAULT_NUMBER  . . . . . . .  	Number	0005	
STALL  . . . . . . . . . . . . .  	L NEAR	01A4	SYSINITSEG
STBUI  . . . . . . . . . . . . .  	Number	0200	
STDAUX . . . . . . . . . . . . .  	Number	0003	
STDERR . . . . . . . . . . . . .  	Number	0002	
STDIN  . . . . . . . . . . . . .  	Number	0000	
STDON  . . . . . . . . . . . . .  	Number	0100	
STDOUT . . . . . . . . . . . . .  	Number	0001	
STDPRN . . . . . . . . . . . . .  	Number	0004	
STD_AUX_INPUT  . . . . . . . . .  	Number	0003	
STD_AUX_OUTPUT . . . . . . . . .  	Number	0004	
STD_CON_INPUT  . . . . . . . . .  	Number	0001	
STD_CON_INPUT_FLUSH  . . . . . .  	Number	000C	
STD_CON_INPUT_NO_ECHO  . . . . .  	Number	0008	
STD_CON_INPUT_STATUS . . . . . .  	Number	000B	
STD_CON_OUTPUT . . . . . . . . .  	Number	0002	
STD_CON_STRING_INPUT . . . . . .  	Number	000A	
STD_CON_STRING_OUTPUT  . . . . .  	Number	0009	
STD_PRINTER_OUTPUT . . . . . . .  	Number	0005	
STECODE  . . . . . . . . . . . .  	Number	00FF	
STERR  . . . . . . . . . . . . .  	Number	8000	
STORESHELL . . . . . . . . . . .  	L NEAR	04E4	SYSINITSEG
SYSIN  . . . . . . . . . . . . .  	L NEAR	00B1	SYSINITSEG
SYSINIT  . . . . . . . . . . . .  	L NEAR	0000	SYSINITSEG	Global
SYSSIZE  . . . . . . . . . . . .  	V BYTE 	0000	SYSINITSEG	External

TODIGIT  . . . . . . . . . . . .  	L NEAR	0631	SYSINITSEG
TRUE . . . . . . . . . . . . . .  	Number	FFFF	
TRYA . . . . . . . . . . . . . .  	L NEAR	04C1	SYSINITSEG
TRYC . . . . . . . . . . . . . .  	L NEAR	02E9	SYSINITSEG
TRYCLK . . . . . . . . . . . . .  	L NEAR	0397	SYSINITSEG
TRYD . . . . . . . . . . . . . .  	L NEAR	030D	SYSINITSEG
TRYF . . . . . . . . . . . . . .  	L NEAR	049A	SYSINITSEG
TRYQ . . . . . . . . . . . . . .  	L NEAR	047B	SYSINITSEG
TRYS . . . . . . . . . . . . . .  	L NEAR	04D4	SYSINITSEG
TRYW . . . . . . . . . . . . . .  	L NEAR	04AE	SYSINITSEG
TRYX . . . . . . . . . . . . . .  	L NEAR	0504	SYSINITSEG

UNITCOUNT  . . . . . . . . . . .  	L BYTE 	005C	SYSINITSEG
UNLINK . . . . . . . . . . . . .  	Number	0041	
UNLINK_ACCESS_DENIED . . . . . .  	Alias	 ERROR_ACCESS_DENIED		
UNLINK_FILE_NOT_FOUND  . . . . .  	Alias	 ERROR_FILE_NOT_FOUND		
USERIDOPER . . . . . . . . . . .  	Number	005E	

WAIT . . . . . . . . . . . . . .  	Number	004D	
WPRI . . . . . . . . . . . . . .  	Number	0008	
WRECODE  . . . . . . . . . . . .  	Number	0000	
Microsoft (R) Macro Assembler  Version 4.00                 12/10/21 03:59:34
BIOS SYSTEM INITIALIZATION                                  Symbols-14
                                                             

WRITE  . . . . . . . . . . . . .  	Number	0040	
WRITE_ACCESS_DENIED  . . . . . .  	Alias	 ERROR_ACCESS_DENIED		
WRITE_INVALID_HANDLE . . . . . .  	Alias	 ERROR_INVALID_HANDLE		

XDUP . . . . . . . . . . . . . .  	Number	0045	
XDUP2  . . . . . . . . . . . . .  	Number	0046	

ZERO . . . . . . . . . . . . . .  	L BYTE 	0034	SYSINITSEG


   2716 Source  Lines
   2779 Total   Lines
    691 Symbols

  15662 Bytes symbol space free

      0 Warning Errors
      0 Severe  Errors
